{
    "openapi": "3.0.0",
    "info": {
        "title": "Infoblox MISC API",
        "description": "OpenAPI specification for Infoblox NIOS WAPI MISC objects",
        "version": "2.13.6",
        "termsOfService": "https://www.infoblox.com",
        "contact": {
            "name": "Infoblox",
            "url": "https://www.infoblox.com"
        },
        "license": {
            "name": "Infoblox License",
            "url": "https://www.infoblox.com"
        }
    },
    "servers": [
        {
            "url": "/wapi/v2.13.6",
            "description": "NIOS WAPI server"
        }
    ],
    "tags": [
        {
            "name": "Allendpoints",
            "description": "Operations for allendpoints objects"
        },
        {
            "name": "Bfdtemplate",
            "description": "Operations for bfdtemplate objects"
        },
        {
            "name": "Csvimporttask",
            "description": "Operations for csvimporttask objects"
        },
        {
            "name": "Datacollectioncluster",
            "description": "Operations for datacollectioncluster objects"
        },
        {
            "name": "DbObjects",
            "description": "Operations for db_objects objects"
        },
        {
            "name": "Dbsnapshot",
            "description": "Operations for dbsnapshot objects"
        },
        {
            "name": "DeletedObjects",
            "description": "Operations for deleted_objects objects"
        },
        {
            "name": "DxlEndpoint",
            "description": "Operations for dxl:endpoint objects"
        },
        {
            "name": "Fileop",
            "description": "Operations for fileop objects"
        },
        {
            "name": "Kerberoskey",
            "description": "Operations for kerberoskey objects"
        },
        {
            "name": "Capacityreport",
            "description": "Operations for capacityreport objects"
        },
        {
            "name": "OutboundCloudclient",
            "description": "Operations for outbound:cloudclient objects"
        },
        {
            "name": "PxgridEndpoint",
            "description": "Operations for pxgrid:endpoint objects"
        },
        {
            "name": "Ruleset",
            "description": "Operations for ruleset objects"
        },
        {
            "name": "Scavengingtask",
            "description": "Operations for scavengingtask objects"
        },
        {
            "name": "Scheduledtask",
            "description": "Operations for scheduledtask objects"
        },
        {
            "name": "Search",
            "description": "Operations for search objects"
        },
        {
            "name": "SyslogEndpoint",
            "description": "Operations for syslog:endpoint objects"
        },
        {
            "name": "Taxii",
            "description": "Operations for taxii objects"
        },
        {
            "name": "Tftpfiledir",
            "description": "Operations for tftpfiledir objects"
        }
    ],
    "paths": {
        "/allendpoints": {
            "get": {
                "tags": [
                    "Allendpoints"
                ],
                "operationId": "AllendpointsList",
                "summary": "Retrieve allendpoints objects",
                "description": "Returns a list of allendpoints objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListAllendpointsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/allendpoints/{reference}": {
            "get": {
                "tags": [
                    "Allendpoints"
                ],
                "operationId": "AllendpointsRead",
                "summary": "Get a specific allendpoints object",
                "description": "Returns a specific allendpoints object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the allendpoints object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAllendpointsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/bfdtemplate": {
            "get": {
                "tags": [
                    "Bfdtemplate"
                ],
                "operationId": "BfdtemplateList",
                "summary": "Retrieve bfdtemplate objects",
                "description": "Returns a list of bfdtemplate objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListBfdtemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Bfdtemplate"
                ],
                "operationId": "BfdtemplateCreate",
                "summary": "Create a bfdtemplate object",
                "description": "Creates a new bfdtemplate object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Bfdtemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateBfdtemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_misc_bfdtemplate",
                "x-tf-datasource": "nios_misc_bfdtemplate"
            }
        },
        "/bfdtemplate/{reference}": {
            "get": {
                "tags": [
                    "Bfdtemplate"
                ],
                "operationId": "BfdtemplateRead",
                "summary": "Get a specific bfdtemplate object",
                "description": "Returns a specific bfdtemplate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the bfdtemplate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBfdtemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Bfdtemplate"
                ],
                "operationId": "BfdtemplateUpdate",
                "summary": "Update a bfdtemplate object",
                "description": "Updates a specific bfdtemplate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the bfdtemplate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Bfdtemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateBfdtemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Bfdtemplate"
                ],
                "operationId": "BfdtemplateDelete",
                "summary": "Delete a bfdtemplate object",
                "description": "Deletes a specific bfdtemplate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the bfdtemplate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/csvimporttask": {
            "get": {
                "tags": [
                    "Csvimporttask"
                ],
                "operationId": "CsvimporttaskList",
                "summary": "Retrieve csvimporttask objects",
                "description": "Returns a list of csvimporttask objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListCsvimporttaskResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/csvimporttask/{reference}": {
            "get": {
                "tags": [
                    "Csvimporttask"
                ],
                "operationId": "CsvimporttaskRead",
                "summary": "Get a specific csvimporttask object",
                "description": "Returns a specific csvimporttask object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the csvimporttask object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetCsvimporttaskResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Csvimporttask"
                ],
                "operationId": "CsvimporttaskUpdate",
                "summary": "Update a csvimporttask object",
                "description": "Updates a specific csvimporttask object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the csvimporttask object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Csvimporttask"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateCsvimporttaskResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/datacollectioncluster": {
            "get": {
                "tags": [
                    "Datacollectioncluster"
                ],
                "operationId": "DatacollectionclusterList",
                "summary": "Retrieve datacollectioncluster objects",
                "description": "Returns a list of datacollectioncluster objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDatacollectionclusterResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Datacollectioncluster"
                ],
                "operationId": "DatacollectionclusterCreate",
                "summary": "Create a datacollectioncluster object",
                "description": "Creates a new datacollectioncluster object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Datacollectioncluster"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDatacollectionclusterResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_misc_datacollectioncluster",
                "x-tf-datasource": "nios_misc_datacollectioncluster"
            }
        },
        "/datacollectioncluster/{reference}": {
            "get": {
                "tags": [
                    "Datacollectioncluster"
                ],
                "operationId": "DatacollectionclusterRead",
                "summary": "Get a specific datacollectioncluster object",
                "description": "Returns a specific datacollectioncluster object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the datacollectioncluster object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDatacollectionclusterResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Datacollectioncluster"
                ],
                "operationId": "DatacollectionclusterUpdate",
                "summary": "Update a datacollectioncluster object",
                "description": "Updates a specific datacollectioncluster object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the datacollectioncluster object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Datacollectioncluster"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDatacollectionclusterResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Datacollectioncluster"
                ],
                "operationId": "DatacollectionclusterDelete",
                "summary": "Delete a datacollectioncluster object",
                "description": "Deletes a specific datacollectioncluster object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the datacollectioncluster object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/db_objects": {
            "get": {
                "tags": [
                    "DbObjects"
                ],
                "operationId": "DbObjectsList",
                "summary": "Retrieve db_objects objects",
                "description": "Returns a list of db_objects objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDbObjectsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/db_objects/{reference}": {
            "get": {
                "tags": [
                    "DbObjects"
                ],
                "operationId": "DbObjectsRead",
                "summary": "Get a specific db_objects object",
                "description": "Returns a specific db_objects object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the db_objects object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDbObjectsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dbsnapshot": {
            "get": {
                "tags": [
                    "Dbsnapshot"
                ],
                "operationId": "DbsnapshotList",
                "summary": "Retrieve dbsnapshot objects",
                "description": "Returns a list of dbsnapshot objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDbsnapshotResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dbsnapshot/{reference}": {
            "get": {
                "tags": [
                    "Dbsnapshot"
                ],
                "operationId": "DbsnapshotRead",
                "summary": "Get a specific dbsnapshot object",
                "description": "Returns a specific dbsnapshot object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dbsnapshot object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDbsnapshotResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/deleted_objects": {
            "get": {
                "tags": [
                    "DeletedObjects"
                ],
                "operationId": "DeletedObjectsList",
                "summary": "Retrieve deleted_objects objects",
                "description": "Returns a list of deleted_objects objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDeletedObjectsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/deleted_objects/{reference}": {
            "get": {
                "tags": [
                    "DeletedObjects"
                ],
                "operationId": "DeletedObjectsRead",
                "summary": "Get a specific deleted_objects object",
                "description": "Returns a specific deleted_objects object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the deleted_objects object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDeletedObjectsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dxl:endpoint": {
            "get": {
                "tags": [
                    "DxlEndpoint"
                ],
                "operationId": "DxlEndpointList",
                "summary": "Retrieve dxl:endpoint objects",
                "description": "Returns a list of dxl:endpoint objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDxlEndpointResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "DxlEndpoint"
                ],
                "operationId": "DxlEndpointCreate",
                "summary": "Create a dxl:endpoint object",
                "description": "Creates a new dxl:endpoint object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DxlEndpoint"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDxlEndpointResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_misc_dxl_endpoint",
                "x-tf-datasource": "nios_misc_dxl_endpoint",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/dxl:endpoint/{reference}": {
            "get": {
                "tags": [
                    "DxlEndpoint"
                ],
                "operationId": "DxlEndpointRead",
                "summary": "Get a specific dxl:endpoint object",
                "description": "Returns a specific dxl:endpoint object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dxl:endpoint object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDxlEndpointResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "DxlEndpoint"
                ],
                "operationId": "DxlEndpointUpdate",
                "summary": "Update a dxl:endpoint object",
                "description": "Updates a specific dxl:endpoint object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dxl:endpoint object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DxlEndpoint"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDxlEndpointResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "DxlEndpoint"
                ],
                "operationId": "DxlEndpointDelete",
                "summary": "Delete a dxl:endpoint object",
                "description": "Deletes a specific dxl:endpoint object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dxl:endpoint object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/fileop": {
            "get": {
                "tags": [
                    "Fileop"
                ],
                "operationId": "FileopList",
                "summary": "Retrieve fileop objects",
                "description": "Returns a list of fileop objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListFileopResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/fileop/{reference}": {
            "get": {
                "tags": [
                    "Fileop"
                ],
                "operationId": "FileopRead",
                "summary": "Get a specific fileop object",
                "description": "Returns a specific fileop object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the fileop object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetFileopResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/kerberoskey": {
            "get": {
                "tags": [
                    "Kerberoskey"
                ],
                "operationId": "KerberoskeyList",
                "summary": "Retrieve kerberoskey objects",
                "description": "Returns a list of kerberoskey objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListKerberoskeyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/kerberoskey/{reference}": {
            "get": {
                "tags": [
                    "Kerberoskey"
                ],
                "operationId": "KerberoskeyRead",
                "summary": "Get a specific kerberoskey object",
                "description": "Returns a specific kerberoskey object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the kerberoskey object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetKerberoskeyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Kerberoskey"
                ],
                "operationId": "KerberoskeyDelete",
                "summary": "Delete a kerberoskey object",
                "description": "Deletes a specific kerberoskey object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the kerberoskey object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/capacityreport": {
            "get": {
                "tags": [
                    "Capacityreport"
                ],
                "operationId": "CapacityreportList",
                "summary": "Retrieve capacityreport objects",
                "description": "Returns a list of capacityreport objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListCapacityreportResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/capacityreport/{reference}": {
            "get": {
                "tags": [
                    "Capacityreport"
                ],
                "operationId": "CapacityreportRead",
                "summary": "Get a specific capacityreport object",
                "description": "Returns a specific capacityreport object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the capacityreport object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetCapacityreportResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/outbound:cloudclient": {
            "get": {
                "tags": [
                    "OutboundCloudclient"
                ],
                "operationId": "OutboundCloudclientList",
                "summary": "Retrieve outbound:cloudclient objects",
                "description": "Returns a list of outbound:cloudclient objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListOutboundCloudclientResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/outbound:cloudclient/{reference}": {
            "get": {
                "tags": [
                    "OutboundCloudclient"
                ],
                "operationId": "OutboundCloudclientRead",
                "summary": "Get a specific outbound:cloudclient object",
                "description": "Returns a specific outbound:cloudclient object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the outbound:cloudclient object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetOutboundCloudclientResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "OutboundCloudclient"
                ],
                "operationId": "OutboundCloudclientUpdate",
                "summary": "Update a outbound:cloudclient object",
                "description": "Updates a specific outbound:cloudclient object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the outbound:cloudclient object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OutboundCloudclient"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateOutboundCloudclientResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/pxgrid:endpoint": {
            "get": {
                "tags": [
                    "PxgridEndpoint"
                ],
                "operationId": "PxgridEndpointList",
                "summary": "Retrieve pxgrid:endpoint objects",
                "description": "Returns a list of pxgrid:endpoint objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListPxgridEndpointResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "PxgridEndpoint"
                ],
                "operationId": "PxgridEndpointCreate",
                "summary": "Create a pxgrid:endpoint object",
                "description": "Creates a new pxgrid:endpoint object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PxgridEndpoint"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePxgridEndpointResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_misc_pxgrid_endpoint",
                "x-tf-datasource": "nios_misc_pxgrid_endpoint",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/pxgrid:endpoint/{reference}": {
            "get": {
                "tags": [
                    "PxgridEndpoint"
                ],
                "operationId": "PxgridEndpointRead",
                "summary": "Get a specific pxgrid:endpoint object",
                "description": "Returns a specific pxgrid:endpoint object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the pxgrid:endpoint object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPxgridEndpointResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "PxgridEndpoint"
                ],
                "operationId": "PxgridEndpointUpdate",
                "summary": "Update a pxgrid:endpoint object",
                "description": "Updates a specific pxgrid:endpoint object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the pxgrid:endpoint object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PxgridEndpoint"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdatePxgridEndpointResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "PxgridEndpoint"
                ],
                "operationId": "PxgridEndpointDelete",
                "summary": "Delete a pxgrid:endpoint object",
                "description": "Deletes a specific pxgrid:endpoint object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the pxgrid:endpoint object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/ruleset": {
            "get": {
                "tags": [
                    "Ruleset"
                ],
                "operationId": "RulesetList",
                "summary": "Retrieve ruleset objects",
                "description": "Returns a list of ruleset objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListRulesetResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ruleset"
                ],
                "operationId": "RulesetCreate",
                "summary": "Create a ruleset object",
                "description": "Creates a new ruleset object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ruleset"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateRulesetResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_misc_ruleset",
                "x-tf-datasource": "nios_misc_ruleset"
            }
        },
        "/ruleset/{reference}": {
            "get": {
                "tags": [
                    "Ruleset"
                ],
                "operationId": "RulesetRead",
                "summary": "Get a specific ruleset object",
                "description": "Returns a specific ruleset object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ruleset object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetRulesetResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Ruleset"
                ],
                "operationId": "RulesetUpdate",
                "summary": "Update a ruleset object",
                "description": "Updates a specific ruleset object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ruleset object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ruleset"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateRulesetResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Ruleset"
                ],
                "operationId": "RulesetDelete",
                "summary": "Delete a ruleset object",
                "description": "Deletes a specific ruleset object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ruleset object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/scavengingtask": {
            "get": {
                "tags": [
                    "Scavengingtask"
                ],
                "operationId": "ScavengingtaskList",
                "summary": "Retrieve scavengingtask objects",
                "description": "Returns a list of scavengingtask objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListScavengingtaskResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/scavengingtask/{reference}": {
            "get": {
                "tags": [
                    "Scavengingtask"
                ],
                "operationId": "ScavengingtaskRead",
                "summary": "Get a specific scavengingtask object",
                "description": "Returns a specific scavengingtask object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the scavengingtask object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetScavengingtaskResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/scheduledtask": {
            "get": {
                "tags": [
                    "Scheduledtask"
                ],
                "operationId": "ScheduledtaskList",
                "summary": "Retrieve scheduledtask objects",
                "description": "Returns a list of scheduledtask objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListScheduledtaskResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/scheduledtask/{reference}": {
            "get": {
                "tags": [
                    "Scheduledtask"
                ],
                "operationId": "ScheduledtaskRead",
                "summary": "Get a specific scheduledtask object",
                "description": "Returns a specific scheduledtask object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the scheduledtask object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetScheduledtaskResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Scheduledtask"
                ],
                "operationId": "ScheduledtaskUpdate",
                "summary": "Update a scheduledtask object",
                "description": "Updates a specific scheduledtask object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the scheduledtask object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Scheduledtask"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateScheduledtaskResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Scheduledtask"
                ],
                "operationId": "ScheduledtaskDelete",
                "summary": "Delete a scheduledtask object",
                "description": "Deletes a specific scheduledtask object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the scheduledtask object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/search": {
            "get": {
                "tags": [
                    "Search"
                ],
                "operationId": "SearchList",
                "summary": "Retrieve search objects",
                "description": "Returns a list of search objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListSearchResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/search/{reference}": {
            "get": {
                "tags": [
                    "Search"
                ],
                "operationId": "SearchRead",
                "summary": "Get a specific search object",
                "description": "Returns a specific search object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the search object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetSearchResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/syslog:endpoint": {
            "get": {
                "tags": [
                    "SyslogEndpoint"
                ],
                "operationId": "SyslogEndpointList",
                "summary": "Retrieve syslog:endpoint objects",
                "description": "Returns a list of syslog:endpoint objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListSyslogEndpointResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "SyslogEndpoint"
                ],
                "operationId": "SyslogEndpointCreate",
                "summary": "Create a syslog:endpoint object",
                "description": "Creates a new syslog:endpoint object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SyslogEndpoint"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateSyslogEndpointResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_misc_syslog_endpoint",
                "x-tf-datasource": "nios_misc_syslog_endpoint",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/syslog:endpoint/{reference}": {
            "get": {
                "tags": [
                    "SyslogEndpoint"
                ],
                "operationId": "SyslogEndpointRead",
                "summary": "Get a specific syslog:endpoint object",
                "description": "Returns a specific syslog:endpoint object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the syslog:endpoint object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetSyslogEndpointResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "SyslogEndpoint"
                ],
                "operationId": "SyslogEndpointUpdate",
                "summary": "Update a syslog:endpoint object",
                "description": "Updates a specific syslog:endpoint object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the syslog:endpoint object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SyslogEndpoint"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateSyslogEndpointResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "SyslogEndpoint"
                ],
                "operationId": "SyslogEndpointDelete",
                "summary": "Delete a syslog:endpoint object",
                "description": "Deletes a specific syslog:endpoint object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the syslog:endpoint object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/taxii": {
            "get": {
                "tags": [
                    "Taxii"
                ],
                "operationId": "TaxiiList",
                "summary": "Retrieve taxii objects",
                "description": "Returns a list of taxii objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListTaxiiResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/taxii/{reference}": {
            "get": {
                "tags": [
                    "Taxii"
                ],
                "operationId": "TaxiiRead",
                "summary": "Get a specific taxii object",
                "description": "Returns a specific taxii object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the taxii object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTaxiiResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Taxii"
                ],
                "operationId": "TaxiiUpdate",
                "summary": "Update a taxii object",
                "description": "Updates a specific taxii object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the taxii object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Taxii"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateTaxiiResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/tftpfiledir": {
            "get": {
                "tags": [
                    "Tftpfiledir"
                ],
                "operationId": "TftpfiledirList",
                "summary": "Retrieve tftpfiledir objects",
                "description": "Returns a list of tftpfiledir objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListTftpfiledirResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tftpfiledir"
                ],
                "operationId": "TftpfiledirCreate",
                "summary": "Create a tftpfiledir object",
                "description": "Creates a new tftpfiledir object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tftpfiledir"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateTftpfiledirResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_misc_tftpfiledir",
                "x-tf-datasource": "nios_misc_tftpfiledir"
            }
        },
        "/tftpfiledir/{reference}": {
            "get": {
                "tags": [
                    "Tftpfiledir"
                ],
                "operationId": "TftpfiledirRead",
                "summary": "Get a specific tftpfiledir object",
                "description": "Returns a specific tftpfiledir object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the tftpfiledir object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTftpfiledirResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Tftpfiledir"
                ],
                "operationId": "TftpfiledirUpdate",
                "summary": "Update a tftpfiledir object",
                "description": "Updates a specific tftpfiledir object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the tftpfiledir object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tftpfiledir"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateTftpfiledirResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tftpfiledir"
                ],
                "operationId": "TftpfiledirDelete",
                "summary": "Delete a tftpfiledir object",
                "description": "Deletes a specific tftpfiledir object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the tftpfiledir object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            }
        },
        "parameters": {
            "ReturnFields": {
                "name": "_return_fields",
                "in": "query",
                "description": "Enter the field names followed by comma",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "ReturnFieldsPlus": {
                "name": "_return_fields+",
                "in": "query",
                "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "MaxResults": {
                "name": "_max_results",
                "in": "query",
                "description": "Enter the number of results to be fetched",
                "required": false,
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1
                }
            },
            "ReturnAsObject": {
                "name": "_return_as_object",
                "in": "query",
                "description": "Select 1 if result is required as an object",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "Paging": {
                "name": "_paging",
                "in": "query",
                "description": "Control paging of results",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "PageId": {
                "name": "_page_id",
                "in": "query",
                "description": "Page id for retrieving next page of results",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "ProxySearch": {
                "name": "_proxy_search",
                "in": "query",
                "description": "Search Grid members for data",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "Schema": {
                "name": "_schema",
                "in": "query",
                "description": "Return schema for this object type",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "SchemaVersion": {
                "name": "_schema_version",
                "in": "query",
                "description": "Schema version to use",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        1,
                        2
                    ]
                }
            },
            "GetDoc": {
                "name": "_get_doc",
                "in": "query",
                "description": "Return documentation with schema",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "SchemaSearchable": {
                "name": "_schema_searchable",
                "in": "query",
                "description": "Return searchable fields with schema",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "Inheritance": {
                "name": "_inheritance",
                "in": "query",
                "description": "If this option is set to True, fields which support inheritance, will display data properly.",
                "required": false,
                "schema": {
                    "type": "boolean"
                }
            },
            "filters": {
                "name": "filters",
                "in": "query",
                "schema": {
                    "type": "object",
                    "additionalProperties": true
                },
                "style": "form",
                "explode": false
            },
            "ExtAttrFilters": {
                "name": "extattrfilter",
                "in": "query",
                "schema": {
                    "type": "object",
                    "additionalProperties": true
                },
                "style": "form",
                "explode": false
            },
            "Method": {
                "name": "_method",
                "in": "query",
                "description": "Enter the method type for the request",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "Body": {
                "name": "body",
                "in": "query",
                "schema": {
                    "type": "object"
                }
            }
        },
        "schemas": {
            "ExtAttrs": {
                "type": "object",
                "properties": {
                    "value": {
                        "description": "The value of the extensible attribute."
                    }
                },
                "required": [
                    "value"
                ],
                "description": "Extensible attributes associated with the object."
            },
            "Allendpoints": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "address": {
                        "type": "string",
                        "description": "The Grid endpoint IPv4 Address or IPv6 Address or Fully-Qualified Domain Name (FQDN).",
                        "readOnly": true,
                        "example": "Example address"
                    },
                    "comment": {
                        "type": "string",
                        "description": "The Grid endpoint descriptive comment.",
                        "readOnly": true,
                        "example": "Example comment"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines whether a Grid endpoint is disabled or not. When this is set to False, the Grid endpoint is enabled.",
                        "readOnly": true,
                        "example": false
                    },
                    "subscribing_member": {
                        "type": "string",
                        "description": "The name of the Grid Member object that is serving Grid endpoint.",
                        "readOnly": true,
                        "example": "Example subscribing_member"
                    },
                    "type": {
                        "type": "string",
                        "description": "The Grid endpoint type.",
                        "enum": [
                            "TYPE_CISCO",
                            "TYPE_RESTAPI",
                            "TYPE_DXL"
                        ],
                        "readOnly": true,
                        "example": "Example type"
                    },
                    "version": {
                        "type": "string",
                        "description": "The Grid endpoint version.",
                        "readOnly": true,
                        "example": "Example version"
                    }
                }
            },
            "ListAllendpointsResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Allendpoints__ objects.",
                        "type": "array",
                        "title": "ListAllendpointsResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Allendpoints"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Allendpoints__ objects.",
                        "type": "object",
                        "title": "ListAllendpointsResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Allendpoints"
                                }
                            }
                        }
                    }
                ]
            },
            "GetAllendpointsResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Allendpoints"
                    },
                    {
                        "description": "The response format to retrieve __Allendpoints__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetAllendpointsResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Allendpoints"
                            }
                        }
                    }
                ]
            },
            "UpdateAllendpointsResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Allendpoints__ in object format.",
                        "type": "object",
                        "title": "UpdateAllendpointsResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Allendpoints"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Allendpoints__ .",
                        "type": "string",
                        "title": "UpdateAllendpointsResponse"
                    }
                ]
            },
            "Bfdtemplate": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "authentication_key": {
                        "type": "string",
                        "description": "The authentication key for BFD protocol message-digest authentication.",
                        "writeOnly": true,
                        "example": "Example authentication_key"
                    },
                    "authentication_key_id": {
                        "type": "integer",
                        "description": "The authentication key identifier for BFD protocol authentication. Valid values are between 1 and 255.",
                        "format": "int64",
                        "example": 1
                    },
                    "authentication_type": {
                        "type": "string",
                        "description": "The authentication type for BFD protocol.",
                        "enum": [
                            "NONE",
                            "MD5",
                            "METICULOUS-MD5",
                            "SHA1",
                            "METICULOUS-SHA1"
                        ],
                        "example": "Example authentication_type"
                    },
                    "detection_multiplier": {
                        "type": "integer",
                        "description": "The detection time multiplier value for BFD protocol. The negotiated transmit interval, multiplied by this value, provides the detection time for the receiving system in asynchronous BFD mode. Valid values are between 3 and 50.",
                        "format": "int64",
                        "example": 1
                    },
                    "min_rx_interval": {
                        "type": "integer",
                        "description": "The minimum receive time (in seconds) for BFD protocol. Valid values are between 50 and 9999.",
                        "format": "int64",
                        "example": 1
                    },
                    "min_tx_interval": {
                        "type": "integer",
                        "description": "The minimum transmission time (in seconds) for BFD protocol. Valid values are between 50 and 9999.",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the BFD template object.",
                        "example": "Example name"
                    }
                }
            },
            "ListBfdtemplateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Bfdtemplate__ objects.",
                        "type": "array",
                        "title": "ListBfdtemplateResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Bfdtemplate"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Bfdtemplate__ objects.",
                        "type": "object",
                        "title": "ListBfdtemplateResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Bfdtemplate"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateBfdtemplateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Bfdtemplate__ in object format.",
                        "type": "object",
                        "title": "CreateBfdtemplateResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Bfdtemplate"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Bfdtemplate__.",
                        "type": "string",
                        "title": "CreateBfdtemplateResponse"
                    }
                ]
            },
            "GetBfdtemplateResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Bfdtemplate"
                    },
                    {
                        "description": "The response format to retrieve __Bfdtemplate__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetBfdtemplateResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Bfdtemplate"
                            }
                        }
                    }
                ]
            },
            "UpdateBfdtemplateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Bfdtemplate__ in object format.",
                        "type": "object",
                        "title": "UpdateBfdtemplateResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Bfdtemplate"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Bfdtemplate__ .",
                        "type": "string",
                        "title": "UpdateBfdtemplateResponse"
                    }
                ]
            },
            "Csvimporttask": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "action": {
                        "type": "string",
                        "description": "The action to execute.",
                        "enum": [
                            "START",
                            "SAVE"
                        ],
                        "writeOnly": true,
                        "example": "Example action"
                    },
                    "admin_name": {
                        "type": "string",
                        "description": "The login name of the administrator.",
                        "readOnly": true,
                        "example": "Example admin_name"
                    },
                    "end_time": {
                        "type": "integer",
                        "description": "The end time of this import operation.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "file_name": {
                        "type": "string",
                        "description": "The name of the file used for the import operation.",
                        "readOnly": true,
                        "example": "Example file_name"
                    },
                    "file_size": {
                        "type": "integer",
                        "description": "The size of the file used for the import operation.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "import_id": {
                        "type": "integer",
                        "description": "The ID of the current import task.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "lines_failed": {
                        "type": "integer",
                        "description": "The number of lines that encountered an error.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "lines_processed": {
                        "type": "integer",
                        "description": "The number of lines that have been processed.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "lines_warning": {
                        "type": "integer",
                        "description": "The number of lines that encountered a warning.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "on_error": {
                        "type": "string",
                        "description": "The action to take when an error is encountered.",
                        "enum": [
                            "CONTINUE",
                            "STOP"
                        ],
                        "example": "Example on_error"
                    },
                    "operation": {
                        "type": "string",
                        "description": "The operation to execute.",
                        "enum": [
                            "INSERT",
                            "UPDATE",
                            "REPLACE",
                            "DELETE",
                            "CUSTOM"
                        ],
                        "example": "Example operation"
                    },
                    "separator": {
                        "type": "string",
                        "description": "The separator to be used for the data in the CSV file.",
                        "enum": [
                            "COMMA",
                            "SEMICOLON",
                            "SPACE",
                            "TAB"
                        ],
                        "readOnly": true,
                        "example": "Example separator"
                    },
                    "start_time": {
                        "type": "integer",
                        "description": "The start time of the import operation.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the import operation",
                        "enum": [
                            "COMPLETED",
                            "FAILED",
                            "PENDING",
                            "RUNNING",
                            "STOPPED",
                            "UPLOADED",
                            "TEST_COMPLETED",
                            "TEST_FAILED",
                            "TEST_RUNNING",
                            "TEST_STOPPED"
                        ],
                        "readOnly": true,
                        "example": "Example status"
                    },
                    "update_method": {
                        "type": "string",
                        "description": "The update method to be used for the operation.",
                        "enum": [
                            "MERGE",
                            "OVERRIDE"
                        ],
                        "example": "Example update_method"
                    }
                }
            },
            "ListCsvimporttaskResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Csvimporttask__ objects.",
                        "type": "array",
                        "title": "ListCsvimporttaskResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Csvimporttask"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Csvimporttask__ objects.",
                        "type": "object",
                        "title": "ListCsvimporttaskResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Csvimporttask"
                                }
                            }
                        }
                    }
                ]
            },
            "GetCsvimporttaskResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Csvimporttask"
                    },
                    {
                        "description": "The response format to retrieve __Csvimporttask__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetCsvimporttaskResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Csvimporttask"
                            }
                        }
                    }
                ]
            },
            "UpdateCsvimporttaskResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Csvimporttask__ in object format.",
                        "type": "object",
                        "title": "UpdateCsvimporttaskResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Csvimporttask"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Csvimporttask__ .",
                        "type": "string",
                        "title": "UpdateCsvimporttaskResponse"
                    }
                ]
            },
            "Datacollectioncluster": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "enable_registration": {
                        "type": "boolean",
                        "description": "Enable/disable new registration requests",
                        "example": false
                    },
                    "name": {
                        "type": "string",
                        "description": "Display name for cluster",
                        "readOnly": true,
                        "example": "Example name"
                    }
                }
            },
            "ListDatacollectionclusterResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Datacollectioncluster__ objects.",
                        "type": "array",
                        "title": "ListDatacollectionclusterResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Datacollectioncluster"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Datacollectioncluster__ objects.",
                        "type": "object",
                        "title": "ListDatacollectionclusterResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Datacollectioncluster"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateDatacollectionclusterResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Datacollectioncluster__ in object format.",
                        "type": "object",
                        "title": "CreateDatacollectionclusterResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Datacollectioncluster"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Datacollectioncluster__.",
                        "type": "string",
                        "title": "CreateDatacollectionclusterResponse"
                    }
                ]
            },
            "GetDatacollectionclusterResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Datacollectioncluster"
                    },
                    {
                        "description": "The response format to retrieve __Datacollectioncluster__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDatacollectionclusterResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Datacollectioncluster"
                            }
                        }
                    }
                ]
            },
            "UpdateDatacollectionclusterResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Datacollectioncluster__ in object format.",
                        "type": "object",
                        "title": "UpdateDatacollectionclusterResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Datacollectioncluster"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Datacollectioncluster__ .",
                        "type": "string",
                        "title": "UpdateDatacollectionclusterResponse"
                    }
                ]
            },
            "DbObjects": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "last_sequence_id": {
                        "type": "string",
                        "description": "The last returned sequence ID.",
                        "readOnly": true,
                        "example": "Example last_sequence_id"
                    },
                    "object": {
                        "type": "string",
                        "description": "The record object when supported by WAPI. Otherwise, the value is \"None\".",
                        "readOnly": true,
                        "example": "Example object"
                    },
                    "object_type": {
                        "type": "string",
                        "description": "The object type. This is undefined if the object is not supported.",
                        "readOnly": true,
                        "example": "Example object_type"
                    },
                    "unique_id": {
                        "type": "string",
                        "description": "The unique ID of the requested object.",
                        "readOnly": true,
                        "example": "Example unique_id"
                    }
                }
            },
            "ListDbObjectsResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __DbObjects__ objects.",
                        "type": "array",
                        "title": "ListDbObjectsResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/DbObjects"
                        }
                    },
                    {
                        "description": "The response format to retrieve __DbObjects__ objects.",
                        "type": "object",
                        "title": "ListDbObjectsResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DbObjects"
                                }
                            }
                        }
                    }
                ]
            },
            "GetDbObjectsResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DbObjects"
                    },
                    {
                        "description": "The response format to retrieve __DbObjects__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDbObjectsResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DbObjects"
                            }
                        }
                    }
                ]
            },
            "UpdateDbObjectsResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __DbObjects__ in object format.",
                        "type": "object",
                        "title": "UpdateDbObjectsResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DbObjects"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __DbObjects__ .",
                        "type": "string",
                        "title": "UpdateDbObjectsResponse"
                    }
                ]
            },
            "Dbsnapshot": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "The descriptive comment.",
                        "readOnly": true,
                        "example": "Example comment"
                    },
                    "timestamp": {
                        "type": "integer",
                        "description": "The time when the latest OneDB snapshot was taken in Epoch seconds format.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "ListDbsnapshotResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Dbsnapshot__ objects.",
                        "type": "array",
                        "title": "ListDbsnapshotResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Dbsnapshot"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Dbsnapshot__ objects.",
                        "type": "object",
                        "title": "ListDbsnapshotResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Dbsnapshot"
                                }
                            }
                        }
                    }
                ]
            },
            "GetDbsnapshotResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Dbsnapshot"
                    },
                    {
                        "description": "The response format to retrieve __Dbsnapshot__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDbsnapshotResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Dbsnapshot"
                            }
                        }
                    }
                ]
            },
            "UpdateDbsnapshotResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Dbsnapshot__ in object format.",
                        "type": "object",
                        "title": "UpdateDbsnapshotResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Dbsnapshot"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Dbsnapshot__ .",
                        "type": "string",
                        "title": "UpdateDbsnapshotResponse"
                    }
                ]
            },
            "DeletedObjects": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "object_type": {
                        "type": "string",
                        "description": "The object type of the deleted object. This is undefined if the object is not supported.",
                        "readOnly": true,
                        "example": "Example object_type"
                    }
                }
            },
            "ListDeletedObjectsResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __DeletedObjects__ objects.",
                        "type": "array",
                        "title": "ListDeletedObjectsResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/DeletedObjects"
                        }
                    },
                    {
                        "description": "The response format to retrieve __DeletedObjects__ objects.",
                        "type": "object",
                        "title": "ListDeletedObjectsResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DeletedObjects"
                                }
                            }
                        }
                    }
                ]
            },
            "GetDeletedObjectsResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DeletedObjects"
                    },
                    {
                        "description": "The response format to retrieve __DeletedObjects__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDeletedObjectsResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DeletedObjects"
                            }
                        }
                    }
                ]
            },
            "UpdateDeletedObjectsResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __DeletedObjects__ in object format.",
                        "type": "object",
                        "title": "UpdateDeletedObjectsResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DeletedObjects"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __DeletedObjects__ .",
                        "type": "string",
                        "title": "UpdateDeletedObjectsResponse"
                    }
                ]
            },
            "DxlEndpoint": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "brokers": {
                        "type": "array",
                        "description": "The list of DXL endpoint brokers. Note that you cannot specify brokers and brokers_import_token at the same time.",
                        "enum": [
                            "dxl:endpoint:broker"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/DxlEndpointBrokers"
                        }
                    },
                    "brokers_import_token": {
                        "type": "string",
                        "description": "The token returned by the uploadinit function call in object fileop for a DXL broker configuration file. Note that you cannot specify brokers and brokers_import_token at the same time.",
                        "writeOnly": true,
                        "example": "Example brokers_import_token"
                    },
                    "client_certificate_subject": {
                        "type": "string",
                        "description": "The client certificate subject of a DXL endpoint.",
                        "readOnly": true,
                        "example": "Example client_certificate_subject"
                    },
                    "client_certificate_token": {
                        "type": "string",
                        "description": "The token returned by the uploadinit function call in object fileop for a DXL endpoint client certificate.",
                        "writeOnly": true,
                        "example": "Example client_certificate_token"
                    },
                    "client_certificate_valid_from": {
                        "type": "integer",
                        "description": "The timestamp when client certificate for a DXL endpoint was created.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "client_certificate_valid_to": {
                        "type": "integer",
                        "description": "The timestamp when the client certificate for a DXL endpoint expires.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "comment": {
                        "type": "string",
                        "description": "The comment of a DXL endpoint.",
                        "example": "Example comment"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines whether a DXL endpoint is disabled.",
                        "example": false
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "log_level": {
                        "type": "string",
                        "description": "The log level for a DXL endpoint.",
                        "enum": [
                            "ERROR",
                            "WARNING",
                            "INFO",
                            "DEBUG"
                        ],
                        "example": "Example log_level"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of a DXL endpoint.",
                        "example": "Example name"
                    },
                    "outbound_member_type": {
                        "type": "string",
                        "description": "The outbound member that will generate events.",
                        "enum": [
                            "MEMBER",
                            "GM"
                        ],
                        "example": "Example outbound_member_type"
                    },
                    "outbound_members": {
                        "type": "array",
                        "description": "The list of members for outbound events.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "template_instance": {
                        "$ref": "#/components/schemas/DxlEndpointTemplateInstance"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "The timeout of session management (in seconds).",
                        "format": "int64",
                        "example": 1
                    },
                    "topics": {
                        "type": "array",
                        "description": "DXL topics",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "vendor_identifier": {
                        "type": "string",
                        "description": "The vendor identifier.",
                        "example": "Example vendor_identifier"
                    },
                    "wapi_user_name": {
                        "type": "string",
                        "description": "The user name for WAPI integration.",
                        "example": "Example wapi_user_name"
                    },
                    "wapi_user_password": {
                        "type": "string",
                        "description": "The user password for WAPI integration.",
                        "writeOnly": true,
                        "example": "Example wapi_user_password"
                    }
                }
            },
            "DxlEndpointBrokers": {
                "type": "object",
                "properties": {
                    "host_name": {
                        "type": "string",
                        "description": "The FQDN for the DXL endpoint broker.",
                        "example": "Example host_name"
                    },
                    "address": {
                        "type": "string",
                        "description": "The IPv4 Address or IPv6 Address for the DXL endpoint broker.",
                        "example": "Example address"
                    },
                    "port": {
                        "type": "integer",
                        "description": "The communication port for the DXL endpoint broker.",
                        "format": "int64",
                        "example": 1
                    },
                    "unique_id": {
                        "type": "string",
                        "description": "The unique identifier for the DXL endpoint.",
                        "example": "Example unique_id"
                    }
                }
            },
            "DxlEndpointTemplateInstance": {
                "type": "object",
                "properties": {
                    "template": {
                        "type": "string",
                        "description": "The name of the REST API template parameter.",
                        "example": "Example template"
                    },
                    "parameters": {
                        "description": "The notification REST template parameters.",
                        "enum": [
                            "notification:rest:templateparameter"
                        ],
                        "$ref": "#/components/schemas/DxlendpointtemplateinstanceParameters"
                    }
                }
            },
            "DxlendpointtemplateinstanceParameters": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the REST API template parameter.",
                        "example": "Example name"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the REST API template parameter.",
                        "example": "Example value"
                    },
                    "default_value": {
                        "type": "string",
                        "description": "The default value of the REST API template parameter.",
                        "readOnly": true,
                        "example": "Example default_value"
                    },
                    "syntax": {
                        "type": "string",
                        "description": "The syntax of the REST API template parameter.",
                        "enum": [
                            "STR",
                            "BOOL",
                            "INT"
                        ],
                        "example": "Example syntax"
                    }
                }
            },
            "ListDxlEndpointResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __DxlEndpoint__ objects.",
                        "type": "array",
                        "title": "ListDxlEndpointResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/DxlEndpoint"
                        }
                    },
                    {
                        "description": "The response format to retrieve __DxlEndpoint__ objects.",
                        "type": "object",
                        "title": "ListDxlEndpointResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DxlEndpoint"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateDxlEndpointResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __DxlEndpoint__ in object format.",
                        "type": "object",
                        "title": "CreateDxlEndpointResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DxlEndpoint"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __DxlEndpoint__.",
                        "type": "string",
                        "title": "CreateDxlEndpointResponse"
                    }
                ]
            },
            "GetDxlEndpointResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DxlEndpoint"
                    },
                    {
                        "description": "The response format to retrieve __DxlEndpoint__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDxlEndpointResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DxlEndpoint"
                            }
                        }
                    }
                ]
            },
            "UpdateDxlEndpointResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __DxlEndpoint__ in object format.",
                        "type": "object",
                        "title": "UpdateDxlEndpointResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DxlEndpoint"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __DxlEndpoint__ .",
                        "type": "string",
                        "title": "UpdateDxlEndpointResponse"
                    }
                ]
            },
            "Fileop": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    }
                }
            },
            "ListFileopResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Fileop__ objects.",
                        "type": "array",
                        "title": "ListFileopResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Fileop"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Fileop__ objects.",
                        "type": "object",
                        "title": "ListFileopResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Fileop"
                                }
                            }
                        }
                    }
                ]
            },
            "GetFileopResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Fileop"
                    },
                    {
                        "description": "The response format to retrieve __Fileop__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetFileopResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Fileop"
                            }
                        }
                    }
                ]
            },
            "UpdateFileopResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Fileop__ in object format.",
                        "type": "object",
                        "title": "UpdateFileopResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Fileop"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Fileop__ .",
                        "type": "string",
                        "title": "UpdateFileopResponse"
                    }
                ]
            },
            "Kerberoskey": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "domain": {
                        "type": "string",
                        "description": "The Kerberos domain name.",
                        "readOnly": true,
                        "example": "Example domain"
                    },
                    "enctype": {
                        "type": "string",
                        "description": "The Kerberos key encryption type.",
                        "enum": [
                            "AES128-CTS-HMAC-SHA1-96",
                            "AES256-CTS-HMAC-SHA1-96",
                            "ARCFOUR-HMAC-MD5",
                            "DES-CBC-CRC",
                            "DES-CBC-MD5"
                        ],
                        "readOnly": true,
                        "example": "Example enctype"
                    },
                    "in_use": {
                        "type": "boolean",
                        "description": "Determines whether the Kerberos key is assigned to the Grid or Grid member.",
                        "readOnly": true,
                        "example": false
                    },
                    "members": {
                        "type": "array",
                        "description": "The list of hostnames and services of Grid members where the key is assigned or Grid/DHCP4 or Grid/DHCP6 or Grid/DNS.",
                        "enum": [
                            "string"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "principal": {
                        "type": "string",
                        "description": "The principal of the Kerberos key object.",
                        "readOnly": true,
                        "example": "Example principal"
                    },
                    "upload_timestamp": {
                        "type": "integer",
                        "description": "The timestamp of the Kerberos key upload operation.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "version": {
                        "type": "integer",
                        "description": "The Kerberos key version number (KVNO).",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "ListKerberoskeyResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Kerberoskey__ objects.",
                        "type": "array",
                        "title": "ListKerberoskeyResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Kerberoskey"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Kerberoskey__ objects.",
                        "type": "object",
                        "title": "ListKerberoskeyResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Kerberoskey"
                                }
                            }
                        }
                    }
                ]
            },
            "GetKerberoskeyResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Kerberoskey"
                    },
                    {
                        "description": "The response format to retrieve __Kerberoskey__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetKerberoskeyResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Kerberoskey"
                            }
                        }
                    }
                ]
            },
            "UpdateKerberoskeyResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Kerberoskey__ in object format.",
                        "type": "object",
                        "title": "UpdateKerberoskeyResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Kerberoskey"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Kerberoskey__ .",
                        "type": "string",
                        "title": "UpdateKerberoskeyResponse"
                    }
                ]
            },
            "Capacityreport": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "hardware_type": {
                        "type": "string",
                        "description": "Hardware type of a Grid member.",
                        "readOnly": true,
                        "example": "Example hardware_type"
                    },
                    "max_capacity": {
                        "type": "integer",
                        "description": "The maximum amount of capacity available for the Grid member.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid member name.",
                        "readOnly": true,
                        "example": "Example name"
                    },
                    "object_counts": {
                        "type": "array",
                        "description": "A list of instance counts for object types created on the Grid member.",
                        "enum": [
                            "capacityreport:objectcount"
                        ],
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/CapacityreportObjectCounts"
                        }
                    },
                    "percent_used": {
                        "type": "integer",
                        "description": "The percentage of the capacity in use by the Grid member.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "role": {
                        "type": "string",
                        "description": "The Grid member role.",
                        "readOnly": true,
                        "example": "Example role"
                    },
                    "total_objects": {
                        "type": "integer",
                        "description": "The total number of objects created by the Grid member.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "CapacityreportObjectCounts": {
                "type": "object",
                "properties": {
                    "type_name": {
                        "type": "string",
                        "description": "Object type name.",
                        "readOnly": true,
                        "example": "Example type_name"
                    },
                    "count": {
                        "type": "integer",
                        "description": "Number of object type instances created.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "ListCapacityreportResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Capacityreport__ objects.",
                        "type": "array",
                        "title": "ListCapacityreportResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Capacityreport"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Capacityreport__ objects.",
                        "type": "object",
                        "title": "ListCapacityreportResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Capacityreport"
                                }
                            }
                        }
                    }
                ]
            },
            "GetCapacityreportResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Capacityreport"
                    },
                    {
                        "description": "The response format to retrieve __Capacityreport__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetCapacityreportResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Capacityreport"
                            }
                        }
                    }
                ]
            },
            "UpdateCapacityreportResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Capacityreport__ in object format.",
                        "type": "object",
                        "title": "UpdateCapacityreportResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Capacityreport"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Capacityreport__ .",
                        "type": "string",
                        "title": "UpdateCapacityreportResponse"
                    }
                ]
            },
            "OutboundCloudclient": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Determines whether the OutBound Cloud Client is enabled.",
                        "example": false
                    },
                    "grid_member": {
                        "type": "string",
                        "description": "The Grid member where our outbound is running.",
                        "example": "Example grid_member"
                    },
                    "interval": {
                        "type": "integer",
                        "description": "The time interval (in seconds) for requesting newly detected domains by the Infoblox Outbound Cloud Client and applying them to the list of configured RPZs.",
                        "format": "int64",
                        "example": 1
                    },
                    "outbound_cloud_client_events": {
                        "type": "array",
                        "description": "List of event types to request",
                        "enum": [
                            "outbound:cloudclient:event"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/OutboundCloudclientOutboundCloudClientEvents"
                        }
                    }
                }
            },
            "OutboundCloudclientOutboundCloudClientEvents": {
                "type": "object",
                "properties": {
                    "event_type": {
                        "type": "string",
                        "description": "The event type enum rpz and analytics.",
                        "enum": [
                            "RPZ",
                            "ANALYTIC"
                        ],
                        "example": "Example event_type"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Determines if the event type is enabled or not.",
                        "example": false
                    }
                }
            },
            "ListOutboundCloudclientResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __OutboundCloudclient__ objects.",
                        "type": "array",
                        "title": "ListOutboundCloudclientResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/OutboundCloudclient"
                        }
                    },
                    {
                        "description": "The response format to retrieve __OutboundCloudclient__ objects.",
                        "type": "object",
                        "title": "ListOutboundCloudclientResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/OutboundCloudclient"
                                }
                            }
                        }
                    }
                ]
            },
            "GetOutboundCloudclientResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/OutboundCloudclient"
                    },
                    {
                        "description": "The response format to retrieve __OutboundCloudclient__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetOutboundCloudclientResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/OutboundCloudclient"
                            }
                        }
                    }
                ]
            },
            "UpdateOutboundCloudclientResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __OutboundCloudclient__ in object format.",
                        "type": "object",
                        "title": "UpdateOutboundCloudclientResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/OutboundCloudclient"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __OutboundCloudclient__ .",
                        "type": "string",
                        "title": "UpdateOutboundCloudclientResponse"
                    }
                ]
            },
            "PxgridEndpoint": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "address": {
                        "type": "string",
                        "description": "The pxgrid endpoint IPv4 Address or IPv6 Address or Fully-Qualified Domain Name (FQDN)",
                        "example": "Example address"
                    },
                    "client_certificate_subject": {
                        "type": "string",
                        "description": "The Cisco ISE client certificate subject.",
                        "readOnly": true,
                        "example": "Example client_certificate_subject"
                    },
                    "client_certificate_token": {
                        "type": "string",
                        "description": "The token returned by the uploadinit function call in object fileop for Cisco ISE client certificate.",
                        "writeOnly": true,
                        "example": "Example client_certificate_token"
                    },
                    "client_certificate_valid_from": {
                        "type": "integer",
                        "description": "The pxgrid endpoint client certificate valid from.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "client_certificate_valid_to": {
                        "type": "integer",
                        "description": "The pxgrid endpoint client certificate valid to.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "comment": {
                        "type": "string",
                        "description": "The Cisco ISE endpoint descriptive comment.",
                        "example": "Example comment"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines whether a Cisco ISE endpoint is disabled or not. When this is set to False, the Cisco ISE endpoint is enabled.",
                        "example": false
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "log_level": {
                        "type": "string",
                        "description": "The log level for a notification pxgrid endpoint.",
                        "enum": [
                            "ERROR",
                            "WARNING",
                            "INFO",
                            "DEBUG"
                        ],
                        "example": "Example log_level"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the pxgrid endpoint.",
                        "example": "Example name"
                    },
                    "network_view": {
                        "type": "string",
                        "description": "The pxgrid network view name.",
                        "example": "Example network_view"
                    },
                    "outbound_member_type": {
                        "type": "string",
                        "description": "The outbound member that will generate events.",
                        "enum": [
                            "MEMBER",
                            "GM"
                        ],
                        "example": "Example outbound_member_type"
                    },
                    "outbound_members": {
                        "type": "array",
                        "description": "The list of members for outbound events.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "publish_settings": {
                        "$ref": "#/components/schemas/PxgridEndpointPublishSettings"
                    },
                    "subscribe_settings": {
                        "$ref": "#/components/schemas/PxgridEndpointSubscribeSettings"
                    },
                    "template_instance": {
                        "$ref": "#/components/schemas/PxgridEndpointTemplateInstance"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "The timeout of session management (in seconds).",
                        "format": "int64",
                        "example": 1
                    },
                    "vendor_identifier": {
                        "type": "string",
                        "description": "The vendor identifier.",
                        "example": "Example vendor_identifier"
                    },
                    "wapi_user_name": {
                        "type": "string",
                        "description": "The user name for WAPI integration.",
                        "example": "Example wapi_user_name"
                    },
                    "wapi_user_password": {
                        "type": "string",
                        "description": "The user password for WAPI integration.",
                        "writeOnly": true,
                        "example": "Example wapi_user_password"
                    }
                }
            },
            "PxgridEndpointPublishSettings": {
                "type": "object",
                "properties": {
                    "enabled_attributes": {
                        "type": "array",
                        "description": "The list of NIOS extensible attributes enalbed for publishsing to Cisco ISE endpoint.",
                        "enum": [
                            "CLIENT_ID",
                            "FINGERPRINT",
                            "HOSTNAME",
                            "INFOBLOX_MEMBER",
                            "IPADDRESS",
                            "LEASE_END_TIME",
                            "LEASE_START_TIME",
                            "LEASE_STATE",
                            "MAC_OR_DUID",
                            "NETBIOS_NAME"
                        ],
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "PxgridEndpointSubscribeSettings": {
                "type": "object",
                "properties": {
                    "enabled_attributes": {
                        "type": "array",
                        "description": "The list of Cisco ISE attributes allowed for subscription.",
                        "enum": [
                            "DOMAINNAME",
                            "ENDPOINT_PROFILE",
                            "SECURITY_GROUP",
                            "SESSION_STATE",
                            "SSID",
                            "USERNAME",
                            "VLAN"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "mapped_ea_attributes": {
                        "description": "The list of NIOS extensible attributes to Cisco ISE attributes mappings.",
                        "enum": [
                            "ciscoise:eaassociation"
                        ],
                        "$ref": "#/components/schemas/PxgridendpointsubscribesettingsMappedEaAttributes"
                    }
                }
            },
            "PxgridendpointsubscribesettingsMappedEaAttributes": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The Cisco ISE attribute name that is enabled for publishsing from a Cisco ISE endpoint.",
                        "enum": [
                            "ACCOUNT_SESSION_ID",
                            "AUDIT_SESSION_ID",
                            "EPS_STATUS",
                            "IP_ADDRESS",
                            "MAC",
                            "NAS_IP_ADDRESS",
                            "NAS_PORT_ID",
                            "POSTURE_STATUS",
                            "POSTURE_TIMESTAMP"
                        ],
                        "example": "Example name"
                    },
                    "mapped_ea": {
                        "type": "string",
                        "description": "The name of the extensible attribute definition object the Cisco ISE attribute that is enabled for subscription is mapped on.",
                        "example": "Example mapped_ea"
                    }
                }
            },
            "PxgridEndpointTemplateInstance": {
                "type": "object",
                "properties": {
                    "template": {
                        "type": "string",
                        "description": "The name of the REST API template parameter.",
                        "example": "Example template"
                    },
                    "parameters": {
                        "description": "The notification REST template parameters.",
                        "enum": [
                            "notification:rest:templateparameter"
                        ],
                        "$ref": "#/components/schemas/PxgridendpointtemplateinstanceParameters"
                    }
                }
            },
            "PxgridendpointtemplateinstanceParameters": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the REST API template parameter.",
                        "example": "Example name"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the REST API template parameter.",
                        "example": "Example value"
                    },
                    "default_value": {
                        "type": "string",
                        "description": "The default value of the REST API template parameter.",
                        "readOnly": true,
                        "example": "Example default_value"
                    },
                    "syntax": {
                        "type": "string",
                        "description": "The syntax of the REST API template parameter.",
                        "enum": [
                            "STR",
                            "BOOL",
                            "INT"
                        ],
                        "example": "Example syntax"
                    }
                }
            },
            "ListPxgridEndpointResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __PxgridEndpoint__ objects.",
                        "type": "array",
                        "title": "ListPxgridEndpointResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/PxgridEndpoint"
                        }
                    },
                    {
                        "description": "The response format to retrieve __PxgridEndpoint__ objects.",
                        "type": "object",
                        "title": "ListPxgridEndpointResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PxgridEndpoint"
                                }
                            }
                        }
                    }
                ]
            },
            "CreatePxgridEndpointResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __PxgridEndpoint__ in object format.",
                        "type": "object",
                        "title": "CreatePxgridEndpointResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/PxgridEndpoint"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __PxgridEndpoint__.",
                        "type": "string",
                        "title": "CreatePxgridEndpointResponse"
                    }
                ]
            },
            "GetPxgridEndpointResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/PxgridEndpoint"
                    },
                    {
                        "description": "The response format to retrieve __PxgridEndpoint__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetPxgridEndpointResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/PxgridEndpoint"
                            }
                        }
                    }
                ]
            },
            "UpdatePxgridEndpointResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __PxgridEndpoint__ in object format.",
                        "type": "object",
                        "title": "UpdatePxgridEndpointResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/PxgridEndpoint"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __PxgridEndpoint__ .",
                        "type": "string",
                        "title": "UpdatePxgridEndpointResponse"
                    }
                ]
            },
            "Ruleset": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "Descriptive comment about the Ruleset object.",
                        "example": "Example comment"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "The flag that indicates if the Ruleset object is disabled.",
                        "example": false
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this Ruleset object.",
                        "example": "Example name"
                    },
                    "nxdomain_rules": {
                        "type": "array",
                        "description": "The list of Rules assigned to this Ruleset object. Rules can be set only when the Ruleset type is set to \"NXDOMAIN\".",
                        "enum": [
                            "nxdomainrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/RulesetNxdomainRules"
                        }
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of this Ruleset object.",
                        "enum": [
                            "NXDOMAIN",
                            "BLACKLIST"
                        ],
                        "example": "Example type"
                    }
                }
            },
            "RulesetNxdomainRules": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "The action to perform when a domain name matches the pattern defined in this Ruleset.",
                        "enum": [
                            "PASS",
                            "REDIRECT",
                            "MODIFY"
                        ],
                        "example": "Example action"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "The pattern that is used to match the domain name.",
                        "example": "Example pattern"
                    }
                }
            },
            "ListRulesetResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Ruleset__ objects.",
                        "type": "array",
                        "title": "ListRulesetResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Ruleset"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Ruleset__ objects.",
                        "type": "object",
                        "title": "ListRulesetResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Ruleset"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateRulesetResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Ruleset__ in object format.",
                        "type": "object",
                        "title": "CreateRulesetResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ruleset"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Ruleset__.",
                        "type": "string",
                        "title": "CreateRulesetResponse"
                    }
                ]
            },
            "GetRulesetResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Ruleset"
                    },
                    {
                        "description": "The response format to retrieve __Ruleset__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetRulesetResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ruleset"
                            }
                        }
                    }
                ]
            },
            "UpdateRulesetResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Ruleset__ in object format.",
                        "type": "object",
                        "title": "UpdateRulesetResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ruleset"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Ruleset__ .",
                        "type": "string",
                        "title": "UpdateRulesetResponse"
                    }
                ]
            },
            "Scavengingtask": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "action": {
                        "type": "string",
                        "description": "The scavenging action.",
                        "enum": [
                            "ANALYZE",
                            "RECLAIM",
                            "ANALYZE_RECLAIM",
                            "RESET"
                        ],
                        "readOnly": true,
                        "example": "Example action"
                    },
                    "associated_object": {
                        "type": "string",
                        "description": "The reference to the object associated with the scavenging task.",
                        "readOnly": true,
                        "example": "Example associated_object"
                    },
                    "end_time": {
                        "type": "integer",
                        "description": "The scavenging process end time.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "processed_records": {
                        "type": "integer",
                        "description": "The number of processed during scavenging resource records.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "reclaimable_records": {
                        "type": "integer",
                        "description": "The number of resource records that are allowed to be reclaimed during the scavenging process.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "reclaimed_records": {
                        "type": "integer",
                        "description": "The number of reclaimed during the scavenging process resource records.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "start_time": {
                        "type": "integer",
                        "description": "The scavenging process start time.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "status": {
                        "type": "string",
                        "description": "The scavenging process status. This is a read-only attribute.",
                        "enum": [
                            "CREATED",
                            "RUNNING",
                            "COMPLETED",
                            "ERROR"
                        ],
                        "readOnly": true,
                        "example": "Example status"
                    }
                }
            },
            "ListScavengingtaskResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Scavengingtask__ objects.",
                        "type": "array",
                        "title": "ListScavengingtaskResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Scavengingtask"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Scavengingtask__ objects.",
                        "type": "object",
                        "title": "ListScavengingtaskResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Scavengingtask"
                                }
                            }
                        }
                    }
                ]
            },
            "GetScavengingtaskResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Scavengingtask"
                    },
                    {
                        "description": "The response format to retrieve __Scavengingtask__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetScavengingtaskResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Scavengingtask"
                            }
                        }
                    }
                ]
            },
            "UpdateScavengingtaskResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Scavengingtask__ in object format.",
                        "type": "object",
                        "title": "UpdateScavengingtaskResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Scavengingtask"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Scavengingtask__ .",
                        "type": "string",
                        "title": "UpdateScavengingtaskResponse"
                    }
                ]
            },
            "Scheduledtask": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "approval_status": {
                        "type": "string",
                        "description": "The approval status of the task.",
                        "enum": [
                            "APPROVED",
                            "NONE",
                            "PENDING",
                            "REJECTED"
                        ],
                        "example": "Example approval_status"
                    },
                    "approver": {
                        "type": "string",
                        "description": "The approver of the task.",
                        "readOnly": true,
                        "example": "Example approver"
                    },
                    "approver_comment": {
                        "type": "string",
                        "description": "The comment specified by the approver of the task.",
                        "example": "Example approver_comment"
                    },
                    "automatic_restart": {
                        "type": "boolean",
                        "description": "Indicates whether there will be an automatic restart when the appliance executes the task.",
                        "example": false
                    },
                    "changed_objects": {
                        "type": "array",
                        "description": "A list of objects that are affected by the task.",
                        "enum": [
                            "changedobject"
                        ],
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/ScheduledtaskChangedObjects"
                        }
                    },
                    "dependent_tasks": {
                        "type": "array",
                        "description": "If this scheduled task has dependent tasks, their references will be returned in this field.",
                        "enum": [
                            "scheduledtask"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "scheduledtask"
                            ]
                        }
                    },
                    "execute_now": {
                        "type": "boolean",
                        "description": "If this field is set to True the specified task will be executed immediately.",
                        "writeOnly": true,
                        "example": false
                    },
                    "execution_details": {
                        "type": "array",
                        "description": "Messages generated by the execution of the scheduled task after its completion.",
                        "enum": [
                            "string"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "execution_details_type": {
                        "type": "string",
                        "description": "The type of details generated by the execution of the scheduled task after its completion.",
                        "enum": [
                            "NONE",
                            "WARNING"
                        ],
                        "readOnly": true,
                        "example": "Example execution_details_type"
                    },
                    "execution_status": {
                        "type": "string",
                        "description": "The execution status of the task.",
                        "enum": [
                            "COMPLETED",
                            "FAILED",
                            "PENDING",
                            "WAITING_EXECUTION"
                        ],
                        "readOnly": true,
                        "example": "Example execution_status"
                    },
                    "execution_time": {
                        "type": "integer",
                        "description": "The time when the appliance executed the task.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "is_network_insight_task": {
                        "type": "boolean",
                        "description": "Indicates whether this is a Network Insight scheduled task.",
                        "readOnly": true,
                        "example": false
                    },
                    "member": {
                        "type": "string",
                        "description": "The member where this task was created.",
                        "readOnly": true,
                        "example": "Example member"
                    },
                    "predecessor_task": {
                        "type": "string",
                        "description": "If this scheduled task has a predecessor task set, its reference will be returned in this field.",
                        "readOnly": true,
                        "example": "Example predecessor_task"
                    },
                    "re_execute_task": {
                        "type": "boolean",
                        "description": "If set to True, if the scheduled task is a Network Insight task and it failed, a new task will be cloned from this task and re-executed.",
                        "example": false
                    },
                    "scheduled_time": {
                        "type": "integer",
                        "description": "The time when the task is scheduled to occur.",
                        "format": "int64",
                        "example": 1
                    },
                    "submit_time": {
                        "type": "integer",
                        "description": "The time when the task was submitted.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "submitter": {
                        "type": "string",
                        "description": "The submitter of the task.",
                        "readOnly": true,
                        "example": "Example submitter"
                    },
                    "submitter_comment": {
                        "type": "string",
                        "description": "The comment specified by the submitter of the task.",
                        "example": "Example submitter_comment"
                    },
                    "task_id": {
                        "type": "integer",
                        "description": "The task ID.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "task_type": {
                        "type": "string",
                        "description": "The task type.",
                        "enum": [
                            "OBJECT_CHANGE",
                            "PORT_CONTROL"
                        ],
                        "readOnly": true,
                        "example": "Example task_type"
                    },
                    "ticket_number": {
                        "type": "string",
                        "description": "The task ticket number.",
                        "readOnly": true,
                        "example": "Example ticket_number"
                    }
                }
            },
            "ScheduledtaskChangedObjects": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "This is a description of the action that is applied to this object.",
                        "enum": [
                            "Convert IPv4 Lease",
                            "Delete",
                            "Restart Services",
                            "Add",
                            "Convert IPv6 Lease",
                            "Lock/Unlock Zone",
                            "Reset Grid",
                            "Configure Grid",
                            "Restart Services",
                            "Network Discovery",
                            "Upgrade Grid",
                            "Modify"
                        ],
                        "readOnly": true,
                        "example": "Example action"
                    },
                    "name": {
                        "type": "string",
                        "description": "The object name.",
                        "readOnly": true,
                        "example": "Example name"
                    },
                    "type": {
                        "type": "string",
                        "description": "A value of the object type, this may contain objects that are not yet available in WAPI.",
                        "readOnly": true,
                        "example": "Example type"
                    },
                    "object_type": {
                        "type": "string",
                        "description": "The object type. This is undefined if the object is not yet supported.",
                        "readOnly": true,
                        "example": "Example object_type"
                    },
                    "properties": {
                        "type": "array",
                        "description": "A list of properties that are being changed.",
                        "enum": [
                            "string"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ListScheduledtaskResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Scheduledtask__ objects.",
                        "type": "array",
                        "title": "ListScheduledtaskResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Scheduledtask"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Scheduledtask__ objects.",
                        "type": "object",
                        "title": "ListScheduledtaskResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Scheduledtask"
                                }
                            }
                        }
                    }
                ]
            },
            "GetScheduledtaskResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Scheduledtask"
                    },
                    {
                        "description": "The response format to retrieve __Scheduledtask__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetScheduledtaskResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Scheduledtask"
                            }
                        }
                    }
                ]
            },
            "UpdateScheduledtaskResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Scheduledtask__ in object format.",
                        "type": "object",
                        "title": "UpdateScheduledtaskResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Scheduledtask"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Scheduledtask__ .",
                        "type": "string",
                        "title": "UpdateScheduledtaskResponse"
                    }
                ]
            },
            "Search": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    }
                }
            },
            "ListSearchResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Search__ objects.",
                        "type": "array",
                        "title": "ListSearchResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Search"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Search__ objects.",
                        "type": "object",
                        "title": "ListSearchResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Search"
                                }
                            }
                        }
                    }
                ]
            },
            "GetSearchResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Search"
                    },
                    {
                        "description": "The response format to retrieve __Search__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetSearchResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Search"
                            }
                        }
                    }
                ]
            },
            "UpdateSearchResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Search__ in object format.",
                        "type": "object",
                        "title": "UpdateSearchResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Search"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Search__ .",
                        "type": "string",
                        "title": "UpdateSearchResponse"
                    }
                ]
            },
            "SyslogEndpoint": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "log_level": {
                        "type": "string",
                        "description": "The log level for a notification REST endpoint.",
                        "enum": [
                            "ERROR",
                            "WARNING",
                            "INFO",
                            "DEBUG"
                        ],
                        "example": "Example log_level"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of a Syslog endpoint.",
                        "example": "Example name"
                    },
                    "outbound_member_type": {
                        "type": "string",
                        "description": "The outbound member that will generate events.",
                        "enum": [
                            "MEMBER",
                            "GM"
                        ],
                        "example": "Example outbound_member_type"
                    },
                    "outbound_members": {
                        "type": "array",
                        "description": "The list of members for outbound events.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "syslog_servers": {
                        "type": "array",
                        "description": "List of syslog servers",
                        "enum": [
                            "syslog:endpoint:servers"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/SyslogEndpointSyslogServers"
                        }
                    },
                    "template_instance": {
                        "$ref": "#/components/schemas/SyslogEndpointTemplateInstance"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "The timeout of session management (in seconds).",
                        "format": "int64",
                        "example": 1
                    },
                    "vendor_identifier": {
                        "type": "string",
                        "description": "The vendor identifier.",
                        "example": "Example vendor_identifier"
                    },
                    "wapi_user_name": {
                        "type": "string",
                        "description": "The user name for WAPI integration.",
                        "example": "Example wapi_user_name"
                    },
                    "wapi_user_password": {
                        "type": "string",
                        "description": "The user password for WAPI integration.",
                        "writeOnly": true,
                        "example": "Example wapi_user_password"
                    }
                }
            },
            "SyslogEndpointSyslogServers": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Syslog Server IP address",
                        "example": "Example address"
                    },
                    "connection_type": {
                        "type": "string",
                        "description": "Connection type values",
                        "enum": [
                            "stcp",
                            "tcp",
                            "udp"
                        ],
                        "example": "Example connection_type"
                    },
                    "port": {
                        "type": "integer",
                        "description": "The port this server listens on.",
                        "format": "int64",
                        "example": 1
                    },
                    "hostname": {
                        "type": "string",
                        "description": "List of hostnames",
                        "enum": [
                            "FQDN",
                            "HOSTNAME",
                            "IP_ADDRESS"
                        ],
                        "example": "Example hostname"
                    },
                    "format": {
                        "type": "string",
                        "description": "Format vlues for syslog endpoint server",
                        "enum": [
                            "raw",
                            "formatted"
                        ],
                        "example": "Example format"
                    },
                    "facility": {
                        "type": "string",
                        "description": "Facility values for syslog endpoint server",
                        "enum": [
                            "local0",
                            "local1",
                            "local2",
                            "local3",
                            "local4",
                            "local5",
                            "local6",
                            "local7"
                        ],
                        "example": "Example facility"
                    },
                    "severity": {
                        "type": "string",
                        "description": "Severity values for syslog endpoint server.",
                        "enum": [
                            "debug",
                            "info",
                            "notice",
                            "warning",
                            "err",
                            "crit",
                            "alert",
                            "emerg"
                        ],
                        "example": "Example severity"
                    },
                    "certificate": {
                        "type": "string",
                        "description": "Reference for creating sysog endpoint server.",
                        "readOnly": true,
                        "example": "Example certificate"
                    },
                    "certificate_token": {
                        "type": "string",
                        "description": "The token returned by the uploadinit function call in object fileop.",
                        "writeOnly": true,
                        "example": "Example certificate_token"
                    }
                }
            },
            "SyslogEndpointTemplateInstance": {
                "type": "object",
                "properties": {
                    "template": {
                        "type": "string",
                        "description": "The name of the REST API template parameter.",
                        "example": "Example template"
                    },
                    "parameters": {
                        "description": "The notification REST template parameters.",
                        "enum": [
                            "notification:rest:templateparameter"
                        ],
                        "$ref": "#/components/schemas/SyslogendpointtemplateinstanceParameters"
                    }
                }
            },
            "SyslogendpointtemplateinstanceParameters": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the REST API template parameter.",
                        "example": "Example name"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the REST API template parameter.",
                        "example": "Example value"
                    },
                    "default_value": {
                        "type": "string",
                        "description": "The default value of the REST API template parameter.",
                        "readOnly": true,
                        "example": "Example default_value"
                    },
                    "syntax": {
                        "type": "string",
                        "description": "The syntax of the REST API template parameter.",
                        "enum": [
                            "STR",
                            "BOOL",
                            "INT"
                        ],
                        "example": "Example syntax"
                    }
                }
            },
            "ListSyslogEndpointResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __SyslogEndpoint__ objects.",
                        "type": "array",
                        "title": "ListSyslogEndpointResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/SyslogEndpoint"
                        }
                    },
                    {
                        "description": "The response format to retrieve __SyslogEndpoint__ objects.",
                        "type": "object",
                        "title": "ListSyslogEndpointResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SyslogEndpoint"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateSyslogEndpointResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __SyslogEndpoint__ in object format.",
                        "type": "object",
                        "title": "CreateSyslogEndpointResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/SyslogEndpoint"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __SyslogEndpoint__.",
                        "type": "string",
                        "title": "CreateSyslogEndpointResponse"
                    }
                ]
            },
            "GetSyslogEndpointResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/SyslogEndpoint"
                    },
                    {
                        "description": "The response format to retrieve __SyslogEndpoint__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetSyslogEndpointResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/SyslogEndpoint"
                            }
                        }
                    }
                ]
            },
            "UpdateSyslogEndpointResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __SyslogEndpoint__ in object format.",
                        "type": "object",
                        "title": "UpdateSyslogEndpointResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/SyslogEndpoint"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __SyslogEndpoint__ .",
                        "type": "string",
                        "title": "UpdateSyslogEndpointResponse"
                    }
                ]
            },
            "Taxii": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "enable_service": {
                        "type": "boolean",
                        "description": "Indicates whether the Taxii service is running on the given member or not.",
                        "example": false
                    },
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid member.",
                        "readOnly": true,
                        "example": "Example ipv4addr"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid member.",
                        "readOnly": true,
                        "example": "Example ipv6addr"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Taxii Member.",
                        "readOnly": true,
                        "example": "Example name"
                    },
                    "taxii_rpz_config": {
                        "type": "array",
                        "description": "Taxii service RPZ configuration list.",
                        "enum": [
                            "taxii:rpzconfig"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/TaxiiTaxiiRpzConfig"
                        }
                    }
                }
            },
            "TaxiiTaxiiRpzConfig": {
                "type": "object",
                "properties": {
                    "collection_name": {
                        "type": "string",
                        "description": "The STIX collection name.",
                        "example": "Example collection_name"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The reference to the RPZ in which rules are created through the Taxii protocol requests.",
                        "example": "Example zone"
                    }
                }
            },
            "ListTaxiiResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Taxii__ objects.",
                        "type": "array",
                        "title": "ListTaxiiResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Taxii"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Taxii__ objects.",
                        "type": "object",
                        "title": "ListTaxiiResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Taxii"
                                }
                            }
                        }
                    }
                ]
            },
            "GetTaxiiResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Taxii"
                    },
                    {
                        "description": "The response format to retrieve __Taxii__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetTaxiiResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Taxii"
                            }
                        }
                    }
                ]
            },
            "UpdateTaxiiResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Taxii__ in object format.",
                        "type": "object",
                        "title": "UpdateTaxiiResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Taxii"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Taxii__ .",
                        "type": "string",
                        "title": "UpdateTaxiiResponse"
                    }
                ]
            },
            "Tftpfiledir": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "directory": {
                        "type": "string",
                        "description": "The path to the directory that contains file or subdirectory.",
                        "example": "Example directory"
                    },
                    "is_synced_to_gm": {
                        "type": "boolean",
                        "description": "Determines whether the TFTP entity is synchronized to Grid Master.",
                        "readOnly": true,
                        "example": false
                    },
                    "last_modify": {
                        "type": "integer",
                        "description": "The time when the file or directory was last modified.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "The TFTP directory or file name.",
                        "example": "Example name"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of TFTP file system entity (directory or file).",
                        "enum": [
                            "DIRECTORY",
                            "FILE"
                        ],
                        "example": "Example type"
                    },
                    "vtftp_dir_members": {
                        "type": "array",
                        "description": "The replication members with TFTP client addresses where this virtual folder is applicable.",
                        "enum": [
                            "vtftpdirmember"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/TftpfiledirVtftpDirMembers"
                        }
                    }
                }
            },
            "TftpfiledirVtftpDirMembers": {
                "type": "object",
                "properties": {
                    "member": {
                        "type": "string",
                        "description": "The Grid member on which to create the virtual TFTP directory.",
                        "example": "Example member"
                    },
                    "ip_type": {
                        "type": "string",
                        "description": "The IP type of the virtual TFTP root directory.",
                        "enum": [
                            "ADDRESS",
                            "NETWORK",
                            "RANGE"
                        ],
                        "example": "Example ip_type"
                    },
                    "address": {
                        "type": "string",
                        "description": "The IP address of the clients which will see the virtual TFTP directory as the root directory.",
                        "example": "Example address"
                    },
                    "start_address": {
                        "type": "string",
                        "description": "The start IP address of the range within which the clients will see the virtual TFTP directory as the root directory.",
                        "example": "Example start_address"
                    },
                    "end_address": {
                        "type": "string",
                        "description": "The end IP address of the range within which the clients will see the virtual TFTP directory as the root directory.",
                        "example": "Example end_address"
                    },
                    "network": {
                        "type": "string",
                        "description": "The IP address of network the clients from which will see the virtual TFTP directory as the root directory.",
                        "example": "Example network"
                    },
                    "cidr": {
                        "type": "integer",
                        "description": "The CIDR of network the clients from which will see the virtual TFTP directory as the root directory.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "ListTftpfiledirResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Tftpfiledir__ objects.",
                        "type": "array",
                        "title": "ListTftpfiledirResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Tftpfiledir"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Tftpfiledir__ objects.",
                        "type": "object",
                        "title": "ListTftpfiledirResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Tftpfiledir"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateTftpfiledirResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Tftpfiledir__ in object format.",
                        "type": "object",
                        "title": "CreateTftpfiledirResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Tftpfiledir"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Tftpfiledir__.",
                        "type": "string",
                        "title": "CreateTftpfiledirResponse"
                    }
                ]
            },
            "GetTftpfiledirResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Tftpfiledir"
                    },
                    {
                        "description": "The response format to retrieve __Tftpfiledir__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetTftpfiledirResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Tftpfiledir"
                            }
                        }
                    }
                ]
            },
            "UpdateTftpfiledirResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Tftpfiledir__ in object format.",
                        "type": "object",
                        "title": "UpdateTftpfiledirResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Tftpfiledir"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Tftpfiledir__ .",
                        "type": "string",
                        "title": "UpdateTftpfiledirResponse"
                    }
                ]
            }
        }
    }
}