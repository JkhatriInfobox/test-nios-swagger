{
    "openapi": "3.0.0",
    "info": {
        "title": "Infoblox GRID API",
        "description": "OpenAPI specification for Infoblox NIOS WAPI GRID objects",
        "version": "2.13.6",
        "termsOfService": "https://www.infoblox.com",
        "contact": {
            "name": "Infoblox",
            "url": "https://www.infoblox.com"
        },
        "license": {
            "name": "Infoblox License",
            "url": "https://www.infoblox.com"
        }
    },
    "servers": [
        {
            "url": "/wapi/v2.13.6",
            "description": "NIOS WAPI server"
        }
    ],
    "tags": [
        {
            "name": "Grid",
            "description": "Operations for grid objects"
        },
        {
            "name": "GridCloudapi",
            "description": "Operations for grid:cloudapi objects"
        },
        {
            "name": "GridCloudapiCloudstatistics",
            "description": "Operations for grid:cloudapi:cloudstatistics objects"
        },
        {
            "name": "GridCloudapiTenant",
            "description": "Operations for grid:cloudapi:tenant objects"
        },
        {
            "name": "GridCloudapiVm",
            "description": "Operations for grid:cloudapi:vm objects"
        },
        {
            "name": "GridCloudapiVmaddress",
            "description": "Operations for grid:cloudapi:vmaddress objects"
        },
        {
            "name": "GridMemberCloudapi",
            "description": "Operations for grid:member:cloudapi objects"
        },
        {
            "name": "GridDhcpproperties",
            "description": "Operations for grid:dhcpproperties objects"
        },
        {
            "name": "GridServicerestartGroup",
            "description": "Operations for grid:servicerestart:group objects"
        },
        {
            "name": "GridServicerestartStatus",
            "description": "Operations for grid:servicerestart:status objects"
        },
        {
            "name": "GridServicerestartRequest",
            "description": "Operations for grid:servicerestart:request objects"
        },
        {
            "name": "Mastergrid",
            "description": "Operations for mastergrid objects"
        },
        {
            "name": "GridDashboard",
            "description": "Operations for grid:dashboard objects"
        },
        {
            "name": "GridDns",
            "description": "Operations for grid:dns objects"
        },
        {
            "name": "GridFiledistribution",
            "description": "Operations for grid:filedistribution objects"
        },
        {
            "name": "GridThreatprotection",
            "description": "Operations for grid:threatprotection objects"
        },
        {
            "name": "GridThreatinsight",
            "description": "Operations for grid:threatinsight objects"
        },
        {
            "name": "GridLicensePool",
            "description": "Operations for grid:license_pool objects"
        },
        {
            "name": "GridX509certificate",
            "description": "Operations for grid:x509certificate objects"
        },
        {
            "name": "Captiveportal",
            "description": "Operations for captiveportal objects"
        },
        {
            "name": "GridLicensePoolContainer",
            "description": "Operations for grid:license_pool_container objects"
        },
        {
            "name": "GridMaxminddbinfo",
            "description": "Operations for grid:maxminddbinfo objects"
        },
        {
            "name": "GridServicerestartGroupOrder",
            "description": "Operations for grid:servicerestart:group:order objects"
        },
        {
            "name": "GridServicerestartRequestChangedobject",
            "description": "Operations for grid:servicerestart:request:changedobject objects"
        },
        {
            "name": "Restartservicestatus",
            "description": "Operations for restartservicestatus objects"
        },
        {
            "name": "Natgroup",
            "description": "Operations for natgroup objects"
        },
        {
            "name": "Member",
            "description": "Operations for member objects"
        },
        {
            "name": "MemberDhcpproperties",
            "description": "Operations for member:dhcpproperties objects"
        },
        {
            "name": "MemberDns",
            "description": "Operations for member:dns objects"
        },
        {
            "name": "MemberFiledistribution",
            "description": "Operations for member:filedistribution objects"
        },
        {
            "name": "MemberLicense",
            "description": "Operations for member:license objects"
        },
        {
            "name": "MemberThreatprotection",
            "description": "Operations for member:threatprotection objects"
        },
        {
            "name": "MemberParentalcontrol",
            "description": "Operations for member:parentalcontrol objects"
        },
        {
            "name": "MemberThreatinsight",
            "description": "Operations for member:threatinsight objects"
        },
        {
            "name": "Membercloudsync",
            "description": "Operations for membercloudsync objects"
        },
        {
            "name": "Memberdfp",
            "description": "Operations for memberdfp objects"
        },
        {
            "name": "Gmcgroup",
            "description": "Operations for gmcgroup objects"
        },
        {
            "name": "Gmcschedule",
            "description": "Operations for gmcschedule objects"
        },
        {
            "name": "Distributionschedule",
            "description": "Operations for distributionschedule objects"
        },
        {
            "name": "Upgradegroup",
            "description": "Operations for upgradegroup objects"
        },
        {
            "name": "Upgradeschedule",
            "description": "Operations for upgradeschedule objects"
        },
        {
            "name": "Upgradestatus",
            "description": "Operations for upgradestatus objects"
        },
        {
            "name": "LicenseGridwide",
            "description": "Operations for license:gridwide objects"
        },
        {
            "name": "Extensibleattributedef",
            "description": "Operations for extensibleattributedef objects"
        }
    ],
    "paths": {
        "/grid": {
            "get": {
                "tags": [
                    "Grid"
                ],
                "operationId": "GridList",
                "summary": "Retrieve grid objects",
                "description": "Returns a list of grid objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListGridResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid/{reference}": {
            "get": {
                "tags": [
                    "Grid"
                ],
                "operationId": "GridRead",
                "summary": "Get a specific grid object",
                "description": "Returns a specific grid object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetGridResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Grid"
                ],
                "operationId": "GridUpdate",
                "summary": "Update a grid object",
                "description": "Updates a specific grid object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Grid"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateGridResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:cloudapi": {
            "get": {
                "tags": [
                    "GridCloudapi"
                ],
                "operationId": "GridCloudapiList",
                "summary": "Retrieve grid:cloudapi objects",
                "description": "Returns a list of grid:cloudapi objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListGridCloudapiResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:cloudapi/{reference}": {
            "get": {
                "tags": [
                    "GridCloudapi"
                ],
                "operationId": "GridCloudapiRead",
                "summary": "Get a specific grid:cloudapi object",
                "description": "Returns a specific grid:cloudapi object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:cloudapi object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetGridCloudapiResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "GridCloudapi"
                ],
                "operationId": "GridCloudapiUpdate",
                "summary": "Update a grid:cloudapi object",
                "description": "Updates a specific grid:cloudapi object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:cloudapi object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GridCloudapi"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateGridCloudapiResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:cloudapi:cloudstatistics": {
            "get": {
                "tags": [
                    "GridCloudapiCloudstatistics"
                ],
                "operationId": "GridCloudapiCloudstatisticsList",
                "summary": "Retrieve grid:cloudapi:cloudstatistics objects",
                "description": "Returns a list of grid:cloudapi:cloudstatistics objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListGridCloudapiCloudstatisticsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:cloudapi:cloudstatistics/{reference}": {
            "get": {
                "tags": [
                    "GridCloudapiCloudstatistics"
                ],
                "operationId": "GridCloudapiCloudstatisticsRead",
                "summary": "Get a specific grid:cloudapi:cloudstatistics object",
                "description": "Returns a specific grid:cloudapi:cloudstatistics object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:cloudapi:cloudstatistics object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetGridCloudapiCloudstatisticsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:cloudapi:tenant": {
            "get": {
                "tags": [
                    "GridCloudapiTenant"
                ],
                "operationId": "GridCloudapiTenantList",
                "summary": "Retrieve grid:cloudapi:tenant objects",
                "description": "Returns a list of grid:cloudapi:tenant objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListGridCloudapiTenantResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:cloudapi:tenant/{reference}": {
            "get": {
                "tags": [
                    "GridCloudapiTenant"
                ],
                "operationId": "GridCloudapiTenantRead",
                "summary": "Get a specific grid:cloudapi:tenant object",
                "description": "Returns a specific grid:cloudapi:tenant object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:cloudapi:tenant object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetGridCloudapiTenantResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "GridCloudapiTenant"
                ],
                "operationId": "GridCloudapiTenantUpdate",
                "summary": "Update a grid:cloudapi:tenant object",
                "description": "Updates a specific grid:cloudapi:tenant object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:cloudapi:tenant object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GridCloudapiTenant"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateGridCloudapiTenantResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:cloudapi:vm": {
            "get": {
                "tags": [
                    "GridCloudapiVm"
                ],
                "operationId": "GridCloudapiVmList",
                "summary": "Retrieve grid:cloudapi:vm objects",
                "description": "Returns a list of grid:cloudapi:vm objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListGridCloudapiVmResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:cloudapi:vm/{reference}": {
            "get": {
                "tags": [
                    "GridCloudapiVm"
                ],
                "operationId": "GridCloudapiVmRead",
                "summary": "Get a specific grid:cloudapi:vm object",
                "description": "Returns a specific grid:cloudapi:vm object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:cloudapi:vm object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetGridCloudapiVmResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "GridCloudapiVm"
                ],
                "operationId": "GridCloudapiVmUpdate",
                "summary": "Update a grid:cloudapi:vm object",
                "description": "Updates a specific grid:cloudapi:vm object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:cloudapi:vm object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GridCloudapiVm"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateGridCloudapiVmResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            }
        },
        "/grid:cloudapi:vmaddress": {
            "get": {
                "tags": [
                    "GridCloudapiVmaddress"
                ],
                "operationId": "GridCloudapiVmaddressList",
                "summary": "Retrieve grid:cloudapi:vmaddress objects",
                "description": "Returns a list of grid:cloudapi:vmaddress objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListGridCloudapiVmaddressResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:cloudapi:vmaddress/{reference}": {
            "get": {
                "tags": [
                    "GridCloudapiVmaddress"
                ],
                "operationId": "GridCloudapiVmaddressRead",
                "summary": "Get a specific grid:cloudapi:vmaddress object",
                "description": "Returns a specific grid:cloudapi:vmaddress object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:cloudapi:vmaddress object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetGridCloudapiVmaddressResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:member:cloudapi": {
            "get": {
                "tags": [
                    "GridMemberCloudapi"
                ],
                "operationId": "GridMemberCloudapiList",
                "summary": "Retrieve grid:member:cloudapi objects",
                "description": "Returns a list of grid:member:cloudapi objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListGridMemberCloudapiResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:member:cloudapi/{reference}": {
            "get": {
                "tags": [
                    "GridMemberCloudapi"
                ],
                "operationId": "GridMemberCloudapiRead",
                "summary": "Get a specific grid:member:cloudapi object",
                "description": "Returns a specific grid:member:cloudapi object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:member:cloudapi object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetGridMemberCloudapiResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "GridMemberCloudapi"
                ],
                "operationId": "GridMemberCloudapiUpdate",
                "summary": "Update a grid:member:cloudapi object",
                "description": "Updates a specific grid:member:cloudapi object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:member:cloudapi object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GridMemberCloudapi"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateGridMemberCloudapiResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            }
        },
        "/grid:dhcpproperties": {
            "get": {
                "tags": [
                    "GridDhcpproperties"
                ],
                "operationId": "GridDhcppropertiesList",
                "summary": "Retrieve grid:dhcpproperties objects",
                "description": "Returns a list of grid:dhcpproperties objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListGridDhcppropertiesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:dhcpproperties/{reference}": {
            "get": {
                "tags": [
                    "GridDhcpproperties"
                ],
                "operationId": "GridDhcppropertiesRead",
                "summary": "Get a specific grid:dhcpproperties object",
                "description": "Returns a specific grid:dhcpproperties object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:dhcpproperties object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetGridDhcppropertiesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "GridDhcpproperties"
                ],
                "operationId": "GridDhcppropertiesUpdate",
                "summary": "Update a grid:dhcpproperties object",
                "description": "Updates a specific grid:dhcpproperties object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:dhcpproperties object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GridDhcpproperties"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateGridDhcppropertiesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:servicerestart:group": {
            "get": {
                "tags": [
                    "GridServicerestartGroup"
                ],
                "operationId": "GridServicerestartGroupList",
                "summary": "Retrieve grid:servicerestart:group objects",
                "description": "Returns a list of grid:servicerestart:group objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListGridServicerestartGroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "GridServicerestartGroup"
                ],
                "operationId": "GridServicerestartGroupCreate",
                "summary": "Create a grid:servicerestart:group object",
                "description": "Creates a new grid:servicerestart:group object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GridServicerestartGroup"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateGridServicerestartGroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_grid_grid_servicerestart_group",
                "x-tf-datasource": "nios_grid_grid_servicerestart_group",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/grid:servicerestart:group/{reference}": {
            "get": {
                "tags": [
                    "GridServicerestartGroup"
                ],
                "operationId": "GridServicerestartGroupRead",
                "summary": "Get a specific grid:servicerestart:group object",
                "description": "Returns a specific grid:servicerestart:group object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:servicerestart:group object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetGridServicerestartGroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "GridServicerestartGroup"
                ],
                "operationId": "GridServicerestartGroupUpdate",
                "summary": "Update a grid:servicerestart:group object",
                "description": "Updates a specific grid:servicerestart:group object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:servicerestart:group object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GridServicerestartGroup"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateGridServicerestartGroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "GridServicerestartGroup"
                ],
                "operationId": "GridServicerestartGroupDelete",
                "summary": "Delete a grid:servicerestart:group object",
                "description": "Deletes a specific grid:servicerestart:group object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:servicerestart:group object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:servicerestart:status": {
            "get": {
                "tags": [
                    "GridServicerestartStatus"
                ],
                "operationId": "GridServicerestartStatusList",
                "summary": "Retrieve grid:servicerestart:status objects",
                "description": "Returns a list of grid:servicerestart:status objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListGridServicerestartStatusResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:servicerestart:status/{reference}": {
            "get": {
                "tags": [
                    "GridServicerestartStatus"
                ],
                "operationId": "GridServicerestartStatusRead",
                "summary": "Get a specific grid:servicerestart:status object",
                "description": "Returns a specific grid:servicerestart:status object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:servicerestart:status object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetGridServicerestartStatusResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:servicerestart:request": {
            "get": {
                "tags": [
                    "GridServicerestartRequest"
                ],
                "operationId": "GridServicerestartRequestList",
                "summary": "Retrieve grid:servicerestart:request objects",
                "description": "Returns a list of grid:servicerestart:request objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListGridServicerestartRequestResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:servicerestart:request/{reference}": {
            "get": {
                "tags": [
                    "GridServicerestartRequest"
                ],
                "operationId": "GridServicerestartRequestRead",
                "summary": "Get a specific grid:servicerestart:request object",
                "description": "Returns a specific grid:servicerestart:request object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:servicerestart:request object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetGridServicerestartRequestResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/mastergrid": {
            "get": {
                "tags": [
                    "Mastergrid"
                ],
                "operationId": "MastergridList",
                "summary": "Retrieve mastergrid objects",
                "description": "Returns a list of mastergrid objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListMastergridResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/mastergrid/{reference}": {
            "get": {
                "tags": [
                    "Mastergrid"
                ],
                "operationId": "MastergridRead",
                "summary": "Get a specific mastergrid object",
                "description": "Returns a specific mastergrid object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the mastergrid object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMastergridResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Mastergrid"
                ],
                "operationId": "MastergridUpdate",
                "summary": "Update a mastergrid object",
                "description": "Updates a specific mastergrid object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the mastergrid object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Mastergrid"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateMastergridResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:dashboard": {
            "get": {
                "tags": [
                    "GridDashboard"
                ],
                "operationId": "GridDashboardList",
                "summary": "Retrieve grid:dashboard objects",
                "description": "Returns a list of grid:dashboard objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListGridDashboardResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:dashboard/{reference}": {
            "get": {
                "tags": [
                    "GridDashboard"
                ],
                "operationId": "GridDashboardRead",
                "summary": "Get a specific grid:dashboard object",
                "description": "Returns a specific grid:dashboard object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:dashboard object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetGridDashboardResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "GridDashboard"
                ],
                "operationId": "GridDashboardUpdate",
                "summary": "Update a grid:dashboard object",
                "description": "Updates a specific grid:dashboard object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:dashboard object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GridDashboard"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateGridDashboardResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:dns": {
            "get": {
                "tags": [
                    "GridDns"
                ],
                "operationId": "GridDnsList",
                "summary": "Retrieve grid:dns objects",
                "description": "Returns a list of grid:dns objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListGridDnsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:dns/{reference}": {
            "get": {
                "tags": [
                    "GridDns"
                ],
                "operationId": "GridDnsRead",
                "summary": "Get a specific grid:dns object",
                "description": "Returns a specific grid:dns object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:dns object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetGridDnsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "GridDns"
                ],
                "operationId": "GridDnsUpdate",
                "summary": "Update a grid:dns object",
                "description": "Updates a specific grid:dns object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:dns object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GridDns"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateGridDnsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:filedistribution": {
            "get": {
                "tags": [
                    "GridFiledistribution"
                ],
                "operationId": "GridFiledistributionList",
                "summary": "Retrieve grid:filedistribution objects",
                "description": "Returns a list of grid:filedistribution objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListGridFiledistributionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:filedistribution/{reference}": {
            "get": {
                "tags": [
                    "GridFiledistribution"
                ],
                "operationId": "GridFiledistributionRead",
                "summary": "Get a specific grid:filedistribution object",
                "description": "Returns a specific grid:filedistribution object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:filedistribution object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetGridFiledistributionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "GridFiledistribution"
                ],
                "operationId": "GridFiledistributionUpdate",
                "summary": "Update a grid:filedistribution object",
                "description": "Updates a specific grid:filedistribution object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:filedistribution object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GridFiledistribution"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateGridFiledistributionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:threatprotection": {
            "get": {
                "tags": [
                    "GridThreatprotection"
                ],
                "operationId": "GridThreatprotectionList",
                "summary": "Retrieve grid:threatprotection objects",
                "description": "Returns a list of grid:threatprotection objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListGridThreatprotectionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:threatprotection/{reference}": {
            "get": {
                "tags": [
                    "GridThreatprotection"
                ],
                "operationId": "GridThreatprotectionRead",
                "summary": "Get a specific grid:threatprotection object",
                "description": "Returns a specific grid:threatprotection object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:threatprotection object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetGridThreatprotectionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "GridThreatprotection"
                ],
                "operationId": "GridThreatprotectionUpdate",
                "summary": "Update a grid:threatprotection object",
                "description": "Updates a specific grid:threatprotection object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:threatprotection object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GridThreatprotection"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateGridThreatprotectionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:threatinsight": {
            "get": {
                "tags": [
                    "GridThreatinsight"
                ],
                "operationId": "GridThreatinsightList",
                "summary": "Retrieve grid:threatinsight objects",
                "description": "Returns a list of grid:threatinsight objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListGridThreatinsightResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:threatinsight/{reference}": {
            "get": {
                "tags": [
                    "GridThreatinsight"
                ],
                "operationId": "GridThreatinsightRead",
                "summary": "Get a specific grid:threatinsight object",
                "description": "Returns a specific grid:threatinsight object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:threatinsight object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetGridThreatinsightResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "GridThreatinsight"
                ],
                "operationId": "GridThreatinsightUpdate",
                "summary": "Update a grid:threatinsight object",
                "description": "Updates a specific grid:threatinsight object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:threatinsight object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GridThreatinsight"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateGridThreatinsightResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:license_pool": {
            "get": {
                "tags": [
                    "GridLicensePool"
                ],
                "operationId": "GridLicensePoolList",
                "summary": "Retrieve grid:license_pool objects",
                "description": "Returns a list of grid:license_pool objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListGridLicensePoolResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:license_pool/{reference}": {
            "get": {
                "tags": [
                    "GridLicensePool"
                ],
                "operationId": "GridLicensePoolRead",
                "summary": "Get a specific grid:license_pool object",
                "description": "Returns a specific grid:license_pool object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:license_pool object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetGridLicensePoolResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:x509certificate": {
            "get": {
                "tags": [
                    "GridX509certificate"
                ],
                "operationId": "GridX509certificateList",
                "summary": "Retrieve grid:x509certificate objects",
                "description": "Returns a list of grid:x509certificate objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListGridX509certificateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:x509certificate/{reference}": {
            "get": {
                "tags": [
                    "GridX509certificate"
                ],
                "operationId": "GridX509certificateRead",
                "summary": "Get a specific grid:x509certificate object",
                "description": "Returns a specific grid:x509certificate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:x509certificate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetGridX509certificateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/captiveportal": {
            "get": {
                "tags": [
                    "Captiveportal"
                ],
                "operationId": "CaptiveportalList",
                "summary": "Retrieve captiveportal objects",
                "description": "Returns a list of captiveportal objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListCaptiveportalResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/captiveportal/{reference}": {
            "get": {
                "tags": [
                    "Captiveportal"
                ],
                "operationId": "CaptiveportalRead",
                "summary": "Get a specific captiveportal object",
                "description": "Returns a specific captiveportal object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the captiveportal object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetCaptiveportalResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Captiveportal"
                ],
                "operationId": "CaptiveportalUpdate",
                "summary": "Update a captiveportal object",
                "description": "Updates a specific captiveportal object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the captiveportal object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Captiveportal"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateCaptiveportalResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:license_pool_container": {
            "get": {
                "tags": [
                    "GridLicensePoolContainer"
                ],
                "operationId": "GridLicensePoolContainerList",
                "summary": "Retrieve grid:license_pool_container objects",
                "description": "Returns a list of grid:license_pool_container objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListGridLicensePoolContainerResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:license_pool_container/{reference}": {
            "get": {
                "tags": [
                    "GridLicensePoolContainer"
                ],
                "operationId": "GridLicensePoolContainerRead",
                "summary": "Get a specific grid:license_pool_container object",
                "description": "Returns a specific grid:license_pool_container object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:license_pool_container object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetGridLicensePoolContainerResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:maxminddbinfo": {
            "get": {
                "tags": [
                    "GridMaxminddbinfo"
                ],
                "operationId": "GridMaxminddbinfoList",
                "summary": "Retrieve grid:maxminddbinfo objects",
                "description": "Returns a list of grid:maxminddbinfo objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListGridMaxminddbinfoResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:maxminddbinfo/{reference}": {
            "get": {
                "tags": [
                    "GridMaxminddbinfo"
                ],
                "operationId": "GridMaxminddbinfoRead",
                "summary": "Get a specific grid:maxminddbinfo object",
                "description": "Returns a specific grid:maxminddbinfo object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:maxminddbinfo object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetGridMaxminddbinfoResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:servicerestart:group:order": {
            "get": {
                "tags": [
                    "GridServicerestartGroupOrder"
                ],
                "operationId": "GridServicerestartGroupOrderList",
                "summary": "Retrieve grid:servicerestart:group:order objects",
                "description": "Returns a list of grid:servicerestart:group:order objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListGridServicerestartGroupOrderResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "GridServicerestartGroupOrder"
                ],
                "operationId": "GridServicerestartGroupOrderCreate",
                "summary": "Create a grid:servicerestart:group:order object",
                "description": "Creates a new grid:servicerestart:group:order object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GridServicerestartGroupOrder"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateGridServicerestartGroupOrderResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_grid_grid_servicerestart_group_order",
                "x-tf-datasource": "nios_grid_grid_servicerestart_group_order"
            }
        },
        "/grid:servicerestart:group:order/{reference}": {
            "get": {
                "tags": [
                    "GridServicerestartGroupOrder"
                ],
                "operationId": "GridServicerestartGroupOrderRead",
                "summary": "Get a specific grid:servicerestart:group:order object",
                "description": "Returns a specific grid:servicerestart:group:order object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:servicerestart:group:order object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetGridServicerestartGroupOrderResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "GridServicerestartGroupOrder"
                ],
                "operationId": "GridServicerestartGroupOrderUpdate",
                "summary": "Update a grid:servicerestart:group:order object",
                "description": "Updates a specific grid:servicerestart:group:order object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:servicerestart:group:order object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GridServicerestartGroupOrder"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateGridServicerestartGroupOrderResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:servicerestart:request:changedobject": {
            "get": {
                "tags": [
                    "GridServicerestartRequestChangedobject"
                ],
                "operationId": "GridServicerestartRequestChangedobjectList",
                "summary": "Retrieve grid:servicerestart:request:changedobject objects",
                "description": "Returns a list of grid:servicerestart:request:changedobject objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListGridServicerestartRequestChangedobjectResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/grid:servicerestart:request:changedobject/{reference}": {
            "get": {
                "tags": [
                    "GridServicerestartRequestChangedobject"
                ],
                "operationId": "GridServicerestartRequestChangedobjectRead",
                "summary": "Get a specific grid:servicerestart:request:changedobject object",
                "description": "Returns a specific grid:servicerestart:request:changedobject object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the grid:servicerestart:request:changedobject object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetGridServicerestartRequestChangedobjectResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/restartservicestatus": {
            "get": {
                "tags": [
                    "Restartservicestatus"
                ],
                "operationId": "RestartservicestatusList",
                "summary": "Retrieve restartservicestatus objects",
                "description": "Returns a list of restartservicestatus objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListRestartservicestatusResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/restartservicestatus/{reference}": {
            "get": {
                "tags": [
                    "Restartservicestatus"
                ],
                "operationId": "RestartservicestatusRead",
                "summary": "Get a specific restartservicestatus object",
                "description": "Returns a specific restartservicestatus object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the restartservicestatus object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetRestartservicestatusResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/natgroup": {
            "get": {
                "tags": [
                    "Natgroup"
                ],
                "operationId": "NatgroupList",
                "summary": "Retrieve natgroup objects",
                "description": "Returns a list of natgroup objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListNatgroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Natgroup"
                ],
                "operationId": "NatgroupCreate",
                "summary": "Create a natgroup object",
                "description": "Creates a new natgroup object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Natgroup"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateNatgroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_grid_natgroup",
                "x-tf-datasource": "nios_grid_natgroup"
            }
        },
        "/natgroup/{reference}": {
            "get": {
                "tags": [
                    "Natgroup"
                ],
                "operationId": "NatgroupRead",
                "summary": "Get a specific natgroup object",
                "description": "Returns a specific natgroup object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the natgroup object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetNatgroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Natgroup"
                ],
                "operationId": "NatgroupUpdate",
                "summary": "Update a natgroup object",
                "description": "Updates a specific natgroup object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the natgroup object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Natgroup"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateNatgroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Natgroup"
                ],
                "operationId": "NatgroupDelete",
                "summary": "Delete a natgroup object",
                "description": "Deletes a specific natgroup object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the natgroup object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/member": {
            "get": {
                "tags": [
                    "Member"
                ],
                "operationId": "MemberList",
                "summary": "Retrieve member objects",
                "description": "Returns a list of member objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListMemberResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Member"
                ],
                "operationId": "MemberCreate",
                "summary": "Create a member object",
                "description": "Creates a new member object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Member"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateMemberResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_grid_member",
                "x-tf-datasource": "nios_grid_member",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/member/{reference}": {
            "get": {
                "tags": [
                    "Member"
                ],
                "operationId": "MemberRead",
                "summary": "Get a specific member object",
                "description": "Returns a specific member object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the member object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMemberResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Member"
                ],
                "operationId": "MemberUpdate",
                "summary": "Update a member object",
                "description": "Updates a specific member object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the member object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Member"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateMemberResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Member"
                ],
                "operationId": "MemberDelete",
                "summary": "Delete a member object",
                "description": "Deletes a specific member object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the member object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/member:dhcpproperties": {
            "get": {
                "tags": [
                    "MemberDhcpproperties"
                ],
                "operationId": "MemberDhcppropertiesList",
                "summary": "Retrieve member:dhcpproperties objects",
                "description": "Returns a list of member:dhcpproperties objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListMemberDhcppropertiesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/member:dhcpproperties/{reference}": {
            "get": {
                "tags": [
                    "MemberDhcpproperties"
                ],
                "operationId": "MemberDhcppropertiesRead",
                "summary": "Get a specific member:dhcpproperties object",
                "description": "Returns a specific member:dhcpproperties object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the member:dhcpproperties object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMemberDhcppropertiesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "MemberDhcpproperties"
                ],
                "operationId": "MemberDhcppropertiesUpdate",
                "summary": "Update a member:dhcpproperties object",
                "description": "Updates a specific member:dhcpproperties object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the member:dhcpproperties object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MemberDhcpproperties"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateMemberDhcppropertiesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            }
        },
        "/member:dns": {
            "get": {
                "tags": [
                    "MemberDns"
                ],
                "operationId": "MemberDnsList",
                "summary": "Retrieve member:dns objects",
                "description": "Returns a list of member:dns objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListMemberDnsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/member:dns/{reference}": {
            "get": {
                "tags": [
                    "MemberDns"
                ],
                "operationId": "MemberDnsRead",
                "summary": "Get a specific member:dns object",
                "description": "Returns a specific member:dns object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the member:dns object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMemberDnsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "MemberDns"
                ],
                "operationId": "MemberDnsUpdate",
                "summary": "Update a member:dns object",
                "description": "Updates a specific member:dns object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the member:dns object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MemberDns"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateMemberDnsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            }
        },
        "/member:filedistribution": {
            "get": {
                "tags": [
                    "MemberFiledistribution"
                ],
                "operationId": "MemberFiledistributionList",
                "summary": "Retrieve member:filedistribution objects",
                "description": "Returns a list of member:filedistribution objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListMemberFiledistributionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/member:filedistribution/{reference}": {
            "get": {
                "tags": [
                    "MemberFiledistribution"
                ],
                "operationId": "MemberFiledistributionRead",
                "summary": "Get a specific member:filedistribution object",
                "description": "Returns a specific member:filedistribution object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the member:filedistribution object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMemberFiledistributionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "MemberFiledistribution"
                ],
                "operationId": "MemberFiledistributionUpdate",
                "summary": "Update a member:filedistribution object",
                "description": "Updates a specific member:filedistribution object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the member:filedistribution object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MemberFiledistribution"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateMemberFiledistributionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/member:license": {
            "get": {
                "tags": [
                    "MemberLicense"
                ],
                "operationId": "MemberLicenseList",
                "summary": "Retrieve member:license objects",
                "description": "Returns a list of member:license objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListMemberLicenseResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/member:license/{reference}": {
            "get": {
                "tags": [
                    "MemberLicense"
                ],
                "operationId": "MemberLicenseRead",
                "summary": "Get a specific member:license object",
                "description": "Returns a specific member:license object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the member:license object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMemberLicenseResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "MemberLicense"
                ],
                "operationId": "MemberLicenseDelete",
                "summary": "Delete a member:license object",
                "description": "Deletes a specific member:license object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the member:license object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/member:threatprotection": {
            "get": {
                "tags": [
                    "MemberThreatprotection"
                ],
                "operationId": "MemberThreatprotectionList",
                "summary": "Retrieve member:threatprotection objects",
                "description": "Returns a list of member:threatprotection objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListMemberThreatprotectionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/member:threatprotection/{reference}": {
            "get": {
                "tags": [
                    "MemberThreatprotection"
                ],
                "operationId": "MemberThreatprotectionRead",
                "summary": "Get a specific member:threatprotection object",
                "description": "Returns a specific member:threatprotection object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the member:threatprotection object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMemberThreatprotectionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "MemberThreatprotection"
                ],
                "operationId": "MemberThreatprotectionUpdate",
                "summary": "Update a member:threatprotection object",
                "description": "Updates a specific member:threatprotection object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the member:threatprotection object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MemberThreatprotection"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateMemberThreatprotectionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/member:parentalcontrol": {
            "get": {
                "tags": [
                    "MemberParentalcontrol"
                ],
                "operationId": "MemberParentalcontrolList",
                "summary": "Retrieve member:parentalcontrol objects",
                "description": "Returns a list of member:parentalcontrol objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListMemberParentalcontrolResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/member:parentalcontrol/{reference}": {
            "get": {
                "tags": [
                    "MemberParentalcontrol"
                ],
                "operationId": "MemberParentalcontrolRead",
                "summary": "Get a specific member:parentalcontrol object",
                "description": "Returns a specific member:parentalcontrol object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the member:parentalcontrol object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMemberParentalcontrolResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "MemberParentalcontrol"
                ],
                "operationId": "MemberParentalcontrolUpdate",
                "summary": "Update a member:parentalcontrol object",
                "description": "Updates a specific member:parentalcontrol object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the member:parentalcontrol object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MemberParentalcontrol"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateMemberParentalcontrolResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/member:threatinsight": {
            "get": {
                "tags": [
                    "MemberThreatinsight"
                ],
                "operationId": "MemberThreatinsightList",
                "summary": "Retrieve member:threatinsight objects",
                "description": "Returns a list of member:threatinsight objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListMemberThreatinsightResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/member:threatinsight/{reference}": {
            "get": {
                "tags": [
                    "MemberThreatinsight"
                ],
                "operationId": "MemberThreatinsightRead",
                "summary": "Get a specific member:threatinsight object",
                "description": "Returns a specific member:threatinsight object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the member:threatinsight object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMemberThreatinsightResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "MemberThreatinsight"
                ],
                "operationId": "MemberThreatinsightUpdate",
                "summary": "Update a member:threatinsight object",
                "description": "Updates a specific member:threatinsight object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the member:threatinsight object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MemberThreatinsight"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateMemberThreatinsightResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/membercloudsync": {
            "get": {
                "tags": [
                    "Membercloudsync"
                ],
                "operationId": "MembercloudsyncList",
                "summary": "Retrieve membercloudsync objects",
                "description": "Returns a list of membercloudsync objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListMembercloudsyncResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/membercloudsync/{reference}": {
            "get": {
                "tags": [
                    "Membercloudsync"
                ],
                "operationId": "MembercloudsyncRead",
                "summary": "Get a specific membercloudsync object",
                "description": "Returns a specific membercloudsync object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the membercloudsync object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMembercloudsyncResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Membercloudsync"
                ],
                "operationId": "MembercloudsyncUpdate",
                "summary": "Update a membercloudsync object",
                "description": "Updates a specific membercloudsync object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the membercloudsync object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Membercloudsync"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateMembercloudsyncResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/memberdfp": {
            "get": {
                "tags": [
                    "Memberdfp"
                ],
                "operationId": "MemberdfpList",
                "summary": "Retrieve memberdfp objects",
                "description": "Returns a list of memberdfp objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListMemberdfpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Memberdfp"
                ],
                "operationId": "MemberdfpCreate",
                "summary": "Create a memberdfp object",
                "description": "Creates a new memberdfp object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Memberdfp"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateMemberdfpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_grid_memberdfp",
                "x-tf-datasource": "nios_grid_memberdfp",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/memberdfp/{reference}": {
            "get": {
                "tags": [
                    "Memberdfp"
                ],
                "operationId": "MemberdfpRead",
                "summary": "Get a specific memberdfp object",
                "description": "Returns a specific memberdfp object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the memberdfp object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMemberdfpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Memberdfp"
                ],
                "operationId": "MemberdfpUpdate",
                "summary": "Update a memberdfp object",
                "description": "Updates a specific memberdfp object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the memberdfp object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Memberdfp"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateMemberdfpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Memberdfp"
                ],
                "operationId": "MemberdfpDelete",
                "summary": "Delete a memberdfp object",
                "description": "Deletes a specific memberdfp object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the memberdfp object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/gmcgroup": {
            "get": {
                "tags": [
                    "Gmcgroup"
                ],
                "operationId": "GmcgroupList",
                "summary": "Retrieve gmcgroup objects",
                "description": "Returns a list of gmcgroup objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListGmcgroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Gmcgroup"
                ],
                "operationId": "GmcgroupCreate",
                "summary": "Create a gmcgroup object",
                "description": "Creates a new gmcgroup object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Gmcgroup"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateGmcgroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_grid_gmcgroup",
                "x-tf-datasource": "nios_grid_gmcgroup"
            }
        },
        "/gmcgroup/{reference}": {
            "get": {
                "tags": [
                    "Gmcgroup"
                ],
                "operationId": "GmcgroupRead",
                "summary": "Get a specific gmcgroup object",
                "description": "Returns a specific gmcgroup object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the gmcgroup object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetGmcgroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Gmcgroup"
                ],
                "operationId": "GmcgroupUpdate",
                "summary": "Update a gmcgroup object",
                "description": "Updates a specific gmcgroup object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the gmcgroup object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Gmcgroup"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateGmcgroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Gmcgroup"
                ],
                "operationId": "GmcgroupDelete",
                "summary": "Delete a gmcgroup object",
                "description": "Deletes a specific gmcgroup object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the gmcgroup object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/gmcschedule": {
            "get": {
                "tags": [
                    "Gmcschedule"
                ],
                "operationId": "GmcscheduleList",
                "summary": "Retrieve gmcschedule objects",
                "description": "Returns a list of gmcschedule objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListGmcscheduleResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/gmcschedule/{reference}": {
            "get": {
                "tags": [
                    "Gmcschedule"
                ],
                "operationId": "GmcscheduleRead",
                "summary": "Get a specific gmcschedule object",
                "description": "Returns a specific gmcschedule object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the gmcschedule object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetGmcscheduleResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Gmcschedule"
                ],
                "operationId": "GmcscheduleUpdate",
                "summary": "Update a gmcschedule object",
                "description": "Updates a specific gmcschedule object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the gmcschedule object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Gmcschedule"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateGmcscheduleResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/distributionschedule": {
            "get": {
                "tags": [
                    "Distributionschedule"
                ],
                "operationId": "DistributionscheduleList",
                "summary": "Retrieve distributionschedule objects",
                "description": "Returns a list of distributionschedule objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDistributionscheduleResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/distributionschedule/{reference}": {
            "get": {
                "tags": [
                    "Distributionschedule"
                ],
                "operationId": "DistributionscheduleRead",
                "summary": "Get a specific distributionschedule object",
                "description": "Returns a specific distributionschedule object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the distributionschedule object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDistributionscheduleResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Distributionschedule"
                ],
                "operationId": "DistributionscheduleUpdate",
                "summary": "Update a distributionschedule object",
                "description": "Updates a specific distributionschedule object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the distributionschedule object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Distributionschedule"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDistributionscheduleResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/upgradegroup": {
            "get": {
                "tags": [
                    "Upgradegroup"
                ],
                "operationId": "UpgradegroupList",
                "summary": "Retrieve upgradegroup objects",
                "description": "Returns a list of upgradegroup objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListUpgradegroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Upgradegroup"
                ],
                "operationId": "UpgradegroupCreate",
                "summary": "Create a upgradegroup object",
                "description": "Creates a new upgradegroup object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Upgradegroup"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateUpgradegroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_grid_upgradegroup",
                "x-tf-datasource": "nios_grid_upgradegroup"
            }
        },
        "/upgradegroup/{reference}": {
            "get": {
                "tags": [
                    "Upgradegroup"
                ],
                "operationId": "UpgradegroupRead",
                "summary": "Get a specific upgradegroup object",
                "description": "Returns a specific upgradegroup object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the upgradegroup object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUpgradegroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Upgradegroup"
                ],
                "operationId": "UpgradegroupUpdate",
                "summary": "Update a upgradegroup object",
                "description": "Updates a specific upgradegroup object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the upgradegroup object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Upgradegroup"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateUpgradegroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Upgradegroup"
                ],
                "operationId": "UpgradegroupDelete",
                "summary": "Delete a upgradegroup object",
                "description": "Deletes a specific upgradegroup object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the upgradegroup object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/upgradeschedule": {
            "get": {
                "tags": [
                    "Upgradeschedule"
                ],
                "operationId": "UpgradescheduleList",
                "summary": "Retrieve upgradeschedule objects",
                "description": "Returns a list of upgradeschedule objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListUpgradescheduleResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/upgradeschedule/{reference}": {
            "get": {
                "tags": [
                    "Upgradeschedule"
                ],
                "operationId": "UpgradescheduleRead",
                "summary": "Get a specific upgradeschedule object",
                "description": "Returns a specific upgradeschedule object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the upgradeschedule object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUpgradescheduleResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Upgradeschedule"
                ],
                "operationId": "UpgradescheduleUpdate",
                "summary": "Update a upgradeschedule object",
                "description": "Updates a specific upgradeschedule object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the upgradeschedule object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Upgradeschedule"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateUpgradescheduleResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/upgradestatus": {
            "get": {
                "tags": [
                    "Upgradestatus"
                ],
                "operationId": "UpgradestatusList",
                "summary": "Retrieve upgradestatus objects",
                "description": "Returns a list of upgradestatus objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListUpgradestatusResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/upgradestatus/{reference}": {
            "get": {
                "tags": [
                    "Upgradestatus"
                ],
                "operationId": "UpgradestatusRead",
                "summary": "Get a specific upgradestatus object",
                "description": "Returns a specific upgradestatus object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the upgradestatus object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUpgradestatusResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Upgradestatus"
                ],
                "operationId": "UpgradestatusUpdate",
                "summary": "Update a upgradestatus object",
                "description": "Updates a specific upgradestatus object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the upgradestatus object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Upgradestatus"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateUpgradestatusResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/license:gridwide": {
            "get": {
                "tags": [
                    "LicenseGridwide"
                ],
                "operationId": "LicenseGridwideList",
                "summary": "Retrieve license:gridwide objects",
                "description": "Returns a list of license:gridwide objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListLicenseGridwideResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/license:gridwide/{reference}": {
            "get": {
                "tags": [
                    "LicenseGridwide"
                ],
                "operationId": "LicenseGridwideRead",
                "summary": "Get a specific license:gridwide object",
                "description": "Returns a specific license:gridwide object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the license:gridwide object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetLicenseGridwideResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "LicenseGridwide"
                ],
                "operationId": "LicenseGridwideDelete",
                "summary": "Delete a license:gridwide object",
                "description": "Deletes a specific license:gridwide object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the license:gridwide object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/extensibleattributedef": {
            "get": {
                "tags": [
                    "Extensibleattributedef"
                ],
                "operationId": "ExtensibleattributedefList",
                "summary": "Retrieve extensibleattributedef objects",
                "description": "Returns a list of extensibleattributedef objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListExtensibleattributedefResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Extensibleattributedef"
                ],
                "operationId": "ExtensibleattributedefCreate",
                "summary": "Create a extensibleattributedef object",
                "description": "Creates a new extensibleattributedef object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Extensibleattributedef"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateExtensibleattributedefResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_grid_extensibleattributedef",
                "x-tf-datasource": "nios_grid_extensibleattributedef"
            }
        },
        "/extensibleattributedef/{reference}": {
            "get": {
                "tags": [
                    "Extensibleattributedef"
                ],
                "operationId": "ExtensibleattributedefRead",
                "summary": "Get a specific extensibleattributedef object",
                "description": "Returns a specific extensibleattributedef object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the extensibleattributedef object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetExtensibleattributedefResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Extensibleattributedef"
                ],
                "operationId": "ExtensibleattributedefUpdate",
                "summary": "Update a extensibleattributedef object",
                "description": "Updates a specific extensibleattributedef object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the extensibleattributedef object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Extensibleattributedef"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateExtensibleattributedefResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Extensibleattributedef"
                ],
                "operationId": "ExtensibleattributedefDelete",
                "summary": "Delete a extensibleattributedef object",
                "description": "Deletes a specific extensibleattributedef object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the extensibleattributedef object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            }
        },
        "parameters": {
            "ReturnFields": {
                "name": "_return_fields",
                "in": "query",
                "description": "Enter the field names followed by comma",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "ReturnFieldsPlus": {
                "name": "_return_fields+",
                "in": "query",
                "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "MaxResults": {
                "name": "_max_results",
                "in": "query",
                "description": "Enter the number of results to be fetched",
                "required": false,
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1
                }
            },
            "ReturnAsObject": {
                "name": "_return_as_object",
                "in": "query",
                "description": "Select 1 if result is required as an object",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "Paging": {
                "name": "_paging",
                "in": "query",
                "description": "Control paging of results",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "PageId": {
                "name": "_page_id",
                "in": "query",
                "description": "Page id for retrieving next page of results",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "ProxySearch": {
                "name": "_proxy_search",
                "in": "query",
                "description": "Search Grid members for data",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "Schema": {
                "name": "_schema",
                "in": "query",
                "description": "Return schema for this object type",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "SchemaVersion": {
                "name": "_schema_version",
                "in": "query",
                "description": "Schema version to use",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        1,
                        2
                    ]
                }
            },
            "GetDoc": {
                "name": "_get_doc",
                "in": "query",
                "description": "Return documentation with schema",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "SchemaSearchable": {
                "name": "_schema_searchable",
                "in": "query",
                "description": "Return searchable fields with schema",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "Inheritance": {
                "name": "_inheritance",
                "in": "query",
                "description": "If this option is set to True, fields which support inheritance, will display data properly.",
                "required": false,
                "schema": {
                    "type": "boolean"
                }
            },
            "filters": {
                "name": "filters",
                "in": "query",
                "schema": {
                    "type": "object",
                    "additionalProperties": true
                },
                "style": "form",
                "explode": false
            },
            "ExtAttrFilters": {
                "name": "extattrfilter",
                "in": "query",
                "schema": {
                    "type": "object",
                    "additionalProperties": true
                },
                "style": "form",
                "explode": false
            },
            "Method": {
                "name": "_method",
                "in": "query",
                "description": "Enter the method type for the request",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "Body": {
                "name": "body",
                "in": "query",
                "schema": {
                    "type": "object"
                }
            }
        },
        "schemas": {
            "ExtAttrs": {
                "type": "object",
                "properties": {
                    "value": {
                        "description": "The value of the extensible attribute."
                    }
                },
                "required": [
                    "value"
                ],
                "description": "Extensible attributes associated with the object."
            },
            "Grid": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "allow_recursive_deletion": {
                        "type": "string",
                        "description": "The property to allow recursive deletion. Determines the users who can choose to perform recursive deletion on networks or zones from the GUI only.",
                        "enum": [
                            "NOBODY",
                            "ALL",
                            "SUPERUSERS"
                        ],
                        "example": "Example allow_recursive_deletion"
                    },
                    "audit_log_format": {
                        "type": "string",
                        "description": "Determines the audit log format.",
                        "enum": [
                            "DETAILED",
                            "BRIEF",
                            "WAPI_DETAILED"
                        ],
                        "example": "Example audit_log_format"
                    },
                    "audit_to_syslog_enable": {
                        "type": "boolean",
                        "description": "If set to True, audit log messages are also copied to the syslog.",
                        "example": false
                    },
                    "automated_traffic_capture_setting": {
                        "$ref": "#/components/schemas/GridAutomatedTrafficCaptureSetting"
                    },
                    "consent_banner_setting": {
                        "$ref": "#/components/schemas/GridConsentBannerSetting"
                    },
                    "csp_api_config": {
                        "$ref": "#/components/schemas/GridCspApiConfig"
                    },
                    "csp_grid_setting": {
                        "$ref": "#/components/schemas/GridCspGridSetting"
                    },
                    "deny_mgm_snapshots": {
                        "type": "boolean",
                        "description": "If set to True, the managed Grid will not send snapshots to the Multi-Grid Master.",
                        "example": false
                    },
                    "descendants_action": {
                        "$ref": "#/components/schemas/GridDescendantsAction"
                    },
                    "dns_resolver_setting": {
                        "$ref": "#/components/schemas/GridDnsResolverSetting"
                    },
                    "dscp": {
                        "type": "integer",
                        "description": "The DSCP value. Valid values are integers between 0 and 63 inclusive.",
                        "format": "int64",
                        "example": 1
                    },
                    "email_setting": {
                        "$ref": "#/components/schemas/GridEmailSetting"
                    },
                    "enable_federation": {
                        "type": "boolean",
                        "description": "Determines if the federation feature is enabled or not. Test Setting will be performed for any change in enable_federation.",
                        "example": false
                    },
                    "enable_force_sync_join_token_to_gmc": {
                        "type": "boolean",
                        "description": "Determines if the force sync join token from GM to GMC is enabled or not.",
                        "example": false
                    },
                    "enable_gui_api_for_lan_vip": {
                        "type": "boolean",
                        "description": "If set to True, GUI and API access are enabled on the LAN/VIP port and MGMT port (if configured).",
                        "example": false
                    },
                    "enable_lom": {
                        "type": "boolean",
                        "description": "Determines if the LOM functionality is enabled or not.",
                        "example": false
                    },
                    "enable_member_redirect": {
                        "type": "boolean",
                        "description": "Determines redirections is enabled or not for members.",
                        "example": false
                    },
                    "enable_recycle_bin": {
                        "type": "boolean",
                        "description": "Determines if the Recycle Bin is enabled or not.",
                        "example": false
                    },
                    "enable_rir_swip": {
                        "type": "boolean",
                        "description": "Determines if the RIR/SWIP support is enabled or not.",
                        "example": false
                    },
                    "external_syslog_backup_servers": {
                        "type": "array",
                        "description": "The list of external backup syslog servers.",
                        "enum": [
                            "extsyslogbackupserver"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/GridExternalSyslogBackupServers"
                        }
                    },
                    "external_syslog_server_enable": {
                        "type": "boolean",
                        "description": "If set to True, external syslog servers are enabled.",
                        "example": false
                    },
                    "http_proxy_server_setting": {
                        "$ref": "#/components/schemas/GridHttpProxyServerSetting"
                    },
                    "informational_banner_setting": {
                        "$ref": "#/components/schemas/GridInformationalBannerSetting"
                    },
                    "is_grid_visualization_visible": {
                        "type": "boolean",
                        "description": "If set to True, graphical visualization of the Grid is enabled.",
                        "example": false
                    },
                    "lockout_setting": {
                        "$ref": "#/components/schemas/GridLockoutSetting"
                    },
                    "lom_users": {
                        "type": "array",
                        "description": "The list of LOM users.",
                        "enum": [
                            "lomuser"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/GridLomUsers"
                        }
                    },
                    "mgm_strict_delegate_mode": {
                        "type": "boolean",
                        "description": "Determines if strict delegate mode for the Grid managed by the Master Grid is enabled or not.",
                        "example": false
                    },
                    "ms_setting": {
                        "$ref": "#/components/schemas/GridMsSetting"
                    },
                    "name": {
                        "type": "string",
                        "description": "The grid name.",
                        "example": "Example name"
                    },
                    "nat_groups": {
                        "type": "array",
                        "description": "The list of all Network Address Translation (NAT) groups configured on the Grid.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "ntp_setting": {
                        "$ref": "#/components/schemas/GridNtpSetting"
                    },
                    "objects_changes_tracking_setting": {
                        "$ref": "#/components/schemas/GridObjectsChangesTrackingSetting"
                    },
                    "password_setting": {
                        "$ref": "#/components/schemas/GridPasswordSetting"
                    },
                    "restart_banner_setting": {
                        "$ref": "#/components/schemas/GridRestartBannerSetting"
                    },
                    "restart_status": {
                        "type": "string",
                        "description": "The restart status for the Grid.",
                        "readOnly": true,
                        "example": "Example restart_status"
                    },
                    "rpz_hit_rate_interval": {
                        "type": "integer",
                        "description": "The time interval (in seconds) that determines how often the appliance calculates the RPZ hit rate.",
                        "format": "int64",
                        "example": 1
                    },
                    "rpz_hit_rate_max_query": {
                        "type": "integer",
                        "description": "The maximum number of incoming queries between the RPZ hit rate checks.",
                        "format": "int64",
                        "example": 1
                    },
                    "rpz_hit_rate_min_query": {
                        "type": "integer",
                        "description": "The minimum number of incoming queries between the RPZ hit rate checks.",
                        "format": "int64",
                        "example": 1
                    },
                    "scheduled_backup": {
                        "$ref": "#/components/schemas/GridScheduledBackup"
                    },
                    "secret": {
                        "type": "string",
                        "description": "The shared secret of the Grid. This is a write-only attribute.",
                        "writeOnly": true,
                        "example": "Example secret"
                    },
                    "security_banner_setting": {
                        "$ref": "#/components/schemas/GridSecurityBannerSetting"
                    },
                    "security_setting": {
                        "$ref": "#/components/schemas/GridSecuritySetting"
                    },
                    "service_status": {
                        "type": "string",
                        "description": "Determines overall service status of the Grid.",
                        "enum": [
                            "FAILED",
                            "UNKNOWN",
                            "OFFLINE",
                            "INACTIVE",
                            "WARNING",
                            "WORKING"
                        ],
                        "readOnly": true,
                        "example": "Example service_status"
                    },
                    "snmp_setting": {
                        "$ref": "#/components/schemas/GridSnmpSetting"
                    },
                    "support_bundle_download_timeout": {
                        "type": "integer",
                        "description": "Support bundle download timeout in seconds.",
                        "format": "int64",
                        "example": 1
                    },
                    "syslog_facility": {
                        "type": "string",
                        "description": "If 'audit_to_syslog_enable' is set to True, the facility that determines the processes and daemons from which the log messages are generated.",
                        "enum": [
                            "DAEMON",
                            "LOCAL0",
                            "LOCAL1",
                            "LOCAL2",
                            "LOCAL3",
                            "LOCAL4",
                            "LOCAL5",
                            "LOCAL6",
                            "LOCAL7"
                        ],
                        "example": "Example syslog_facility"
                    },
                    "syslog_servers": {
                        "type": "array",
                        "description": "The list of external syslog servers.",
                        "enum": [
                            "syslogserver"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/GridSyslogServers"
                        }
                    },
                    "syslog_size": {
                        "type": "integer",
                        "description": "The maximum size for the syslog file expressed in megabytes.",
                        "format": "int64",
                        "example": 1
                    },
                    "threshold_traps": {
                        "type": "array",
                        "description": "Determines the list of threshold traps. The user can only change the values for each trap or remove traps.",
                        "enum": [
                            "thresholdtrap"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/GridThresholdTraps"
                        }
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone of the Grid. The UTC string that represents the time zone, such as \"US/Eastern\".",
                        "example": "Example time_zone"
                    },
                    "token_usage_delay": {
                        "type": "integer",
                        "description": "The delayed usage (in minutes) of a permission token.",
                        "format": "int64",
                        "example": 1
                    },
                    "traffic_capture_auth_dns_setting": {
                        "$ref": "#/components/schemas/GridTrafficCaptureAuthDnsSetting"
                    },
                    "traffic_capture_chr_setting": {
                        "$ref": "#/components/schemas/GridTrafficCaptureChrSetting"
                    },
                    "traffic_capture_qps_setting": {
                        "$ref": "#/components/schemas/GridTrafficCaptureQpsSetting"
                    },
                    "traffic_capture_rec_dns_setting": {
                        "$ref": "#/components/schemas/GridTrafficCaptureRecDnsSetting"
                    },
                    "traffic_capture_rec_queries_setting": {
                        "$ref": "#/components/schemas/GridTrafficCaptureRecQueriesSetting"
                    },
                    "trap_notifications": {
                        "type": "array",
                        "description": "Determines configuration of the trap notifications.",
                        "enum": [
                            "trapnotification"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/GridTrapNotifications"
                        }
                    },
                    "updates_download_member_config": {
                        "type": "array",
                        "description": "The list of member configuration structures, which provides information and settings for configuring the member that is responsible for downloading updates.",
                        "enum": [
                            "updatesdownloadmemberconfig"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/GridUpdatesDownloadMemberConfig"
                        }
                    },
                    "vpn_port": {
                        "type": "integer",
                        "description": "The VPN port.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "GridAutomatedTrafficCaptureSetting": {
                "type": "object",
                "properties": {
                    "traffic_capture_enable": {
                        "type": "boolean",
                        "description": "Enable automated traffic capture based on monitoring thresholds.",
                        "example": false
                    },
                    "destination": {
                        "type": "string",
                        "description": "Destination of traffic capture files. Save traffic capture locally or upload to remote server using FTP or SCP.",
                        "enum": [
                            "NONE",
                            "FTP",
                            "SCP"
                        ],
                        "example": "Example destination"
                    },
                    "duration": {
                        "type": "integer",
                        "description": "The time interval on which traffic will be captured(in sec).",
                        "format": "int64",
                        "example": 1
                    },
                    "include_support_bundle": {
                        "type": "boolean",
                        "description": "Enable automatic download for support bundle.",
                        "example": false
                    },
                    "keep_local_copy": {
                        "type": "boolean",
                        "description": "Save traffic capture files locally.",
                        "example": false
                    },
                    "destination_host": {
                        "type": "string",
                        "description": "IP Address of the destination host.",
                        "example": "Example destination_host"
                    },
                    "traffic_capture_directory": {
                        "type": "string",
                        "description": "Directory to store the traffic capture files on the remote server.",
                        "example": "Example traffic_capture_directory"
                    },
                    "support_bundle_directory": {
                        "type": "string",
                        "description": "Directory to store the support bundle on the remote server.",
                        "example": "Example support_bundle_directory"
                    },
                    "username": {
                        "type": "string",
                        "description": "User name for accessing the FTP/SCP server.",
                        "example": "Example username"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password for accessing the FTP/SCP server. This field is not readable.",
                        "writeOnly": true,
                        "example": "Example password"
                    }
                }
            },
            "GridConsentBannerSetting": {
                "type": "object",
                "properties": {
                    "enable": {
                        "type": "boolean",
                        "description": "Determines whether the consent banner is enabled.",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "description": "The message included in the consent banner.",
                        "example": "Example message"
                    }
                }
            },
            "GridCspApiConfig": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "The url for the CspApiConfig.",
                        "readOnly": true,
                        "example": "Example url"
                    },
                    "username": {
                        "type": "string",
                        "description": "The user name for the CspApiConfig.",
                        "example": "Example username"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password for the CspApiConfig.",
                        "writeOnly": true,
                        "example": "Example password"
                    }
                }
            },
            "GridCspGridSetting": {
                "type": "object",
                "properties": {
                    "csp_join_token": {
                        "type": "string",
                        "description": "Join token required to connect to a cluster",
                        "example": "Example csp_join_token"
                    },
                    "csp_dns_resolver": {
                        "type": "string",
                        "description": "IP address of DNS resolver in DFP",
                        "example": "Example csp_dns_resolver"
                    },
                    "csp_https_proxy": {
                        "type": "string",
                        "description": "HTTP Proxy IP address of CSP Portal",
                        "example": "Example csp_https_proxy"
                    }
                }
            },
            "GridDescendantsAction": {
                "type": "object",
                "properties": {
                    "option_with_ea": {
                        "type": "string",
                        "description": "This option describes which action must be taken if the extensible attribute exists for both the parent and descendant objects: * INHERIT: inherit the extensible attribute from the parent object. * RETAIN: retain the value of an extensible attribute that was set for the child object. * CONVERT: the value of the extensible attribute must be copied from the parent object.",
                        "enum": [
                            "RETAIN",
                            "CONVERT",
                            "INHERIT"
                        ],
                        "example": "Example option_with_ea"
                    },
                    "option_without_ea": {
                        "type": "string",
                        "description": "This option describes which action must be taken if the extensible attribute exists for the parent, but is absent from the descendant object: * INHERIT: inherit the extensible attribute from the parent object. * NOT_INHERIT: do nothing.",
                        "enum": [
                            "INHERIT",
                            "NOT_INHERIT"
                        ],
                        "example": "Example option_without_ea"
                    },
                    "option_delete_ea": {
                        "type": "string",
                        "description": "This option describes which action must be taken if the extensible attribute exists for the descendant, but is absent for the parent object: * RETAIN: retain the extensible attribute value for the descendant object. * REMOVE: remove this extensible attribute from the descendant object.",
                        "enum": [
                            "RETAIN",
                            "REMOVE"
                        ],
                        "example": "Example option_delete_ea"
                    }
                }
            },
            "GridDnsResolverSetting": {
                "type": "object",
                "properties": {
                    "resolvers": {
                        "type": "array",
                        "description": "The resolvers of a Grid member. The Grid member sends queries to the first name server address in the list. The second name server address is used if first one does not response.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "search_domains": {
                        "type": "array",
                        "description": "The Search Domain Group, which is a group of domain names that the Infoblox device can add to partial queries that do not specify a domain name. Note that you can set this parameter only when prefer_resolver or alternate_resolver is set.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "GridEmailSetting": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Determines if email notification is enabled or not.",
                        "example": false
                    },
                    "from_address": {
                        "type": "string",
                        "description": "The email address of a Grid Member for 'from' field in notification.",
                        "example": "Example from_address"
                    },
                    "address": {
                        "type": "string",
                        "description": "The notification email address of a Grid member.",
                        "example": "Example address"
                    },
                    "relay_enabled": {
                        "type": "boolean",
                        "description": "Determines if email relay is enabled or not.",
                        "example": false
                    },
                    "relay": {
                        "type": "string",
                        "description": "The relay name or IP address.",
                        "example": "Example relay"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password to validate from address",
                        "writeOnly": true,
                        "example": "Example password"
                    },
                    "smtps": {
                        "type": "boolean",
                        "description": "SMTP over TLS",
                        "example": false
                    },
                    "port_number": {
                        "type": "integer",
                        "description": "SMTP port number",
                        "format": "int64",
                        "example": 1
                    },
                    "use_authentication": {
                        "type": "boolean",
                        "description": "Enable or disable SMTP auth",
                        "example": false
                    }
                }
            },
            "GridExternalSyslogBackupServers": {
                "type": "object",
                "properties": {
                    "address_or_fqdn": {
                        "type": "string",
                        "description": "The IPv4 or IPv6 address or FQDN of the backup syslog server.",
                        "example": "Example address_or_fqdn"
                    },
                    "directory_path": {
                        "type": "string",
                        "description": "The directory path for the replication of the rotated syslog files.",
                        "example": "Example directory_path"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "If set to True, the syslog backup server is enabled.",
                        "example": false
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the backup syslog server.",
                        "writeOnly": true,
                        "example": "Example password"
                    },
                    "port": {
                        "type": "integer",
                        "description": "The port used to connect to the backup syslog server.",
                        "format": "int64",
                        "example": 1
                    },
                    "protocol": {
                        "type": "string",
                        "description": "The transport protocol used to connect to the backup syslog server.",
                        "enum": [
                            "FTP",
                            "SCP"
                        ],
                        "example": "Example protocol"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username of the backup syslog server.",
                        "example": "Example username"
                    }
                }
            },
            "GridHttpProxyServerSetting": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address of the HTTP proxy server.",
                        "example": "Example address"
                    },
                    "port": {
                        "type": "integer",
                        "description": "The port on which the HTTP proxy server listens.",
                        "format": "int64",
                        "example": 1
                    },
                    "enable_proxy": {
                        "type": "boolean",
                        "description": "Determines if the HTTP proxy server is enabled or not.",
                        "example": false
                    },
                    "enable_content_inspection": {
                        "type": "boolean",
                        "description": "Determines if HTTPS content inspection by the HTTP proxy server is enabled or not.",
                        "example": false
                    },
                    "verify_cname": {
                        "type": "boolean",
                        "description": "Determines if the CNAME record query verification is enabled or not.",
                        "example": false
                    },
                    "comment": {
                        "type": "string",
                        "description": "The descriptive comment for the HTTP proxy server configuration.",
                        "example": "Example comment"
                    },
                    "username": {
                        "type": "string",
                        "description": "The user name for the HTTP proxy server.",
                        "example": "Example username"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password for the HTTP proxy server.",
                        "writeOnly": true,
                        "example": "Example password"
                    },
                    "certificate": {
                        "type": "string",
                        "description": "The token returned by the uploadinit function call in object fileop for the CA certificate file used in the content inspection by an HTTP proxy server.",
                        "writeOnly": true,
                        "example": "Example certificate"
                    },
                    "enable_username_and_password": {
                        "type": "boolean",
                        "description": "Determines if username and password for HTTP Proxy Server connectivity is used or not.",
                        "example": false
                    }
                }
            },
            "GridInformationalBannerSetting": {
                "type": "object",
                "properties": {
                    "enable": {
                        "type": "boolean",
                        "description": "Determines whether the display of the informational level banner is enabled.",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "description": "The message included in the informational level banner.",
                        "example": "Example message"
                    },
                    "color": {
                        "type": "string",
                        "description": "The color for the informational level banner.",
                        "enum": [
                            "GREEN",
                            "BLACK",
                            "BLUE",
                            "BROWN",
                            "CYAN",
                            "MAGENTA",
                            "ORANGE",
                            "PURPLE",
                            "RED",
                            "YELLOW"
                        ],
                        "example": "Example color"
                    }
                }
            },
            "GridLockoutSetting": {
                "type": "object",
                "properties": {
                    "enable_sequential_failed_login_attempts_lockout": {
                        "type": "boolean",
                        "description": "Enable/disable sequential failed login attempts lockout for local users",
                        "example": false
                    },
                    "sequential_attempts": {
                        "type": "integer",
                        "description": "The number of failed login attempts",
                        "format": "int64",
                        "example": 1
                    },
                    "failed_lockout_duration": {
                        "type": "integer",
                        "description": "Time period the account remains locked after sequential failed login attempt lockout.",
                        "format": "int64",
                        "example": 1
                    },
                    "never_unlock_user": {
                        "type": "boolean",
                        "description": "Never unlock option is also provided and if set then user account is locked forever and only super user can unlock this account",
                        "example": false
                    }
                }
            },
            "GridLomUsers": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The LOM user name.",
                        "example": "Example name"
                    },
                    "password": {
                        "type": "string",
                        "description": "The LOM user password.",
                        "writeOnly": true,
                        "example": "Example password"
                    },
                    "role": {
                        "type": "string",
                        "description": "The LOM user role which specifies the list of actions that are allowed for the user.",
                        "enum": [
                            "OPERATOR",
                            "USER"
                        ],
                        "example": "Example role"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines whether the LOM user is disabled.",
                        "example": false
                    },
                    "comment": {
                        "type": "string",
                        "description": "The descriptive comment for the LOM user.",
                        "example": "Example comment"
                    }
                }
            },
            "GridMsSetting": {
                "type": "object",
                "properties": {
                    "log_destination": {
                        "type": "string",
                        "description": "The logging of synchronization messages to the syslog or mslog.",
                        "enum": [
                            "SYSLOG",
                            "MSLOG"
                        ],
                        "example": "Example log_destination"
                    },
                    "enable_invalid_mac": {
                        "type": "boolean",
                        "description": "Determines if the invalid MAC address synchronization for DHCP leases and fixed addresses is enabled or not.",
                        "example": false
                    },
                    "max_connection": {
                        "type": "integer",
                        "description": "Determines the maximum number of connections to Microsoft servers.",
                        "format": "int64",
                        "example": 1
                    },
                    "rpc_timeout": {
                        "type": "integer",
                        "description": "Determines the timeout value (in seconds) for RPC connections to all Microsoft servers.",
                        "format": "int64",
                        "example": 1
                    },
                    "enable_dhcp_monitoring": {
                        "type": "boolean",
                        "description": "Determines if the monitoring and control of DHCP service on all Microsoft servers in the Grid is enabled or not.",
                        "example": false
                    },
                    "enable_dns_monitoring": {
                        "type": "boolean",
                        "description": "Determines if the monitoring and control of DNS service on all Microsoft servers in the Grid is enabled or not.",
                        "example": false
                    },
                    "ldap_timeout": {
                        "type": "integer",
                        "description": "Determines an LDAP connection timeout interval (in seconds) for all Microsoft servers.",
                        "format": "int64",
                        "example": 1
                    },
                    "default_ip_site_link": {
                        "type": "string",
                        "description": "The default IP site link for sites created on NIOS for all Microsoft servers.",
                        "example": "Example default_ip_site_link"
                    },
                    "enable_network_users": {
                        "type": "boolean",
                        "description": "Determines if the Network Users creation is enabled or not.",
                        "example": false
                    },
                    "enable_ad_user_sync": {
                        "type": "boolean",
                        "description": "Determines if Active Directory user synchronization for all Microsoft servers in the Grid is enabled or not.",
                        "example": false
                    },
                    "ad_user_default_timeout": {
                        "type": "integer",
                        "description": "Determines the default timeout value (in seconds) for Active Directory user synchronization for all Microsoft servers.",
                        "format": "int64",
                        "example": 1
                    },
                    "enable_dns_reports_sync": {
                        "type": "boolean",
                        "description": "Determines if synchronization of DNS reporting data from all Microsoft servers in the Grid is enabled or not.",
                        "example": false
                    }
                }
            },
            "GridNtpSetting": {
                "type": "object",
                "properties": {
                    "enable_ntp": {
                        "type": "boolean",
                        "description": "Determines whether NTP is enabled on the Grid.",
                        "example": false
                    },
                    "ntp_servers": {
                        "description": "The list of NTP servers configured on a Grid.",
                        "enum": [
                            "ntpserver"
                        ],
                        "$ref": "#/components/schemas/GridntpsettingNtpServers"
                    },
                    "ntp_keys": {
                        "description": "The list of NTP authentication keys used to authenticate NTP clients.",
                        "enum": [
                            "ntpkey"
                        ],
                        "$ref": "#/components/schemas/GridntpsettingNtpKeys"
                    },
                    "ntp_acl": {
                        "description": "The NTP access control settings.",
                        "enum": [
                            "ntpaccess"
                        ],
                        "$ref": "#/components/schemas/GridntpsettingNtpAcl"
                    },
                    "ntp_kod": {
                        "type": "boolean",
                        "description": "Determines whether the Kiss-o'-Death packets are enabled.",
                        "example": false
                    },
                    "gm_local_ntp_stratum": {
                        "type": "integer",
                        "description": "Grid level GM local NTP stratum.",
                        "format": "int64",
                        "example": 1
                    },
                    "local_ntp_stratum": {
                        "type": "integer",
                        "description": "Local NTP stratum for non-GM members.",
                        "format": "int64",
                        "example": 1
                    },
                    "use_default_stratum": {
                        "type": "boolean",
                        "description": "This flag controls whether gm_local_ntp_stratum value be set to a default value",
                        "example": false
                    }
                }
            },
            "GridntpsettingNtpServers": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The NTP server IP address or FQDN.",
                        "example": "Example address"
                    },
                    "enable_authentication": {
                        "type": "boolean",
                        "description": "Determines whether the NTP authentication is enabled.",
                        "example": false
                    },
                    "ntp_key_number": {
                        "type": "integer",
                        "description": "The NTP authentication key number.",
                        "format": "int64",
                        "example": 1
                    },
                    "preferred": {
                        "type": "boolean",
                        "description": "Determines whether the NTP server is a preferred one or not.",
                        "example": false
                    },
                    "burst": {
                        "type": "boolean",
                        "description": "Determines whether the BURST operation mode is enabled. In BURST operating mode, when the external server is reachable and a valid source of synchronization is available, NTP sends a burst of 8 packets with a 2 second interval between packets.",
                        "example": false
                    },
                    "iburst": {
                        "type": "boolean",
                        "description": "Determines whether the IBURST operation mode is enabled. In IBURST operating mode, when the external server is unreachable, NTP server sends a burst of 8 packets with a 2 second interval between packets.",
                        "example": false
                    }
                }
            },
            "GridntpsettingNtpKeys": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "integer",
                        "description": "The NTP authentication key identifier.",
                        "format": "int64",
                        "example": 1
                    },
                    "string": {
                        "type": "string",
                        "description": "The NTP authentication key string.",
                        "example": "Example string"
                    },
                    "type": {
                        "type": "string",
                        "description": "The NTP authentication key type.",
                        "enum": [
                            "MD5_ASCII",
                            "DES_HEX",
                            "DES_ASCII",
                            "DES_NTP",
                            "SHA1_ASCII"
                        ],
                        "example": "Example type"
                    }
                }
            },
            "GridntpsettingNtpAcl": {
                "type": "object",
                "properties": {
                    "acl_type": {
                        "type": "string",
                        "description": "The NTP access control list type.",
                        "enum": [
                            "LIST",
                            "NAMED_ACL",
                            "NONE"
                        ],
                        "example": "Example acl_type"
                    },
                    "ac_list": {
                        "description": "The list of NTP access control items.",
                        "enum": [
                            "ntpac"
                        ],
                        "$ref": "#/components/schemas/GridntpsettingntpaclAcList"
                    },
                    "named_acl": {
                        "type": "string",
                        "description": "The NTP access named ACL.",
                        "example": "Example named_acl"
                    },
                    "service": {
                        "type": "string",
                        "description": "The type of service with access control for the assigned named ACL.",
                        "enum": [
                            "TIME",
                            "TIME_AND_NTPQ"
                        ],
                        "example": "Example service"
                    }
                }
            },
            "GridntpsettingntpaclAcList": {
                "type": "object",
                "properties": {
                    "address_ac": {
                        "description": "The client address/network with access control.",
                        "enum": [
                            "addressac"
                        ],
                        "$ref": "#/components/schemas/GridntpsettingntpaclaclistAddressAc"
                    },
                    "service": {
                        "type": "string",
                        "description": "The type of service with access control.",
                        "enum": [
                            "TIME",
                            "TIME_AND_NTPQ"
                        ],
                        "example": "Example service"
                    }
                }
            },
            "GridntpsettingntpaclaclistAddressAc": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address this rule applies to or \"Any\".",
                        "example": "Example address"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to use for this address.",
                        "enum": [
                            "ALLOW",
                            "DENY"
                        ],
                        "example": "Example permission"
                    }
                }
            },
            "GridObjectsChangesTrackingSetting": {
                "type": "object",
                "properties": {
                    "enable": {
                        "type": "boolean",
                        "description": "Determines whether the objects changes tracking feature is enabled or not.",
                        "example": false
                    },
                    "enable_completion": {
                        "type": "integer",
                        "description": "Determines the percentage of completion for objects changes tracking.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "state": {
                        "type": "string",
                        "description": "Determines the objects changes tracking enable state.",
                        "enum": [
                            "ENABLING",
                            "ENABLED",
                            "DISABLED",
                            "ENABLING_ERROR"
                        ],
                        "readOnly": true,
                        "example": "Example state"
                    },
                    "max_time_to_track": {
                        "type": "integer",
                        "description": "Maximum time period in seconds to track the deleted objects changes. You can enter a value from 7200 - 604800 seconds.",
                        "format": "int64",
                        "example": 1
                    },
                    "max_objs_to_track": {
                        "type": "integer",
                        "description": "Maximum number of deleted objects retained for tracking. You can enter a value from 2000 - 20000.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "GridPasswordSetting": {
                "type": "object",
                "properties": {
                    "password_min_length": {
                        "type": "integer",
                        "description": "The minimum length of the password.",
                        "format": "int64",
                        "example": 1
                    },
                    "num_lower_char": {
                        "type": "integer",
                        "description": "The minimum number of lowercase characters.",
                        "format": "int64",
                        "example": 1
                    },
                    "num_upper_char": {
                        "type": "integer",
                        "description": "The minimum number of uppercase characters.",
                        "format": "int64",
                        "example": 1
                    },
                    "num_numeric_char": {
                        "type": "integer",
                        "description": "The minimum number of numeric characters.",
                        "format": "int64",
                        "example": 1
                    },
                    "num_symbol_char": {
                        "type": "integer",
                        "description": "The minimum number of symbol characters. The allowed characters are ! @ # $ % ^ & * ( ).",
                        "format": "int64",
                        "example": 1
                    },
                    "chars_to_change": {
                        "type": "integer",
                        "description": "The minimum number of characters that must be changed when revising an admin password.",
                        "format": "int64",
                        "example": 1
                    },
                    "expire_days": {
                        "type": "integer",
                        "description": "The number of days of the password expiration period (if enabled).",
                        "format": "int64",
                        "example": 1
                    },
                    "reminder_days": {
                        "type": "integer",
                        "description": "The number of days before the password expiration date when the appliance sends a reminder.",
                        "format": "int64",
                        "example": 1
                    },
                    "force_reset_enable": {
                        "type": "boolean",
                        "description": "If set to True, all new users must change their passwords when they first log in to the system, and existing users must change the passwords that were just reset.",
                        "example": false
                    },
                    "expire_enable": {
                        "type": "boolean",
                        "description": "If set to True, password expiration is enabled.",
                        "example": false
                    },
                    "history_enable": {
                        "type": "boolean",
                        "description": "Enable/disable the password history.",
                        "example": false
                    },
                    "num_passwords_saved": {
                        "type": "integer",
                        "description": "Number of saved passwords if password history is enabled. Can be set between 1 to 20.",
                        "format": "int64",
                        "example": 1
                    },
                    "min_password_age": {
                        "type": "integer",
                        "description": "Minimum password age in days before password can be updated. Can be set between 1 to 9998 days.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "GridRestartBannerSetting": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "If set to True, the restart banner is enabled.",
                        "example": false
                    },
                    "enable_double_confirmation": {
                        "type": "boolean",
                        "description": "If set to True, the user is required to input name before restarting the services.",
                        "example": false
                    }
                }
            },
            "GridScheduledBackup": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "The status of the scheduled backup.",
                        "enum": [
                            "IDLE",
                            "ROLL",
                            "ROLLED",
                            "TRIGGERED",
                            "SCHEDULING",
                            "IN_PROGRESS",
                            "FINISHED",
                            "FAILED",
                            "ABORTED"
                        ],
                        "readOnly": true,
                        "example": "Example status"
                    },
                    "execute": {
                        "type": "string",
                        "description": "The state for scheduled backup or restore operation.",
                        "enum": [
                            "TRIGGER"
                        ],
                        "writeOnly": true,
                        "example": "Example execute"
                    },
                    "operation": {
                        "type": "string",
                        "description": "The scheduled backup operation.",
                        "enum": [
                            "NONE",
                            "BACKUP",
                            "RESTORE"
                        ],
                        "example": "Example operation"
                    },
                    "backup_type": {
                        "type": "string",
                        "description": "The destination of the backup files.",
                        "enum": [
                            "LOCAL",
                            "TFTP",
                            "FTP",
                            "SCP"
                        ],
                        "example": "Example backup_type"
                    },
                    "keep_local_copy": {
                        "type": "boolean",
                        "description": "Determines whether the local backup performed before uploading backup to remote storage.",
                        "example": false
                    },
                    "backup_frequency": {
                        "type": "string",
                        "description": "The frequency of backups.",
                        "enum": [
                            "WEEKLY",
                            "DAILY",
                            "HOURLY"
                        ],
                        "example": "Example backup_frequency"
                    },
                    "weekday": {
                        "type": "string",
                        "description": "The day of the week when the backup is performed.",
                        "enum": [
                            "SATURDAY",
                            "SUNDAY",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY"
                        ],
                        "example": "Example weekday"
                    },
                    "hour_of_day": {
                        "type": "integer",
                        "description": "The hour of the day past 12:00 AM the backup is performed.",
                        "format": "int64",
                        "example": 1
                    },
                    "minutes_past_hour": {
                        "type": "integer",
                        "description": "The minute of the hour when the backup is performed.",
                        "format": "int64",
                        "example": 1
                    },
                    "username": {
                        "type": "string",
                        "description": "The user name on the backup server.",
                        "example": "Example username"
                    },
                    "password": {
                        "type": "string",
                        "description": "The user password on the backup server.",
                        "writeOnly": true,
                        "example": "Example password"
                    },
                    "backup_server": {
                        "type": "string",
                        "description": "The IP address of the backup server.",
                        "example": "Example backup_server"
                    },
                    "path": {
                        "type": "string",
                        "description": "The directory path to the backup file stored on the server.",
                        "example": "Example path"
                    },
                    "restore_type": {
                        "type": "string",
                        "description": "The destination of the restore files.",
                        "enum": [
                            "FTP",
                            "SCP"
                        ],
                        "example": "Example restore_type"
                    },
                    "restore_server": {
                        "type": "string",
                        "description": "The IP address of the restore server.",
                        "example": "Example restore_server"
                    },
                    "restore_username": {
                        "type": "string",
                        "description": "The user name on the restore server.",
                        "example": "Example restore_username"
                    },
                    "restore_password": {
                        "type": "string",
                        "description": "The password on the restore server.",
                        "writeOnly": true,
                        "example": "Example restore_password"
                    },
                    "restore_path": {
                        "type": "string",
                        "description": "The directory path to the restored file on the server.",
                        "example": "Example restore_path"
                    },
                    "nios_data": {
                        "type": "boolean",
                        "description": "Determines whether the restore of the NIOS data is enabled.",
                        "example": false
                    },
                    "discovery_data": {
                        "type": "boolean",
                        "description": "Determines whether the restore the NetMRI data is enabled.",
                        "example": false
                    },
                    "splunk_app_data": {
                        "type": "boolean",
                        "description": "Determines whether the restore of the Splunk application data is enabled.",
                        "example": false
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Determines whether the scheduled backup is enabled.",
                        "example": false
                    },
                    "use_keys": {
                        "type": "boolean",
                        "description": "If set, scp backup support based on keys",
                        "example": false
                    },
                    "key_type": {
                        "type": "string",
                        "description": "If set, scp backup support based on keys type",
                        "enum": [
                            "id_rsa",
                            "id_ecdsa"
                        ],
                        "writeOnly": true,
                        "example": "Example key_type"
                    },
                    "upload_keys": {
                        "type": "boolean",
                        "description": "If set, scp backup support to upload keys",
                        "example": false
                    },
                    "download_keys": {
                        "type": "boolean",
                        "description": "If set, scp backup support to download keys",
                        "example": false
                    }
                }
            },
            "GridSecurityBannerSetting": {
                "type": "object",
                "properties": {
                    "color": {
                        "type": "string",
                        "description": "The security level color.",
                        "enum": [
                            "BLACK",
                            "BLUE",
                            "BROWN",
                            "CYAN",
                            "GREEN",
                            "MAGENTA",
                            "ORANGE",
                            "PURPLE",
                            "RED",
                            "YELLOW"
                        ],
                        "example": "Example color"
                    },
                    "level": {
                        "type": "string",
                        "description": "The security level.",
                        "enum": [
                            "CONFIDENTIAL",
                            "RESTRICTED",
                            "SECRET",
                            "TOP_SECRET",
                            "UNCLASSIFIED"
                        ],
                        "example": "Example level"
                    },
                    "message": {
                        "type": "string",
                        "description": "The classification message to be displayed.",
                        "example": "Example message"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "If set to True, the security banner will be displayed on the header and footer of the Grid Manager screen, including the Login screen.",
                        "example": false
                    }
                }
            },
            "GridSecuritySetting": {
                "type": "object",
                "properties": {
                    "audit_log_rolling_enable": {
                        "type": "boolean",
                        "description": "If set to True, rolling of audit logs is enabled.",
                        "example": false
                    },
                    "admin_access_items": {
                        "description": "A list of access control settings used for security access.",
                        "enum": [
                            "addressac"
                        ],
                        "$ref": "#/components/schemas/GridsecuritysettingAdminAccessItems"
                    },
                    "http_redirect_enable": {
                        "type": "boolean",
                        "description": "If set to True, HTTP connections are redirected to HTTPS.",
                        "example": false
                    },
                    "login_banner_enable": {
                        "type": "boolean",
                        "description": "If set to True, the login banner is enabled.",
                        "example": false
                    },
                    "login_banner_text": {
                        "type": "string",
                        "description": "The login banner text.",
                        "example": "Example login_banner_text"
                    },
                    "remote_console_access_enable": {
                        "type": "boolean",
                        "description": "If set to True, superuser admins can access the Infoblox CLI from a remote location using an SSH (Secure Shell) v2 client.",
                        "example": false
                    },
                    "security_access_enable": {
                        "type": "boolean",
                        "description": "If set to True, HTTP access restrictions are enabled.",
                        "example": false
                    },
                    "security_access_remote_console_enable": {
                        "type": "boolean",
                        "description": "If set to True, remote console access restrictions will be enabled.",
                        "example": false
                    },
                    "session_timeout": {
                        "type": "integer",
                        "description": "The session timeout interval in seconds.",
                        "format": "int64",
                        "example": 1
                    },
                    "ssh_perm_enable": {
                        "type": "boolean",
                        "description": "If set to False, SSH access is permanently disabled.",
                        "readOnly": true,
                        "example": false
                    },
                    "support_access_enable": {
                        "type": "boolean",
                        "description": "If set to True, support access for the Grid has been enabled.",
                        "example": false
                    },
                    "support_access_info": {
                        "type": "string",
                        "description": "Information string to be used for support access requests.",
                        "example": "Example support_access_info"
                    },
                    "disable_concurrent_login": {
                        "type": "boolean",
                        "description": "Whether concurrent login allowed gridlevel",
                        "example": false
                    },
                    "inactivity_lockout_setting": {
                        "description": "The Admin Group security settings.",
                        "enum": [
                            "setting:inactivelockout"
                        ],
                        "$ref": "#/components/schemas/GridsecuritysettingInactivityLockoutSetting"
                    }
                }
            },
            "GridsecuritysettingAdminAccessItems": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address this rule applies to or \"Any\".",
                        "example": "Example address"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to use for this address.",
                        "enum": [
                            "ALLOW",
                            "DENY"
                        ],
                        "example": "Example permission"
                    },
                    "tsig_key": {
                        "type": "string",
                        "description": "A generated TSIG key. If the external primary server is a NIOS appliance running DNS One 2.x code, this can be set to :2xCOMPAT.",
                        "example": "Example tsig_key"
                    },
                    "tsig_key_alg": {
                        "type": "string",
                        "description": "The TSIG key algorithm.",
                        "enum": [
                            "HMAC-MD5",
                            "HMAC-SHA256"
                        ],
                        "example": "Example tsig_key_alg"
                    },
                    "tsig_key_name": {
                        "type": "string",
                        "description": "The name of the TSIG key. If 2.x TSIG compatibility is used, this is set to 'tsig_xfer' on retrieval, and ignored on insert or update.",
                        "example": "Example tsig_key_name"
                    },
                    "use_tsig_key_name": {
                        "type": "boolean",
                        "description": "Use flag for: tsig_key_name",
                        "example": false
                    }
                }
            },
            "GridsecuritysettingInactivityLockoutSetting": {
                "type": "object",
                "properties": {
                    "account_inactivity_lockout_enable": {
                        "type": "boolean",
                        "description": "Enable/disable the account inactivity lockout.",
                        "example": false
                    },
                    "inactive_days": {
                        "type": "integer",
                        "description": "Number of days after which account gets locked out if user does not login.",
                        "format": "int64",
                        "example": 1
                    },
                    "reminder_days": {
                        "type": "integer",
                        "description": "The number of days before the account lockout date when the appliance sends a reminder.",
                        "format": "int64",
                        "example": 1
                    },
                    "reactivate_via_serial_console_enable": {
                        "type": "boolean",
                        "description": "Enable/disable reactivating user account by logging in from serial console.",
                        "example": false
                    },
                    "reactivate_via_remote_console_enable": {
                        "type": "boolean",
                        "description": "Enable/disable reactivating user account by logging in from remote console.",
                        "example": false
                    }
                }
            },
            "GridSnmpSetting": {
                "type": "object",
                "properties": {
                    "engine_id": {
                        "type": "array",
                        "description": "The engine ID of the appliance that manages the SNMP agent.",
                        "enum": [
                            "string"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "queries_community_string": {
                        "type": "string",
                        "description": "The community string for SNMP queries.",
                        "example": "Example queries_community_string"
                    },
                    "queries_enable": {
                        "type": "boolean",
                        "description": "If set to True, SNMP queries are enabled.",
                        "example": false
                    },
                    "snmpv3_queries_enable": {
                        "type": "boolean",
                        "description": "If set to True, SNMPv3 queries are enabled.",
                        "example": false
                    },
                    "snmpv3_queries_users": {
                        "description": "A list of SNMPv3 queries users.",
                        "enum": [
                            "queriesuser"
                        ],
                        "$ref": "#/components/schemas/GridsnmpsettingSnmpv3QueriesUsers"
                    },
                    "snmpv3_traps_enable": {
                        "type": "boolean",
                        "description": "If set to True, SNMPv3 traps are enabled.",
                        "example": false
                    },
                    "syscontact": {
                        "type": "array",
                        "description": "The name of the contact person for the appliance. Second value is applicable only for HA pair. Otherwise second value is ignored.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "sysdescr": {
                        "type": "array",
                        "description": "Useful information about the appliance. Second value is applicable only for HA pair. Otherwise second value is ignored.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "syslocation": {
                        "type": "array",
                        "description": "The physical location of the appliance. Second value is applicable only for HA pair. Otherwise second value is ignored.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "sysname": {
                        "type": "array",
                        "description": "The FQDN (Fully Qualified Domain Name) of the appliance. Second value is applicable only for HA pair. Otherwise second value is ignored.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "trap_receivers": {
                        "description": "A list of trap receivers.",
                        "enum": [
                            "trapreceiver"
                        ],
                        "$ref": "#/components/schemas/GridsnmpsettingTrapReceivers"
                    },
                    "traps_community_string": {
                        "type": "string",
                        "description": "A string the NIOS appliance sends to the management system together with its traps. Note that this community string must match exactly what you enter in the management system.",
                        "example": "Example traps_community_string"
                    },
                    "traps_enable": {
                        "type": "boolean",
                        "description": "If set to True, SNMP traps are enabled.",
                        "example": false
                    }
                }
            },
            "GridsnmpsettingSnmpv3QueriesUsers": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "string",
                        "description": "The SNMPv3 user.",
                        "example": "Example user"
                    },
                    "comment": {
                        "type": "string",
                        "description": "A descriptive comment for this queries user.",
                        "example": "Example comment"
                    }
                }
            },
            "GridsnmpsettingTrapReceivers": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address of the trap receiver.",
                        "example": "Example address"
                    },
                    "user": {
                        "type": "string",
                        "description": "The SNMPv3 user for this trap receiver.",
                        "example": "Example user"
                    },
                    "comment": {
                        "type": "string",
                        "description": "A descriptive comment for this trap receiver.",
                        "example": "Example comment"
                    }
                }
            },
            "GridSyslogServers": {
                "type": "object",
                "properties": {
                    "address_or_fqdn": {
                        "type": "string",
                        "description": "The server address or FQDN.",
                        "example": "Example address_or_fqdn"
                    },
                    "certificate": {
                        "type": "string",
                        "description": "Reference to the underlying X509Certificate object grid:x509certificate.",
                        "readOnly": true,
                        "example": "Example certificate"
                    },
                    "certificate_token": {
                        "type": "string",
                        "description": "The token returned by the uploadinit function call in object fileop.",
                        "writeOnly": true,
                        "example": "Example certificate_token"
                    },
                    "connection_type": {
                        "type": "string",
                        "description": "The connection type for communicating with this server.",
                        "enum": [
                            "TCP",
                            "UDP",
                            "STCP"
                        ],
                        "example": "Example connection_type"
                    },
                    "port": {
                        "type": "integer",
                        "description": "The port this server listens on.",
                        "format": "int64",
                        "example": 1
                    },
                    "local_interface": {
                        "type": "string",
                        "description": "The local interface through which the appliance sends syslog messages to the syslog server.",
                        "enum": [
                            "ANY",
                            "LAN",
                            "MGMT"
                        ],
                        "example": "Example local_interface"
                    },
                    "message_source": {
                        "type": "string",
                        "description": "The source of syslog messages to be sent to the external syslog server. If set to 'INTERNAL', only messages the appliance generates will be sent to the syslog server. If set to 'EXTERNAL', the appliance sends syslog messages that it receives from other devices, such as syslog servers and routers. If set to 'ANY', the appliance sends both internal and external syslog messages.",
                        "enum": [
                            "ANY",
                            "EXTERNAL",
                            "INTERNAL"
                        ],
                        "example": "Example message_source"
                    },
                    "message_node_id": {
                        "type": "string",
                        "description": "Identify the node in the syslog message.",
                        "enum": [
                            "LAN",
                            "MGMT",
                            "HOSTNAME",
                            "IP_HOSTNAME"
                        ],
                        "example": "Example message_node_id"
                    },
                    "severity": {
                        "type": "string",
                        "description": "The severity filter. The appliance sends log messages of the specified severity and above to the external syslog server.",
                        "enum": [
                            "ALERT",
                            "CRIT",
                            "DEBUG",
                            "EMERG",
                            "INFO",
                            "NOTICE",
                            "WARNING"
                        ],
                        "example": "Example severity"
                    },
                    "category_list": {
                        "type": "array",
                        "description": "The list of all syslog logging categories.",
                        "enum": [
                            "NON_CATEGORIZED",
                            "ATP",
                            "DNS_CLIENT",
                            "DNS_CONFIG",
                            "DNS_DATABASE",
                            "DNS_DNSSEC",
                            "DNS_GENERAL",
                            "DNS_LAME_SERVERS",
                            "DNS_NETWORK",
                            "DNS_NOTIFY",
                            "DNS_QUERIES",
                            "DNS_QUERY_REWRITE",
                            "DNS_RESOLVER",
                            "DNS_RESPONSES",
                            "DNS_RPZ",
                            "DNS_SCAVENGING",
                            "DNS_SECURITY",
                            "DNS_UPDATE",
                            "DNS_UPDATE_SECURITY",
                            "DNS_XFER_IN",
                            "DNS_XFER_OUT",
                            "DTC_HEALTHD",
                            "DTC_IDNSD",
                            "DHCPD",
                            "NTP",
                            "FTPD",
                            "TFTPD",
                            "CLOUD_API",
                            "MS_DNS_SERVER",
                            "MS_CONNECT_STATUS",
                            "MS_DNS_ZONE",
                            "MS_DHCP_SERVER",
                            "MS_DHCP_LEASE",
                            "MS_DHCP_CLEAR_LEASE",
                            "MS_SITES",
                            "MS_AD_USERS",
                            "AUTH_COMMON",
                            "AUTH_NON_SYSTEM",
                            "AUTH_UI_API",
                            "AUTH_ACTIVE_DIRECTORY",
                            "AUTH_RADIUS",
                            "AUTH_TACACS",
                            "AUTH_LDAP",
                            "OUTBOUND_API"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "only_category_list": {
                        "type": "boolean",
                        "description": "The list of selected syslog logging categories. The appliance forwards syslog messages that belong to the selected categories.",
                        "example": false
                    }
                }
            },
            "GridThresholdTraps": {
                "type": "object",
                "properties": {
                    "trap_type": {
                        "type": "string",
                        "description": "Determines the type of a given trap.",
                        "enum": [
                            "DBObjects",
                            "Disk",
                            "Memory",
                            "NetworkCapacity",
                            "Rootfs",
                            "Tmpfs",
                            "CpuUsage",
                            "Reporting",
                            "ReportingVolume",
                            "FDUsage",
                            "ExtStorage",
                            "SwapUsage",
                            "TcpUdpFloodAlertRate",
                            "TcpUdpFloodDropRate",
                            "RecursiveClients",
                            "ThreatProtectionTotalTraffic",
                            "ThreatProtectionDroppedTraffic",
                            "FastpathDroppedTraffic",
                            "Fastpathmbuffdepletion",
                            "IPAMUtilization",
                            "RPZHitRate"
                        ],
                        "example": "Example trap_type"
                    },
                    "trap_reset": {
                        "type": "integer",
                        "description": "Determines the threshold value to reset the trap.",
                        "format": "int64",
                        "example": 1
                    },
                    "trap_trigger": {
                        "type": "integer",
                        "description": "Determines the threshold value to trigger the trap.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "GridTrafficCaptureAuthDnsSetting": {
                "type": "object",
                "properties": {
                    "auth_dns_latency_trigger_enable": {
                        "type": "boolean",
                        "description": "Enabling trigger automated traffic capture based on authoritative DNS latency.",
                        "example": false
                    },
                    "auth_dns_latency_threshold": {
                        "type": "integer",
                        "description": "Authoritative DNS latency below which traffic capture will be triggered.",
                        "format": "int64",
                        "example": 1
                    },
                    "auth_dns_latency_reset": {
                        "type": "integer",
                        "description": "Authoritative DNS latency above which traffic capture will stopped.",
                        "format": "int64",
                        "example": 1
                    },
                    "auth_dns_latency_listen_on_source": {
                        "type": "string",
                        "description": "The local IP DNS service is listen on (for authoritative DNS latency trigger).",
                        "enum": [
                            "LAN2_V4",
                            "LAN2_V6",
                            "MGMT_V4",
                            "MGMT_V6",
                            "VIP_V4",
                            "VIP_V6"
                        ],
                        "example": "Example auth_dns_latency_listen_on_source"
                    }
                }
            },
            "GridTrafficCaptureChrSetting": {
                "type": "object",
                "properties": {
                    "chr_trigger_enable": {
                        "type": "boolean",
                        "description": "Enable triggering automated traffic capture based on cache hit ratio thresholds.",
                        "example": false
                    },
                    "chr_threshold": {
                        "type": "integer",
                        "description": "DNS Cache hit ratio threshold(%) below which traffic capture will be triggered.",
                        "format": "int64",
                        "example": 1
                    },
                    "chr_reset": {
                        "type": "integer",
                        "description": "DNS Cache hit ratio threshold(%) above which traffic capture will be triggered.",
                        "format": "int64",
                        "example": 1
                    },
                    "chr_min_cache_utilization": {
                        "type": "integer",
                        "description": "Minimum DNS cache utilization threshold(%) for triggering traffic capture based on DNS cache hit ratio.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "GridTrafficCaptureQpsSetting": {
                "type": "object",
                "properties": {
                    "qps_trigger_enable": {
                        "type": "boolean",
                        "description": "Enable triggering automated traffic capture based on DNS queries per second threshold.",
                        "example": false
                    },
                    "qps_threshold": {
                        "type": "integer",
                        "description": "DNS queries per second threshold below which traffic capture will be triggered.",
                        "format": "int64",
                        "example": 1
                    },
                    "qps_reset": {
                        "type": "integer",
                        "description": "DNS queries per second threshold below which traffic capture will be stopped.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "GridTrafficCaptureRecDnsSetting": {
                "type": "object",
                "properties": {
                    "rec_dns_latency_trigger_enable": {
                        "type": "boolean",
                        "description": "Enable triggering automated traffic capture based on recursive DNS latency.",
                        "example": false
                    },
                    "rec_dns_latency_threshold": {
                        "type": "integer",
                        "description": "Recursive DNS latency below which traffic capture will be triggered.",
                        "format": "int64",
                        "example": 1
                    },
                    "rec_dns_latency_reset": {
                        "type": "integer",
                        "description": "Recursive DNS latency above which traffic capture will be stopped.",
                        "format": "int64",
                        "example": 1
                    },
                    "rec_dns_latency_listen_on_source": {
                        "type": "string",
                        "description": "The local IP DNS service is listen on ( for recursive DNS latency trigger).",
                        "enum": [
                            "LAN2_V4",
                            "LAN2_V6",
                            "MGMT_V4",
                            "MGMT_V6",
                            "VIP_V4",
                            "VIP_V6"
                        ],
                        "example": "Example rec_dns_latency_listen_on_source"
                    },
                    "kpi_monitored_domains": {
                        "description": "List of domains monitored by 'Recursive DNS Latency Threshold' trigger.",
                        "enum": [
                            "monitoreddomains"
                        ],
                        "$ref": "#/components/schemas/GridtrafficcapturerecdnssettingKpiMonitoredDomains"
                    }
                }
            },
            "GridtrafficcapturerecdnssettingKpiMonitoredDomains": {
                "type": "object",
                "properties": {
                    "domain_name": {
                        "type": "string",
                        "description": "Domain name (FQDN to Query).",
                        "example": "Example domain_name"
                    },
                    "record_type": {
                        "type": "string",
                        "description": "Record type(record to query).",
                        "example": "Example record_type"
                    }
                }
            },
            "GridTrafficCaptureRecQueriesSetting": {
                "type": "object",
                "properties": {
                    "recursive_clients_count_trigger_enable": {
                        "type": "boolean",
                        "description": "Enable triggering automated traffic capture based on outgoing recursive queries count.",
                        "example": false
                    },
                    "recursive_clients_count_threshold": {
                        "type": "integer",
                        "description": "Concurrent outgoing recursive queries count below which traffic capture will be triggered.",
                        "format": "int64",
                        "example": 1
                    },
                    "recursive_clients_count_reset": {
                        "type": "integer",
                        "description": "Concurrent outgoing recursive queries count below which traffic capture will be stopped.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "GridTrapNotifications": {
                "type": "object",
                "properties": {
                    "trap_type": {
                        "type": "string",
                        "description": "Determines the type of a given trap.",
                        "enum": [
                            "Fan",
                            "Disk",
                            "Memory",
                            "CPU",
                            "MGM",
                            "HSM",
                            "Login",
                            "PowerSupply",
                            "FTP",
                            "TFTP",
                            "HTTP",
                            "NTP",
                            "DNS",
                            "DHCP",
                            "RootFS",
                            "TmpFS",
                            "Database",
                            "RAID",
                            "HA",
                            "HAOnCloud",
                            "MSServer",
                            "Backup",
                            "Clear",
                            "SNMP",
                            "LCD",
                            "SSH",
                            "SerialConsole",
                            "ENAT",
                            "Network",
                            "Cluster",
                            "Controld",
                            "OSPF",
                            "OSPF6",
                            "IFMAP",
                            "BGP",
                            "CaptivePortal",
                            "DuplicateIP",
                            "License",
                            "System",
                            "Syslog",
                            "DiscoveryConflict",
                            "Reporting",
                            "FDUsage",
                            "OCSPResponders",
                            "DisconnectedGrid",
                            "LDAPServers",
                            "RIRSWIP",
                            "SwapUsage",
                            "Discovery",
                            "ThreatProtection",
                            "DNSIntegrityCheck",
                            "DNSIntegrityCheckConnection",
                            "CloudAPI",
                            "RecursiveClients",
                            "DiscoveryUnmanaged",
                            "IPMIDevice",
                            "CiscoISEServer",
                            "ThreatInsight",
                            "AnalyticsRPZ",
                            "DNSAttack",
                            "IMC",
                            "Taxii",
                            "BFD",
                            "Outbound",
                            "AutomatedTrafficCapture",
                            "CloudDNSsync",
                            "IMCGRPCServer",
                            "IPAMUtilization",
                            "RPZHitRate"
                        ],
                        "example": "Example trap_type"
                    },
                    "enable_email": {
                        "type": "boolean",
                        "description": "Determines if the email notifications for the given trap are enabled or not.",
                        "example": false
                    },
                    "enable_trap": {
                        "type": "boolean",
                        "description": "Determines if the trap is enabled or not.",
                        "example": false
                    }
                }
            },
            "GridUpdatesDownloadMemberConfig": {
                "type": "object",
                "properties": {
                    "member": {
                        "type": "string",
                        "description": "The name of the updates download member.",
                        "example": "Example member"
                    },
                    "interface": {
                        "type": "string",
                        "description": "The source interface for updates download requests.",
                        "enum": [
                            "ANY",
                            "LAN1",
                            "LAN2",
                            "MGMT"
                        ],
                        "example": "Example interface"
                    },
                    "is_online": {
                        "type": "boolean",
                        "description": "Determines if the updates download member is online or not.",
                        "readOnly": true,
                        "example": false
                    }
                }
            },
            "ListGridResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Grid__ objects.",
                        "type": "array",
                        "title": "ListGridResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Grid"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Grid__ objects.",
                        "type": "object",
                        "title": "ListGridResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Grid"
                                }
                            }
                        }
                    }
                ]
            },
            "GetGridResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Grid"
                    },
                    {
                        "description": "The response format to retrieve __Grid__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetGridResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Grid"
                            }
                        }
                    }
                ]
            },
            "UpdateGridResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Grid__ in object format.",
                        "type": "object",
                        "title": "UpdateGridResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Grid"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Grid__ .",
                        "type": "string",
                        "title": "UpdateGridResponse"
                    }
                ]
            },
            "GridCloudapi": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "allow_api_admins": {
                        "type": "string",
                        "description": "Defines administrators who can perform cloud API requests on the Grid Master. The valid value is NONE (no administrator), ALL (all administrators), or LIST (administrators on the ACL).",
                        "enum": [
                            "NONE",
                            "LIST",
                            "ALL"
                        ],
                        "example": "Example allow_api_admins"
                    },
                    "allowed_api_admins": {
                        "type": "array",
                        "description": "The list of administrators who can perform cloud API requests on the Cloud Platform Appliance.",
                        "enum": [
                            "grid:cloudapi:user"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/GridCloudapiAllowedApiAdmins"
                        }
                    },
                    "enable_recycle_bin": {
                        "type": "boolean",
                        "description": "Determines whether the recycle bin for deleted cloud objects is enabled or not on the Grid Master.",
                        "example": false
                    },
                    "gateway_config": {
                        "$ref": "#/components/schemas/GridCloudapiGatewayConfig"
                    }
                }
            },
            "GridCloudapiAllowedApiAdmins": {
                "type": "object",
                "properties": {
                    "is_remote": {
                        "type": "boolean",
                        "description": "Determines whether this is a remote admin user.",
                        "example": false
                    },
                    "remote_admin": {
                        "type": "string",
                        "description": "Username that matches a remote administrator who can perform cloud API requests on the Cloud Platform Appliance.",
                        "example": "Example remote_admin"
                    },
                    "local_admin": {
                        "type": "string",
                        "description": "Local administrator who can perform cloud API requests on the Cloud Platform Appliance.",
                        "example": "Example local_admin"
                    }
                }
            },
            "GridCloudapiGatewayConfig": {
                "type": "object",
                "properties": {
                    "enable_proxy_service": {
                        "type": "boolean",
                        "description": "Enable Gateway Service.",
                        "example": false
                    },
                    "port": {
                        "type": "integer",
                        "description": "Gateway port",
                        "format": "int64",
                        "example": 1
                    },
                    "endpoint_mapping": {
                        "description": "List of Gateway FQDN to AWS Endpoint Mapping.",
                        "enum": [
                            "grid:cloudapi:gateway:endpointmapping"
                        ],
                        "$ref": "#/components/schemas/GridcloudapigatewayconfigEndpointMapping"
                    }
                }
            },
            "GridcloudapigatewayconfigEndpointMapping": {
                "type": "object",
                "properties": {
                    "gateway_fqdn": {
                        "type": "string",
                        "description": "Gateway FQDN.",
                        "example": "Example gateway_fqdn"
                    },
                    "endpoint_fqdn": {
                        "type": "string",
                        "description": "Endpoint FQDN.",
                        "example": "Example endpoint_fqdn"
                    }
                }
            },
            "ListGridCloudapiResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __GridCloudapi__ objects.",
                        "type": "array",
                        "title": "ListGridCloudapiResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/GridCloudapi"
                        }
                    },
                    {
                        "description": "The response format to retrieve __GridCloudapi__ objects.",
                        "type": "object",
                        "title": "ListGridCloudapiResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GridCloudapi"
                                }
                            }
                        }
                    }
                ]
            },
            "GetGridCloudapiResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GridCloudapi"
                    },
                    {
                        "description": "The response format to retrieve __GridCloudapi__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetGridCloudapiResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridCloudapi"
                            }
                        }
                    }
                ]
            },
            "UpdateGridCloudapiResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __GridCloudapi__ in object format.",
                        "type": "object",
                        "title": "UpdateGridCloudapiResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridCloudapi"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __GridCloudapi__ .",
                        "type": "string",
                        "title": "UpdateGridCloudapiResponse"
                    }
                ]
            },
            "GridCloudapiCloudstatistics": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "allocated_available_ratio": {
                        "type": "integer",
                        "description": "Ratio of allocated vs. available IPs",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "allocated_ip_count": {
                        "type": "integer",
                        "description": "Total number of IPs allocated by tenants.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "available_ip_count": {
                        "type": "string",
                        "description": "The total number of IP addresses available to tenants. Only IP addresses in networks that are within a delegation scope are counted.",
                        "readOnly": true,
                        "example": "Example available_ip_count"
                    },
                    "fixed_ip_count": {
                        "type": "integer",
                        "description": "The total number of fixed IP addresses currently in use by all tenants in the system.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "floating_ip_count": {
                        "type": "integer",
                        "description": "The total number of floating IP addresses currently in use by all tenants in the system.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "tenant_count": {
                        "type": "integer",
                        "description": "Total number of tenant currently in the system.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "tenant_ip_count": {
                        "type": "integer",
                        "description": "The total number of IP addresses currently in use by all tenants in the system.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "tenant_vm_count": {
                        "type": "integer",
                        "description": "The total number of VMs currently in use by all tenants in the system.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "ListGridCloudapiCloudstatisticsResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __GridCloudapiCloudstatistics__ objects.",
                        "type": "array",
                        "title": "ListGridCloudapiCloudstatisticsResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/GridCloudapiCloudstatistics"
                        }
                    },
                    {
                        "description": "The response format to retrieve __GridCloudapiCloudstatistics__ objects.",
                        "type": "object",
                        "title": "ListGridCloudapiCloudstatisticsResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GridCloudapiCloudstatistics"
                                }
                            }
                        }
                    }
                ]
            },
            "GetGridCloudapiCloudstatisticsResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GridCloudapiCloudstatistics"
                    },
                    {
                        "description": "The response format to retrieve __GridCloudapiCloudstatistics__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetGridCloudapiCloudstatisticsResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridCloudapiCloudstatistics"
                            }
                        }
                    }
                ]
            },
            "UpdateGridCloudapiCloudstatisticsResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __GridCloudapiCloudstatistics__ in object format.",
                        "type": "object",
                        "title": "UpdateGridCloudapiCloudstatisticsResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridCloudapiCloudstatistics"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __GridCloudapiCloudstatistics__ .",
                        "type": "string",
                        "title": "UpdateGridCloudapiCloudstatisticsResponse"
                    }
                ]
            },
            "GridCloudapiTenant": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "cloud_info": {
                        "$ref": "#/components/schemas/GridCloudapiTenantCloudInfo"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the Grid Cloud API Tenant object; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "created_ts": {
                        "type": "integer",
                        "description": "The timestamp when the tenant was first created in the system.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique ID associated with the tenant. This is set only when the tenant is first created.",
                        "readOnly": true,
                        "example": "Example id"
                    },
                    "last_event_ts": {
                        "type": "integer",
                        "description": "The timestamp when the last event associated with the tenant happened.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the tenant.",
                        "example": "Example name"
                    },
                    "network_count": {
                        "type": "integer",
                        "description": "Number of Networks associated with the tenant.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "vm_count": {
                        "type": "integer",
                        "description": "Number of VMs associated with the tenant.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "GridCloudapiTenantCloudInfo": {
                "type": "object",
                "properties": {
                    "delegated_member": {
                        "description": "The Cloud Platform Appliance to which authority of the object is delegated.",
                        "enum": [
                            "dhcpmember"
                        ],
                        "$ref": "#/components/schemas/GridcloudapitenantcloudinfoDelegatedMember"
                    },
                    "delegated_scope": {
                        "type": "string",
                        "description": "Indicates the scope of delegation for the object. This can be one of the following: NONE (outside any delegation), ROOT (the delegation point), SUBTREE (within the scope of a delegation), RECLAIMING (within the scope of a delegation being reclaimed, either as the delegation point or in the subtree).",
                        "enum": [
                            "NONE",
                            "ROOT",
                            "SUBTREE",
                            "RECLAIMING"
                        ],
                        "readOnly": true,
                        "example": "Example delegated_scope"
                    },
                    "delegated_root": {
                        "type": "string",
                        "description": "Indicates the root of the delegation if delegated_scope is SUBTREE or RECLAIMING. This is not set otherwise.",
                        "readOnly": true,
                        "example": "Example delegated_root"
                    },
                    "owned_by_adaptor": {
                        "type": "boolean",
                        "description": "Determines whether the object was created by the cloud adapter or not.",
                        "readOnly": true,
                        "example": false
                    },
                    "usage": {
                        "type": "string",
                        "description": "Indicates the cloud origin of the object.",
                        "enum": [
                            "NONE",
                            "ADAPTER",
                            "USED_BY",
                            "DELEGATED"
                        ],
                        "readOnly": true,
                        "example": "Example usage"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "Reference to the tenant object associated with the object, if any.",
                        "readOnly": true,
                        "example": "Example tenant"
                    },
                    "mgmt_platform": {
                        "type": "string",
                        "description": "Indicates the specified cloud management platform.",
                        "readOnly": true,
                        "example": "Example mgmt_platform"
                    },
                    "authority_type": {
                        "type": "string",
                        "description": "Type of authority over the object.",
                        "enum": [
                            "NONE",
                            "GM",
                            "CP"
                        ],
                        "readOnly": true,
                        "example": "Example authority_type"
                    }
                }
            },
            "GridcloudapitenantcloudinfoDelegatedMember": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example ipv4addr"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid Member.",
                        "example": "Example ipv6addr"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid member name",
                        "example": "Example name"
                    }
                }
            },
            "ListGridCloudapiTenantResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __GridCloudapiTenant__ objects.",
                        "type": "array",
                        "title": "ListGridCloudapiTenantResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/GridCloudapiTenant"
                        }
                    },
                    {
                        "description": "The response format to retrieve __GridCloudapiTenant__ objects.",
                        "type": "object",
                        "title": "ListGridCloudapiTenantResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GridCloudapiTenant"
                                }
                            }
                        }
                    }
                ]
            },
            "GetGridCloudapiTenantResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GridCloudapiTenant"
                    },
                    {
                        "description": "The response format to retrieve __GridCloudapiTenant__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetGridCloudapiTenantResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridCloudapiTenant"
                            }
                        }
                    }
                ]
            },
            "UpdateGridCloudapiTenantResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __GridCloudapiTenant__ in object format.",
                        "type": "object",
                        "title": "UpdateGridCloudapiTenantResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridCloudapiTenant"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __GridCloudapiTenant__ .",
                        "type": "string",
                        "title": "UpdateGridCloudapiTenantResponse"
                    }
                ]
            },
            "GridCloudapiVm": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "availability_zone": {
                        "type": "string",
                        "description": "Availability zone of the VM.",
                        "readOnly": true,
                        "example": "Example availability_zone"
                    },
                    "cloud_info": {
                        "$ref": "#/components/schemas/GridCloudapiVmCloudInfo"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the vm object; maximum 1024 characters.",
                        "example": "Example comment"
                    },
                    "elastic_ip_address": {
                        "type": "string",
                        "description": "Elastic IP address associated with the VM's primary interface.",
                        "readOnly": true,
                        "example": "Example elastic_ip_address"
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "first_seen": {
                        "type": "integer",
                        "description": "The timestamp when the VM was first seen in the system.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "hostname": {
                        "type": "string",
                        "description": "Hostname part of the FQDN for the address associated with the VM's primary interface.",
                        "readOnly": true,
                        "example": "Example hostname"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique ID associated with the VM. This is set only when the VM is first created.",
                        "readOnly": true,
                        "example": "Example id"
                    },
                    "kernel_id": {
                        "type": "string",
                        "description": "Identifier of the kernel that this VM is running; maximum 128 characters.",
                        "example": "Example kernel_id"
                    },
                    "last_seen": {
                        "type": "integer",
                        "description": "The timestamp when the last event associated with the VM happened.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the VM.",
                        "example": "Example name"
                    },
                    "network_count": {
                        "type": "integer",
                        "description": "Number of Networks containing any address associated with this VM.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "operating_system": {
                        "type": "string",
                        "description": "Guest Operating system that this VM is running; maximum 128 characters.",
                        "example": "Example operating_system"
                    },
                    "primary_mac_address": {
                        "type": "string",
                        "description": "MAC address associated with the VM's primary interface.",
                        "readOnly": true,
                        "example": "Example primary_mac_address"
                    },
                    "subnet_address": {
                        "type": "string",
                        "description": "Address of the network that is the container of the address associated with the VM's primary interface.",
                        "readOnly": true,
                        "example": "Example subnet_address"
                    },
                    "subnet_cidr": {
                        "type": "integer",
                        "description": "CIDR of the network that is the container of the address associated with the VM's primary interface.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "subnet_id": {
                        "type": "string",
                        "description": "Subnet ID of the network that is the container of the address associated with the VM's primary interface.",
                        "readOnly": true,
                        "example": "Example subnet_id"
                    },
                    "tenant_name": {
                        "type": "string",
                        "description": "Name of the tenant associated with the VM.",
                        "readOnly": true,
                        "example": "Example tenant_name"
                    },
                    "vm_type": {
                        "type": "string",
                        "description": "VM type; maximum 64 characters.",
                        "example": "Example vm_type"
                    },
                    "vpc_address": {
                        "type": "string",
                        "description": "Network address of the parent VPC.",
                        "readOnly": true,
                        "example": "Example vpc_address"
                    },
                    "vpc_cidr": {
                        "type": "integer",
                        "description": "Network CIDR of the parent VPC.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "vpc_id": {
                        "type": "string",
                        "description": "Identifier of the parent VPC.",
                        "readOnly": true,
                        "example": "Example vpc_id"
                    },
                    "vpc_name": {
                        "type": "string",
                        "description": "Name of the parent VPC.",
                        "readOnly": true,
                        "example": "Example vpc_name"
                    }
                }
            },
            "GridCloudapiVmCloudInfo": {
                "type": "object",
                "properties": {
                    "delegated_member": {
                        "description": "The Cloud Platform Appliance to which authority of the object is delegated.",
                        "enum": [
                            "dhcpmember"
                        ],
                        "$ref": "#/components/schemas/GridcloudapivmcloudinfoDelegatedMember"
                    },
                    "delegated_scope": {
                        "type": "string",
                        "description": "Indicates the scope of delegation for the object. This can be one of the following: NONE (outside any delegation), ROOT (the delegation point), SUBTREE (within the scope of a delegation), RECLAIMING (within the scope of a delegation being reclaimed, either as the delegation point or in the subtree).",
                        "enum": [
                            "NONE",
                            "ROOT",
                            "SUBTREE",
                            "RECLAIMING"
                        ],
                        "readOnly": true,
                        "example": "Example delegated_scope"
                    },
                    "delegated_root": {
                        "type": "string",
                        "description": "Indicates the root of the delegation if delegated_scope is SUBTREE or RECLAIMING. This is not set otherwise.",
                        "readOnly": true,
                        "example": "Example delegated_root"
                    },
                    "owned_by_adaptor": {
                        "type": "boolean",
                        "description": "Determines whether the object was created by the cloud adapter or not.",
                        "readOnly": true,
                        "example": false
                    },
                    "usage": {
                        "type": "string",
                        "description": "Indicates the cloud origin of the object.",
                        "enum": [
                            "NONE",
                            "ADAPTER",
                            "USED_BY",
                            "DELEGATED"
                        ],
                        "readOnly": true,
                        "example": "Example usage"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "Reference to the tenant object associated with the object, if any.",
                        "readOnly": true,
                        "example": "Example tenant"
                    },
                    "mgmt_platform": {
                        "type": "string",
                        "description": "Indicates the specified cloud management platform.",
                        "readOnly": true,
                        "example": "Example mgmt_platform"
                    },
                    "authority_type": {
                        "type": "string",
                        "description": "Type of authority over the object.",
                        "enum": [
                            "NONE",
                            "GM",
                            "CP"
                        ],
                        "readOnly": true,
                        "example": "Example authority_type"
                    }
                }
            },
            "GridcloudapivmcloudinfoDelegatedMember": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example ipv4addr"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid Member.",
                        "example": "Example ipv6addr"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid member name",
                        "example": "Example name"
                    }
                }
            },
            "ListGridCloudapiVmResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __GridCloudapiVm__ objects.",
                        "type": "array",
                        "title": "ListGridCloudapiVmResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/GridCloudapiVm"
                        }
                    },
                    {
                        "description": "The response format to retrieve __GridCloudapiVm__ objects.",
                        "type": "object",
                        "title": "ListGridCloudapiVmResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GridCloudapiVm"
                                }
                            }
                        }
                    }
                ]
            },
            "GetGridCloudapiVmResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GridCloudapiVm"
                    },
                    {
                        "description": "The response format to retrieve __GridCloudapiVm__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetGridCloudapiVmResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridCloudapiVm"
                            }
                        }
                    }
                ]
            },
            "UpdateGridCloudapiVmResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __GridCloudapiVm__ in object format.",
                        "type": "object",
                        "title": "UpdateGridCloudapiVmResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridCloudapiVm"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __GridCloudapiVm__ .",
                        "type": "string",
                        "title": "UpdateGridCloudapiVmResponse"
                    }
                ]
            },
            "GridCloudapiVmaddress": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "address": {
                        "type": "string",
                        "description": "The IP address of the interface.",
                        "readOnly": true,
                        "example": "Example address"
                    },
                    "address_type": {
                        "type": "string",
                        "description": "IP address type (Public, Private, Elastic, Floating, ...).",
                        "readOnly": true,
                        "example": "Example address_type"
                    },
                    "associated_ip": {
                        "type": "string",
                        "description": "Reference to associated IPv4 or IPv6 address.",
                        "readOnly": true,
                        "example": "Example associated_ip"
                    },
                    "associated_object_types": {
                        "type": "array",
                        "description": "Array of string denoting the types of underlying objects IPv4/IPv6 - \"A\", \"AAAA\", \"PTR\", \"HOST\", \"FA\", \"RESERVATION\", \"UNMANAGED\" + (\"BULKHOST\", \"DHCP_RANGE\", \"RESERVED_RANGE\", \"LEASE\", \"NETWORK\", \"BROADCAST\", \"PENDING\"),",
                        "enum": [
                            "string"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "associated_objects": {
                        "type": "array",
                        "description": "The list of references to the object (Host, Fixed Address, RR, ...) that defines this IP.",
                        "enum": [
                            "fixedaddress"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "fixedaddress"
                            ]
                        }
                    },
                    "cloud_info": {
                        "$ref": "#/components/schemas/GridCloudapiVmaddressCloudInfo"
                    },
                    "dns_names": {
                        "type": "array",
                        "description": "The list of all FQDNs associated with the IP address.",
                        "enum": [
                            "string"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "elastic_address": {
                        "type": "string",
                        "description": "Elastic IP address associated with this private address, if this address is a private address; otherwise empty.",
                        "readOnly": true,
                        "example": "Example elastic_address"
                    },
                    "interface_name": {
                        "type": "string",
                        "description": "Name of the interface associated with this IP address.",
                        "readOnly": true,
                        "example": "Example interface_name"
                    },
                    "is_ipv4": {
                        "type": "boolean",
                        "description": "Indicates whether the address is IPv4 or IPv6.",
                        "readOnly": true,
                        "example": false
                    },
                    "mac_address": {
                        "type": "string",
                        "description": "The MAC address of the interface.",
                        "readOnly": true,
                        "example": "Example mac_address"
                    },
                    "ms_ad_user_data": {
                        "$ref": "#/components/schemas/GridCloudapiVmaddressMsAdUserData"
                    },
                    "network": {
                        "type": "string",
                        "description": "The network to which this address belongs, in IPv4 Address/CIDR format.",
                        "readOnly": true,
                        "example": "Example network"
                    },
                    "network_view": {
                        "type": "string",
                        "description": "Network view name of the delegated object.",
                        "readOnly": true,
                        "example": "Example network_view"
                    },
                    "port_id": {
                        "type": "integer",
                        "description": "Port identifier of the interface.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "private_address": {
                        "type": "string",
                        "description": "Private IP address associated with this public (or elastic or floating) address, if this address is a public address; otherwise empty.",
                        "readOnly": true,
                        "example": "Example private_address"
                    },
                    "private_hostname": {
                        "type": "string",
                        "description": "Host part of the FQDN of this address if this address is a private address; otherwise empty",
                        "readOnly": true,
                        "example": "Example private_hostname"
                    },
                    "public_address": {
                        "type": "string",
                        "description": "Public IP address associated with this private address, if this address is a private address; otherwise empty.",
                        "readOnly": true,
                        "example": "Example public_address"
                    },
                    "public_hostname": {
                        "type": "string",
                        "description": "Host part of the FQDN of this address if this address is a public (or elastic or floating) address; otherwise empty",
                        "readOnly": true,
                        "example": "Example public_hostname"
                    },
                    "subnet_address": {
                        "type": "string",
                        "description": "Network address of the subnet that is the container of this address.",
                        "readOnly": true,
                        "example": "Example subnet_address"
                    },
                    "subnet_cidr": {
                        "type": "integer",
                        "description": "CIDR of the subnet that is the container of this address.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "subnet_id": {
                        "type": "string",
                        "description": "Subnet ID that is the container of this address.",
                        "readOnly": true,
                        "example": "Example subnet_id"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Cloud API Tenant object.",
                        "readOnly": true,
                        "example": "Example tenant"
                    },
                    "vm_availability_zone": {
                        "type": "string",
                        "description": "Availability zone of the VM.",
                        "readOnly": true,
                        "example": "Example vm_availability_zone"
                    },
                    "vm_comment": {
                        "type": "string",
                        "description": "VM comment.",
                        "readOnly": true,
                        "example": "Example vm_comment"
                    },
                    "vm_creation_time": {
                        "type": "integer",
                        "description": "Date/time the VM was first created as NIOS object.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "vm_hostname": {
                        "type": "string",
                        "description": "Host part of the FQDN of the address attached to the primary interface.",
                        "readOnly": true,
                        "example": "Example vm_hostname"
                    },
                    "vm_id": {
                        "type": "string",
                        "description": "The UUID of the Virtual Machine.",
                        "readOnly": true,
                        "example": "Example vm_id"
                    },
                    "vm_kernel_id": {
                        "type": "string",
                        "description": "Kernel ID of the VM that this address is associated with.",
                        "readOnly": true,
                        "example": "Example vm_kernel_id"
                    },
                    "vm_last_update_time": {
                        "type": "integer",
                        "description": "Last time the VM was updated.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "vm_name": {
                        "type": "string",
                        "description": "The name of the Virtual Machine.",
                        "readOnly": true,
                        "example": "Example vm_name"
                    },
                    "vm_network_count": {
                        "type": "integer",
                        "description": "Count of networks containing all the addresses of the VM.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "vm_operating_system": {
                        "type": "string",
                        "description": "Operating system that the VM is running.",
                        "readOnly": true,
                        "example": "Example vm_operating_system"
                    },
                    "vm_type": {
                        "type": "string",
                        "description": "Type of the VM this address is associated with.",
                        "readOnly": true,
                        "example": "Example vm_type"
                    },
                    "vm_vpc_address": {
                        "type": "string",
                        "description": "Network address of the VPC of the VM that this address is associated with.",
                        "readOnly": true,
                        "example": "Example vm_vpc_address"
                    },
                    "vm_vpc_cidr": {
                        "type": "integer",
                        "description": "CIDR of the VPC of the VM that this address is associated with.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "vm_vpc_id": {
                        "type": "string",
                        "description": "Identifier of the VPC where the VM is defined.",
                        "readOnly": true,
                        "example": "Example vm_vpc_id"
                    },
                    "vm_vpc_name": {
                        "type": "string",
                        "description": "Name of the VPC where the VM is defined.",
                        "readOnly": true,
                        "example": "Example vm_vpc_name"
                    },
                    "vm_vpc_ref": {
                        "type": "string",
                        "description": "Reference to the VPC where the VM is defined.",
                        "readOnly": true,
                        "example": "Example vm_vpc_ref"
                    }
                }
            },
            "GridCloudapiVmaddressCloudInfo": {
                "type": "object",
                "properties": {
                    "delegated_member": {
                        "description": "The Cloud Platform Appliance to which authority of the object is delegated.",
                        "enum": [
                            "dhcpmember"
                        ],
                        "$ref": "#/components/schemas/GridcloudapivmaddresscloudinfoDelegatedMember"
                    },
                    "delegated_scope": {
                        "type": "string",
                        "description": "Indicates the scope of delegation for the object. This can be one of the following: NONE (outside any delegation), ROOT (the delegation point), SUBTREE (within the scope of a delegation), RECLAIMING (within the scope of a delegation being reclaimed, either as the delegation point or in the subtree).",
                        "enum": [
                            "NONE",
                            "ROOT",
                            "SUBTREE",
                            "RECLAIMING"
                        ],
                        "readOnly": true,
                        "example": "Example delegated_scope"
                    },
                    "delegated_root": {
                        "type": "string",
                        "description": "Indicates the root of the delegation if delegated_scope is SUBTREE or RECLAIMING. This is not set otherwise.",
                        "readOnly": true,
                        "example": "Example delegated_root"
                    },
                    "owned_by_adaptor": {
                        "type": "boolean",
                        "description": "Determines whether the object was created by the cloud adapter or not.",
                        "readOnly": true,
                        "example": false
                    },
                    "usage": {
                        "type": "string",
                        "description": "Indicates the cloud origin of the object.",
                        "enum": [
                            "NONE",
                            "ADAPTER",
                            "USED_BY",
                            "DELEGATED"
                        ],
                        "readOnly": true,
                        "example": "Example usage"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "Reference to the tenant object associated with the object, if any.",
                        "readOnly": true,
                        "example": "Example tenant"
                    },
                    "mgmt_platform": {
                        "type": "string",
                        "description": "Indicates the specified cloud management platform.",
                        "readOnly": true,
                        "example": "Example mgmt_platform"
                    },
                    "authority_type": {
                        "type": "string",
                        "description": "Type of authority over the object.",
                        "enum": [
                            "NONE",
                            "GM",
                            "CP"
                        ],
                        "readOnly": true,
                        "example": "Example authority_type"
                    }
                }
            },
            "GridcloudapivmaddresscloudinfoDelegatedMember": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example ipv4addr"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid Member.",
                        "example": "Example ipv6addr"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid member name",
                        "example": "Example name"
                    }
                }
            },
            "GridCloudapiVmaddressMsAdUserData": {
                "type": "object",
                "properties": {
                    "active_users_count": {
                        "type": "integer",
                        "description": "The number of active users.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "ListGridCloudapiVmaddressResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __GridCloudapiVmaddress__ objects.",
                        "type": "array",
                        "title": "ListGridCloudapiVmaddressResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/GridCloudapiVmaddress"
                        }
                    },
                    {
                        "description": "The response format to retrieve __GridCloudapiVmaddress__ objects.",
                        "type": "object",
                        "title": "ListGridCloudapiVmaddressResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GridCloudapiVmaddress"
                                }
                            }
                        }
                    }
                ]
            },
            "GetGridCloudapiVmaddressResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GridCloudapiVmaddress"
                    },
                    {
                        "description": "The response format to retrieve __GridCloudapiVmaddress__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetGridCloudapiVmaddressResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridCloudapiVmaddress"
                            }
                        }
                    }
                ]
            },
            "UpdateGridCloudapiVmaddressResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __GridCloudapiVmaddress__ in object format.",
                        "type": "object",
                        "title": "UpdateGridCloudapiVmaddressResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridCloudapiVmaddress"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __GridCloudapiVmaddress__ .",
                        "type": "string",
                        "title": "UpdateGridCloudapiVmaddressResponse"
                    }
                ]
            },
            "GridMemberCloudapi": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "allow_api_admins": {
                        "type": "string",
                        "description": "Defines which administrators are allowed to perform Cloud API request on the Grid Member: no administrators (NONE), any administrators (ALL) or administrators in the ACL list (LIST). Default is ALL.",
                        "enum": [
                            "NONE",
                            "LIST",
                            "ALL"
                        ],
                        "example": "Example allow_api_admins"
                    },
                    "allowed_api_admins": {
                        "type": "array",
                        "description": "List of administrators allowed to perform Cloud Platform API requests on that member.",
                        "enum": [
                            "grid:cloudapi:user"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/GridMemberCloudapiAllowedApiAdmins"
                        }
                    },
                    "enable_service": {
                        "type": "boolean",
                        "description": "Controls whether the Cloud API service runs on the member or not.",
                        "example": false
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "readOnly": true,
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "gateway_config": {
                        "$ref": "#/components/schemas/GridMemberCloudapiGatewayConfig"
                    },
                    "member": {
                        "$ref": "#/components/schemas/GridMemberCloudapiMember"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of Cloud API service on the member.",
                        "enum": [
                            "UNKNOWN",
                            "INACTIVE",
                            "WORKING",
                            "WARNING",
                            "FAILED"
                        ],
                        "readOnly": true,
                        "example": "Example status"
                    }
                }
            },
            "GridMemberCloudapiAllowedApiAdmins": {
                "type": "object",
                "properties": {
                    "is_remote": {
                        "type": "boolean",
                        "description": "Determines whether this is a remote admin user.",
                        "example": false
                    },
                    "remote_admin": {
                        "type": "string",
                        "description": "Username that matches a remote administrator who can perform cloud API requests on the Cloud Platform Appliance.",
                        "example": "Example remote_admin"
                    },
                    "local_admin": {
                        "type": "string",
                        "description": "Local administrator who can perform cloud API requests on the Cloud Platform Appliance.",
                        "example": "Example local_admin"
                    }
                }
            },
            "GridMemberCloudapiGatewayConfig": {
                "type": "object",
                "properties": {
                    "enable_proxy_service": {
                        "type": "boolean",
                        "description": "Enable Gateway Service.",
                        "example": false
                    },
                    "port": {
                        "type": "integer",
                        "description": "Gateway port",
                        "format": "int64",
                        "example": 1
                    },
                    "endpoint_mapping": {
                        "description": "List of Gateway FQDN to AWS Endpoint Mapping.",
                        "enum": [
                            "grid:cloudapi:gateway:endpointmapping"
                        ],
                        "$ref": "#/components/schemas/GridmembercloudapigatewayconfigEndpointMapping"
                    }
                }
            },
            "GridmembercloudapigatewayconfigEndpointMapping": {
                "type": "object",
                "properties": {
                    "gateway_fqdn": {
                        "type": "string",
                        "description": "Gateway FQDN.",
                        "example": "Example gateway_fqdn"
                    },
                    "endpoint_fqdn": {
                        "type": "string",
                        "description": "Endpoint FQDN.",
                        "example": "Example endpoint_fqdn"
                    }
                }
            },
            "GridMemberCloudapiMember": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example ipv4addr"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid Member.",
                        "example": "Example ipv6addr"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid member name",
                        "example": "Example name"
                    }
                }
            },
            "ListGridMemberCloudapiResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __GridMemberCloudapi__ objects.",
                        "type": "array",
                        "title": "ListGridMemberCloudapiResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/GridMemberCloudapi"
                        }
                    },
                    {
                        "description": "The response format to retrieve __GridMemberCloudapi__ objects.",
                        "type": "object",
                        "title": "ListGridMemberCloudapiResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GridMemberCloudapi"
                                }
                            }
                        }
                    }
                ]
            },
            "GetGridMemberCloudapiResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GridMemberCloudapi"
                    },
                    {
                        "description": "The response format to retrieve __GridMemberCloudapi__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetGridMemberCloudapiResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridMemberCloudapi"
                            }
                        }
                    }
                ]
            },
            "UpdateGridMemberCloudapiResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __GridMemberCloudapi__ in object format.",
                        "type": "object",
                        "title": "UpdateGridMemberCloudapiResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridMemberCloudapi"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __GridMemberCloudapi__ .",
                        "type": "string",
                        "title": "UpdateGridMemberCloudapiResponse"
                    }
                ]
            },
            "GridDhcpproperties": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "authority": {
                        "type": "boolean",
                        "description": "The Grid-level authority flag. This flag specifies whether a DHCP server is authoritative for a domain.",
                        "example": false
                    },
                    "bootfile": {
                        "type": "string",
                        "description": "The name of a file that DHCP clients need to boot. Some DHCP clients use BOOTP (bootstrap protocol) or include the boot file name option in their DHCPREQUEST messages.",
                        "example": "Example bootfile"
                    },
                    "bootserver": {
                        "type": "string",
                        "description": "The name of the server on which a boot file is stored.",
                        "example": "Example bootserver"
                    },
                    "capture_hostname": {
                        "type": "boolean",
                        "description": "The Grid-level capture hostname flag. Set this flag to capture the hostname and lease time when assigning a fixed address.",
                        "example": false
                    },
                    "ddns_domainname": {
                        "type": "string",
                        "description": "The member DDNS domain name value.",
                        "example": "Example ddns_domainname"
                    },
                    "ddns_generate_hostname": {
                        "type": "boolean",
                        "description": "Determines if the ability of a DHCP server to generate a host name and update DNS with this host name when it receives a DHCP REQUEST message that does not include a host name is enabled or not.",
                        "example": false
                    },
                    "ddns_retry_interval": {
                        "type": "integer",
                        "description": "Determines the retry interval when the DHCP server makes repeated attempts to send DDNS updates to a DNS server.",
                        "format": "int64",
                        "example": 1
                    },
                    "ddns_server_always_updates": {
                        "type": "boolean",
                        "description": "Determines that only the DHCP server is allowed to update DNS, regardless of the requests from the DHCP clients.",
                        "example": false
                    },
                    "ddns_ttl": {
                        "type": "integer",
                        "description": "The DDNS TTL (Dynamic DNS Time To Live) value specifies the number of seconds an IP address for the name is cached.",
                        "format": "int64",
                        "example": 1
                    },
                    "ddns_update_fixed_addresses": {
                        "type": "boolean",
                        "description": "Determines if the Grid DHCP server's ability to update the A and PTR records with a fixed address is enabled or not.",
                        "example": false
                    },
                    "ddns_use_option81": {
                        "type": "boolean",
                        "description": "Determines if support for option 81 is enabled or not.",
                        "example": false
                    },
                    "deny_bootp": {
                        "type": "boolean",
                        "description": "Determines if deny BOOTP is enabled or not.",
                        "example": false
                    },
                    "disable_all_nac_filters": {
                        "type": "boolean",
                        "description": "If set to True, NAC filters will be disabled on the Infoblox Grid.",
                        "example": false
                    },
                    "dns_update_style": {
                        "type": "string",
                        "description": "The update style for dynamic DNS updates.",
                        "enum": [
                            "INTERIM",
                            "STANDARD"
                        ],
                        "example": "Example dns_update_style"
                    },
                    "email_list": {
                        "type": "array",
                        "description": "The Grid-level email_list value. Specify an e-mail address to which you want the Infoblox appliance to send e-mail notifications when the DHCP address usage for the grid crosses a threshold. You can create a list of several e-mail addresses.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "enable_ddns": {
                        "type": "boolean",
                        "description": "Determines if the member DHCP server's ability to send DDNS updates is enabled or not.",
                        "example": false
                    },
                    "enable_dhcp_thresholds": {
                        "type": "boolean",
                        "description": "Represents the watermarks above or below which address usage in a network is unexpected and might warrant your attention.",
                        "example": false
                    },
                    "enable_email_warnings": {
                        "type": "boolean",
                        "description": "Determines if e-mail warnings are enabled or disabled. When DHCP threshold is enabled and DHCP address usage crosses a watermark threshold, the appliance sends an e-mail notification to an administrator.",
                        "example": false
                    },
                    "enable_fingerprint": {
                        "type": "boolean",
                        "description": "Determines if the fingerprint feature is enabled or not. If you enable this feature, the server will match a fingerprint for incoming lease requests.",
                        "example": false
                    },
                    "enable_gss_tsig": {
                        "type": "boolean",
                        "description": "Determines whether all appliances are enabled to receive GSS-TSIG authenticated updates from DHCP clients.",
                        "example": false
                    },
                    "enable_hostname_rewrite": {
                        "type": "boolean",
                        "description": "Determines if the Grid-level host name rewrite feature is enabled or not.",
                        "example": false
                    },
                    "enable_leasequery": {
                        "type": "boolean",
                        "description": "Determines if lease query is allowed or not.",
                        "example": false
                    },
                    "enable_roaming_hosts": {
                        "type": "boolean",
                        "description": "Determines if DHCP servers in a Grid support roaming hosts or not.",
                        "example": false
                    },
                    "enable_snmp_warnings": {
                        "type": "boolean",
                        "description": "Determined if the SNMP warnings on Grid-level are enabled or not. When DHCP threshold is enabled and DHCP address usage crosses a watermark threshold, the appliance sends an SNMP trap to the trap receiver that you defined you defined at the Grid member level.",
                        "example": false
                    },
                    "format_log_option_82": {
                        "type": "string",
                        "description": "The format option for Option 82 logging.",
                        "enum": [
                            "HEX",
                            "TEXT"
                        ],
                        "example": "Example format_log_option_82"
                    },
                    "grid": {
                        "type": "string",
                        "description": "Determines the Grid that serves DHCP. This specifies a group of Infoblox appliances that are connected together to provide a single point of device administration and service configuration in a secure, highly available environment.",
                        "readOnly": true,
                        "example": "Example grid"
                    },
                    "gss_tsig_keys": {
                        "type": "array",
                        "description": "The list of GSS-TSIG keys for a Grid DHCP object.",
                        "enum": [
                            "kerberoskey"
                        ],
                        "items": {
                            "type": "string",
                            "enum": [
                                "kerberoskey"
                            ]
                        }
                    },
                    "high_water_mark": {
                        "type": "integer",
                        "description": "Determines the high watermark value of a Grid DHCP server. If the percentage of allocated addresses exceeds this watermark, the appliance makes a syslog entry and sends an e-mail notification (if enabled). Specifies the percentage of allocated addresses. The range is from 1 to 100.",
                        "format": "int64",
                        "example": 1
                    },
                    "high_water_mark_reset": {
                        "type": "integer",
                        "description": "Determines the high watermark reset value of a member DHCP server. If the percentage of allocated addresses drops below this value, a corresponding SNMP trap is reset. Specifies the percentage of allocated addresses. The range is from 1 to 100. The high watermark reset value must be lower than the high watermark value.",
                        "format": "int64",
                        "example": 1
                    },
                    "hostname_rewrite_policy": {
                        "type": "string",
                        "description": "The name of the default hostname rewrite policy, which is also in the protocol_hostname_rewrite_policies array.",
                        "example": "Example hostname_rewrite_policy"
                    },
                    "ignore_dhcp_option_list_request": {
                        "type": "boolean",
                        "description": "Determines if the ignore DHCP option list request flag of a Grid DHCP is enabled or not. If this flag is set to true all available DHCP options will be returned to the client.",
                        "example": false
                    },
                    "ignore_id": {
                        "type": "string",
                        "description": "Indicates whether the appliance will ignore DHCP client IDs or MAC addresses. Valid values are \"NONE\", \"CLIENT\", or \"MACADDR\". The default is \"NONE\".",
                        "enum": [
                            "NONE",
                            "CLIENT",
                            "MACADDR"
                        ],
                        "example": "Example ignore_id"
                    },
                    "ignore_mac_addresses": {
                        "type": "array",
                        "description": "A list of MAC addresses the appliance will ignore.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "immediate_fa_configuration": {
                        "type": "boolean",
                        "description": "Determines if the fixed address configuration takes effect immediately without DHCP service restart or not.",
                        "example": false
                    },
                    "ipv6_capture_hostname": {
                        "type": "boolean",
                        "description": "Determines if the IPv6 host name and lease time is captured or not while assigning a fixed address.",
                        "example": false
                    },
                    "ipv6_ddns_domainname": {
                        "type": "string",
                        "description": "The Grid-level DDNS domain name value.",
                        "example": "Example ipv6_ddns_domainname"
                    },
                    "ipv6_ddns_enable_option_fqdn": {
                        "type": "boolean",
                        "description": "Controls whether the FQDN option sent by the client is to be used, or if the server can automatically generate the FQDN.",
                        "example": false
                    },
                    "ipv6_ddns_server_always_updates": {
                        "type": "boolean",
                        "description": "Determines if the server always updates DNS or updates only if requested by the client.",
                        "example": false
                    },
                    "ipv6_ddns_ttl": {
                        "type": "integer",
                        "description": "The Grid-level IPv6 DDNS TTL value.",
                        "format": "int64",
                        "example": 1
                    },
                    "ipv6_default_prefix": {
                        "type": "string",
                        "description": "The Grid-level IPv6 default prefix.",
                        "example": "Example ipv6_default_prefix"
                    },
                    "ipv6_dns_update_style": {
                        "type": "string",
                        "description": "The update style for dynamic DHCPv6 DNS updates.",
                        "enum": [
                            "INTERIM",
                            "STANDARD"
                        ],
                        "example": "Example ipv6_dns_update_style"
                    },
                    "ipv6_domain_name": {
                        "type": "string",
                        "description": "The IPv6 domain name.",
                        "example": "Example ipv6_domain_name"
                    },
                    "ipv6_domain_name_servers": {
                        "type": "array",
                        "description": "The comma separated list of domain name server addresses in IPv6 address format.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "ipv6_enable_ddns": {
                        "type": "boolean",
                        "description": "Determines if sending DDNS updates by the DHCPv6 server is enabled or not.",
                        "example": false
                    },
                    "ipv6_enable_gss_tsig": {
                        "type": "boolean",
                        "description": "Determines whether the all appliances are enabled to receive GSS-TSIG authenticated updates from DHCPv6 clients.",
                        "example": false
                    },
                    "ipv6_enable_lease_scavenging": {
                        "type": "boolean",
                        "description": "Indicates whether DHCPv6 lease scavenging is enabled or disabled.",
                        "example": false
                    },
                    "ipv6_enable_retry_updates": {
                        "type": "boolean",
                        "description": "Determines if the DHCPv6 server retries failed dynamic DNS updates or not.",
                        "example": false
                    },
                    "ipv6_generate_hostname": {
                        "type": "boolean",
                        "description": "Determines if the server generates the hostname if it is not sent by the client.",
                        "example": false
                    },
                    "ipv6_gss_tsig_keys": {
                        "type": "array",
                        "description": "The list of GSS-TSIG keys for a Grid DHCPv6 object.",
                        "enum": [
                            "kerberoskey"
                        ],
                        "items": {
                            "type": "string",
                            "enum": [
                                "kerberoskey"
                            ]
                        }
                    },
                    "ipv6_kdc_server": {
                        "type": "string",
                        "description": "The IPv6 address or FQDN of the Kerberos server for DHCPv6 GSS-TSIG authentication.",
                        "example": "Example ipv6_kdc_server"
                    },
                    "ipv6_lease_scavenging_time": {
                        "type": "integer",
                        "description": "The Grid-level grace period (in seconds) to keep an expired lease before it is deleted by the scavenging process.",
                        "format": "int64",
                        "example": 1
                    },
                    "ipv6_microsoft_code_page": {
                        "type": "string",
                        "description": "The Grid-level Microsoft client DHCP IPv6 code page value. This value is the hostname translation code page for Microsoft DHCP IPv6 clients.",
                        "enum": [
                            "None",
                            "US (437)",
                            "Greek (737)",
                            "Baltic (775)",
                            "Multilingual Latin I (850)",
                            "Latin II (852)",
                            "Cyrillic (855)",
                            "Turkish (857)",
                            "Hebrew (862)",
                            "Russian (866)",
                            "Thai (874)",
                            "Japanese Shift-JIS (932)",
                            "Simplified Chinese GBK (936)",
                            "Korean (949)",
                            "Traditional Chinese Big5 (950)",
                            "Central Europe (1250)",
                            "Cyrillic (1251)",
                            "Latin I (1252)",
                            "Greek (1253)",
                            "Turkish (1254)",
                            "Hebrew (1255)",
                            "Arabic (1256)",
                            "Baltic (1257)",
                            "Vietnam (1258)",
                            "Latin 1 (ISO-8859-1)",
                            "Latin 2 (ISO-8859-2)",
                            "Latin 3 (ISO-8859-3)",
                            "Baltic (ISO-8859-4)",
                            "Cyrillic (ISO-8859-5)",
                            "Arabic (ISO-8859-6)",
                            "Greek (ISO-8859-7)",
                            "Hebrew (ISO-8859-8)",
                            "Turkish (ISO-8859-9)",
                            "Latin 9 (ISO-8859-15)"
                        ],
                        "example": "Example ipv6_microsoft_code_page"
                    },
                    "ipv6_options": {
                        "type": "array",
                        "description": "An array of DHCP option dhcpoption structs that lists the DHCPv6 options associated with the object.",
                        "enum": [
                            "dhcpoption"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/GridDhcppropertiesIpv6Options"
                        }
                    },
                    "ipv6_prefixes": {
                        "type": "array",
                        "description": "The Grid-level list of IPv6 prefixes.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "ipv6_recycle_leases": {
                        "type": "boolean",
                        "description": "Determines if the IPv6 recycle leases feature is enabled or not. If the feature is enabled, leases are kept in the Recycle Bin until one week after expiration. When the feature is disabled, the leases are irrecoverably deleted.",
                        "example": false
                    },
                    "ipv6_remember_expired_client_association": {
                        "type": "boolean",
                        "description": "Enable binding for expired DHCPv6 leases.",
                        "example": false
                    },
                    "ipv6_retry_updates_interval": {
                        "type": "integer",
                        "description": "Determines the retry interval when the member DHCPv6 server makes repeated attempts to send DDNS updates to a DNS server.",
                        "format": "int64",
                        "example": 1
                    },
                    "ipv6_txt_record_handling": {
                        "type": "string",
                        "description": "The Grid-level TXT record handling value. This value specifies how DHCPv6 should treat the TXT records when performing DNS updates.",
                        "enum": [
                            "ISC",
                            "ISC_TRANSITIONAL",
                            "IGNORE_CONTENTS",
                            "MS"
                        ],
                        "example": "Example ipv6_txt_record_handling"
                    },
                    "ipv6_update_dns_on_lease_renewal": {
                        "type": "boolean",
                        "description": "Controls whether the DHCPv6 server updates DNS when an IPv6 DHCP lease is renewed.",
                        "example": false
                    },
                    "kdc_server": {
                        "type": "string",
                        "description": "The IPv4 address or FQDN of the Kerberos server for DHCPv4 GSS-TSIG authentication.",
                        "example": "Example kdc_server"
                    },
                    "lease_logging_member": {
                        "type": "string",
                        "description": "The Grid member on which you want to store the DHCP lease history log. Infoblox recommends that you dedicate a member other than the master as a logging member. If possible, use this member solely for storing the DHCP lease history log. If you do not select a member, no logging can occur.",
                        "example": "Example lease_logging_member"
                    },
                    "lease_per_client_settings": {
                        "type": "string",
                        "description": "Defines how the appliance releases DHCP leases. Valid values are \"RELEASE_MACHING_ID\", \"NEVER_RELEASE\", or \"ONE_LEASE_PER_CLIENT\". The default is \"RELEASE_MATCHING_ID\".",
                        "enum": [
                            "RELEASE_MATCHING_ID",
                            "NEVER_RELEASE",
                            "ONE_LEASE_PER_CLIENT"
                        ],
                        "example": "Example lease_per_client_settings"
                    },
                    "lease_scavenge_time": {
                        "type": "integer",
                        "description": "Determines the lease scavenging time value. When this field is set, the appliance permanently deletes the free and backup leases, that remain in the database beyond a specified period of time. To disable lease scavenging, set the parameter to -1. The minimum positive value must be greater than 86400 seconds (1 day).",
                        "format": "int64",
                        "example": 1
                    },
                    "log_lease_events": {
                        "type": "boolean",
                        "description": "This value specifies whether the Grid DHCP members log lease events is enabled or not.",
                        "example": false
                    },
                    "logic_filter_rules": {
                        "type": "array",
                        "description": "This field contains the logic filters to be applied on the Infoblox Grid. This list corresponds to the match rules that are written to the dhcpd configuration file.",
                        "enum": [
                            "logicfilterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/GridDhcppropertiesLogicFilterRules"
                        }
                    },
                    "low_water_mark": {
                        "type": "integer",
                        "description": "Determines the low watermark value. If the percent of allocated addresses drops below this watermark, the appliance makes a syslog entry and if enabled, sends an e-mail notification.",
                        "format": "int64",
                        "example": 1
                    },
                    "low_water_mark_reset": {
                        "type": "integer",
                        "description": "Determines the low watermark reset value.If the percentage of allocated addresses exceeds this value, a corresponding SNMP trap is reset. A number that specifies the percentage of allocated addresses. The range is from 1 to 100. The low watermark reset value must be higher than the low watermark value.",
                        "format": "int64",
                        "example": 1
                    },
                    "microsoft_code_page": {
                        "type": "string",
                        "description": "The Microsoft client DHCP IPv4 code page value of a Grid. This value is the hostname translation code page for Microsoft DHCP IPv4 clients.",
                        "enum": [
                            "None",
                            "US (437)",
                            "Greek (737)",
                            "Baltic (775)",
                            "Multilingual Latin I (850)",
                            "Latin II (852)",
                            "Cyrillic (855)",
                            "Turkish (857)",
                            "Hebrew (862)",
                            "Russian (866)",
                            "Thai (874)",
                            "Japanese Shift-JIS (932)",
                            "Simplified Chinese GBK (936)",
                            "Korean (949)",
                            "Traditional Chinese Big5 (950)",
                            "Central Europe (1250)",
                            "Cyrillic (1251)",
                            "Latin I (1252)",
                            "Greek (1253)",
                            "Turkish (1254)",
                            "Hebrew (1255)",
                            "Arabic (1256)",
                            "Baltic (1257)",
                            "Vietnam (1258)",
                            "Latin 1 (ISO-8859-1)",
                            "Latin 2 (ISO-8859-2)",
                            "Latin 3 (ISO-8859-3)",
                            "Baltic (ISO-8859-4)",
                            "Cyrillic (ISO-8859-5)",
                            "Arabic (ISO-8859-6)",
                            "Greek (ISO-8859-7)",
                            "Hebrew (ISO-8859-8)",
                            "Turkish (ISO-8859-9)",
                            "Latin 9 (ISO-8859-15)"
                        ],
                        "example": "Example microsoft_code_page"
                    },
                    "nextserver": {
                        "type": "string",
                        "description": "The next server value of a DHCP server. This value is the IP address or name of the boot file server on which the boot file is stored.",
                        "example": "Example nextserver"
                    },
                    "option60_match_rules": {
                        "type": "array",
                        "description": "The list of option 60 match rules.",
                        "enum": [
                            "option60matchrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/GridDhcppropertiesOption60MatchRules"
                        }
                    },
                    "options": {
                        "type": "array",
                        "description": "An array of DHCP option dhcpoption structs that lists the DHCP options associated with the object. Note that WAPI does not return special options 'routers', 'domain-name-servers', 'domain-name' and 'broadcast-address' with empty values for this object.",
                        "enum": [
                            "dhcpoption"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/GridDhcppropertiesOptions"
                        }
                    },
                    "ping_count": {
                        "type": "integer",
                        "description": "Specifies the number of pings that the Infoblox appliance sends to an IP address to verify that it is not in use. Values are range is from 0 to 10, where 0 disables pings.",
                        "format": "int64",
                        "example": 1
                    },
                    "ping_timeout": {
                        "type": "integer",
                        "description": "Indicates the number of milliseconds the appliance waits for a response to its ping. Valid values are 100, 500, 1000, 2000, 3000, 4000 and 5000 milliseconds.",
                        "format": "int64",
                        "example": 1
                    },
                    "preferred_lifetime": {
                        "type": "integer",
                        "description": "The preferred lifetime value.",
                        "format": "int64",
                        "example": 1
                    },
                    "prefix_length_mode": {
                        "type": "string",
                        "description": "The Prefix length mode for DHCPv6.",
                        "enum": [
                            "EXACT",
                            "IGNORE",
                            "MINIMUM",
                            "MAXIMUM",
                            "PREFER"
                        ],
                        "example": "Example prefix_length_mode"
                    },
                    "protocol_hostname_rewrite_policies": {
                        "type": "array",
                        "description": "The list of hostname rewrite policies.",
                        "enum": [
                            "hostnamerewritepolicy"
                        ],
                        "items": {
                            "type": "string",
                            "enum": [
                                "hostnamerewritepolicy"
                            ]
                        }
                    },
                    "pxe_lease_time": {
                        "type": "integer",
                        "description": "Specifies the duration of time it takes a host to connect to a boot server, such as a TFTP server, and download the file it needs to boot. A 32-bit unsigned integer that represents the duration, in seconds, for which the update is cached. Zero indicates that the update is not cached.",
                        "format": "int64",
                        "example": 1
                    },
                    "recycle_leases": {
                        "type": "boolean",
                        "description": "Determines if the recycle leases feature is enabled or not. If you enabled this feature, and then delete a DHCP range, the appliance stores active leases from this range up to one week after the leases expires.",
                        "example": false
                    },
                    "restart_setting": {
                        "$ref": "#/components/schemas/GridDhcppropertiesRestartSetting"
                    },
                    "retry_ddns_updates": {
                        "type": "boolean",
                        "description": "Indicates whether the DHCP server makes repeated attempts to send DDNS updates to a DNS server.",
                        "example": false
                    },
                    "syslog_facility": {
                        "type": "string",
                        "description": "The syslog facility is the location on the syslog server to which you want to sort the syslog messages.",
                        "enum": [
                            "DAEMON",
                            "LOCAL0",
                            "LOCAL1",
                            "LOCAL2",
                            "LOCAL3",
                            "LOCAL4",
                            "LOCAL5",
                            "LOCAL6",
                            "LOCAL7"
                        ],
                        "example": "Example syslog_facility"
                    },
                    "txt_record_handling": {
                        "type": "string",
                        "description": "The Grid-level TXT record handling value. This value specifies how DHCP should treat the TXT records when performing DNS updates.",
                        "enum": [
                            "ISC",
                            "ISC_TRANSITIONAL",
                            "IGNORE_CONTENTS",
                            "MS"
                        ],
                        "example": "Example txt_record_handling"
                    },
                    "update_dns_on_lease_renewal": {
                        "type": "boolean",
                        "description": "Controls whether the DHCP server updates DNS when a DHCP lease is renewed.",
                        "example": false
                    },
                    "valid_lifetime": {
                        "type": "integer",
                        "description": "The valid lifetime for the Grid members.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "GridDhcppropertiesIpv6Options": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the DHCP option.",
                        "example": "Example name"
                    },
                    "num": {
                        "type": "integer",
                        "description": "The code of the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "vendor_class": {
                        "type": "string",
                        "description": "The name of the space this DHCP option is associated to.",
                        "example": "Example vendor_class"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the DHCP option",
                        "example": "Example value"
                    },
                    "use_option": {
                        "type": "boolean",
                        "description": "Only applies to special options that are displayed separately from other options and have a use flag. These options are: * routers * router-templates * domain-name-servers * domain-name * broadcast-address * broadcast-address-offset * dhcp-lease-time * dhcp6.name-servers",
                        "example": false
                    }
                }
            },
            "GridDhcppropertiesLogicFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The filter name.",
                        "example": "Example filter"
                    },
                    "type": {
                        "type": "string",
                        "description": "The filter type. Valid values are: * MAC * NAC * Option",
                        "example": "Example type"
                    }
                }
            },
            "GridDhcppropertiesOption60MatchRules": {
                "type": "object",
                "properties": {
                    "match_value": {
                        "type": "string",
                        "description": "The match value for this DHCP Option 60 match rule.",
                        "example": "Example match_value"
                    },
                    "option_space": {
                        "type": "string",
                        "description": "The option space for this DHCP Option 60 match rule.",
                        "example": "Example option_space"
                    },
                    "is_substring": {
                        "type": "boolean",
                        "description": "Determines if the match value is a substring.",
                        "example": false
                    },
                    "substring_offset": {
                        "type": "integer",
                        "description": "The offset of match value for this DHCP Option 60 match rule.",
                        "format": "int64",
                        "example": 1
                    },
                    "substring_length": {
                        "type": "integer",
                        "description": "The length of match value for this DHCP Option 60 match rule.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "GridDhcppropertiesOptions": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the DHCP option.",
                        "example": "Example name"
                    },
                    "num": {
                        "type": "integer",
                        "description": "The code of the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "vendor_class": {
                        "type": "string",
                        "description": "The name of the space this DHCP option is associated to.",
                        "example": "Example vendor_class"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the DHCP option",
                        "example": "Example value"
                    },
                    "use_option": {
                        "type": "boolean",
                        "description": "Only applies to special options that are displayed separately from other options and have a use flag. These options are: * routers * router-templates * domain-name-servers * domain-name * broadcast-address * broadcast-address-offset * dhcp-lease-time * dhcp6.name-servers",
                        "example": false
                    }
                }
            },
            "GridDhcppropertiesRestartSetting": {
                "type": "object",
                "properties": {
                    "delay": {
                        "type": "integer",
                        "description": "The time duration to delay a restart for a restart group.",
                        "format": "int64",
                        "example": 1
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "The duration of timeout for a restart group. The value \"-1\" means infinite.",
                        "format": "int64",
                        "example": 1
                    },
                    "restart_offline": {
                        "type": "boolean",
                        "description": "Determines whether the Grid should try to restart offline member.",
                        "example": false
                    }
                }
            },
            "ListGridDhcppropertiesResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __GridDhcpproperties__ objects.",
                        "type": "array",
                        "title": "ListGridDhcppropertiesResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/GridDhcpproperties"
                        }
                    },
                    {
                        "description": "The response format to retrieve __GridDhcpproperties__ objects.",
                        "type": "object",
                        "title": "ListGridDhcppropertiesResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GridDhcpproperties"
                                }
                            }
                        }
                    }
                ]
            },
            "GetGridDhcppropertiesResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GridDhcpproperties"
                    },
                    {
                        "description": "The response format to retrieve __GridDhcpproperties__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetGridDhcppropertiesResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridDhcpproperties"
                            }
                        }
                    }
                ]
            },
            "UpdateGridDhcppropertiesResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __GridDhcpproperties__ in object format.",
                        "type": "object",
                        "title": "UpdateGridDhcppropertiesResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridDhcpproperties"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __GridDhcpproperties__ .",
                        "type": "string",
                        "title": "UpdateGridDhcppropertiesResponse"
                    }
                ]
            },
            "GridServicerestartGroup": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the Restart Group; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "is_default": {
                        "type": "boolean",
                        "description": "Determines if this Restart Group is the default group.",
                        "readOnly": true,
                        "example": false
                    },
                    "last_updated_time": {
                        "type": "integer",
                        "description": "The timestamp when the status of the latest request has changed.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "members": {
                        "type": "array",
                        "description": "The list of members belonging to the group.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "mode": {
                        "type": "string",
                        "description": "The default restart method for this Restart Group.",
                        "enum": [
                            "SEQUENTIAL",
                            "SIMULTANEOUS"
                        ],
                        "example": "Example mode"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this Restart Group.",
                        "example": "Example name"
                    },
                    "position": {
                        "type": "integer",
                        "description": "The order to restart.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "recurring_schedule": {
                        "$ref": "#/components/schemas/GridServicerestartGroupRecurringSchedule"
                    },
                    "requests": {
                        "type": "array",
                        "description": "The list of requests associated with a restart group.",
                        "enum": [
                            "grid:servicerestart:request"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "grid:servicerestart:request"
                            ]
                        }
                    },
                    "service": {
                        "type": "string",
                        "description": "The applicable service for this Restart Group.",
                        "enum": [
                            "DHCP",
                            "DNS"
                        ],
                        "example": "Example service"
                    },
                    "status": {
                        "type": "string",
                        "description": "The restart status for a restart group.",
                        "readOnly": true,
                        "example": "Example status"
                    }
                }
            },
            "GridServicerestartGroupRecurringSchedule": {
                "type": "object",
                "properties": {
                    "services": {
                        "type": "array",
                        "description": "The list of applicable services for the restart.",
                        "enum": [
                            "ALL",
                            "DNS",
                            "DHCP",
                            "DHCPV4",
                            "DHCPV6"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "mode": {
                        "type": "string",
                        "description": "The restart method for a Grid restart.",
                        "enum": [
                            "GROUPED",
                            "SEQUENTIAL",
                            "SIMULTANEOUS"
                        ],
                        "example": "Example mode"
                    },
                    "schedule": {
                        "description": "The Schedule Setting struct that determines the schedule for the restart.",
                        "enum": [
                            "setting:schedule"
                        ],
                        "$ref": "#/components/schemas/GridservicerestartgrouprecurringscheduleSchedule"
                    },
                    "force": {
                        "type": "boolean",
                        "description": "Determines if the Restart Group should have a force restart.",
                        "example": false
                    }
                }
            },
            "GridservicerestartgrouprecurringscheduleSchedule": {
                "type": "object",
                "properties": {
                    "weekdays": {
                        "type": "array",
                        "description": "Days of the week when scheduling is triggered.",
                        "enum": [
                            "SATURDAY",
                            "SUNDAY",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for the schedule.",
                        "example": "Example time_zone"
                    },
                    "recurring_time": {
                        "type": "integer",
                        "description": "The recurring time for the schedule in Epoch seconds format. This field is obsolete and is preserved only for backward compatibility purposes. Please use other applicable fields to define the recurring schedule. DO NOT use recurring_time together with these fields. If you use recurring_time with other fields to define the recurring schedule, recurring_time has priority over year, hour_of_day, and minutes_past_hour and will override the values of these fields, although it does not override month and day_of_month. In this case, the recurring time value might be different than the intended value that you define.",
                        "format": "int64",
                        "example": 1
                    },
                    "frequency": {
                        "type": "string",
                        "description": "The frequency for the scheduled task.",
                        "enum": [
                            "DAILY",
                            "HOURLY",
                            "MONTHLY",
                            "WEEKLY"
                        ],
                        "example": "Example frequency"
                    },
                    "every": {
                        "type": "integer",
                        "description": "The number of frequency to wait before repeating the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "minutes_past_hour": {
                        "type": "integer",
                        "description": "The minutes past the hour for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "hour_of_day": {
                        "type": "integer",
                        "description": "The hour of day for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "year": {
                        "type": "integer",
                        "description": "The year for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "month": {
                        "type": "integer",
                        "description": "The month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "day_of_month": {
                        "type": "integer",
                        "description": "The day of the month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "repeat": {
                        "type": "string",
                        "description": "Indicates if the scheduled task will be repeated or run only once.",
                        "enum": [
                            "ONCE",
                            "RECUR"
                        ],
                        "example": "Example repeat"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "If set to True, the scheduled task is disabled.",
                        "example": false
                    }
                }
            },
            "ListGridServicerestartGroupResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __GridServicerestartGroup__ objects.",
                        "type": "array",
                        "title": "ListGridServicerestartGroupResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/GridServicerestartGroup"
                        }
                    },
                    {
                        "description": "The response format to retrieve __GridServicerestartGroup__ objects.",
                        "type": "object",
                        "title": "ListGridServicerestartGroupResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GridServicerestartGroup"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateGridServicerestartGroupResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __GridServicerestartGroup__ in object format.",
                        "type": "object",
                        "title": "CreateGridServicerestartGroupResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridServicerestartGroup"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __GridServicerestartGroup__.",
                        "type": "string",
                        "title": "CreateGridServicerestartGroupResponse"
                    }
                ]
            },
            "GetGridServicerestartGroupResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GridServicerestartGroup"
                    },
                    {
                        "description": "The response format to retrieve __GridServicerestartGroup__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetGridServicerestartGroupResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridServicerestartGroup"
                            }
                        }
                    }
                ]
            },
            "UpdateGridServicerestartGroupResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __GridServicerestartGroup__ in object format.",
                        "type": "object",
                        "title": "UpdateGridServicerestartGroupResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridServicerestartGroup"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __GridServicerestartGroup__ .",
                        "type": "string",
                        "title": "UpdateGridServicerestartGroupResponse"
                    }
                ]
            },
            "GridServicerestartStatus": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "failures": {
                        "type": "integer",
                        "description": "The number of failed requests.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "finished": {
                        "type": "integer",
                        "description": "The number of finished requests.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "grouped": {
                        "type": "string",
                        "description": "The type of grouping.",
                        "enum": [
                            "GRID",
                            "GROUP"
                        ],
                        "readOnly": true,
                        "example": "Example grouped"
                    },
                    "needed_restart": {
                        "type": "integer",
                        "description": "The number of created yet unprocessed requests for restart.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "no_restart": {
                        "type": "integer",
                        "description": "The number of requests that did not require a restart.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "parent": {
                        "type": "string",
                        "description": "A reference to the grid or grid:servicerestart:group object associated with the request.",
                        "readOnly": true,
                        "example": "Example parent"
                    },
                    "pending": {
                        "type": "integer",
                        "description": "The number of requests that are pending a restart.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "pending_restart": {
                        "type": "integer",
                        "description": "The number of forced or needed requests pending for restart.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "processing": {
                        "type": "integer",
                        "description": "The number of not forced and not needed requests pending for restart.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "restarting": {
                        "type": "integer",
                        "description": "The number of service restarts for corresponding members.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "success": {
                        "type": "integer",
                        "description": "The number of requests associated with successful restarts.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "timeouts": {
                        "type": "integer",
                        "description": "The number of timeout requests.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "ListGridServicerestartStatusResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __GridServicerestartStatus__ objects.",
                        "type": "array",
                        "title": "ListGridServicerestartStatusResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/GridServicerestartStatus"
                        }
                    },
                    {
                        "description": "The response format to retrieve __GridServicerestartStatus__ objects.",
                        "type": "object",
                        "title": "ListGridServicerestartStatusResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GridServicerestartStatus"
                                }
                            }
                        }
                    }
                ]
            },
            "GetGridServicerestartStatusResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GridServicerestartStatus"
                    },
                    {
                        "description": "The response format to retrieve __GridServicerestartStatus__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetGridServicerestartStatusResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridServicerestartStatus"
                            }
                        }
                    }
                ]
            },
            "UpdateGridServicerestartStatusResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __GridServicerestartStatus__ in object format.",
                        "type": "object",
                        "title": "UpdateGridServicerestartStatusResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridServicerestartStatus"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __GridServicerestartStatus__ .",
                        "type": "string",
                        "title": "UpdateGridServicerestartStatusResponse"
                    }
                ]
            },
            "GridServicerestartRequest": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "error": {
                        "type": "string",
                        "description": "The error message if restart has failed.",
                        "readOnly": true,
                        "example": "Example error"
                    },
                    "forced": {
                        "type": "boolean",
                        "description": "Indicates if this is a force restart.",
                        "readOnly": true,
                        "example": false
                    },
                    "group": {
                        "type": "string",
                        "description": "The name of the Restart Group associated with the request.",
                        "readOnly": true,
                        "example": "Example group"
                    },
                    "last_updated_time": {
                        "type": "integer",
                        "description": "The timestamp when the status of the request has changed.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "member": {
                        "type": "string",
                        "description": "The member to restart.",
                        "readOnly": true,
                        "example": "Example member"
                    },
                    "needed": {
                        "type": "string",
                        "description": "Indicates if restart is needed.",
                        "enum": [
                            "UNKNOWN",
                            "CHECKING",
                            "YES",
                            "NO",
                            "FAILURE"
                        ],
                        "readOnly": true,
                        "example": "Example needed"
                    },
                    "order": {
                        "type": "integer",
                        "description": "The order to restart.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "result": {
                        "type": "string",
                        "description": "The result of the restart operation.",
                        "enum": [
                            "SUCCESS",
                            "TIMEOUT",
                            "FAILURE",
                            "NORESTART"
                        ],
                        "readOnly": true,
                        "example": "Example result"
                    },
                    "service": {
                        "type": "string",
                        "description": "The service to restart.",
                        "enum": [
                            "DNS",
                            "DHCPV4",
                            "DHCPV6"
                        ],
                        "readOnly": true,
                        "example": "Example service"
                    },
                    "state": {
                        "type": "string",
                        "description": "The state of the request.",
                        "enum": [
                            "NEW",
                            "QUEUED",
                            "PROCESSING",
                            "FINISHED"
                        ],
                        "readOnly": true,
                        "example": "Example state"
                    }
                }
            },
            "ListGridServicerestartRequestResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __GridServicerestartRequest__ objects.",
                        "type": "array",
                        "title": "ListGridServicerestartRequestResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/GridServicerestartRequest"
                        }
                    },
                    {
                        "description": "The response format to retrieve __GridServicerestartRequest__ objects.",
                        "type": "object",
                        "title": "ListGridServicerestartRequestResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GridServicerestartRequest"
                                }
                            }
                        }
                    }
                ]
            },
            "GetGridServicerestartRequestResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GridServicerestartRequest"
                    },
                    {
                        "description": "The response format to retrieve __GridServicerestartRequest__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetGridServicerestartRequestResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridServicerestartRequest"
                            }
                        }
                    }
                ]
            },
            "UpdateGridServicerestartRequestResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __GridServicerestartRequest__ in object format.",
                        "type": "object",
                        "title": "UpdateGridServicerestartRequestResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridServicerestartRequest"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __GridServicerestartRequest__ .",
                        "type": "string",
                        "title": "UpdateGridServicerestartRequestResponse"
                    }
                ]
            },
            "Mastergrid": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "address": {
                        "type": "string",
                        "description": "The domain name or IP address for the Master Grid.",
                        "example": "Example address"
                    },
                    "connection_disabled": {
                        "type": "boolean",
                        "description": "Determines if the sub-grid is currently disabled.",
                        "readOnly": true,
                        "example": false
                    },
                    "connection_timestamp": {
                        "type": "integer",
                        "description": "The timestamp that indicates when the connection to the Master Grid was established.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "detached": {
                        "type": "boolean",
                        "description": "The detached flag for the Master Grid.",
                        "readOnly": true,
                        "example": false
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Determines if the Master Grid is enabled.",
                        "example": false
                    },
                    "joined": {
                        "type": "boolean",
                        "description": "The flag shows if the Grid has joined the Master Grid.",
                        "readOnly": true,
                        "example": false
                    },
                    "last_event": {
                        "type": "string",
                        "description": "The Master Grid's last event.",
                        "enum": [
                            "EVICT",
                            "DISABLE",
                            "MESSAGE",
                            "ATTACH",
                            "DETACH"
                        ],
                        "readOnly": true,
                        "example": "Example last_event"
                    },
                    "last_event_details": {
                        "type": "string",
                        "description": "The details of the Master Grid's last event.",
                        "readOnly": true,
                        "example": "Example last_event_details"
                    },
                    "last_sync_timestamp": {
                        "type": "integer",
                        "description": "The timestamp or the last synchronization operation with the Master Grid.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "port": {
                        "type": "integer",
                        "description": "The Master Grid port to which the Grid connects.",
                        "format": "int64",
                        "example": 1
                    },
                    "status": {
                        "type": "string",
                        "description": "The Master Grid's status.",
                        "enum": [
                            "FAILED",
                            "WARNING",
                            "WORKING",
                            "INACTIVE"
                        ],
                        "readOnly": true,
                        "example": "Example status"
                    },
                    "use_mgmt_port": {
                        "type": "boolean",
                        "description": "The flag shows if the MGMT port was used to join the Grid.",
                        "readOnly": true,
                        "example": false
                    }
                }
            },
            "ListMastergridResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Mastergrid__ objects.",
                        "type": "array",
                        "title": "ListMastergridResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Mastergrid"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Mastergrid__ objects.",
                        "type": "object",
                        "title": "ListMastergridResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Mastergrid"
                                }
                            }
                        }
                    }
                ]
            },
            "GetMastergridResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Mastergrid"
                    },
                    {
                        "description": "The response format to retrieve __Mastergrid__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetMastergridResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Mastergrid"
                            }
                        }
                    }
                ]
            },
            "UpdateMastergridResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Mastergrid__ in object format.",
                        "type": "object",
                        "title": "UpdateMastergridResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Mastergrid"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Mastergrid__ .",
                        "type": "string",
                        "title": "UpdateMastergridResponse"
                    }
                ]
            },
            "GridDashboard": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "analytics_tunneling_event_critical_threshold": {
                        "type": "integer",
                        "description": "The Grid Dashboard critical threshold for Analytics tunneling events.",
                        "format": "int64",
                        "example": 1
                    },
                    "analytics_tunneling_event_warning_threshold": {
                        "type": "integer",
                        "description": "The Grid Dashboard warning threshold for Analytics tunneling events.",
                        "format": "int64",
                        "example": 1
                    },
                    "atp_critical_event_critical_threshold": {
                        "type": "integer",
                        "description": "The Grid Dashboard critical threshold for ATP critical events.",
                        "format": "int64",
                        "example": 1
                    },
                    "atp_critical_event_warning_threshold": {
                        "type": "integer",
                        "description": "The Grid Dashboard warning threshold for ATP critical events.",
                        "format": "int64",
                        "example": 1
                    },
                    "atp_major_event_critical_threshold": {
                        "type": "integer",
                        "description": "The Grid Dashboard critical threshold for ATP major events.",
                        "format": "int64",
                        "example": 1
                    },
                    "atp_major_event_warning_threshold": {
                        "type": "integer",
                        "description": "The Grid Dashboard warning threshold for ATP major events.",
                        "format": "int64",
                        "example": 1
                    },
                    "atp_warning_event_critical_threshold": {
                        "type": "integer",
                        "description": "The Grid Dashboard critical threshold for ATP warning events.",
                        "format": "int64",
                        "example": 1
                    },
                    "atp_warning_event_warning_threshold": {
                        "type": "integer",
                        "description": "The Grid Dashboard warning threshold for ATP warning events.",
                        "format": "int64",
                        "example": 1
                    },
                    "rpz_blocked_hit_critical_threshold": {
                        "type": "integer",
                        "description": "The critical threshold value for blocked RPZ hits in the Grid dashboard.",
                        "format": "int64",
                        "example": 1
                    },
                    "rpz_blocked_hit_warning_threshold": {
                        "type": "integer",
                        "description": "The warning threshold value for blocked RPZ hits in the Grid dashboard.",
                        "format": "int64",
                        "example": 1
                    },
                    "rpz_passthru_event_critical_threshold": {
                        "type": "integer",
                        "description": "The Grid Dashboard critical threshold for RPZ passthru events.",
                        "format": "int64",
                        "example": 1
                    },
                    "rpz_passthru_event_warning_threshold": {
                        "type": "integer",
                        "description": "The Grid Dashboard warning threshold for RPZ passthru events.",
                        "format": "int64",
                        "example": 1
                    },
                    "rpz_substituted_hit_critical_threshold": {
                        "type": "integer",
                        "description": "The critical threshold value for substituted RPZ hits in the Grid dashboard.",
                        "format": "int64",
                        "example": 1
                    },
                    "rpz_substituted_hit_warning_threshold": {
                        "type": "integer",
                        "description": "The warning threshold value for substituted RPZ hits in the Grid dashboard.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "ListGridDashboardResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __GridDashboard__ objects.",
                        "type": "array",
                        "title": "ListGridDashboardResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/GridDashboard"
                        }
                    },
                    {
                        "description": "The response format to retrieve __GridDashboard__ objects.",
                        "type": "object",
                        "title": "ListGridDashboardResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GridDashboard"
                                }
                            }
                        }
                    }
                ]
            },
            "GetGridDashboardResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GridDashboard"
                    },
                    {
                        "description": "The response format to retrieve __GridDashboard__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetGridDashboardResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridDashboard"
                            }
                        }
                    }
                ]
            },
            "UpdateGridDashboardResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __GridDashboard__ in object format.",
                        "type": "object",
                        "title": "UpdateGridDashboardResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridDashboard"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __GridDashboard__ .",
                        "type": "string",
                        "title": "UpdateGridDashboardResponse"
                    }
                ]
            },
            "GridDns": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "add_client_ip_mac_options": {
                        "type": "boolean",
                        "description": "Add custom IP, MAC and DNS View name ENDS0 options to outgoing recursive queries.",
                        "example": false
                    },
                    "allow_bulkhost_ddns": {
                        "type": "string",
                        "description": "Determines if DDNS bulk host is allowed or not.",
                        "enum": [
                            "REFUSAL",
                            "SUCCESS"
                        ],
                        "example": "Example allow_bulkhost_ddns"
                    },
                    "allow_gss_tsig_zone_updates": {
                        "type": "boolean",
                        "description": "Determines whether GSS-TSIG zone update is enabled for all Grid members.",
                        "example": false
                    },
                    "allow_query": {
                        "type": "array",
                        "description": "Determines if queries from the specified IPv4 or IPv6 addresses and networks are allowed or not. The appliance can also use Transaction Signature (TSIG) keys to authenticate the queries.",
                        "enum": [
                            "addressac"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/GridDnsAllowQuery"
                        }
                    },
                    "allow_recursive_query": {
                        "type": "boolean",
                        "description": "Determines if the responses to recursive queries are enabled or not.",
                        "example": false
                    },
                    "allow_transfer": {
                        "type": "array",
                        "description": "Determines if zone transfers from specified IPv4 or IPv6 addresses and networks or transfers from hosts authenticated by Transaction signature (TSIG) key are allowed or not.",
                        "enum": [
                            "addressac"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/GridDnsAllowTransfer"
                        }
                    },
                    "allow_update": {
                        "type": "array",
                        "description": "Determines if dynamic updates from specified IPv4 or IPv6 addresses, networks or from host authenticated by TSIG key are allowed or not.",
                        "enum": [
                            "addressac"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/GridDnsAllowUpdate"
                        }
                    },
                    "anonymize_response_logging": {
                        "type": "boolean",
                        "description": "Determines if the anonymization of captured DNS responses is enabled or disabled.",
                        "example": false
                    },
                    "attack_mitigation": {
                        "$ref": "#/components/schemas/GridDnsAttackMitigation"
                    },
                    "auto_blackhole": {
                        "$ref": "#/components/schemas/GridDnsAutoBlackhole"
                    },
                    "bind_check_names_policy": {
                        "type": "string",
                        "description": "The BIND check names policy, which indicates the action the appliance takes when it encounters host names that do not comply with the Strict Hostname Checking policy. This method applies only if the host name restriction policy is set to \"Strict Hostname Checking\".",
                        "enum": [
                            "FAIL",
                            "WARN"
                        ],
                        "example": "Example bind_check_names_policy"
                    },
                    "bind_hostname_directive": {
                        "type": "string",
                        "description": "The value of the hostname directive for BIND.",
                        "enum": [
                            "NONE",
                            "HOSTNAME"
                        ],
                        "example": "Example bind_hostname_directive"
                    },
                    "blackhole_list": {
                        "type": "array",
                        "description": "The list of IPv4 or IPv6 addresses and networks from which DNS queries are blocked.",
                        "enum": [
                            "addressac"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/GridDnsBlackholeList"
                        }
                    },
                    "blacklist_action": {
                        "type": "string",
                        "description": "The action to perform when a domain name matches the pattern defined in a rule that is specified by the blacklist ruleset.",
                        "enum": [
                            "REDIRECT",
                            "REFUSE"
                        ],
                        "example": "Example blacklist_action"
                    },
                    "blacklist_log_query": {
                        "type": "boolean",
                        "description": "Determines if blacklist redirection queries are logged or not.",
                        "example": false
                    },
                    "blacklist_redirect_addresses": {
                        "type": "array",
                        "description": "The IP addresses the appliance includes in the response it sends in place of a blacklisted IP address.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "blacklist_redirect_ttl": {
                        "type": "integer",
                        "description": "The TTL value (in seconds) of the synthetic DNS responses that result from blacklist redirection.",
                        "format": "int64",
                        "example": 1
                    },
                    "blacklist_rulesets": {
                        "type": "array",
                        "description": "The DNS Ruleset object names assigned at the Grid level for blacklist redirection.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "bulk_host_name_templates": {
                        "type": "array",
                        "description": "The list of bulk host name templates. There are four Infoblox predefined bulk host name templates. Template Name Template Format \"Four Octets\" -$1-$2-$3-$4 \"Three Octets\" -$2-$3-$4 \"Two Octets\" -$3-$4 \"One Octet\" -$4",
                        "enum": [
                            "bulkhostnametemplate"
                        ],
                        "items": {
                            "type": "string",
                            "enum": [
                                "bulkhostnametemplate"
                            ]
                        }
                    },
                    "capture_dns_queries_on_all_domains": {
                        "type": "boolean",
                        "description": "Determines if the capture of DNS queries for all domains is enabled or disabled.",
                        "example": false
                    },
                    "check_names_for_ddns_and_zone_transfer": {
                        "type": "boolean",
                        "description": "Determines whether the application of BIND check-names for zone transfers and DDNS updates are enabled.",
                        "example": false
                    },
                    "client_subnet_domains": {
                        "type": "array",
                        "description": "The list of zone domain names that are allowed or forbidden for EDNS client subnet (ECS) recursion.",
                        "enum": [
                            "clientsubnetdomain"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/GridDnsClientSubnetDomains"
                        }
                    },
                    "client_subnet_ipv4_prefix_length": {
                        "type": "integer",
                        "description": "Default IPv4 Source Prefix-Length used when sending queries with EDNS client subnet option.",
                        "format": "int64",
                        "example": 1
                    },
                    "client_subnet_ipv6_prefix_length": {
                        "type": "integer",
                        "description": "Default IPv6 Source Prefix-Length used when sending queries with EDNS client subnet option.",
                        "format": "int64",
                        "example": 1
                    },
                    "copy_client_ip_mac_options": {
                        "type": "boolean",
                        "description": "Copy custom IP, MAC and DNS View name ENDS0 options from incoming to outgoing recursive queries.",
                        "example": false
                    },
                    "copy_xfer_to_notify": {
                        "type": "boolean",
                        "description": "The allowed IPs, from the zone transfer list, added to the also-notify statement in the named.conf file.",
                        "example": false
                    },
                    "custom_root_name_servers": {
                        "type": "array",
                        "description": "The list of customized root nameserver(s). You can use Internet root name servers or specify host names and IP addresses of custom root name servers.",
                        "enum": [
                            "extserver"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/GridDnsCustomRootNameServers"
                        }
                    },
                    "ddns_force_creation_timestamp_update": {
                        "type": "boolean",
                        "description": "Defines whether creation timestamp of RR should be updated ' when DDNS update happens even if there is no change to ' the RR.",
                        "example": false
                    },
                    "ddns_principal_group": {
                        "type": "string",
                        "description": "The DDNS Principal cluster group name.",
                        "example": "Example ddns_principal_group"
                    },
                    "ddns_principal_tracking": {
                        "type": "boolean",
                        "description": "Determines if the DDNS principal track is enabled or disabled.",
                        "example": false
                    },
                    "ddns_restrict_patterns": {
                        "type": "boolean",
                        "description": "Determines if an option to restrict DDNS update request based on FQDN patterns is enabled or disabled.",
                        "example": false
                    },
                    "ddns_restrict_patterns_list": {
                        "type": "array",
                        "description": "The unordered list of restriction patterns for an option of to restrict DDNS updates based on FQDN patterns.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "ddns_restrict_protected": {
                        "type": "boolean",
                        "description": "Determines if an option to restrict DDNS update request to protected resource records is enabled or disabled.",
                        "example": false
                    },
                    "ddns_restrict_secure": {
                        "type": "boolean",
                        "description": "Determines if DDNS update request for principal other than target resource record's principal is restricted.",
                        "example": false
                    },
                    "ddns_restrict_static": {
                        "type": "boolean",
                        "description": "Determines if an option to restrict DDNS update request to resource records which are marked as 'STATIC' is enabled or disabled.",
                        "example": false
                    },
                    "default_bulk_host_name_template": {
                        "type": "string",
                        "description": "Default bulk host name of a Grid DNS.",
                        "example": "Example default_bulk_host_name_template"
                    },
                    "default_ttl": {
                        "type": "integer",
                        "description": "The default TTL value of a Grid DNS object. This interval tells the secondary how long the data can be cached.",
                        "format": "int64",
                        "example": 1
                    },
                    "disable_edns": {
                        "type": "boolean",
                        "description": "Determines if the EDNS0 support for queries that require recursive resolution on Grid members is enabled or not.",
                        "example": false
                    },
                    "dns64_groups": {
                        "type": "array",
                        "description": "The list of DNS64 synthesis groups associated with this Grid DNS object.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "dns_cache_acceleration_ttl": {
                        "type": "integer",
                        "description": "The minimum TTL value, in seconds, that a DNS record must have in order for it to be cached by the DNS Cache Acceleration service. An integer from 1 to 65000 that represents the TTL in seconds.",
                        "format": "int64",
                        "example": 1
                    },
                    "dns_health_check_anycast_control": {
                        "type": "boolean",
                        "description": "Determines if the anycast failure (BFD session down) is enabled on member failure or not.",
                        "example": false
                    },
                    "dns_health_check_domain_list": {
                        "type": "array",
                        "description": "The list of domain names for the DNS health check.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "dns_health_check_interval": {
                        "type": "integer",
                        "description": "The time interval (in seconds) for DNS health check.",
                        "format": "int64",
                        "example": 1
                    },
                    "dns_health_check_recursion_flag": {
                        "type": "boolean",
                        "description": "Determines if the recursive DNS health check is enabled or not.",
                        "example": false
                    },
                    "dns_health_check_retries": {
                        "type": "integer",
                        "description": "The number of DNS health check retries.",
                        "format": "int64",
                        "example": 1
                    },
                    "dns_health_check_timeout": {
                        "type": "integer",
                        "description": "The DNS health check timeout interval (in seconds).",
                        "format": "int64",
                        "example": 1
                    },
                    "dns_query_capture_file_time_limit": {
                        "type": "integer",
                        "description": "The time limit (in minutes) for the DNS query capture file.",
                        "format": "int64",
                        "example": 1
                    },
                    "dnssec_blacklist_enabled": {
                        "type": "boolean",
                        "description": "Determines if the blacklist rules for DNSSEC-enabled clients are enabled or not.",
                        "example": false
                    },
                    "dnssec_dns64_enabled": {
                        "type": "boolean",
                        "description": "Determines if the DNS64 groups for DNSSEC-enabled clients are enabled or not.",
                        "example": false
                    },
                    "dnssec_enabled": {
                        "type": "boolean",
                        "description": "Determines if the DNS security extension is enabled or not.",
                        "example": false
                    },
                    "dnssec_expired_signatures_enabled": {
                        "type": "boolean",
                        "description": "Determines when the DNS member accepts expired signatures.",
                        "example": false
                    },
                    "dnssec_key_params": {
                        "$ref": "#/components/schemas/GridDnsDnssecKeyParams"
                    },
                    "dnssec_negative_trust_anchors": {
                        "type": "array",
                        "description": "A list of zones for which the server does not perform DNSSEC validation.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "dnssec_nxdomain_enabled": {
                        "type": "boolean",
                        "description": "Determines if the NXDOMAIN rules for DNSSEC-enabled clients are enabled or not.",
                        "example": false
                    },
                    "dnssec_rpz_enabled": {
                        "type": "boolean",
                        "description": "Determines if the RPZ policies for DNSSEC-enabled clients are enabled or not.",
                        "example": false
                    },
                    "dnssec_trusted_keys": {
                        "type": "array",
                        "description": "The list of trusted keys for the DNSSEC feature.",
                        "enum": [
                            "dnssectrustedkey"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/GridDnsDnssecTrustedKeys"
                        }
                    },
                    "dnssec_validation_enabled": {
                        "type": "boolean",
                        "description": "Determines if the DNS security validation is enabled or not.",
                        "example": false
                    },
                    "dnstap_setting": {
                        "$ref": "#/components/schemas/GridDnsDnstapSetting"
                    },
                    "domains_to_capture_dns_queries": {
                        "type": "array",
                        "description": "The list of domains for DNS query capture.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "dtc_dns_queries_specific_behavior": {
                        "type": "string",
                        "description": "Setting to control specific behavior for DTC DNS responses for incoming lbdn matched queries.",
                        "enum": [
                            "DTC_RESPONSE_ANYWAY",
                            "DNS_RESPONSE_IF_NO_DTC",
                            "DROP_LBDN_MATCHED_QUERY"
                        ],
                        "example": "Example dtc_dns_queries_specific_behavior"
                    },
                    "dtc_dnssec_mode": {
                        "type": "string",
                        "description": "DTC DNSSEC operation mode.",
                        "enum": [
                            "SIGNED",
                            "UNSIGNED"
                        ],
                        "example": "Example dtc_dnssec_mode"
                    },
                    "dtc_edns_prefer_client_subnet": {
                        "type": "boolean",
                        "description": "Determines whether to prefer the client address from the edns-client-subnet option for DTC or not.",
                        "example": false
                    },
                    "dtc_scheduled_backup": {
                        "$ref": "#/components/schemas/GridDnsDtcScheduledBackup"
                    },
                    "dtc_topology_ea_list": {
                        "type": "array",
                        "description": "The DTC topology extensible attribute definition list. When configuring a DTC topology, users may configure classification as either \"Geographic\" or \"Extensible Attributes\". Selecting extensible attributes will replace supported Topology database labels (Continent, Country, Subdivision, City) with the names of the selection EA types and provide values extracted from DHCP Network Container, Network and Range objects with those extensible attributes.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "edns_udp_size": {
                        "type": "integer",
                        "description": "Advertises the EDNS0 buffer size to the upstream server. The value should be between 512 and 4096 bytes. The recommended value is between 512 and 1220 bytes.",
                        "format": "int64",
                        "example": 1
                    },
                    "email": {
                        "type": "string",
                        "description": "The email address of a Grid DNS object.",
                        "example": "Example email"
                    },
                    "enable_blackhole": {
                        "type": "boolean",
                        "description": "Determines if the blocking of DNS queries is enabled or not.",
                        "example": false
                    },
                    "enable_blacklist": {
                        "type": "boolean",
                        "description": "Determines if a blacklist is enabled or not.",
                        "example": false
                    },
                    "enable_capture_dns_queries": {
                        "type": "boolean",
                        "description": "Determines if the capture of DNS queries is enabled or disabled.",
                        "example": false
                    },
                    "enable_capture_dns_responses": {
                        "type": "boolean",
                        "description": "Determines if the capture of DNS responses is enabled or disabled.",
                        "example": false
                    },
                    "enable_client_subnet_forwarding": {
                        "type": "boolean",
                        "description": "Determines whether to enable forwarding EDNS client subnet options to upstream servers.",
                        "example": false
                    },
                    "enable_client_subnet_recursive": {
                        "type": "boolean",
                        "description": "Determines whether to enable adding EDNS client subnet options in recursive resolution. The client_subnet_domains parameter value must not be empty to enable the enable_client_subnet_recursive parameter.",
                        "example": false
                    },
                    "enable_delete_associated_ptr": {
                        "type": "boolean",
                        "description": "Determines if the ability to automatically remove associated PTR records while deleting A or AAAA records is enabled or not.",
                        "example": false
                    },
                    "enable_dns64": {
                        "type": "boolean",
                        "description": "Determines if the DNS64 support is enabled or not.",
                        "example": false
                    },
                    "enable_dns_health_check": {
                        "type": "boolean",
                        "description": "Determines if the DNS health check is enabled or not.",
                        "example": false
                    },
                    "enable_dnstap_queries": {
                        "type": "boolean",
                        "description": "Determines whether the query messages need to be forwarded to DNSTAP or not.",
                        "example": false
                    },
                    "enable_dnstap_responses": {
                        "type": "boolean",
                        "description": "Determines whether the response messages need to be forwarded to DNSTAP or not.",
                        "example": false
                    },
                    "enable_dnstap_violations_tls": {
                        "type": "boolean",
                        "description": "Determines whether the violations messages need to be forwarded to DNSTAP or not.",
                        "example": false
                    },
                    "enable_excluded_domain_names": {
                        "type": "boolean",
                        "description": "Determines if excluding domain names from captured DNS queries and responses is enabled or disabled.",
                        "example": false
                    },
                    "enable_fixed_rrset_order_fqdns": {
                        "type": "boolean",
                        "description": "Determines if the fixed RRset order FQDN is enabled or not.",
                        "example": false
                    },
                    "enable_ftc": {
                        "type": "boolean",
                        "description": "Determines whether Fault Tolerant Caching (FTC) is enabled.",
                        "example": false
                    },
                    "enable_gss_tsig": {
                        "type": "boolean",
                        "description": "Determines whether all appliances in the Grid are enabled to receive GSS-TSIG authenticated updates from DNS clients.",
                        "example": false
                    },
                    "enable_host_rrset_order": {
                        "type": "boolean",
                        "description": "Determines if the host RRset order is enabled or not.",
                        "example": false
                    },
                    "enable_hsm_signing": {
                        "type": "boolean",
                        "description": "Determines whether Hardware Security Modules (HSMs) are enabled for key generation and signing. Note, that you must configure the HSM group with at least one enabled HSM.",
                        "example": false
                    },
                    "enable_notify_source_port": {
                        "type": "boolean",
                        "description": "Determines if the notify source port at the Grid Level is enabled or not.",
                        "example": false
                    },
                    "enable_query_rewrite": {
                        "type": "boolean",
                        "description": "Determines if the DNS query rewrite is enabled or not.",
                        "example": false
                    },
                    "enable_query_source_port": {
                        "type": "boolean",
                        "description": "Determines if the query source port at the Grid Level is enabled or not.",
                        "example": false
                    },
                    "excluded_domain_names": {
                        "type": "array",
                        "description": "The list of domains that are excluded from DNS query and response capture.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "expire_after": {
                        "type": "integer",
                        "description": "The expiration time of a Grid DNS object. If the secondary DNS server fails to contact the primary server for the specified interval, the secondary server stops giving out answers about the zone because the zone data is too old to be useful.",
                        "format": "int64",
                        "example": 1
                    },
                    "file_transfer_setting": {
                        "$ref": "#/components/schemas/GridDnsFileTransferSetting"
                    },
                    "filter_aaaa": {
                        "type": "string",
                        "description": "The type of AAAA filtering for this member DNS object.",
                        "enum": [
                            "YES",
                            "NO",
                            "BREAK_DNSSEC"
                        ],
                        "example": "Example filter_aaaa"
                    },
                    "filter_aaaa_list": {
                        "type": "array",
                        "description": "The list of IPv4 addresses and networks from which queries are received. AAAA filtering is applied to these addresses.",
                        "enum": [
                            "addressac"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/GridDnsFilterAaaaList"
                        }
                    },
                    "fixed_rrset_order_fqdns": {
                        "type": "array",
                        "description": "The fixed RRset order FQDN. If this field does not contain an empty value, the appliance will automatically set the enable_fixed_rrset_order_fqdns field to 'true', unless the same request sets the enable field to 'false'.",
                        "enum": [
                            "grid:dns:fixedrrsetorderfqdn"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/GridDnsFixedRrsetOrderFqdns"
                        }
                    },
                    "forward_only": {
                        "type": "boolean",
                        "description": "Determines if member sends queries to forwarders only. When the value is \"true\", the member sends queries to forwarders only, and not to other internal or Internet root servers.",
                        "example": false
                    },
                    "forward_updates": {
                        "type": "boolean",
                        "description": "Determines if secondary servers is allowed to forward updates to the DNS server or not.",
                        "example": false
                    },
                    "forwarders": {
                        "type": "array",
                        "description": "The forwarders for the member. A forwarder is essentially a name server to which other name servers first send all of their off-site queries. The forwarder builds up a cache of information, avoiding the need for the other name servers to send queries off-site.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "ftc_expired_record_timeout": {
                        "type": "integer",
                        "description": "The timeout interval (in seconds) after which the expired Fault Tolerant Caching (FTC)record is stale and no longer valid.",
                        "format": "int64",
                        "example": 1
                    },
                    "ftc_expired_record_ttl": {
                        "type": "integer",
                        "description": "The TTL value (in seconds) of the expired Fault Tolerant Caching (FTC) record in DNS responses.",
                        "format": "int64",
                        "example": 1
                    },
                    "gen_eadb_from_hosts": {
                        "type": "boolean",
                        "description": "Flag for taking EA values from IPAM Hosts into consideration for the DTC topology EA database.",
                        "example": false
                    },
                    "gen_eadb_from_network_containers": {
                        "type": "boolean",
                        "description": "Flag for taking EA values from IPAM Network Containers into consideration for the DTC topology EA database.",
                        "example": false
                    },
                    "gen_eadb_from_networks": {
                        "type": "boolean",
                        "description": "Flag for taking EA values from IPAM Network into consideration for the DTC topology EA database.",
                        "example": false
                    },
                    "gen_eadb_from_ranges": {
                        "type": "boolean",
                        "description": "Flag for taking EA values from IPAM Ranges into consideration for the DTC topology EA database.",
                        "example": false
                    },
                    "gss_tsig_keys": {
                        "type": "array",
                        "description": "The list of GSS-TSIG keys for a Grid DNS object.",
                        "enum": [
                            "kerberoskey"
                        ],
                        "items": {
                            "type": "string",
                            "enum": [
                                "kerberoskey"
                            ]
                        }
                    },
                    "last_queried_acl": {
                        "type": "array",
                        "description": "Determines last queried ACL for the specified IPv4 or IPv6 addresses and networks in scavenging settings.",
                        "enum": [
                            "addressac"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/GridDnsLastQueriedAcl"
                        }
                    },
                    "logging_categories": {
                        "$ref": "#/components/schemas/GridDnsLoggingCategories"
                    },
                    "max_cache_ttl": {
                        "type": "integer",
                        "description": "The maximum time (in seconds) for which the server will cache positive answers.",
                        "format": "int64",
                        "example": 1
                    },
                    "max_cached_lifetime": {
                        "type": "integer",
                        "description": "The maximum time (in seconds) a DNS response can be stored in the hardware acceleration cache. Valid values are unsigned integer between 60 and 86400, inclusive.",
                        "format": "int64",
                        "example": 1
                    },
                    "max_ncache_ttl": {
                        "type": "integer",
                        "description": "The maximum time (in seconds) for which the server will cache negative (NXDOMAIN) responses. The maximum allowed value is 604800.",
                        "format": "int64",
                        "example": 1
                    },
                    "max_udp_size": {
                        "type": "integer",
                        "description": "The value is used by authoritative DNS servers to never send DNS responses larger than the configured value. The value should be between 512 and 4096 bytes. The recommended value is between 512 and 1220 bytes.",
                        "format": "int64",
                        "example": 1
                    },
                    "member_secondary_notify": {
                        "type": "boolean",
                        "description": "Determines if Grid members that are authoritative secondary servers are allowed to send notification messages to external name servers, if the Grid member that is primary for a zone fails or loses connectivity.",
                        "example": false
                    },
                    "negative_ttl": {
                        "type": "integer",
                        "description": "The negative TTL value of a Grid DNS object. This interval tells the secondary how long data can be cached for \"Does Not Respond\" responses.",
                        "format": "int64",
                        "example": 1
                    },
                    "notify_delay": {
                        "type": "integer",
                        "description": "Specifies with how many seconds of delay the notify messages are sent to secondaries.",
                        "format": "int64",
                        "example": 1
                    },
                    "notify_source_port": {
                        "type": "integer",
                        "description": "The source port for notify messages. When requesting zone transfers from the primary server, some secondary DNS servers use the source port number (the primary server used to send the notify message) as the destination port number in the zone transfer request. Valid values are between 1 and 63999. The default is picked by BIND.",
                        "format": "int64",
                        "example": 1
                    },
                    "nsgroup_default": {
                        "type": "string",
                        "description": "The default nameserver group.",
                        "example": "Example nsgroup_default"
                    },
                    "nsgroups": {
                        "type": "array",
                        "description": "A name server group is a collection of one primary DNS server and one or more secondary DNS servers.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "nxdomain_log_query": {
                        "type": "boolean",
                        "description": "Determines if NXDOMAIN redirection queries are logged or not.",
                        "example": false
                    },
                    "nxdomain_redirect": {
                        "type": "boolean",
                        "description": "Determines if NXDOMAIN redirection is enabled or not.",
                        "example": false
                    },
                    "nxdomain_redirect_addresses": {
                        "type": "array",
                        "description": "The list of IPv4 NXDOMAIN redirection addresses.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "nxdomain_redirect_addresses_v6": {
                        "type": "array",
                        "description": "The list of IPv6 NXDOMAIN redirection addresses.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "nxdomain_redirect_ttl": {
                        "type": "integer",
                        "description": "The TTL value (in seconds) of synthetic DNS responses that result from NXDOMAIN redirection.",
                        "format": "int64",
                        "example": 1
                    },
                    "nxdomain_rulesets": {
                        "type": "array",
                        "description": "The Ruleset object names assigned at the Grid level for NXDOMAIN redirection.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "preserve_host_rrset_order_on_secondaries": {
                        "type": "boolean",
                        "description": "Determines if the host RRset order on secondaries is preserved or not.",
                        "example": false
                    },
                    "protocol_record_name_policies": {
                        "type": "array",
                        "description": "The list of record name policies.",
                        "enum": [
                            "recordnamepolicy"
                        ],
                        "items": {
                            "type": "string",
                            "enum": [
                                "recordnamepolicy"
                            ]
                        }
                    },
                    "query_rewrite_domain_names": {
                        "type": "array",
                        "description": "The list of domain names that trigger DNS query rewrite.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "query_rewrite_prefix": {
                        "type": "string",
                        "description": "The domain name prefix for DNS query rewrite.",
                        "example": "Example query_rewrite_prefix"
                    },
                    "query_source_port": {
                        "type": "integer",
                        "description": "The source port for queries. Specifying a source port number for recursive queries ensures that a firewall will allow the response. Valid values are between 1 and 63999. The default is picked by BIND.",
                        "format": "int64",
                        "example": 1
                    },
                    "recursive_query_list": {
                        "type": "array",
                        "description": "The list of IPv4 or IPv6 addresses, networks or hosts authenticated by Transaction signature (TSIG) key from which recursive queries are allowed or denied.",
                        "enum": [
                            "addressac"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/GridDnsRecursiveQueryList"
                        }
                    },
                    "refresh_timer": {
                        "type": "integer",
                        "description": "The refresh time. This interval tells the secondary how often to send a message to the primary for a zone to check that its data is current, and retrieve fresh data if it is not.",
                        "format": "int64",
                        "example": 1
                    },
                    "resolver_query_timeout": {
                        "type": "integer",
                        "description": "The recursive query timeout for the member.",
                        "format": "int64",
                        "example": 1
                    },
                    "response_rate_limiting": {
                        "$ref": "#/components/schemas/GridDnsResponseRateLimiting"
                    },
                    "restart_setting": {
                        "$ref": "#/components/schemas/GridDnsRestartSetting"
                    },
                    "retry_timer": {
                        "type": "integer",
                        "description": "The retry time. This interval tells the secondary how long to wait before attempting to recontact the primary after a connection failure occurs between the two servers.",
                        "format": "int64",
                        "example": 1
                    },
                    "root_name_server_type": {
                        "type": "string",
                        "description": "Determines the type of root name servers.",
                        "enum": [
                            "CUSTOM",
                            "INTERNET"
                        ],
                        "example": "Example root_name_server_type"
                    },
                    "rpz_disable_nsdname_nsip": {
                        "type": "boolean",
                        "description": "Determines if NSDNAME and NSIP resource records from RPZ feeds are enabled or not.",
                        "example": false
                    },
                    "rpz_drop_ip_rule_enabled": {
                        "type": "boolean",
                        "description": "Enables the appliance to ignore RPZ-IP triggers with prefix lengths less than the specified minimum prefix length.",
                        "example": false
                    },
                    "rpz_drop_ip_rule_min_prefix_length_ipv4": {
                        "type": "integer",
                        "description": "The minimum prefix length for IPv4 RPZ-IP triggers. The appliance ignores RPZ-IP triggers with prefix lengths less than the specified minimum IPv4 prefix length.",
                        "format": "int64",
                        "example": 1
                    },
                    "rpz_drop_ip_rule_min_prefix_length_ipv6": {
                        "type": "integer",
                        "description": "The minimum prefix length for IPv6 RPZ-IP triggers. The appliance ignores RPZ-IP triggers with prefix lengths less than the specified minimum IPv6 prefix length.",
                        "format": "int64",
                        "example": 1
                    },
                    "rpz_qname_wait_recurse": {
                        "type": "boolean",
                        "description": "Determines if recursive RPZ lookups are enabled.",
                        "example": false
                    },
                    "scavenging_settings": {
                        "$ref": "#/components/schemas/GridDnsScavengingSettings"
                    },
                    "serial_query_rate": {
                        "type": "integer",
                        "description": "The number of maximum concurrent SOA queries per second. Valid values are unsigned integer between 20 and 1000, inclusive.",
                        "format": "int64",
                        "example": 1
                    },
                    "server_id_directive": {
                        "type": "string",
                        "description": "The value of the server-id directive for BIND DNS.",
                        "enum": [
                            "NONE",
                            "HOSTNAME"
                        ],
                        "example": "Example server_id_directive"
                    },
                    "sortlist": {
                        "type": "array",
                        "description": "A sort list determines the order of addresses in responses made to DNS queries.",
                        "enum": [
                            "sortlist"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/GridDnsSortlist"
                        }
                    },
                    "store_locally": {
                        "type": "boolean",
                        "description": "Determines if the storage of query capture reports on the appliance is enabled or disabled.",
                        "example": false
                    },
                    "syslog_facility": {
                        "type": "string",
                        "description": "The syslog facility. This is the location on the syslog server to which you want to sort the DNS logging messages.",
                        "enum": [
                            "DAEMON",
                            "LOCAL0",
                            "LOCAL1",
                            "LOCAL2",
                            "LOCAL3",
                            "LOCAL4",
                            "LOCAL5",
                            "LOCAL6",
                            "LOCAL7"
                        ],
                        "example": "Example syslog_facility"
                    },
                    "transfer_excluded_servers": {
                        "type": "array",
                        "description": "The list of excluded DNS servers during zone transfers.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "transfer_format": {
                        "type": "string",
                        "description": "The BIND format for a zone transfer. This provides tracking capabilities for single or multiple transfers and their associated servers.",
                        "enum": [
                            "MANY_ANSWERS",
                            "ONE_ANSWER"
                        ],
                        "example": "Example transfer_format"
                    },
                    "transfers_in": {
                        "type": "integer",
                        "description": "The number of maximum concurrent transfers for the Grid. Valid values are unsigned integer between 10 and 10000, inclusive.",
                        "format": "int64",
                        "example": 1
                    },
                    "transfers_out": {
                        "type": "integer",
                        "description": "The number of maximum outbound concurrent zone transfers. Valid values are unsigned integer between 10 and 10000, inclusive.",
                        "format": "int64",
                        "example": 1
                    },
                    "transfers_per_ns": {
                        "type": "integer",
                        "description": "The number of maximum concurrent transfers per member. Valid values are unsigned integer between 2 and 10000, inclusive.",
                        "format": "int64",
                        "example": 1
                    },
                    "zone_deletion_double_confirm": {
                        "type": "boolean",
                        "description": "Determines if the double confirmation during zone deletion is enabled or not.",
                        "example": false
                    }
                }
            },
            "GridDnsAllowQuery": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address this rule applies to or \"Any\".",
                        "example": "Example address"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to use for this address.",
                        "enum": [
                            "ALLOW",
                            "DENY"
                        ],
                        "example": "Example permission"
                    },
                    "tsig_key": {
                        "type": "string",
                        "description": "A generated TSIG key. If the external primary server is a NIOS appliance running DNS One 2.x code, this can be set to :2xCOMPAT.",
                        "example": "Example tsig_key"
                    },
                    "tsig_key_alg": {
                        "type": "string",
                        "description": "The TSIG key algorithm.",
                        "enum": [
                            "HMAC-MD5",
                            "HMAC-SHA256"
                        ],
                        "example": "Example tsig_key_alg"
                    },
                    "tsig_key_name": {
                        "type": "string",
                        "description": "The name of the TSIG key. If 2.x TSIG compatibility is used, this is set to 'tsig_xfer' on retrieval, and ignored on insert or update.",
                        "example": "Example tsig_key_name"
                    },
                    "use_tsig_key_name": {
                        "type": "boolean",
                        "description": "Use flag for: tsig_key_name",
                        "example": false
                    }
                }
            },
            "GridDnsAllowTransfer": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address this rule applies to or \"Any\".",
                        "example": "Example address"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to use for this address.",
                        "enum": [
                            "ALLOW",
                            "DENY"
                        ],
                        "example": "Example permission"
                    },
                    "tsig_key": {
                        "type": "string",
                        "description": "A generated TSIG key. If the external primary server is a NIOS appliance running DNS One 2.x code, this can be set to :2xCOMPAT.",
                        "example": "Example tsig_key"
                    },
                    "tsig_key_alg": {
                        "type": "string",
                        "description": "The TSIG key algorithm.",
                        "enum": [
                            "HMAC-MD5",
                            "HMAC-SHA256"
                        ],
                        "example": "Example tsig_key_alg"
                    },
                    "tsig_key_name": {
                        "type": "string",
                        "description": "The name of the TSIG key. If 2.x TSIG compatibility is used, this is set to 'tsig_xfer' on retrieval, and ignored on insert or update.",
                        "example": "Example tsig_key_name"
                    },
                    "use_tsig_key_name": {
                        "type": "boolean",
                        "description": "Use flag for: tsig_key_name",
                        "example": false
                    }
                }
            },
            "GridDnsAllowUpdate": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address this rule applies to or \"Any\".",
                        "example": "Example address"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to use for this address.",
                        "enum": [
                            "ALLOW",
                            "DENY"
                        ],
                        "example": "Example permission"
                    },
                    "tsig_key": {
                        "type": "string",
                        "description": "A generated TSIG key. If the external primary server is a NIOS appliance running DNS One 2.x code, this can be set to :2xCOMPAT.",
                        "example": "Example tsig_key"
                    },
                    "tsig_key_alg": {
                        "type": "string",
                        "description": "The TSIG key algorithm.",
                        "enum": [
                            "HMAC-MD5",
                            "HMAC-SHA256"
                        ],
                        "example": "Example tsig_key_alg"
                    },
                    "tsig_key_name": {
                        "type": "string",
                        "description": "The name of the TSIG key. If 2.x TSIG compatibility is used, this is set to 'tsig_xfer' on retrieval, and ignored on insert or update.",
                        "example": "Example tsig_key_name"
                    },
                    "use_tsig_key_name": {
                        "type": "boolean",
                        "description": "Use flag for: tsig_key_name",
                        "example": false
                    }
                }
            },
            "GridDnsAttackMitigation": {
                "type": "object",
                "properties": {
                    "detect_chr": {
                        "description": "Configuration for detecting changes for the Cache Hit Ratio (CHR) of recursive queries.",
                        "enum": [
                            "grid:attackdetect"
                        ],
                        "$ref": "#/components/schemas/GriddnsattackmitigationDetectChr"
                    },
                    "detect_chr_grace": {
                        "type": "integer",
                        "description": "The cache utilization (in percentage) when Cache Hit Ratio (CHR) starts.",
                        "format": "int64",
                        "example": 1
                    },
                    "detect_nxdomain_responses": {
                        "description": "Configuration for detecting NXDOMAIN responses from up-stream servers to all incoming recursive responses.",
                        "enum": [
                            "grid:attackdetect"
                        ],
                        "$ref": "#/components/schemas/GriddnsattackmitigationDetectNxdomainResponses"
                    },
                    "detect_udp_drop": {
                        "description": "Configuration for detecting the UDP packet drop rate.",
                        "enum": [
                            "grid:attackdetect"
                        ],
                        "$ref": "#/components/schemas/GriddnsattackmitigationDetectUdpDrop"
                    },
                    "interval": {
                        "type": "integer",
                        "description": "The minimum time interval (in seconds) between changes in attack status.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "GriddnsattackmitigationDetectChr": {
                "type": "object",
                "properties": {
                    "enable": {
                        "type": "boolean",
                        "description": "Determines if DNS attack detection is enabled or not.",
                        "example": false
                    },
                    "high": {
                        "type": "integer",
                        "description": "The high threshold value (in percentage) for starting DNS attack detection.",
                        "format": "int64",
                        "example": 1
                    },
                    "interval_max": {
                        "type": "integer",
                        "description": "The maximum number of events that have occurred before processing DNS attack detection.",
                        "format": "int64",
                        "example": 1
                    },
                    "interval_min": {
                        "type": "integer",
                        "description": "The minimum number of events that have occurred before processing DNS attack detection.",
                        "format": "int64",
                        "example": 1
                    },
                    "interval_time": {
                        "type": "integer",
                        "description": "The time interval between detection processing.",
                        "format": "int64",
                        "example": 1
                    },
                    "low": {
                        "type": "integer",
                        "description": "The low threshold value (in percentage) for starting DNS attack detection.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "GriddnsattackmitigationDetectNxdomainResponses": {
                "type": "object",
                "properties": {
                    "enable": {
                        "type": "boolean",
                        "description": "Determines if DNS attack detection is enabled or not.",
                        "example": false
                    },
                    "high": {
                        "type": "integer",
                        "description": "The high threshold value (in percentage) for starting DNS attack detection.",
                        "format": "int64",
                        "example": 1
                    },
                    "interval_max": {
                        "type": "integer",
                        "description": "The maximum number of events that have occurred before processing DNS attack detection.",
                        "format": "int64",
                        "example": 1
                    },
                    "interval_min": {
                        "type": "integer",
                        "description": "The minimum number of events that have occurred before processing DNS attack detection.",
                        "format": "int64",
                        "example": 1
                    },
                    "interval_time": {
                        "type": "integer",
                        "description": "The time interval between detection processing.",
                        "format": "int64",
                        "example": 1
                    },
                    "low": {
                        "type": "integer",
                        "description": "The low threshold value (in percentage) for starting DNS attack detection.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "GriddnsattackmitigationDetectUdpDrop": {
                "type": "object",
                "properties": {
                    "enable": {
                        "type": "boolean",
                        "description": "Determines if DNS attack detection is enabled or not.",
                        "example": false
                    },
                    "high": {
                        "type": "integer",
                        "description": "The high threshold value (in percentage) for starting DNS attack detection.",
                        "format": "int64",
                        "example": 1
                    },
                    "interval_max": {
                        "type": "integer",
                        "description": "The maximum number of events that have occurred before processing DNS attack detection.",
                        "format": "int64",
                        "example": 1
                    },
                    "interval_min": {
                        "type": "integer",
                        "description": "The minimum number of events that have occurred before processing DNS attack detection.",
                        "format": "int64",
                        "example": 1
                    },
                    "interval_time": {
                        "type": "integer",
                        "description": "The time interval between detection processing.",
                        "format": "int64",
                        "example": 1
                    },
                    "low": {
                        "type": "integer",
                        "description": "The low threshold value (in percentage) for starting DNS attack detection.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "GridDnsAutoBlackhole": {
                "type": "object",
                "properties": {
                    "enable_fetches_per_server": {
                        "type": "boolean",
                        "description": "Enables or disables the configuration of the maximum number of concurrent recursive queries the appliance sends to each upstream DNS server.",
                        "example": false
                    },
                    "enable_fetches_per_zone": {
                        "type": "boolean",
                        "description": "Enables or disables the configuration of the maximum number of concurrent recursive queries the appliance sends to each DNS zone.",
                        "example": false
                    },
                    "enable_holddown": {
                        "type": "boolean",
                        "description": "Enables or disables the holddown configuration when the appliance stops sending queries to non-responsive servers.",
                        "example": false
                    },
                    "fetches_per_server": {
                        "type": "integer",
                        "description": "The maximum number of concurrent recursive queries the appliance sends to a single upstream name server before blocking additional queries to that server.",
                        "format": "int64",
                        "example": 1
                    },
                    "fetches_per_zone": {
                        "type": "integer",
                        "description": "The maximum number of concurrent recursive queries that a server sends for its domains.",
                        "format": "int64",
                        "example": 1
                    },
                    "fps_freq": {
                        "type": "integer",
                        "description": "Determines how often (in number of recursive responses) the appliance recalculates the average timeout ratio for each DNS server.",
                        "format": "int64",
                        "example": 1
                    },
                    "holddown": {
                        "type": "integer",
                        "description": "The holddown duration for non-responsive servers.",
                        "format": "int64",
                        "example": 1
                    },
                    "holddown_threshold": {
                        "type": "integer",
                        "description": "The number of consecutive timeouts before holding down a non-responsive server.",
                        "format": "int64",
                        "example": 1
                    },
                    "holddown_timeout": {
                        "type": "integer",
                        "description": "The minimum time (in seconds) that needs to be passed before a timeout occurs. Note that only these timeouts are counted towards the number of consecutive timeouts.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "GridDnsBlackholeList": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address this rule applies to or \"Any\".",
                        "example": "Example address"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to use for this address.",
                        "enum": [
                            "ALLOW",
                            "DENY"
                        ],
                        "example": "Example permission"
                    },
                    "tsig_key": {
                        "type": "string",
                        "description": "A generated TSIG key. If the external primary server is a NIOS appliance running DNS One 2.x code, this can be set to :2xCOMPAT.",
                        "example": "Example tsig_key"
                    },
                    "tsig_key_alg": {
                        "type": "string",
                        "description": "The TSIG key algorithm.",
                        "enum": [
                            "HMAC-MD5",
                            "HMAC-SHA256"
                        ],
                        "example": "Example tsig_key_alg"
                    },
                    "tsig_key_name": {
                        "type": "string",
                        "description": "The name of the TSIG key. If 2.x TSIG compatibility is used, this is set to 'tsig_xfer' on retrieval, and ignored on insert or update.",
                        "example": "Example tsig_key_name"
                    },
                    "use_tsig_key_name": {
                        "type": "boolean",
                        "description": "Use flag for: tsig_key_name",
                        "example": false
                    }
                }
            },
            "GridDnsClientSubnetDomains": {
                "type": "object",
                "properties": {
                    "domain": {
                        "type": "string",
                        "description": "The FQDN that represents the ECS zone domain name.",
                        "example": "Example domain"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The ECS domain name permission.",
                        "enum": [
                            "ALLOW",
                            "DENY"
                        ],
                        "example": "Example permission"
                    }
                }
            },
            "GridDnsCustomRootNameServers": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The IPv4 Address or IPv6 Address of the server.",
                        "example": "Example address"
                    },
                    "name": {
                        "type": "string",
                        "description": "A resolvable domain name for the external DNS server.",
                        "example": "Example name"
                    },
                    "shared_with_ms_parent_delegation": {
                        "type": "boolean",
                        "description": "This flag represents whether the name server is shared with the parent Microsoft primary zone's delegation server.",
                        "readOnly": true,
                        "example": false
                    },
                    "stealth": {
                        "type": "boolean",
                        "description": "Set this flag to hide the NS record for the primary name server from DNS queries.",
                        "example": false
                    },
                    "tsig_key": {
                        "type": "string",
                        "description": "A generated TSIG key.",
                        "example": "Example tsig_key"
                    },
                    "tsig_key_alg": {
                        "type": "string",
                        "description": "The TSIG key algorithm.",
                        "enum": [
                            "HMAC-MD5",
                            "HMAC-SHA256"
                        ],
                        "example": "Example tsig_key_alg"
                    },
                    "tsig_key_name": {
                        "type": "string",
                        "description": "The TSIG key name.",
                        "example": "Example tsig_key_name"
                    },
                    "use_tsig_key_name": {
                        "type": "boolean",
                        "description": "Use flag for: tsig_key_name",
                        "example": false
                    }
                }
            },
            "GridDnsDnssecKeyParams": {
                "type": "object",
                "properties": {
                    "enable_ksk_auto_rollover": {
                        "type": "boolean",
                        "description": "If set to True, automatic rollovers for the signing key is enabled.",
                        "example": false
                    },
                    "ksk_algorithm": {
                        "type": "string",
                        "description": "Key Signing Key algorithm. Deprecated.",
                        "enum": [
                            "10",
                            "5",
                            "7",
                            "8",
                            "13",
                            "14"
                        ],
                        "example": "Example ksk_algorithm"
                    },
                    "ksk_algorithms": {
                        "description": "A list of Key Signing Key Algorithms.",
                        "enum": [
                            "dnsseckeyalgorithm"
                        ],
                        "$ref": "#/components/schemas/GriddnsdnsseckeyparamsKskAlgorithms"
                    },
                    "ksk_rollover": {
                        "type": "integer",
                        "description": "Key Signing Key rollover interval, in seconds.",
                        "format": "int64",
                        "example": 1
                    },
                    "ksk_size": {
                        "type": "integer",
                        "description": "Key Signing Key size, in bits. Deprecated.",
                        "format": "int64",
                        "example": 1
                    },
                    "next_secure_type": {
                        "type": "string",
                        "description": "NSEC (next secure) types.",
                        "enum": [
                            "NSEC",
                            "NSEC3"
                        ],
                        "example": "Example next_secure_type"
                    },
                    "ksk_rollover_notification_config": {
                        "type": "string",
                        "description": "This field controls events for which users will be notified.",
                        "enum": [
                            "NONE",
                            "ALL",
                            "REQUIRE_MANUAL_INTERVENTION"
                        ],
                        "example": "Example ksk_rollover_notification_config"
                    },
                    "ksk_snmp_notification_enabled": {
                        "type": "boolean",
                        "description": "Enable SNMP notifications for KSK related events.",
                        "example": false
                    },
                    "ksk_email_notification_enabled": {
                        "type": "boolean",
                        "description": "Enable email notifications for KSK related events.",
                        "example": false
                    },
                    "nsec3_salt_min_length": {
                        "type": "integer",
                        "description": "The minimum length for NSEC3 salts.",
                        "format": "int64",
                        "example": 1
                    },
                    "nsec3_salt_max_length": {
                        "type": "integer",
                        "description": "The maximum length for NSEC3 salts.",
                        "format": "int64",
                        "example": 1
                    },
                    "nsec3_iterations": {
                        "type": "integer",
                        "description": "The number of iterations used for hashing NSEC3.",
                        "format": "int64",
                        "example": 1
                    },
                    "signature_expiration": {
                        "type": "integer",
                        "description": "Signature expiration time, in seconds.",
                        "format": "int64",
                        "example": 1
                    },
                    "zsk_algorithm": {
                        "type": "string",
                        "description": "Zone Signing Key algorithm. Deprecated.",
                        "enum": [
                            "10",
                            "5",
                            "7",
                            "8",
                            "13",
                            "14"
                        ],
                        "example": "Example zsk_algorithm"
                    },
                    "zsk_algorithms": {
                        "description": "A list of Zone Signing Key Algorithms.",
                        "enum": [
                            "dnsseckeyalgorithm"
                        ],
                        "$ref": "#/components/schemas/GriddnsdnsseckeyparamsZskAlgorithms"
                    },
                    "zsk_rollover": {
                        "type": "integer",
                        "description": "Zone Signing Key rollover interval, in seconds.",
                        "format": "int64",
                        "example": 1
                    },
                    "zsk_rollover_mechanism": {
                        "type": "string",
                        "description": "Zone Signing Key rollover mechanism.",
                        "enum": [
                            "DOUBLE_SIGN",
                            "PRE_PUBLISH"
                        ],
                        "example": "Example zsk_rollover_mechanism"
                    },
                    "zsk_size": {
                        "type": "integer",
                        "description": "Zone Signing Key size, in bits. Deprecated.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "GriddnsdnsseckeyparamsKskAlgorithms": {
                "type": "object",
                "properties": {
                    "algorithm": {
                        "type": "string",
                        "description": "The signing key algorithm.",
                        "enum": [
                            "RSASHA1",
                            "RSASHA256",
                            "RSASHA512",
                            "ECDSAP256SHA256",
                            "ECDSAP384SHA384"
                        ],
                        "example": "Example algorithm"
                    },
                    "size": {
                        "type": "integer",
                        "description": "The signing key size, in bits.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "GriddnsdnsseckeyparamsZskAlgorithms": {
                "type": "object",
                "properties": {
                    "algorithm": {
                        "type": "string",
                        "description": "The signing key algorithm.",
                        "enum": [
                            "RSASHA1",
                            "RSASHA256",
                            "RSASHA512",
                            "ECDSAP256SHA256",
                            "ECDSAP384SHA384"
                        ],
                        "example": "Example algorithm"
                    },
                    "size": {
                        "type": "integer",
                        "description": "The signing key size, in bits.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "GridDnsDnssecTrustedKeys": {
                "type": "object",
                "properties": {
                    "fqdn": {
                        "type": "string",
                        "description": "The FQDN of the domain for which the member validates responses to recursive queries.",
                        "example": "Example fqdn"
                    },
                    "algorithm": {
                        "type": "string",
                        "description": "The DNSSEC algorithm used to generate the key.",
                        "example": "Example algorithm"
                    },
                    "key": {
                        "type": "string",
                        "description": "The DNSSEC key.",
                        "example": "Example key"
                    },
                    "secure_entry_point": {
                        "type": "boolean",
                        "description": "The secure entry point flag, if set it means this is a KSK configuration.",
                        "example": false
                    },
                    "dnssec_must_be_secure": {
                        "type": "boolean",
                        "description": "Responses must be DNSSEC secure for this hierarchy/domain.",
                        "example": false
                    }
                }
            },
            "GridDnsDnstapSetting": {
                "type": "object",
                "properties": {
                    "dnstap_receiver_address_or_fqdn": {
                        "type": "string",
                        "description": "Address or FQDN of DNSTAP receiver.",
                        "example": "Example dnstap_receiver_address_or_fqdn"
                    },
                    "dnstap_receiver_port": {
                        "type": "integer",
                        "description": "DNSTAP receiver port number.",
                        "format": "int64",
                        "example": 1
                    },
                    "dnstap_identity": {
                        "type": "string",
                        "description": "DNSTAP id string.",
                        "readOnly": true,
                        "example": "Example dnstap_identity"
                    },
                    "dnstap_version": {
                        "type": "string",
                        "description": "DNSTAP version.",
                        "readOnly": true,
                        "example": "Example dnstap_version"
                    }
                }
            },
            "GridDnsDtcScheduledBackup": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "The status of the scheduled backup.",
                        "enum": [
                            "IDLE",
                            "ROLL",
                            "ROLLED",
                            "TRIGGERED",
                            "SCHEDULING",
                            "IN_PROGRESS",
                            "FINISHED",
                            "FAILED",
                            "ABORTED"
                        ],
                        "readOnly": true,
                        "example": "Example status"
                    },
                    "execute": {
                        "type": "string",
                        "description": "The state for scheduled backup or restore operation.",
                        "enum": [
                            "TRIGGER"
                        ],
                        "writeOnly": true,
                        "example": "Example execute"
                    },
                    "operation": {
                        "type": "string",
                        "description": "The scheduled backup operation.",
                        "enum": [
                            "NONE",
                            "BACKUP",
                            "RESTORE"
                        ],
                        "example": "Example operation"
                    },
                    "backup_type": {
                        "type": "string",
                        "description": "The destination of the backup files.",
                        "enum": [
                            "LOCAL",
                            "TFTP",
                            "FTP",
                            "SCP"
                        ],
                        "example": "Example backup_type"
                    },
                    "keep_local_copy": {
                        "type": "boolean",
                        "description": "Determines whether the local backup performed before uploading backup to remote storage.",
                        "example": false
                    },
                    "backup_frequency": {
                        "type": "string",
                        "description": "The frequency of backups.",
                        "enum": [
                            "WEEKLY",
                            "DAILY",
                            "HOURLY"
                        ],
                        "example": "Example backup_frequency"
                    },
                    "weekday": {
                        "type": "string",
                        "description": "The day of the week when the backup is performed.",
                        "enum": [
                            "SATURDAY",
                            "SUNDAY",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY"
                        ],
                        "example": "Example weekday"
                    },
                    "hour_of_day": {
                        "type": "integer",
                        "description": "The hour of the day past 12:00 AM the backup is performed.",
                        "format": "int64",
                        "example": 1
                    },
                    "minutes_past_hour": {
                        "type": "integer",
                        "description": "The minute of the hour when the backup is performed.",
                        "format": "int64",
                        "example": 1
                    },
                    "username": {
                        "type": "string",
                        "description": "The user name on the backup server.",
                        "example": "Example username"
                    },
                    "password": {
                        "type": "string",
                        "description": "The user password on the backup server.",
                        "writeOnly": true,
                        "example": "Example password"
                    },
                    "backup_server": {
                        "type": "string",
                        "description": "The IP address of the backup server.",
                        "example": "Example backup_server"
                    },
                    "path": {
                        "type": "string",
                        "description": "The directory path to the backup file stored on the server.",
                        "example": "Example path"
                    },
                    "restore_type": {
                        "type": "string",
                        "description": "The destination of the restore files.",
                        "enum": [
                            "FTP",
                            "SCP"
                        ],
                        "example": "Example restore_type"
                    },
                    "restore_server": {
                        "type": "string",
                        "description": "The IP address of the restore server.",
                        "example": "Example restore_server"
                    },
                    "restore_username": {
                        "type": "string",
                        "description": "The user name on the restore server.",
                        "example": "Example restore_username"
                    },
                    "restore_password": {
                        "type": "string",
                        "description": "The password on the restore server.",
                        "writeOnly": true,
                        "example": "Example restore_password"
                    },
                    "restore_path": {
                        "type": "string",
                        "description": "The directory path to the restored file on the server.",
                        "example": "Example restore_path"
                    },
                    "nios_data": {
                        "type": "boolean",
                        "description": "Determines whether the restore of the NIOS data is enabled.",
                        "example": false
                    },
                    "discovery_data": {
                        "type": "boolean",
                        "description": "Determines whether the restore the NetMRI data is enabled.",
                        "example": false
                    },
                    "splunk_app_data": {
                        "type": "boolean",
                        "description": "Determines whether the restore of the Splunk application data is enabled.",
                        "example": false
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Determines whether the scheduled backup is enabled.",
                        "example": false
                    },
                    "use_keys": {
                        "type": "boolean",
                        "description": "If set, scp backup support based on keys",
                        "example": false
                    },
                    "key_type": {
                        "type": "string",
                        "description": "If set, scp backup support based on keys type",
                        "enum": [
                            "id_rsa",
                            "id_ecdsa"
                        ],
                        "writeOnly": true,
                        "example": "Example key_type"
                    },
                    "upload_keys": {
                        "type": "boolean",
                        "description": "If set, scp backup support to upload keys",
                        "example": false
                    },
                    "download_keys": {
                        "type": "boolean",
                        "description": "If set, scp backup support to download keys",
                        "example": false
                    }
                }
            },
            "GridDnsFileTransferSetting": {
                "type": "object",
                "properties": {
                    "directory": {
                        "type": "string",
                        "description": "The directory to save the captured DNS queries and responses.",
                        "example": "Example directory"
                    },
                    "server_address_or_fqdn": {
                        "type": "string",
                        "description": "The server address or a FQDN name of the destination server for DNS capture transfer.",
                        "example": "Example server_address_or_fqdn"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password to access the destination server directory.",
                        "writeOnly": true,
                        "example": "Example password"
                    },
                    "type": {
                        "type": "string",
                        "description": "The transfer protocol for the captured DNS queries and responses.",
                        "enum": [
                            "NONE",
                            "FTP",
                            "SCP"
                        ],
                        "example": "Example type"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username to access the destination server directory.",
                        "example": "Example username"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Transfer scp port.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "GridDnsFilterAaaaList": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address this rule applies to or \"Any\".",
                        "example": "Example address"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to use for this address.",
                        "enum": [
                            "ALLOW",
                            "DENY"
                        ],
                        "example": "Example permission"
                    }
                }
            },
            "GridDnsFixedRrsetOrderFqdns": {
                "type": "object",
                "properties": {
                    "fqdn": {
                        "type": "string",
                        "description": "The FQDN of the fixed RRset configuration item.",
                        "example": "Example fqdn"
                    },
                    "record_type": {
                        "type": "string",
                        "description": "The record type for the specified FQDN in the fixed RRset configuration.",
                        "enum": [
                            "A",
                            "AAAA",
                            "BOTH"
                        ],
                        "example": "Example record_type"
                    }
                }
            },
            "GridDnsLastQueriedAcl": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address this rule applies to or \"Any\".",
                        "example": "Example address"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to use for this address.",
                        "enum": [
                            "ALLOW",
                            "DENY"
                        ],
                        "example": "Example permission"
                    }
                }
            },
            "GridDnsLoggingCategories": {
                "type": "object",
                "properties": {
                    "log_dtc_gslb": {
                        "type": "boolean",
                        "description": "Determines whether the DTC GSLB activity is captured or not.",
                        "example": false
                    },
                    "log_dtc_health": {
                        "type": "boolean",
                        "description": "Determines whether the DTC health monitoring information is captured or not.",
                        "example": false
                    },
                    "log_general": {
                        "type": "boolean",
                        "description": "Determines whether the BIND messages that are not specifically classified are captured or not.",
                        "example": false
                    },
                    "log_client": {
                        "type": "boolean",
                        "description": "Determines whether the client requests are captured or not.",
                        "example": false
                    },
                    "log_config": {
                        "type": "boolean",
                        "description": "Determines whether the configuration file parsing is captured or not.",
                        "example": false
                    },
                    "log_database": {
                        "type": "boolean",
                        "description": "Determines whether the BIND's internal database processes are captured or not.",
                        "example": false
                    },
                    "log_dnssec": {
                        "type": "boolean",
                        "description": "Determines whether the DNSSEC-signed responses are captured or not.",
                        "example": false
                    },
                    "log_lame_servers": {
                        "type": "boolean",
                        "description": "Determines whether the bad delegation instances are captured or not.",
                        "example": false
                    },
                    "log_network": {
                        "type": "boolean",
                        "description": "Determines whether the network operation messages are captured or not.",
                        "example": false
                    },
                    "log_notify": {
                        "type": "boolean",
                        "description": "Determines whether the asynchronous zone change notification messages are captured or not.",
                        "example": false
                    },
                    "log_queries": {
                        "type": "boolean",
                        "description": "Determines whether the query messages are captured or not.",
                        "example": false
                    },
                    "log_query_rewrite": {
                        "type": "boolean",
                        "description": "Determines whether the query rewrite messages are captured or not.",
                        "example": false
                    },
                    "log_responses": {
                        "type": "boolean",
                        "description": "Determines whether the response messages are captured or not.",
                        "example": false
                    },
                    "log_resolver": {
                        "type": "boolean",
                        "description": "Determines whether the DNS resolution instances, including recursive queries from resolvers are captured or not.",
                        "example": false
                    },
                    "log_security": {
                        "type": "boolean",
                        "description": "Determines whether the approved and denied requests are captured or not.",
                        "example": false
                    },
                    "log_update": {
                        "type": "boolean",
                        "description": "Determines whether the dynamic update instances are captured or not.",
                        "example": false
                    },
                    "log_xfer_in": {
                        "type": "boolean",
                        "description": "Determines whether the zone transfer messages from the remote name servers to the appliance are captured or not.",
                        "example": false
                    },
                    "log_xfer_out": {
                        "type": "boolean",
                        "description": "Determines whether the zone transfer messages from the Infoblox appliance to remote name servers are captured or not.",
                        "example": false
                    },
                    "log_update_security": {
                        "type": "boolean",
                        "description": "Determines whether the security update messages are captured or not.",
                        "example": false
                    },
                    "log_rate_limit": {
                        "type": "boolean",
                        "description": "Determines whether the rate limit messages are captured or not.",
                        "example": false
                    },
                    "log_rpz": {
                        "type": "boolean",
                        "description": "Determines whether the Response Policy Zone messages are captured or not.",
                        "example": false
                    }
                }
            },
            "GridDnsRecursiveQueryList": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address this rule applies to or \"Any\".",
                        "example": "Example address"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to use for this address.",
                        "enum": [
                            "ALLOW",
                            "DENY"
                        ],
                        "example": "Example permission"
                    }
                }
            },
            "GridDnsResponseRateLimiting": {
                "type": "object",
                "properties": {
                    "enable_rrl": {
                        "type": "boolean",
                        "description": "Determines if the response rate limiting is enabled or not.",
                        "example": false
                    },
                    "log_only": {
                        "type": "boolean",
                        "description": "Determines if logging for response rate limiting without dropping any requests is enabled or not.",
                        "example": false
                    },
                    "responses_per_second": {
                        "type": "integer",
                        "description": "The number of responses per client per second.",
                        "format": "int64",
                        "example": 1
                    },
                    "window": {
                        "type": "integer",
                        "description": "The time interval in seconds over which responses are tracked.",
                        "format": "int64",
                        "example": 1
                    },
                    "slip": {
                        "type": "integer",
                        "description": "The response rate limiting slip. Note that if slip is not equal to 0 every n-th rate-limited UDP request is sent a truncated response instead of being dropped.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "GridDnsRestartSetting": {
                "type": "object",
                "properties": {
                    "delay": {
                        "type": "integer",
                        "description": "The time duration to delay a restart for a restart group.",
                        "format": "int64",
                        "example": 1
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "The duration of timeout for a restart group. The value \"-1\" means infinite.",
                        "format": "int64",
                        "example": 1
                    },
                    "restart_offline": {
                        "type": "boolean",
                        "description": "Determines whether the Grid should try to restart offline member.",
                        "example": false
                    }
                }
            },
            "GridDnsScavengingSettings": {
                "type": "object",
                "properties": {
                    "enable_scavenging": {
                        "type": "boolean",
                        "description": "This flag indicates if the resource record scavenging is enabled or not.",
                        "example": false
                    },
                    "enable_recurrent_scavenging": {
                        "type": "boolean",
                        "description": "This flag indicates if the recurrent resource record scavenging is enabled or not.",
                        "example": false
                    },
                    "enable_auto_reclamation": {
                        "type": "boolean",
                        "description": "This flag indicates if the automatic resource record scavenging is enabled or not.",
                        "example": false
                    },
                    "enable_rr_last_queried": {
                        "type": "boolean",
                        "description": "This flag indicates if the resource record last queried monitoring in affected zones is enabled or not.",
                        "example": false
                    },
                    "enable_zone_last_queried": {
                        "type": "boolean",
                        "description": "This flag indicates if the last queried monitoring for affected zones is enabled or not.",
                        "example": false
                    },
                    "reclaim_associated_records": {
                        "type": "boolean",
                        "description": "This flag indicates if the associated resource record scavenging is enabled or not.",
                        "example": false
                    },
                    "scavenging_schedule": {
                        "description": "Schedule setting for cloud discovery task.",
                        "enum": [
                            "setting:schedule"
                        ],
                        "$ref": "#/components/schemas/GriddnsscavengingsettingsScavengingSchedule"
                    },
                    "expression_list": {
                        "description": "The expression list. The particular record is treated as reclaimable if expression condition evaluates to 'true' for given record if scavenging hasn't been manually disabled on a given resource record.",
                        "enum": [
                            "expressionop"
                        ],
                        "$ref": "#/components/schemas/GriddnsscavengingsettingsExpressionList"
                    },
                    "ea_expression_list": {
                        "description": "The extensible attributes expression list. The particular record is treated as reclaimable if extensible attributes expression condition evaluates to 'true' for given record if scavenging hasn't been manually disabled on a given resource record.",
                        "enum": [
                            "eaexpressionop"
                        ],
                        "$ref": "#/components/schemas/GriddnsscavengingsettingsEaExpressionList"
                    }
                }
            },
            "GriddnsscavengingsettingsScavengingSchedule": {
                "type": "object",
                "properties": {
                    "weekdays": {
                        "type": "array",
                        "description": "Days of the week when scheduling is triggered.",
                        "enum": [
                            "SATURDAY",
                            "SUNDAY",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for the schedule.",
                        "example": "Example time_zone"
                    },
                    "recurring_time": {
                        "type": "integer",
                        "description": "The recurring time for the schedule in Epoch seconds format. This field is obsolete and is preserved only for backward compatibility purposes. Please use other applicable fields to define the recurring schedule. DO NOT use recurring_time together with these fields. If you use recurring_time with other fields to define the recurring schedule, recurring_time has priority over year, hour_of_day, and minutes_past_hour and will override the values of these fields, although it does not override month and day_of_month. In this case, the recurring time value might be different than the intended value that you define.",
                        "format": "int64",
                        "example": 1
                    },
                    "frequency": {
                        "type": "string",
                        "description": "The frequency for the scheduled task.",
                        "enum": [
                            "DAILY",
                            "HOURLY",
                            "MONTHLY",
                            "WEEKLY"
                        ],
                        "example": "Example frequency"
                    },
                    "every": {
                        "type": "integer",
                        "description": "The number of frequency to wait before repeating the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "minutes_past_hour": {
                        "type": "integer",
                        "description": "The minutes past the hour for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "hour_of_day": {
                        "type": "integer",
                        "description": "The hour of day for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "year": {
                        "type": "integer",
                        "description": "The year for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "month": {
                        "type": "integer",
                        "description": "The month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "day_of_month": {
                        "type": "integer",
                        "description": "The day of the month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "repeat": {
                        "type": "string",
                        "description": "Indicates if the scheduled task will be repeated or run only once.",
                        "enum": [
                            "ONCE",
                            "RECUR"
                        ],
                        "example": "Example repeat"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "If set to True, the scheduled task is disabled.",
                        "example": false
                    }
                }
            },
            "GriddnsscavengingsettingsExpressionList": {
                "type": "object",
                "properties": {
                    "op": {
                        "type": "string",
                        "description": "The operation name.",
                        "enum": [
                            "AND",
                            "ENDLIST",
                            "GT",
                            "LT",
                            "LE",
                            "GE",
                            "MATCH_IP",
                            "MATCH_RANGE",
                            "MATCH_CIDR",
                            "EQ",
                            "EXISTS",
                            "NOT_EQ",
                            "NOT_EXISTS",
                            "OR"
                        ],
                        "example": "Example op"
                    },
                    "op1": {
                        "type": "string",
                        "description": "The first operand value.",
                        "example": "Example op1"
                    },
                    "op1_type": {
                        "type": "string",
                        "description": "The first operand type.",
                        "enum": [
                            "FIELD",
                            "LIST",
                            "STRING"
                        ],
                        "example": "Example op1_type"
                    },
                    "op2": {
                        "type": "string",
                        "description": "The second operand value.",
                        "example": "Example op2"
                    },
                    "op2_type": {
                        "type": "string",
                        "description": "The second operand type.",
                        "enum": [
                            "FIELD",
                            "LIST",
                            "STRING"
                        ],
                        "example": "Example op2_type"
                    }
                }
            },
            "GriddnsscavengingsettingsEaExpressionList": {
                "type": "object",
                "properties": {
                    "op": {
                        "type": "string",
                        "description": "The operation name.",
                        "enum": [
                            "AND",
                            "ENDLIST",
                            "GT",
                            "LT",
                            "LE",
                            "GE",
                            "MATCH_IP",
                            "MATCH_RANGE",
                            "MATCH_CIDR",
                            "EQ",
                            "EXISTS",
                            "NOT_EQ",
                            "NOT_EXISTS",
                            "OR"
                        ],
                        "example": "Example op"
                    },
                    "op1": {
                        "type": "string",
                        "description": "The name of the Extensible Attribute Definition object which is used as the first operand value.",
                        "example": "Example op1"
                    },
                    "op1_type": {
                        "type": "string",
                        "description": "The first operand type.",
                        "enum": [
                            "FIELD",
                            "LIST",
                            "STRING"
                        ],
                        "example": "Example op1_type"
                    },
                    "op2": {
                        "type": "string",
                        "description": "The second operand value.",
                        "example": "Example op2"
                    },
                    "op2_type": {
                        "type": "string",
                        "description": "The second operand type.",
                        "enum": [
                            "FIELD",
                            "LIST",
                            "STRING"
                        ],
                        "example": "Example op2_type"
                    }
                }
            },
            "GridDnsSortlist": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The source address of a sortlist object.",
                        "example": "Example address"
                    },
                    "match_list": {
                        "type": "array",
                        "description": "The match list of a sortlist.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ListGridDnsResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __GridDns__ objects.",
                        "type": "array",
                        "title": "ListGridDnsResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/GridDns"
                        }
                    },
                    {
                        "description": "The response format to retrieve __GridDns__ objects.",
                        "type": "object",
                        "title": "ListGridDnsResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GridDns"
                                }
                            }
                        }
                    }
                ]
            },
            "GetGridDnsResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GridDns"
                    },
                    {
                        "description": "The response format to retrieve __GridDns__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetGridDnsResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridDns"
                            }
                        }
                    }
                ]
            },
            "UpdateGridDnsResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __GridDns__ in object format.",
                        "type": "object",
                        "title": "UpdateGridDnsResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridDns"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __GridDns__ .",
                        "type": "string",
                        "title": "UpdateGridDnsResponse"
                    }
                ]
            },
            "GridFiledistribution": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "allow_uploads": {
                        "type": "boolean",
                        "description": "Determines whether the uploads to Grid members are allowed.",
                        "example": false
                    },
                    "backup_storage": {
                        "type": "boolean",
                        "description": "Determines whether to include distributed files in the backup.",
                        "example": false
                    },
                    "current_usage": {
                        "type": "integer",
                        "description": "The value is the percentage of the allocated TFTP storage space that is used, expressed in tenth of a percent. Valid values are from 0 to 1000.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "enable_anonymous_ftp": {
                        "type": "boolean",
                        "description": "Determines whether the FTP anonymous login is enabled.",
                        "example": false
                    },
                    "global_status": {
                        "type": "string",
                        "description": "The Grid file distribution global status.",
                        "enum": [
                            "UNKNOWN",
                            "INACTIVE",
                            "WORKING",
                            "WARNING",
                            "FAILED"
                        ],
                        "readOnly": true,
                        "example": "Example global_status"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid name.",
                        "readOnly": true,
                        "example": "Example name"
                    },
                    "storage_limit": {
                        "type": "integer",
                        "description": "Maximum storage in megabytes allowed on the Grid. The maximum storage space allowed for all file distribution services on a Grid is equal to the storage space allowed to the Grid member with the smallest amount of space allowed.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "ListGridFiledistributionResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __GridFiledistribution__ objects.",
                        "type": "array",
                        "title": "ListGridFiledistributionResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/GridFiledistribution"
                        }
                    },
                    {
                        "description": "The response format to retrieve __GridFiledistribution__ objects.",
                        "type": "object",
                        "title": "ListGridFiledistributionResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GridFiledistribution"
                                }
                            }
                        }
                    }
                ]
            },
            "GetGridFiledistributionResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GridFiledistribution"
                    },
                    {
                        "description": "The response format to retrieve __GridFiledistribution__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetGridFiledistributionResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridFiledistribution"
                            }
                        }
                    }
                ]
            },
            "UpdateGridFiledistributionResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __GridFiledistribution__ in object format.",
                        "type": "object",
                        "title": "UpdateGridFiledistributionResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridFiledistribution"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __GridFiledistribution__ .",
                        "type": "string",
                        "title": "UpdateGridFiledistributionResponse"
                    }
                ]
            },
            "GridThreatprotection": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "current_ruleset": {
                        "type": "string",
                        "description": "The current Grid ruleset.",
                        "example": "Example current_ruleset"
                    },
                    "disable_multiple_dns_tcp_request": {
                        "type": "boolean",
                        "description": "Determines if multiple BIND responses via TCP connection are disabled.",
                        "example": false
                    },
                    "enable_accel_resp_before_threat_protection": {
                        "type": "boolean",
                        "description": "Determines if DNS responses are sent from acceleration cache before applying Threat Protection rules. Recommended for better performance when using DNS Cache Acceleration.",
                        "example": false
                    },
                    "enable_auto_download": {
                        "type": "boolean",
                        "description": "Determines if auto download service is enabled.",
                        "example": false
                    },
                    "enable_nat_rules": {
                        "type": "boolean",
                        "description": "Determines if NAT (Network Address Translation) mapping for threat protection is enabled or not.",
                        "example": false
                    },
                    "enable_scheduled_download": {
                        "type": "boolean",
                        "description": "Determines if scheduled download is enabled. The default frequency is once in every 24 hours if it is disabled.",
                        "example": false
                    },
                    "events_per_second_per_rule": {
                        "type": "integer",
                        "description": "The number of events logged per second per rule.",
                        "format": "int64",
                        "example": 1
                    },
                    "grid_name": {
                        "type": "string",
                        "description": "The Grid name.",
                        "readOnly": true,
                        "example": "Example grid_name"
                    },
                    "last_checked_for_update": {
                        "type": "integer",
                        "description": "The time when the Grid last checked for updates.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "last_rule_update_timestamp": {
                        "type": "integer",
                        "description": "The last rule update timestamp.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "last_rule_update_version": {
                        "type": "string",
                        "description": "The version of last rule update.",
                        "readOnly": true,
                        "example": "Example last_rule_update_version"
                    },
                    "nat_rules": {
                        "type": "array",
                        "description": "The list of NAT mapping rules for threat protection.",
                        "enum": [
                            "threatprotection:natrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/GridThreatprotectionNatRules"
                        }
                    },
                    "outbound_settings": {
                        "$ref": "#/components/schemas/GridThreatprotectionOutboundSettings"
                    },
                    "rule_update_policy": {
                        "type": "string",
                        "description": "The update rule policy.",
                        "enum": [
                            "AUTOMATIC",
                            "MANUAL"
                        ],
                        "example": "Example rule_update_policy"
                    },
                    "scheduled_download": {
                        "$ref": "#/components/schemas/GridThreatprotectionScheduledDownload"
                    }
                }
            },
            "GridThreatprotectionNatRules": {
                "type": "object",
                "properties": {
                    "rule_type": {
                        "type": "string",
                        "description": "The rule type for the threat protection NAT mapping rule.",
                        "enum": [
                            "RANGE",
                            "NETWORK",
                            "ADDRESS"
                        ],
                        "example": "Example rule_type"
                    },
                    "address": {
                        "type": "string",
                        "description": "The IP address for the threat protection NAT mapping rule.",
                        "example": "Example address"
                    },
                    "network": {
                        "type": "string",
                        "description": "The network address for the threat protection NAT mapping rule.",
                        "example": "Example network"
                    },
                    "cidr": {
                        "type": "integer",
                        "description": "The network CIDR for the threat protection NAT mapping rule.",
                        "format": "int64",
                        "example": 1
                    },
                    "start_address": {
                        "type": "string",
                        "description": "The start address for the range of the threat protection NAT mapping rule.",
                        "example": "Example start_address"
                    },
                    "end_address": {
                        "type": "string",
                        "description": "The end address for the range of the threat protection NAT mapping rule.",
                        "example": "Example end_address"
                    },
                    "nat_ports": {
                        "description": "The NAT port configuration for the threat protection NAT mapping rule.",
                        "enum": [
                            "threatprotection:natport"
                        ],
                        "$ref": "#/components/schemas/GridthreatprotectionnatrulesNatPorts"
                    }
                }
            },
            "GridthreatprotectionnatrulesNatPorts": {
                "type": "object",
                "properties": {
                    "start_port": {
                        "type": "integer",
                        "description": "The start port value for the NAT port configuration object.",
                        "format": "int64",
                        "example": 1
                    },
                    "end_port": {
                        "type": "integer",
                        "description": "The end port value for the NAT port configuration object.",
                        "format": "int64",
                        "example": 1
                    },
                    "block_size": {
                        "type": "integer",
                        "description": "The block size for the NAT Port configuration object.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "GridThreatprotectionOutboundSettings": {
                "type": "object",
                "properties": {
                    "enable_query_fqdn": {
                        "type": "boolean",
                        "description": "Flag to enable using DNS query FQDN for Outbound.",
                        "example": false
                    },
                    "query_fqdn_limit": {
                        "type": "integer",
                        "description": "Max domain level for DNS Query FQDN",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "GridThreatprotectionScheduledDownload": {
                "type": "object",
                "properties": {
                    "weekdays": {
                        "type": "array",
                        "description": "Days of the week when scheduling is triggered.",
                        "enum": [
                            "SATURDAY",
                            "SUNDAY",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for the schedule.",
                        "example": "Example time_zone"
                    },
                    "recurring_time": {
                        "type": "integer",
                        "description": "The recurring time for the schedule in Epoch seconds format. This field is obsolete and is preserved only for backward compatibility purposes. Please use other applicable fields to define the recurring schedule. DO NOT use recurring_time together with these fields. If you use recurring_time with other fields to define the recurring schedule, recurring_time has priority over year, hour_of_day, and minutes_past_hour and will override the values of these fields, although it does not override month and day_of_month. In this case, the recurring time value might be different than the intended value that you define.",
                        "format": "int64",
                        "example": 1
                    },
                    "frequency": {
                        "type": "string",
                        "description": "The frequency for the scheduled task.",
                        "enum": [
                            "DAILY",
                            "HOURLY",
                            "MONTHLY",
                            "WEEKLY"
                        ],
                        "example": "Example frequency"
                    },
                    "every": {
                        "type": "integer",
                        "description": "The number of frequency to wait before repeating the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "minutes_past_hour": {
                        "type": "integer",
                        "description": "The minutes past the hour for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "hour_of_day": {
                        "type": "integer",
                        "description": "The hour of day for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "year": {
                        "type": "integer",
                        "description": "The year for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "month": {
                        "type": "integer",
                        "description": "The month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "day_of_month": {
                        "type": "integer",
                        "description": "The day of the month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "repeat": {
                        "type": "string",
                        "description": "Indicates if the scheduled task will be repeated or run only once.",
                        "enum": [
                            "ONCE",
                            "RECUR"
                        ],
                        "example": "Example repeat"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "If set to True, the scheduled task is disabled.",
                        "example": false
                    }
                }
            },
            "ListGridThreatprotectionResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __GridThreatprotection__ objects.",
                        "type": "array",
                        "title": "ListGridThreatprotectionResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/GridThreatprotection"
                        }
                    },
                    {
                        "description": "The response format to retrieve __GridThreatprotection__ objects.",
                        "type": "object",
                        "title": "ListGridThreatprotectionResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GridThreatprotection"
                                }
                            }
                        }
                    }
                ]
            },
            "GetGridThreatprotectionResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GridThreatprotection"
                    },
                    {
                        "description": "The response format to retrieve __GridThreatprotection__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetGridThreatprotectionResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridThreatprotection"
                            }
                        }
                    }
                ]
            },
            "UpdateGridThreatprotectionResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __GridThreatprotection__ in object format.",
                        "type": "object",
                        "title": "UpdateGridThreatprotectionResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridThreatprotection"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __GridThreatprotection__ .",
                        "type": "string",
                        "title": "UpdateGridThreatprotectionResponse"
                    }
                ]
            },
            "GridThreatinsight": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "allowlist_update_policy": {
                        "type": "string",
                        "description": "allowlist update policy (manual or automatic)",
                        "enum": [
                            "MANUAL",
                            "AUTOMATIC"
                        ],
                        "example": "Example allowlist_update_policy"
                    },
                    "configure_domain_collapsing": {
                        "type": "boolean",
                        "description": "Disable domain collapsing at grid level",
                        "example": false
                    },
                    "current_allowlist": {
                        "type": "string",
                        "description": "The Grid allowlist.",
                        "readOnly": true,
                        "example": "Example current_allowlist"
                    },
                    "current_moduleset": {
                        "type": "string",
                        "description": "The current threat insight module set.",
                        "readOnly": true,
                        "example": "Example current_moduleset"
                    },
                    "dns_tunnel_block_list_rpz_zones": {
                        "type": "array",
                        "description": "The list of response policy zones for DNS tunnelling requests.",
                        "enum": [
                            "zone_rp"
                        ],
                        "items": {
                            "type": "string",
                            "enum": [
                                "zone_rp"
                            ]
                        }
                    },
                    "domain_collapsing_level": {
                        "type": "integer",
                        "description": "Level of domain collapsing",
                        "format": "int64",
                        "example": 1
                    },
                    "enable_allowlist_auto_download": {
                        "type": "boolean",
                        "description": "Indicates whether auto download service is enabled",
                        "example": false
                    },
                    "enable_allowlist_scheduled_download": {
                        "type": "boolean",
                        "description": "Indicates whether the custom scheduled settings for auto download is enabled. If false then default frequency is once per 24 hours",
                        "example": false
                    },
                    "enable_auto_download": {
                        "type": "boolean",
                        "description": "Determines whether the automatic threat insight module set download is enabled.",
                        "example": false
                    },
                    "enable_scheduled_download": {
                        "type": "boolean",
                        "description": "Determines whether the scheduled download of the threat insight module set is enabled.",
                        "example": false
                    },
                    "last_allowlist_update_time": {
                        "type": "integer",
                        "description": "The last update time for the threat insight allowlist.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "last_allowlist_update_version": {
                        "type": "string",
                        "description": "The version number of the last updated threat insight allowlist.",
                        "readOnly": true,
                        "example": "Example last_allowlist_update_version"
                    },
                    "last_checked_for_allowlist_update": {
                        "type": "integer",
                        "description": "Timestamp of last checked allowlist",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "last_checked_for_package_update": {
                        "type": "integer",
                        "description": "The last update time for the threat analytics moduleset package.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "last_checked_for_update": {
                        "type": "integer",
                        "description": "The last time when the threat insight module set was checked for the update.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "last_module_update_time": {
                        "type": "integer",
                        "description": "The last update time for the threat insight module set.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "last_module_update_version": {
                        "type": "string",
                        "description": "The version number of the last updated threat insight module set.",
                        "readOnly": true,
                        "example": "Example last_module_update_version"
                    },
                    "last_updated_package_version": {
                        "type": "string",
                        "description": "The version number of the last updated Moduleset package.",
                        "readOnly": true,
                        "example": "Example last_updated_package_version"
                    },
                    "module_update_policy": {
                        "type": "string",
                        "description": "The update policy for the threat insight module set.",
                        "enum": [
                            "AUTOMATIC",
                            "MANUAL"
                        ],
                        "example": "Example module_update_policy"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid name.",
                        "readOnly": true,
                        "example": "Example name"
                    },
                    "scheduled_allowlist_download": {
                        "$ref": "#/components/schemas/GridThreatinsightScheduledAllowlistDownload"
                    },
                    "scheduled_download": {
                        "$ref": "#/components/schemas/GridThreatinsightScheduledDownload"
                    }
                }
            },
            "GridThreatinsightScheduledAllowlistDownload": {
                "type": "object",
                "properties": {
                    "weekdays": {
                        "type": "array",
                        "description": "Days of the week when scheduling is triggered.",
                        "enum": [
                            "SATURDAY",
                            "SUNDAY",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for the schedule.",
                        "example": "Example time_zone"
                    },
                    "recurring_time": {
                        "type": "integer",
                        "description": "The recurring time for the schedule in Epoch seconds format. This field is obsolete and is preserved only for backward compatibility purposes. Please use other applicable fields to define the recurring schedule. DO NOT use recurring_time together with these fields. If you use recurring_time with other fields to define the recurring schedule, recurring_time has priority over year, hour_of_day, and minutes_past_hour and will override the values of these fields, although it does not override month and day_of_month. In this case, the recurring time value might be different than the intended value that you define.",
                        "format": "int64",
                        "example": 1
                    },
                    "frequency": {
                        "type": "string",
                        "description": "The frequency for the scheduled task.",
                        "enum": [
                            "DAILY",
                            "HOURLY",
                            "MONTHLY",
                            "WEEKLY"
                        ],
                        "example": "Example frequency"
                    },
                    "every": {
                        "type": "integer",
                        "description": "The number of frequency to wait before repeating the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "minutes_past_hour": {
                        "type": "integer",
                        "description": "The minutes past the hour for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "hour_of_day": {
                        "type": "integer",
                        "description": "The hour of day for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "year": {
                        "type": "integer",
                        "description": "The year for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "month": {
                        "type": "integer",
                        "description": "The month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "day_of_month": {
                        "type": "integer",
                        "description": "The day of the month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "repeat": {
                        "type": "string",
                        "description": "Indicates if the scheduled task will be repeated or run only once.",
                        "enum": [
                            "ONCE",
                            "RECUR"
                        ],
                        "example": "Example repeat"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "If set to True, the scheduled task is disabled.",
                        "example": false
                    }
                }
            },
            "GridThreatinsightScheduledDownload": {
                "type": "object",
                "properties": {
                    "weekdays": {
                        "type": "array",
                        "description": "Days of the week when scheduling is triggered.",
                        "enum": [
                            "SATURDAY",
                            "SUNDAY",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for the schedule.",
                        "example": "Example time_zone"
                    },
                    "recurring_time": {
                        "type": "integer",
                        "description": "The recurring time for the schedule in Epoch seconds format. This field is obsolete and is preserved only for backward compatibility purposes. Please use other applicable fields to define the recurring schedule. DO NOT use recurring_time together with these fields. If you use recurring_time with other fields to define the recurring schedule, recurring_time has priority over year, hour_of_day, and minutes_past_hour and will override the values of these fields, although it does not override month and day_of_month. In this case, the recurring time value might be different than the intended value that you define.",
                        "format": "int64",
                        "example": 1
                    },
                    "frequency": {
                        "type": "string",
                        "description": "The frequency for the scheduled task.",
                        "enum": [
                            "DAILY",
                            "HOURLY",
                            "MONTHLY",
                            "WEEKLY"
                        ],
                        "example": "Example frequency"
                    },
                    "every": {
                        "type": "integer",
                        "description": "The number of frequency to wait before repeating the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "minutes_past_hour": {
                        "type": "integer",
                        "description": "The minutes past the hour for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "hour_of_day": {
                        "type": "integer",
                        "description": "The hour of day for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "year": {
                        "type": "integer",
                        "description": "The year for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "month": {
                        "type": "integer",
                        "description": "The month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "day_of_month": {
                        "type": "integer",
                        "description": "The day of the month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "repeat": {
                        "type": "string",
                        "description": "Indicates if the scheduled task will be repeated or run only once.",
                        "enum": [
                            "ONCE",
                            "RECUR"
                        ],
                        "example": "Example repeat"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "If set to True, the scheduled task is disabled.",
                        "example": false
                    }
                }
            },
            "ListGridThreatinsightResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __GridThreatinsight__ objects.",
                        "type": "array",
                        "title": "ListGridThreatinsightResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/GridThreatinsight"
                        }
                    },
                    {
                        "description": "The response format to retrieve __GridThreatinsight__ objects.",
                        "type": "object",
                        "title": "ListGridThreatinsightResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GridThreatinsight"
                                }
                            }
                        }
                    }
                ]
            },
            "GetGridThreatinsightResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GridThreatinsight"
                    },
                    {
                        "description": "The response format to retrieve __GridThreatinsight__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetGridThreatinsightResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridThreatinsight"
                            }
                        }
                    }
                ]
            },
            "UpdateGridThreatinsightResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __GridThreatinsight__ in object format.",
                        "type": "object",
                        "title": "UpdateGridThreatinsightResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridThreatinsight"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __GridThreatinsight__ .",
                        "type": "string",
                        "title": "UpdateGridThreatinsightResponse"
                    }
                ]
            },
            "GridLicensePool": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "assigned": {
                        "type": "integer",
                        "description": "The number of dynamic licenses allocated to vNIOS appliances.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "expiration_status": {
                        "type": "string",
                        "description": "The license expiration status. * DELETED - The temporary license has been deleted. * EXPIRED - License/Pool has reached the expiry date. * EXPIRING_SOON - License/Pool expires in 31-90 days. * EXPIRING_VERY_SOON - License/Pool expires in 30 days or earlier. * NOT_EXPIRED - License/Pool has not expired. * PERMANENT - License/Pool does not expire.",
                        "enum": [
                            "NOT_EXPIRED",
                            "EXPIRED",
                            "PERMANENT",
                            "EXPIRING_SOON",
                            "EXPIRING_VERY_SOON",
                            "DELETED"
                        ],
                        "readOnly": true,
                        "example": "Example expiration_status"
                    },
                    "expiry_date": {
                        "type": "integer",
                        "description": "The expiration timestamp of the license.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "installed": {
                        "type": "integer",
                        "description": "The total number of dynamic licenses allowed for this license pool.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "key": {
                        "type": "string",
                        "description": "The license string for the license pool.",
                        "readOnly": true,
                        "example": "Example key"
                    },
                    "limit": {
                        "type": "string",
                        "description": "The limitation of dynamic license that can be allocated from the license pool.",
                        "readOnly": true,
                        "example": "Example limit"
                    },
                    "limit_context": {
                        "type": "string",
                        "description": "The license limit context.",
                        "enum": [
                            "NONE",
                            "LEASES",
                            "MODEL",
                            "TIER"
                        ],
                        "readOnly": true,
                        "example": "Example limit_context"
                    },
                    "model": {
                        "type": "string",
                        "description": "The supported vNIOS virtual appliance model.",
                        "readOnly": true,
                        "example": "Example model"
                    },
                    "subpools": {
                        "type": "array",
                        "description": "The license pool subpools.",
                        "enum": [
                            "grid:licensesubpool"
                        ],
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/GridLicensePoolSubpools"
                        }
                    },
                    "temp_assigned": {
                        "type": "integer",
                        "description": "The total number of temporary dynamic licenses allocated to vNIOS appliances.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "type": {
                        "type": "string",
                        "description": "The license type.",
                        "enum": [
                            "ANYCAST",
                            "CLOUD",
                            "CLOUD_API",
                            "DCA",
                            "DDI_TRIAL",
                            "DHCP",
                            "DISCOVERY",
                            "DNS",
                            "DNSQRW",
                            "DNS_CACHE_ACCEL",
                            "DTC",
                            "FIREEYE",
                            "FLEX_GRID_ACTIVATION",
                            "FLEX_GRID_ACTIVATION_MS",
                            "FREQ_CONTROL",
                            "GRID",
                            "GRID_MAINTENANCE",
                            "IPAM",
                            "IPAM_FREEWARE",
                            "LDAP",
                            "LOAD_BALANCER",
                            "MGM",
                            "MSMGMT",
                            "NIOS",
                            "NIOS_MAINTENANCE",
                            "NTP",
                            "OEM",
                            "QRD",
                            "REPORTING",
                            "REPORTING_SUB",
                            "RPZ",
                            "SECURITY_ECOSYSTEM",
                            "SW_TP",
                            "TAE",
                            "TFTP",
                            "THREAT_INSIGHT",
                            "TP",
                            "TP_SUB",
                            "VNIOS"
                        ],
                        "readOnly": true,
                        "example": "Example type"
                    }
                }
            },
            "GridLicensePoolSubpools": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "The license string for the license subpool.",
                        "readOnly": true,
                        "example": "Example key"
                    },
                    "installed": {
                        "type": "integer",
                        "description": "The total number of dynamic licenses allowed for this license subpool.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "expiry_date": {
                        "type": "integer",
                        "description": "License expiration date.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "ListGridLicensePoolResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __GridLicensePool__ objects.",
                        "type": "array",
                        "title": "ListGridLicensePoolResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/GridLicensePool"
                        }
                    },
                    {
                        "description": "The response format to retrieve __GridLicensePool__ objects.",
                        "type": "object",
                        "title": "ListGridLicensePoolResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GridLicensePool"
                                }
                            }
                        }
                    }
                ]
            },
            "GetGridLicensePoolResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GridLicensePool"
                    },
                    {
                        "description": "The response format to retrieve __GridLicensePool__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetGridLicensePoolResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridLicensePool"
                            }
                        }
                    }
                ]
            },
            "UpdateGridLicensePoolResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __GridLicensePool__ in object format.",
                        "type": "object",
                        "title": "UpdateGridLicensePoolResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridLicensePool"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __GridLicensePool__ .",
                        "type": "string",
                        "title": "UpdateGridLicensePoolResponse"
                    }
                ]
            },
            "GridX509certificate": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "issuer": {
                        "type": "string",
                        "description": "Certificate issuer.",
                        "readOnly": true,
                        "example": "Example issuer"
                    },
                    "serial": {
                        "type": "string",
                        "description": "X509Certificate serial number.",
                        "readOnly": true,
                        "example": "Example serial"
                    },
                    "subject": {
                        "type": "string",
                        "description": "A Distinguished Name that is made of multiple relative distinguished names (RDNs).",
                        "readOnly": true,
                        "example": "Example subject"
                    },
                    "valid_not_after": {
                        "type": "integer",
                        "description": "Certificate expiry date.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "valid_not_before": {
                        "type": "integer",
                        "description": "Certificate validity start date.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "ListGridX509certificateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __GridX509certificate__ objects.",
                        "type": "array",
                        "title": "ListGridX509certificateResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/GridX509certificate"
                        }
                    },
                    {
                        "description": "The response format to retrieve __GridX509certificate__ objects.",
                        "type": "object",
                        "title": "ListGridX509certificateResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GridX509certificate"
                                }
                            }
                        }
                    }
                ]
            },
            "GetGridX509certificateResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GridX509certificate"
                    },
                    {
                        "description": "The response format to retrieve __GridX509certificate__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetGridX509certificateResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridX509certificate"
                            }
                        }
                    }
                ]
            },
            "UpdateGridX509certificateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __GridX509certificate__ in object format.",
                        "type": "object",
                        "title": "UpdateGridX509certificateResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridX509certificate"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __GridX509certificate__ .",
                        "type": "string",
                        "title": "UpdateGridX509certificateResponse"
                    }
                ]
            },
            "Captiveportal": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "authn_server_group": {
                        "type": "string",
                        "description": "The authentication server group assigned to this captive portal.",
                        "example": "Example authn_server_group"
                    },
                    "company_name": {
                        "type": "string",
                        "description": "The company name that appears in the guest registration page.",
                        "example": "Example company_name"
                    },
                    "enable_syslog_auth_failure": {
                        "type": "boolean",
                        "description": "Determines if authentication failures are logged to syslog or not.",
                        "example": false
                    },
                    "enable_syslog_auth_success": {
                        "type": "boolean",
                        "description": "Determines if successful authentications are logged to syslog or not.",
                        "example": false
                    },
                    "enable_user_type": {
                        "type": "string",
                        "description": "The type of user to be enabled for the captive portal.",
                        "enum": [
                            "AUTHENTICATED",
                            "BOTH",
                            "GUEST"
                        ],
                        "example": "Example enable_user_type"
                    },
                    "encryption": {
                        "type": "string",
                        "description": "The encryption the captive portal uses.",
                        "enum": [
                            "NONE",
                            "SSL"
                        ],
                        "example": "Example encryption"
                    },
                    "files": {
                        "type": "array",
                        "description": "The list of files associated with the captive portal.",
                        "enum": [
                            "captiveportal:file"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/CaptiveportalFiles"
                        }
                    },
                    "guest_custom_field1_name": {
                        "type": "string",
                        "description": "The name of the custom field that you are adding to the guest registration page.",
                        "example": "Example guest_custom_field1_name"
                    },
                    "guest_custom_field1_required": {
                        "type": "boolean",
                        "description": "Determines if the custom field is required or not.",
                        "example": false
                    },
                    "guest_custom_field2_name": {
                        "type": "string",
                        "description": "The name of the custom field that you are adding to the guest registration page.",
                        "example": "Example guest_custom_field2_name"
                    },
                    "guest_custom_field2_required": {
                        "type": "boolean",
                        "description": "Determines if the custom field is required or not.",
                        "example": false
                    },
                    "guest_custom_field3_name": {
                        "type": "string",
                        "description": "The name of the custom field that you are adding to the guest registration page.",
                        "example": "Example guest_custom_field3_name"
                    },
                    "guest_custom_field3_required": {
                        "type": "boolean",
                        "description": "Determines if the custom field is required or not.",
                        "example": false
                    },
                    "guest_custom_field4_name": {
                        "type": "string",
                        "description": "The name of the custom field that you are adding to the guest registration page.",
                        "example": "Example guest_custom_field4_name"
                    },
                    "guest_custom_field4_required": {
                        "type": "boolean",
                        "description": "Determines if the custom field is required or not.",
                        "example": false
                    },
                    "guest_email_required": {
                        "type": "boolean",
                        "description": "Determines if the email address of the guest is required or not.",
                        "example": false
                    },
                    "guest_first_name_required": {
                        "type": "boolean",
                        "description": "Determines if the first name of the guest is required or not.",
                        "example": false
                    },
                    "guest_last_name_required": {
                        "type": "boolean",
                        "description": "Determines if the last name of the guest is required or not.",
                        "example": false
                    },
                    "guest_middle_name_required": {
                        "type": "boolean",
                        "description": "Determines if the middle name of the guest is required or not.",
                        "example": false
                    },
                    "guest_phone_required": {
                        "type": "boolean",
                        "description": "Determines if the phone number of the guest is required or not.",
                        "example": false
                    },
                    "helpdesk_message": {
                        "type": "string",
                        "description": "The helpdesk message that appears in the guest registration page.",
                        "example": "Example helpdesk_message"
                    },
                    "listen_address_ip": {
                        "type": "string",
                        "description": "Determines the IP address on which the captive portal listens. Valid if listen address type is 'IP'.",
                        "example": "Example listen_address_ip"
                    },
                    "listen_address_type": {
                        "type": "string",
                        "description": "Determines the type of the IP address on which the captive portal listens.",
                        "enum": [
                            "VIP",
                            "LAN2",
                            "IP"
                        ],
                        "example": "Example listen_address_type"
                    },
                    "name": {
                        "type": "string",
                        "description": "The hostname of the Grid member that hosts the captive portal.",
                        "readOnly": true,
                        "example": "Example name"
                    },
                    "network_view": {
                        "type": "string",
                        "description": "The network view of the captive portal.",
                        "example": "Example network_view"
                    },
                    "port": {
                        "type": "integer",
                        "description": "The TCP port used by the Captive Portal service. The port is required when the Captive Portal service is enabled. Valid values are between 1 and 63999. Please note that setting the port number to 80 or 443 might impact performance.",
                        "format": "int64",
                        "example": 1
                    },
                    "service_enabled": {
                        "type": "boolean",
                        "description": "Determines if the captive portal service is enabled or not.",
                        "example": false
                    },
                    "syslog_auth_failure_level": {
                        "type": "string",
                        "description": "The syslog level at which authentication failures are logged.",
                        "enum": [
                            "EMERG",
                            "INFO",
                            "DEBUG",
                            "WARNING",
                            "NOTICE",
                            "ALERT",
                            "CRIT",
                            "ERR"
                        ],
                        "example": "Example syslog_auth_failure_level"
                    },
                    "syslog_auth_success_level": {
                        "type": "string",
                        "description": "The syslog level at which successful authentications are logged.",
                        "enum": [
                            "EMERG",
                            "INFO",
                            "DEBUG",
                            "WARNING",
                            "NOTICE",
                            "ALERT",
                            "CRIT",
                            "ERR"
                        ],
                        "example": "Example syslog_auth_success_level"
                    },
                    "welcome_message": {
                        "type": "string",
                        "description": "The welcome message that appears in the guest registration page.",
                        "example": "Example welcome_message"
                    }
                }
            },
            "CaptiveportalFiles": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the uploaded file.",
                        "example": "Example name"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the uploaded file.",
                        "enum": [
                            "IMG_LOGO",
                            "IMG_FOOTER",
                            "IMG_HEADER",
                            "AUP"
                        ],
                        "example": "Example type"
                    }
                }
            },
            "ListCaptiveportalResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Captiveportal__ objects.",
                        "type": "array",
                        "title": "ListCaptiveportalResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Captiveportal"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Captiveportal__ objects.",
                        "type": "object",
                        "title": "ListCaptiveportalResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Captiveportal"
                                }
                            }
                        }
                    }
                ]
            },
            "GetCaptiveportalResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Captiveportal"
                    },
                    {
                        "description": "The response format to retrieve __Captiveportal__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetCaptiveportalResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Captiveportal"
                            }
                        }
                    }
                ]
            },
            "UpdateCaptiveportalResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Captiveportal__ in object format.",
                        "type": "object",
                        "title": "UpdateCaptiveportalResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Captiveportal"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Captiveportal__ .",
                        "type": "string",
                        "title": "UpdateCaptiveportalResponse"
                    }
                ]
            },
            "GridLicensePoolContainer": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "last_entitlement_update": {
                        "type": "integer",
                        "description": "The timestamp when the last pool licenses were updated.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "lpc_uid": {
                        "type": "string",
                        "description": "The world-wide unique ID for the license pool container.",
                        "readOnly": true,
                        "example": "Example lpc_uid"
                    }
                }
            },
            "ListGridLicensePoolContainerResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __GridLicensePoolContainer__ objects.",
                        "type": "array",
                        "title": "ListGridLicensePoolContainerResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/GridLicensePoolContainer"
                        }
                    },
                    {
                        "description": "The response format to retrieve __GridLicensePoolContainer__ objects.",
                        "type": "object",
                        "title": "ListGridLicensePoolContainerResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GridLicensePoolContainer"
                                }
                            }
                        }
                    }
                ]
            },
            "GetGridLicensePoolContainerResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GridLicensePoolContainer"
                    },
                    {
                        "description": "The response format to retrieve __GridLicensePoolContainer__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetGridLicensePoolContainerResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridLicensePoolContainer"
                            }
                        }
                    }
                ]
            },
            "UpdateGridLicensePoolContainerResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __GridLicensePoolContainer__ in object format.",
                        "type": "object",
                        "title": "UpdateGridLicensePoolContainerResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridLicensePoolContainer"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __GridLicensePoolContainer__ .",
                        "type": "string",
                        "title": "UpdateGridLicensePoolContainerResponse"
                    }
                ]
            },
            "GridMaxminddbinfo": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "binary_major_version": {
                        "type": "integer",
                        "description": "The major version of DB binary format.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "binary_minor_version": {
                        "type": "integer",
                        "description": "The minor version of DB binary format.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "build_time": {
                        "type": "integer",
                        "description": "The time at which the DB was built.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "database_type": {
                        "type": "string",
                        "description": "The structure of data records (\"GeoLite2-Country\", GeoLite2-City\", etc.).",
                        "readOnly": true,
                        "example": "Example database_type"
                    },
                    "deployment_time": {
                        "type": "integer",
                        "description": "The time at which the current Topology DB was deployed.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "member": {
                        "type": "string",
                        "description": "The member for testing the connection.",
                        "readOnly": true,
                        "example": "Example member"
                    },
                    "topology_type": {
                        "type": "string",
                        "description": "The topology type.",
                        "enum": [
                            "GEOIP",
                            "EA"
                        ],
                        "readOnly": true,
                        "example": "Example topology_type"
                    }
                }
            },
            "ListGridMaxminddbinfoResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __GridMaxminddbinfo__ objects.",
                        "type": "array",
                        "title": "ListGridMaxminddbinfoResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/GridMaxminddbinfo"
                        }
                    },
                    {
                        "description": "The response format to retrieve __GridMaxminddbinfo__ objects.",
                        "type": "object",
                        "title": "ListGridMaxminddbinfoResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GridMaxminddbinfo"
                                }
                            }
                        }
                    }
                ]
            },
            "GetGridMaxminddbinfoResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GridMaxminddbinfo"
                    },
                    {
                        "description": "The response format to retrieve __GridMaxminddbinfo__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetGridMaxminddbinfoResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridMaxminddbinfo"
                            }
                        }
                    }
                ]
            },
            "UpdateGridMaxminddbinfoResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __GridMaxminddbinfo__ in object format.",
                        "type": "object",
                        "title": "UpdateGridMaxminddbinfoResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridMaxminddbinfo"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __GridMaxminddbinfo__ .",
                        "type": "string",
                        "title": "UpdateGridMaxminddbinfoResponse"
                    }
                ]
            },
            "GridServicerestartGroupOrder": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "groups": {
                        "type": "array",
                        "description": "The ordered list of the Service Restart Group.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ListGridServicerestartGroupOrderResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __GridServicerestartGroupOrder__ objects.",
                        "type": "array",
                        "title": "ListGridServicerestartGroupOrderResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/GridServicerestartGroupOrder"
                        }
                    },
                    {
                        "description": "The response format to retrieve __GridServicerestartGroupOrder__ objects.",
                        "type": "object",
                        "title": "ListGridServicerestartGroupOrderResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GridServicerestartGroupOrder"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateGridServicerestartGroupOrderResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __GridServicerestartGroupOrder__ in object format.",
                        "type": "object",
                        "title": "CreateGridServicerestartGroupOrderResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridServicerestartGroupOrder"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __GridServicerestartGroupOrder__.",
                        "type": "string",
                        "title": "CreateGridServicerestartGroupOrderResponse"
                    }
                ]
            },
            "GetGridServicerestartGroupOrderResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GridServicerestartGroupOrder"
                    },
                    {
                        "description": "The response format to retrieve __GridServicerestartGroupOrder__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetGridServicerestartGroupOrderResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridServicerestartGroupOrder"
                            }
                        }
                    }
                ]
            },
            "UpdateGridServicerestartGroupOrderResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __GridServicerestartGroupOrder__ in object format.",
                        "type": "object",
                        "title": "UpdateGridServicerestartGroupOrderResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridServicerestartGroupOrder"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __GridServicerestartGroupOrder__ .",
                        "type": "string",
                        "title": "UpdateGridServicerestartGroupOrderResponse"
                    }
                ]
            },
            "GridServicerestartRequestChangedobject": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "action": {
                        "type": "string",
                        "description": "The operation on the changed object.",
                        "enum": [
                            "DELETED",
                            "CREATED",
                            "MODIFIED",
                            "CALLED",
                            "MESSAGE",
                            "LOGIN_ALLOWED",
                            "LOGIN_DENIED",
                            "LOGOUT"
                        ],
                        "readOnly": true,
                        "example": "Example action"
                    },
                    "changed_properties": {
                        "type": "array",
                        "description": "The list of changed properties in the object.",
                        "enum": [
                            "string"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "changed_time": {
                        "type": "integer",
                        "description": "The time when the object was changed.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "object_name": {
                        "type": "string",
                        "description": "The name of the changed object.",
                        "readOnly": true,
                        "example": "Example object_name"
                    },
                    "object_type": {
                        "type": "string",
                        "description": "The type of the changed object. This is undefined if the object is not supported.",
                        "readOnly": true,
                        "example": "Example object_type"
                    },
                    "user_name": {
                        "type": "string",
                        "description": "The name of the user who changed the object properties.",
                        "readOnly": true,
                        "example": "Example user_name"
                    }
                }
            },
            "ListGridServicerestartRequestChangedobjectResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __GridServicerestartRequestChangedobject__ objects.",
                        "type": "array",
                        "title": "ListGridServicerestartRequestChangedobjectResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/GridServicerestartRequestChangedobject"
                        }
                    },
                    {
                        "description": "The response format to retrieve __GridServicerestartRequestChangedobject__ objects.",
                        "type": "object",
                        "title": "ListGridServicerestartRequestChangedobjectResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GridServicerestartRequestChangedobject"
                                }
                            }
                        }
                    }
                ]
            },
            "GetGridServicerestartRequestChangedobjectResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GridServicerestartRequestChangedobject"
                    },
                    {
                        "description": "The response format to retrieve __GridServicerestartRequestChangedobject__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetGridServicerestartRequestChangedobjectResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridServicerestartRequestChangedobject"
                            }
                        }
                    }
                ]
            },
            "UpdateGridServicerestartRequestChangedobjectResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __GridServicerestartRequestChangedobject__ in object format.",
                        "type": "object",
                        "title": "UpdateGridServicerestartRequestChangedobjectResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/GridServicerestartRequestChangedobject"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __GridServicerestartRequestChangedobject__ .",
                        "type": "string",
                        "title": "UpdateGridServicerestartRequestChangedobjectResponse"
                    }
                ]
            },
            "Restartservicestatus": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "dhcp_status": {
                        "type": "string",
                        "description": "The status of the DHCP service.",
                        "enum": [
                            "CONFIG_ERROR",
                            "DISABLED",
                            "NO",
                            "NO_PERMISSION",
                            "NO_REQUEST",
                            "OFFLINE",
                            "REQUESTING",
                            "RESTART_PENDING",
                            "YES"
                        ],
                        "readOnly": true,
                        "example": "Example dhcp_status"
                    },
                    "dns_status": {
                        "type": "string",
                        "description": "The status of the DNS service.",
                        "enum": [
                            "CONFIG_ERROR",
                            "DISABLED",
                            "NO",
                            "NO_PERMISSION",
                            "NO_REQUEST",
                            "OFFLINE",
                            "REQUESTING",
                            "RESTART_PENDING",
                            "YES"
                        ],
                        "readOnly": true,
                        "example": "Example dns_status"
                    },
                    "member": {
                        "type": "string",
                        "description": "The name of this Grid member in FQDN format.",
                        "readOnly": true,
                        "example": "Example member"
                    },
                    "reporting_status": {
                        "type": "string",
                        "description": "The status of the reporting service.",
                        "enum": [
                            "CONFIG_ERROR",
                            "DISABLED",
                            "NO",
                            "NO_PERMISSION",
                            "NO_REQUEST",
                            "OFFLINE",
                            "REQUESTING",
                            "RESTART_PENDING",
                            "YES"
                        ],
                        "readOnly": true,
                        "example": "Example reporting_status"
                    }
                }
            },
            "ListRestartservicestatusResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Restartservicestatus__ objects.",
                        "type": "array",
                        "title": "ListRestartservicestatusResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Restartservicestatus"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Restartservicestatus__ objects.",
                        "type": "object",
                        "title": "ListRestartservicestatusResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Restartservicestatus"
                                }
                            }
                        }
                    }
                ]
            },
            "GetRestartservicestatusResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Restartservicestatus"
                    },
                    {
                        "description": "The response format to retrieve __Restartservicestatus__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetRestartservicestatusResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Restartservicestatus"
                            }
                        }
                    }
                ]
            },
            "UpdateRestartservicestatusResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Restartservicestatus__ in object format.",
                        "type": "object",
                        "title": "UpdateRestartservicestatusResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Restartservicestatus"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Restartservicestatus__ .",
                        "type": "string",
                        "title": "UpdateRestartservicestatusResponse"
                    }
                ]
            },
            "Natgroup": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "The NAT group descriptive comment.",
                        "example": "Example comment"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of a NAT group object.",
                        "example": "Example name"
                    }
                }
            },
            "ListNatgroupResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Natgroup__ objects.",
                        "type": "array",
                        "title": "ListNatgroupResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Natgroup"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Natgroup__ objects.",
                        "type": "object",
                        "title": "ListNatgroupResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Natgroup"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateNatgroupResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Natgroup__ in object format.",
                        "type": "object",
                        "title": "CreateNatgroupResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Natgroup"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Natgroup__.",
                        "type": "string",
                        "title": "CreateNatgroupResponse"
                    }
                ]
            },
            "GetNatgroupResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Natgroup"
                    },
                    {
                        "description": "The response format to retrieve __Natgroup__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetNatgroupResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Natgroup"
                            }
                        }
                    }
                ]
            },
            "UpdateNatgroupResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Natgroup__ in object format.",
                        "type": "object",
                        "title": "UpdateNatgroupResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Natgroup"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Natgroup__ .",
                        "type": "string",
                        "title": "UpdateNatgroupResponse"
                    }
                ]
            },
            "Member": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "active_position": {
                        "type": "string",
                        "description": "The active server of a Grid member.",
                        "readOnly": true,
                        "example": "Example active_position"
                    },
                    "additional_ip_list": {
                        "type": "array",
                        "description": "The additional IP list of a Grid member. This list contains additional interface information that can be used at the member level. Note that interface structure(s) with interface type set to 'MGMT' are not supported.",
                        "enum": [
                            "interface"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberAdditionalIpList"
                        }
                    },
                    "automated_traffic_capture_setting": {
                        "$ref": "#/components/schemas/MemberAutomatedTrafficCaptureSetting"
                    },
                    "bgp_as": {
                        "type": "array",
                        "description": "The BGP configuration for anycast for a Grid member.",
                        "enum": [
                            "bgpas"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberBgpAs"
                        }
                    },
                    "comment": {
                        "type": "string",
                        "description": "A descriptive comment of the Grid member.",
                        "example": "Example comment"
                    },
                    "config_addr_type": {
                        "type": "string",
                        "description": "Address configuration type.",
                        "enum": [
                            "IPV4",
                            "IPV6",
                            "BOTH"
                        ],
                        "example": "Example config_addr_type"
                    },
                    "csp_access_key": {
                        "type": "array",
                        "description": "CSP portal on-prem host access key",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "csp_member_setting": {
                        "$ref": "#/components/schemas/MemberCspMemberSetting"
                    },
                    "dns_resolver_setting": {
                        "$ref": "#/components/schemas/MemberDnsResolverSetting"
                    },
                    "dscp": {
                        "type": "integer",
                        "description": "The DSCP (Differentiated Services Code Point) value.",
                        "format": "int64",
                        "example": 1
                    },
                    "email_setting": {
                        "$ref": "#/components/schemas/MemberEmailSetting"
                    },
                    "enable_ha": {
                        "type": "boolean",
                        "description": "If set to True, the member has two physical nodes (HA pair).",
                        "example": false
                    },
                    "enable_lom": {
                        "type": "boolean",
                        "description": "Determines if the LOM functionality is enabled or not.",
                        "example": false
                    },
                    "enable_member_redirect": {
                        "type": "boolean",
                        "description": "Determines if the member will redirect GUI connections to the Grid Master or not.",
                        "example": false
                    },
                    "enable_ro_api_access": {
                        "type": "boolean",
                        "description": "If set to True and the member object is a Grid Master Candidate, then read-only API access is enabled.",
                        "example": false
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "external_syslog_backup_servers": {
                        "type": "array",
                        "description": "The list of external syslog backup servers.",
                        "enum": [
                            "extsyslogbackupserver"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberExternalSyslogBackupServers"
                        }
                    },
                    "external_syslog_server_enable": {
                        "type": "boolean",
                        "description": "Determines if external syslog servers should be enabled.",
                        "example": false
                    },
                    "ha_cloud_platform": {
                        "type": "string",
                        "description": "Cloud platform for HA.",
                        "enum": [
                            "AWS",
                            "AZURE",
                            "GCP"
                        ],
                        "example": "Example ha_cloud_platform"
                    },
                    "ha_on_cloud": {
                        "type": "boolean",
                        "description": "True: HA on cloud. False: HA not on cloud.",
                        "example": false
                    },
                    "host_name": {
                        "type": "string",
                        "description": "The host name of the Grid member.",
                        "example": "Example host_name"
                    },
                    "ipv6_setting": {
                        "$ref": "#/components/schemas/MemberIpv6Setting"
                    },
                    "ipv6_static_routes": {
                        "type": "array",
                        "description": "List of IPv6 static routes.",
                        "enum": [
                            "ipv6networksetting"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberIpv6StaticRoutes"
                        }
                    },
                    "is_dscp_capable": {
                        "type": "boolean",
                        "description": "Determines if a Grid member supports DSCP (Differentiated Services Code Point).",
                        "readOnly": true,
                        "example": false
                    },
                    "lan2_enabled": {
                        "type": "boolean",
                        "description": "If this is set to \"true\", the LAN2 port is enabled as an independent port or as a port for failover purposes.",
                        "example": false
                    },
                    "lan2_port_setting": {
                        "$ref": "#/components/schemas/MemberLan2PortSetting"
                    },
                    "lom_network_config": {
                        "type": "array",
                        "description": "The Network configurations for LOM.",
                        "enum": [
                            "lomnetworkconfig"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberLomNetworkConfig"
                        }
                    },
                    "lom_users": {
                        "type": "array",
                        "description": "The list of LOM users.",
                        "enum": [
                            "lomuser"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberLomUsers"
                        }
                    },
                    "master_candidate": {
                        "type": "boolean",
                        "description": "Determines if a Grid member is a Grid Master Candidate or not. This flag enables the Grid member to assume the role of the Grid Master as a disaster recovery measure.",
                        "example": false
                    },
                    "member_service_communication": {
                        "type": "array",
                        "description": "Configure communication type for various services.",
                        "enum": [
                            "memberservicecommunication"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberMemberServiceCommunication"
                        }
                    },
                    "mgmt_port_setting": {
                        "$ref": "#/components/schemas/MemberMgmtPortSetting"
                    },
                    "mmdb_ea_build_time": {
                        "type": "integer",
                        "description": "Extensible attributes Topology database build time.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "mmdb_geoip_build_time": {
                        "type": "integer",
                        "description": "GeoIP Topology database build time.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "nat_setting": {
                        "$ref": "#/components/schemas/MemberNatSetting"
                    },
                    "node_info": {
                        "type": "array",
                        "description": "The node information list with detailed status report on the operations of the Grid Member, mgmt_port_setting must be enabled when configuring the MGMT Port using the node_info field.",
                        "enum": [
                            "nodeinfo"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberNodeInfo"
                        }
                    },
                    "ntp_setting": {
                        "$ref": "#/components/schemas/MemberNtpSetting"
                    },
                    "ospf_list": {
                        "type": "array",
                        "description": "The OSPF area configuration (for anycast) list for a Grid member.",
                        "enum": [
                            "ospf"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberOspfList"
                        }
                    },
                    "passive_ha_arp_enabled": {
                        "type": "boolean",
                        "description": "The ARP protocol setting on the passive node of an HA pair. If you do not specify a value, the default value is \"false\". You can only set this value to \"true\" if the member is an HA pair.",
                        "example": false
                    },
                    "platform": {
                        "type": "string",
                        "description": "Hardware Platform.",
                        "enum": [
                            "INFOBLOX",
                            "RIVERBED",
                            "CISCO",
                            "IBVM",
                            "VNIOS"
                        ],
                        "example": "Example platform"
                    },
                    "pre_provisioning": {
                        "$ref": "#/components/schemas/MemberPreProvisioning"
                    },
                    "preserve_if_owns_delegation": {
                        "type": "boolean",
                        "description": "Set this flag to \"true\" to prevent the deletion of the member if any delegated object remains attached to it.",
                        "example": false
                    },
                    "remote_console_access_enable": {
                        "type": "boolean",
                        "description": "If set to True, superuser admins can access the Infoblox CLI from a remote location using an SSH (Secure Shell) v2 client.",
                        "example": false
                    },
                    "router_id": {
                        "type": "integer",
                        "description": "Virutal router identifier. Provide this ID if \"ha_enabled\" is set to \"true\". This is a unique VRID number (from 1 to 255) for the local subnet.",
                        "format": "int64",
                        "example": 1
                    },
                    "service_status": {
                        "type": "array",
                        "description": "The service status list of a grid member.",
                        "enum": [
                            "memberservicestatus"
                        ],
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/MemberServiceStatus"
                        }
                    },
                    "service_type_configuration": {
                        "type": "string",
                        "description": "Configure all services to the given type.",
                        "enum": [
                            "ALL_V4",
                            "ALL_V6",
                            "CUSTOM"
                        ],
                        "example": "Example service_type_configuration"
                    },
                    "snmp_setting": {
                        "$ref": "#/components/schemas/MemberSnmpSetting"
                    },
                    "static_routes": {
                        "type": "array",
                        "description": "List of static routes.",
                        "enum": [
                            "setting:network"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberStaticRoutes"
                        }
                    },
                    "support_access_enable": {
                        "type": "boolean",
                        "description": "Determines if support access for the Grid member should be enabled.",
                        "example": false
                    },
                    "support_access_info": {
                        "type": "string",
                        "description": "The information string for support access.",
                        "readOnly": true,
                        "example": "Example support_access_info"
                    },
                    "syslog_proxy_setting": {
                        "$ref": "#/components/schemas/MemberSyslogProxySetting"
                    },
                    "syslog_servers": {
                        "type": "array",
                        "description": "The list of external syslog servers.",
                        "enum": [
                            "syslogserver"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberSyslogServers"
                        }
                    },
                    "syslog_size": {
                        "type": "integer",
                        "description": "The maximum size for the syslog file expressed in megabytes.",
                        "format": "int64",
                        "example": 1
                    },
                    "threshold_traps": {
                        "type": "array",
                        "description": "Determines the list of threshold traps. The user can only change the values for each trap or remove traps.",
                        "enum": [
                            "thresholdtrap"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberThresholdTraps"
                        }
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone of the Grid member. The UTC string that represents the time zone, such as \"Asia/Kolkata\".",
                        "example": "Example time_zone"
                    },
                    "traffic_capture_auth_dns_setting": {
                        "$ref": "#/components/schemas/MemberTrafficCaptureAuthDnsSetting"
                    },
                    "traffic_capture_chr_setting": {
                        "$ref": "#/components/schemas/MemberTrafficCaptureChrSetting"
                    },
                    "traffic_capture_qps_setting": {
                        "$ref": "#/components/schemas/MemberTrafficCaptureQpsSetting"
                    },
                    "traffic_capture_rec_dns_setting": {
                        "$ref": "#/components/schemas/MemberTrafficCaptureRecDnsSetting"
                    },
                    "traffic_capture_rec_queries_setting": {
                        "$ref": "#/components/schemas/MemberTrafficCaptureRecQueriesSetting"
                    },
                    "trap_notifications": {
                        "type": "array",
                        "description": "Determines configuration of the trap notifications.",
                        "enum": [
                            "trapnotification"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberTrapNotifications"
                        }
                    },
                    "upgrade_group": {
                        "type": "string",
                        "description": "The name of the upgrade group to which this Grid member belongs.",
                        "example": "Example upgrade_group"
                    },
                    "use_automated_traffic_capture": {
                        "type": "boolean",
                        "description": "This flag is the use flag for enabling automated traffic capture based on DNS cache ratio thresholds.",
                        "example": false
                    },
                    "use_dns_resolver_setting": {
                        "type": "boolean",
                        "description": "Use flag for: dns_resolver_setting",
                        "example": false
                    },
                    "use_dscp": {
                        "type": "boolean",
                        "description": "Use flag for: dscp",
                        "example": false
                    },
                    "use_email_setting": {
                        "type": "boolean",
                        "description": "Use flag for: email_setting",
                        "example": false
                    },
                    "use_enable_lom": {
                        "type": "boolean",
                        "description": "Use flag for: enable_lom",
                        "example": false
                    },
                    "use_enable_member_redirect": {
                        "type": "boolean",
                        "description": "Use flag for: enable_member_redirect",
                        "example": false
                    },
                    "use_external_syslog_backup_servers": {
                        "type": "boolean",
                        "description": "Use flag for: external_syslog_backup_servers",
                        "example": false
                    },
                    "use_remote_console_access_enable": {
                        "type": "boolean",
                        "description": "Use flag for: remote_console_access_enable",
                        "example": false
                    },
                    "use_snmp_setting": {
                        "type": "boolean",
                        "description": "Use flag for: snmp_setting",
                        "example": false
                    },
                    "use_support_access_enable": {
                        "type": "boolean",
                        "description": "Use flag for: support_access_enable",
                        "example": false
                    },
                    "use_syslog_proxy_setting": {
                        "type": "boolean",
                        "description": "Use flag for: external_syslog_server_enable , syslog_servers, syslog_proxy_setting, syslog_size",
                        "example": false
                    },
                    "use_threshold_traps": {
                        "type": "boolean",
                        "description": "Use flag for: threshold_traps",
                        "example": false
                    },
                    "use_time_zone": {
                        "type": "boolean",
                        "description": "Use flag for: time_zone",
                        "example": false
                    },
                    "use_traffic_capture_auth_dns": {
                        "type": "boolean",
                        "description": "This flag is the use flag for enabling automated traffic capture based on authorative DNS latency.",
                        "example": false
                    },
                    "use_traffic_capture_chr": {
                        "type": "boolean",
                        "description": "This flag is the use flag for automated traffic capture settings at member level.",
                        "example": false
                    },
                    "use_traffic_capture_qps": {
                        "type": "boolean",
                        "description": "This flag is the use flag for enabling automated traffic capture based on DNS querie per second thresholds.",
                        "example": false
                    },
                    "use_traffic_capture_rec_dns": {
                        "type": "boolean",
                        "description": "This flag is the use flag for enabling automated traffic capture based on recursive DNS latency.",
                        "example": false
                    },
                    "use_traffic_capture_rec_queries": {
                        "type": "boolean",
                        "description": "This flag is the use flag for enabling automated traffic capture based on outgoing recursive queries.",
                        "example": false
                    },
                    "use_trap_notifications": {
                        "type": "boolean",
                        "description": "Use flag for: trap_notifications",
                        "example": false
                    },
                    "use_v4_vrrp": {
                        "type": "boolean",
                        "description": "Specify \"true\" to use VRRPv4 or \"false\" to use VRRPv6.",
                        "example": false
                    },
                    "vip_setting": {
                        "$ref": "#/components/schemas/MemberVipSetting"
                    },
                    "vpn_mtu": {
                        "type": "integer",
                        "description": "The VPN maximum transmission unit (MTU).",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "MemberAdditionalIpList": {
                "type": "object",
                "properties": {
                    "anycast": {
                        "type": "boolean",
                        "description": "Determines if anycast for the Interface object is enabled or not.",
                        "example": false
                    },
                    "ipv4_network_setting": {
                        "description": "The IPv4 network settings of the Grid Member.",
                        "enum": [
                            "setting:network"
                        ],
                        "$ref": "#/components/schemas/MemberadditionaliplistIpv4NetworkSetting"
                    },
                    "ipv6_network_setting": {
                        "description": "The IPv6 network settings of the Grid Member.",
                        "enum": [
                            "ipv6setting"
                        ],
                        "$ref": "#/components/schemas/MemberadditionaliplistIpv6NetworkSetting"
                    },
                    "comment": {
                        "type": "string",
                        "description": "A descriptive comment of this structure.",
                        "example": "Example comment"
                    },
                    "enable_bgp": {
                        "type": "boolean",
                        "description": "Determines if the BGP advertisement setting is enabled for this interface or not.",
                        "example": false
                    },
                    "enable_ospf": {
                        "type": "boolean",
                        "description": "Determines if the OSPF advertisement setting is enabled for this interface or not.",
                        "example": false
                    },
                    "interface": {
                        "type": "string",
                        "description": "The interface type for the Interface object.",
                        "enum": [
                            "LOOPBACK",
                            "LAN_HA",
                            "LAN2",
                            "MGMT"
                        ],
                        "example": "Example interface"
                    }
                }
            },
            "MemberadditionaliplistIpv4NetworkSetting": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example address"
                    },
                    "gateway": {
                        "type": "string",
                        "description": "The default gateway for the Grid Member.",
                        "example": "Example gateway"
                    },
                    "subnet_mask": {
                        "type": "string",
                        "description": "The subnet mask for the Grid Member.",
                        "example": "Example subnet_mask"
                    },
                    "vlan_id": {
                        "type": "integer",
                        "description": "The identifier for the VLAN. Valid values are from 1 to 4096.",
                        "format": "int64",
                        "example": 1
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Determines if the current address is the primary VLAN address or not.",
                        "example": false
                    },
                    "dscp": {
                        "type": "integer",
                        "description": "The DSCP (Differentiated Services Code Point) value determines relative priorities for the type of services on your network. The appliance implements QoS (Quality of Service) rules based on this configuration. Valid values are from 0 to 63.",
                        "format": "int64",
                        "example": 1
                    },
                    "lan_subnet_mask": {
                        "type": "string",
                        "description": "LAN netmask only for GCP HA.",
                        "example": "Example lan_subnet_mask"
                    },
                    "lan_gateway": {
                        "type": "string",
                        "description": "LAN gateway only for GCP HA.",
                        "example": "Example lan_gateway"
                    },
                    "use_dscp": {
                        "type": "boolean",
                        "description": "Use flag for: dscp",
                        "example": false
                    }
                }
            },
            "MemberadditionaliplistIpv6NetworkSetting": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Determines if IPv6 networking should be enabled.",
                        "example": false
                    },
                    "virtual_ip": {
                        "type": "string",
                        "description": "IPv6 address.",
                        "example": "Example virtual_ip"
                    },
                    "cidr_prefix": {
                        "type": "integer",
                        "description": "IPv6 cidr prefix",
                        "format": "int64",
                        "example": 1
                    },
                    "gateway": {
                        "type": "string",
                        "description": "Gateway address.",
                        "example": "Example gateway"
                    },
                    "auto_router_config_enabled": {
                        "type": "boolean",
                        "description": "Determines if automatic router configuration should be enabled.",
                        "example": false
                    },
                    "vlan_id": {
                        "type": "integer",
                        "description": "The identifier for the VLAN. Valid values are from 1 to 4096.",
                        "format": "int64",
                        "example": 1
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Determines if the current address is the primary VLAN address or not.",
                        "example": false
                    },
                    "dscp": {
                        "type": "integer",
                        "description": "The DSCP (Differentiated Services Code Point) value determines relative priorities for the type of services on your network. The appliance implements QoS (Quality of Service) rules based on this configuration. Valid values are from 0 to 63.",
                        "format": "int64",
                        "example": 1
                    },
                    "use_dscp": {
                        "type": "boolean",
                        "description": "Use flag for: dscp",
                        "example": false
                    }
                }
            },
            "MemberAutomatedTrafficCaptureSetting": {
                "type": "object",
                "properties": {
                    "traffic_capture_enable": {
                        "type": "boolean",
                        "description": "Enable automated traffic capture based on monitoring thresholds.",
                        "example": false
                    },
                    "destination": {
                        "type": "string",
                        "description": "Destination of traffic capture files. Save traffic capture locally or upload to remote server using FTP or SCP.",
                        "enum": [
                            "NONE",
                            "FTP",
                            "SCP"
                        ],
                        "example": "Example destination"
                    },
                    "duration": {
                        "type": "integer",
                        "description": "The time interval on which traffic will be captured(in sec).",
                        "format": "int64",
                        "example": 1
                    },
                    "include_support_bundle": {
                        "type": "boolean",
                        "description": "Enable automatic download for support bundle.",
                        "example": false
                    },
                    "keep_local_copy": {
                        "type": "boolean",
                        "description": "Save traffic capture files locally.",
                        "example": false
                    },
                    "destination_host": {
                        "type": "string",
                        "description": "IP Address of the destination host.",
                        "example": "Example destination_host"
                    },
                    "traffic_capture_directory": {
                        "type": "string",
                        "description": "Directory to store the traffic capture files on the remote server.",
                        "example": "Example traffic_capture_directory"
                    },
                    "support_bundle_directory": {
                        "type": "string",
                        "description": "Directory to store the support bundle on the remote server.",
                        "example": "Example support_bundle_directory"
                    },
                    "username": {
                        "type": "string",
                        "description": "User name for accessing the FTP/SCP server.",
                        "example": "Example username"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password for accessing the FTP/SCP server. This field is not readable.",
                        "writeOnly": true,
                        "example": "Example password"
                    }
                }
            },
            "MemberBgpAs": {
                "type": "object",
                "properties": {
                    "as": {
                        "type": "integer",
                        "description": "The number of this autonomous system.",
                        "format": "int64",
                        "example": 1
                    },
                    "keepalive": {
                        "type": "integer",
                        "description": "The AS keepalive timer (in seconds). The valid value is from 1 to 21845.",
                        "format": "int64",
                        "example": 1
                    },
                    "holddown": {
                        "type": "integer",
                        "description": "The AS holddown timer (in seconds). The valid value is from 3 to 65535.",
                        "format": "int64",
                        "example": 1
                    },
                    "neighbors": {
                        "description": "The BGP neighbors for this AS.",
                        "enum": [
                            "bgpneighbor"
                        ],
                        "$ref": "#/components/schemas/MemberbgpasNeighbors"
                    },
                    "link_detect": {
                        "type": "boolean",
                        "description": "Determines if link detection on the interface is enabled or not.",
                        "example": false
                    }
                }
            },
            "MemberbgpasNeighbors": {
                "type": "object",
                "properties": {
                    "interface": {
                        "type": "string",
                        "description": "The interface that sends BGP advertisement information.",
                        "enum": [
                            "LAN_HA"
                        ],
                        "example": "Example interface"
                    },
                    "neighbor_ip": {
                        "type": "string",
                        "description": "The IP address of the BGP neighbor.",
                        "example": "Example neighbor_ip"
                    },
                    "remote_as": {
                        "type": "integer",
                        "description": "The remote AS number of the BGP neighbor.",
                        "format": "int64",
                        "example": 1
                    },
                    "authentication_mode": {
                        "type": "string",
                        "description": "The BGP authentication mode.",
                        "enum": [
                            "NONE",
                            "MD5"
                        ],
                        "example": "Example authentication_mode"
                    },
                    "bgp_neighbor_pass": {
                        "type": "string",
                        "description": "The password for a BGP neighbor. This is required only if authentication_mode is set to \"MD5\". When the password is entered, the value is preserved even if authentication_mode is changed to \"NONE\". This is a write-only attribute.",
                        "writeOnly": true,
                        "example": "Example bgp_neighbor_pass"
                    },
                    "comment": {
                        "type": "string",
                        "description": "User comments for this BGP neighbor.",
                        "example": "Example comment"
                    },
                    "multihop": {
                        "type": "boolean",
                        "description": "Determines if the multi-hop support is enabled or not.",
                        "example": false
                    },
                    "multihop_ttl": {
                        "type": "integer",
                        "description": "The Time To Live (TTL) value for multi-hop. Valid values are between 1 and 255.",
                        "format": "int64",
                        "example": 1
                    },
                    "bfd_template": {
                        "type": "string",
                        "description": "The BFD template name.",
                        "example": "Example bfd_template"
                    },
                    "enable_bfd": {
                        "type": "boolean",
                        "description": "Determines if BFD is enabled or not.",
                        "example": false
                    },
                    "enable_bfd_dnscheck": {
                        "type": "boolean",
                        "description": "Determines if BFD internal DNS monitor is enabled or not.",
                        "example": false
                    }
                }
            },
            "MemberCspMemberSetting": {
                "type": "object",
                "properties": {
                    "use_csp_join_token": {
                        "type": "boolean",
                        "description": "Overrides grid join token",
                        "example": false
                    },
                    "use_csp_dns_resolver": {
                        "type": "boolean",
                        "description": "Overrides CSP DNS Resolver",
                        "example": false
                    },
                    "use_csp_https_proxy": {
                        "type": "boolean",
                        "description": "Overrides grid https proxy",
                        "example": false
                    },
                    "csp_join_token": {
                        "type": "string",
                        "description": "Join token required to connect to a cluster",
                        "example": "Example csp_join_token"
                    },
                    "csp_dns_resolver": {
                        "type": "string",
                        "description": "IP address of DNS resolver in DFP",
                        "example": "Example csp_dns_resolver"
                    },
                    "csp_https_proxy": {
                        "type": "string",
                        "description": "HTTP Proxy IP address of CSP Portal",
                        "example": "Example csp_https_proxy"
                    }
                }
            },
            "MemberDnsResolverSetting": {
                "type": "object",
                "properties": {
                    "resolvers": {
                        "type": "array",
                        "description": "The resolvers of a Grid member. The Grid member sends queries to the first name server address in the list. The second name server address is used if first one does not response.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "search_domains": {
                        "type": "array",
                        "description": "The Search Domain Group, which is a group of domain names that the Infoblox device can add to partial queries that do not specify a domain name. Note that you can set this parameter only when prefer_resolver or alternate_resolver is set.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "MemberEmailSetting": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Determines if email notification is enabled or not.",
                        "example": false
                    },
                    "from_address": {
                        "type": "string",
                        "description": "The email address of a Grid Member for 'from' field in notification.",
                        "example": "Example from_address"
                    },
                    "address": {
                        "type": "string",
                        "description": "The notification email address of a Grid member.",
                        "example": "Example address"
                    },
                    "relay_enabled": {
                        "type": "boolean",
                        "description": "Determines if email relay is enabled or not.",
                        "example": false
                    },
                    "relay": {
                        "type": "string",
                        "description": "The relay name or IP address.",
                        "example": "Example relay"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password to validate from address",
                        "writeOnly": true,
                        "example": "Example password"
                    },
                    "smtps": {
                        "type": "boolean",
                        "description": "SMTP over TLS",
                        "example": false
                    },
                    "port_number": {
                        "type": "integer",
                        "description": "SMTP port number",
                        "format": "int64",
                        "example": 1
                    },
                    "use_authentication": {
                        "type": "boolean",
                        "description": "Enable or disable SMTP auth",
                        "example": false
                    }
                }
            },
            "MemberExternalSyslogBackupServers": {
                "type": "object",
                "properties": {
                    "address_or_fqdn": {
                        "type": "string",
                        "description": "The IPv4 or IPv6 address or FQDN of the backup syslog server.",
                        "example": "Example address_or_fqdn"
                    },
                    "directory_path": {
                        "type": "string",
                        "description": "The directory path for the replication of the rotated syslog files.",
                        "example": "Example directory_path"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "If set to True, the syslog backup server is enabled.",
                        "example": false
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the backup syslog server.",
                        "writeOnly": true,
                        "example": "Example password"
                    },
                    "port": {
                        "type": "integer",
                        "description": "The port used to connect to the backup syslog server.",
                        "format": "int64",
                        "example": 1
                    },
                    "protocol": {
                        "type": "string",
                        "description": "The transport protocol used to connect to the backup syslog server.",
                        "enum": [
                            "FTP",
                            "SCP"
                        ],
                        "example": "Example protocol"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username of the backup syslog server.",
                        "example": "Example username"
                    }
                }
            },
            "MemberIpv6Setting": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Determines if IPv6 networking should be enabled.",
                        "example": false
                    },
                    "virtual_ip": {
                        "type": "string",
                        "description": "IPv6 address.",
                        "example": "Example virtual_ip"
                    },
                    "cidr_prefix": {
                        "type": "integer",
                        "description": "IPv6 cidr prefix",
                        "format": "int64",
                        "example": 1
                    },
                    "gateway": {
                        "type": "string",
                        "description": "Gateway address.",
                        "example": "Example gateway"
                    },
                    "auto_router_config_enabled": {
                        "type": "boolean",
                        "description": "Determines if automatic router configuration should be enabled.",
                        "example": false
                    },
                    "vlan_id": {
                        "type": "integer",
                        "description": "The identifier for the VLAN. Valid values are from 1 to 4096.",
                        "format": "int64",
                        "example": 1
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Determines if the current address is the primary VLAN address or not.",
                        "example": false
                    },
                    "dscp": {
                        "type": "integer",
                        "description": "The DSCP (Differentiated Services Code Point) value determines relative priorities for the type of services on your network. The appliance implements QoS (Quality of Service) rules based on this configuration. Valid values are from 0 to 63.",
                        "format": "int64",
                        "example": 1
                    },
                    "use_dscp": {
                        "type": "boolean",
                        "description": "Use flag for: dscp",
                        "example": false
                    }
                }
            },
            "MemberIpv6StaticRoutes": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "IPv6 address.",
                        "example": "Example address"
                    },
                    "cidr": {
                        "type": "integer",
                        "description": "IPv6 CIDR",
                        "format": "int64",
                        "example": 1
                    },
                    "gateway": {
                        "type": "string",
                        "description": "Gateway address.",
                        "example": "Example gateway"
                    }
                }
            },
            "MemberLan2PortSetting": {
                "type": "object",
                "properties": {
                    "virtual_router_id": {
                        "type": "integer",
                        "description": "If the 'enabled' field is set to True, this defines the virtual router ID for the LAN2 port.",
                        "format": "int64",
                        "example": 1
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "If this field is set to True, then it has its own IP settings. Otherwise, port redundancy mechanism is used, in which the LAN1 and LAN2 ports share the same IP settings for failover purposes.",
                        "example": false
                    },
                    "network_setting": {
                        "description": "If the 'enable' field is set to True, this defines IPv4 network settings for LAN2.",
                        "enum": [
                            "setting:network"
                        ],
                        "$ref": "#/components/schemas/Memberlan2portsettingNetworkSetting"
                    },
                    "v6_network_setting": {
                        "description": "If the 'enable' field is set to True, this defines IPv6 network settings for the LAN2 port.",
                        "enum": [
                            "ipv6setting"
                        ],
                        "$ref": "#/components/schemas/Memberlan2portsettingV6NetworkSetting"
                    },
                    "nic_failover_enabled": {
                        "type": "boolean",
                        "description": "Determines if NIC failover is enabled or not.",
                        "example": false
                    },
                    "nic_failover_enable_primary": {
                        "type": "boolean",
                        "description": "Prefer LAN1 when available.",
                        "example": false
                    },
                    "default_route_failover_enabled": {
                        "type": "boolean",
                        "description": "Default route failover for LAN1 and LAN2.",
                        "example": false
                    }
                }
            },
            "Memberlan2portsettingNetworkSetting": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example address"
                    },
                    "gateway": {
                        "type": "string",
                        "description": "The default gateway for the Grid Member.",
                        "example": "Example gateway"
                    },
                    "subnet_mask": {
                        "type": "string",
                        "description": "The subnet mask for the Grid Member.",
                        "example": "Example subnet_mask"
                    },
                    "vlan_id": {
                        "type": "integer",
                        "description": "The identifier for the VLAN. Valid values are from 1 to 4096.",
                        "format": "int64",
                        "example": 1
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Determines if the current address is the primary VLAN address or not.",
                        "example": false
                    },
                    "dscp": {
                        "type": "integer",
                        "description": "The DSCP (Differentiated Services Code Point) value determines relative priorities for the type of services on your network. The appliance implements QoS (Quality of Service) rules based on this configuration. Valid values are from 0 to 63.",
                        "format": "int64",
                        "example": 1
                    },
                    "lan_subnet_mask": {
                        "type": "string",
                        "description": "LAN netmask only for GCP HA.",
                        "example": "Example lan_subnet_mask"
                    },
                    "lan_gateway": {
                        "type": "string",
                        "description": "LAN gateway only for GCP HA.",
                        "example": "Example lan_gateway"
                    },
                    "use_dscp": {
                        "type": "boolean",
                        "description": "Use flag for: dscp",
                        "example": false
                    }
                }
            },
            "Memberlan2portsettingV6NetworkSetting": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Determines if IPv6 networking should be enabled.",
                        "example": false
                    },
                    "virtual_ip": {
                        "type": "string",
                        "description": "IPv6 address.",
                        "example": "Example virtual_ip"
                    },
                    "cidr_prefix": {
                        "type": "integer",
                        "description": "IPv6 cidr prefix",
                        "format": "int64",
                        "example": 1
                    },
                    "gateway": {
                        "type": "string",
                        "description": "Gateway address.",
                        "example": "Example gateway"
                    },
                    "auto_router_config_enabled": {
                        "type": "boolean",
                        "description": "Determines if automatic router configuration should be enabled.",
                        "example": false
                    },
                    "vlan_id": {
                        "type": "integer",
                        "description": "The identifier for the VLAN. Valid values are from 1 to 4096.",
                        "format": "int64",
                        "example": 1
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Determines if the current address is the primary VLAN address or not.",
                        "example": false
                    },
                    "dscp": {
                        "type": "integer",
                        "description": "The DSCP (Differentiated Services Code Point) value determines relative priorities for the type of services on your network. The appliance implements QoS (Quality of Service) rules based on this configuration. Valid values are from 0 to 63.",
                        "format": "int64",
                        "example": 1
                    },
                    "use_dscp": {
                        "type": "boolean",
                        "description": "Use flag for: dscp",
                        "example": false
                    }
                }
            },
            "MemberLomNetworkConfig": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid member.",
                        "example": "Example address"
                    },
                    "gateway": {
                        "type": "string",
                        "description": "The default gateway for the Grid member.",
                        "example": "Example gateway"
                    },
                    "subnet_mask": {
                        "type": "string",
                        "description": "The subnet mask for the Grid member.",
                        "example": "Example subnet_mask"
                    },
                    "is_lom_capable": {
                        "type": "boolean",
                        "description": "Determines if the physical node supports LOM or not.",
                        "readOnly": true,
                        "example": false
                    }
                }
            },
            "MemberLomUsers": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The LOM user name.",
                        "example": "Example name"
                    },
                    "password": {
                        "type": "string",
                        "description": "The LOM user password.",
                        "writeOnly": true,
                        "example": "Example password"
                    },
                    "role": {
                        "type": "string",
                        "description": "The LOM user role which specifies the list of actions that are allowed for the user.",
                        "enum": [
                            "OPERATOR",
                            "USER"
                        ],
                        "example": "Example role"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines whether the LOM user is disabled.",
                        "example": false
                    },
                    "comment": {
                        "type": "string",
                        "description": "The descriptive comment for the LOM user.",
                        "example": "Example comment"
                    }
                }
            },
            "MemberMemberServiceCommunication": {
                "type": "object",
                "properties": {
                    "service": {
                        "type": "string",
                        "description": "The service for a Grid member.",
                        "enum": [
                            "GRID",
                            "GRID_BACKUP",
                            "NTP",
                            "REPORTING",
                            "REPORTING_BACKUP",
                            "OCSP",
                            "MAIL",
                            "AD"
                        ],
                        "example": "Example service"
                    },
                    "type": {
                        "type": "string",
                        "description": "Communication type.",
                        "enum": [
                            "IPV4",
                            "IPV6"
                        ],
                        "example": "Example type"
                    },
                    "option": {
                        "type": "string",
                        "description": "The option for communication type.",
                        "enum": [
                            "FORCE",
                            "PREFER"
                        ],
                        "readOnly": true,
                        "example": "Example option"
                    }
                }
            },
            "MemberMgmtPortSetting": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Determines if MGMT port settings should be enabled.",
                        "example": false
                    },
                    "vpn_enabled": {
                        "type": "boolean",
                        "description": "Determines if VPN on the MGMT port is enabled or not.",
                        "example": false
                    },
                    "security_access_enabled": {
                        "type": "boolean",
                        "description": "Determines if security access on the MGMT port is enabled or not.",
                        "example": false
                    }
                }
            },
            "MemberNatSetting": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Determines if NAT should be enabled.",
                        "example": false
                    },
                    "external_virtual_ip": {
                        "type": "string",
                        "description": "External IP address for NAT.",
                        "example": "Example external_virtual_ip"
                    },
                    "group": {
                        "type": "string",
                        "description": "The NAT group.",
                        "example": "Example group"
                    }
                }
            },
            "MemberNodeInfo": {
                "type": "object",
                "properties": {
                    "service_status": {
                        "description": "The service status list of the Grid Member.",
                        "enum": [
                            "servicestatus"
                        ],
                        "readOnly": true,
                        "$ref": "#/components/schemas/MembernodeinfoServiceStatus"
                    },
                    "physical_oid": {
                        "type": "string",
                        "description": "The OID of the physical node.",
                        "readOnly": true,
                        "example": "Example physical_oid"
                    },
                    "ha_status": {
                        "type": "string",
                        "description": "Status about the node of an HA pair.",
                        "enum": [
                            "ACTIVE",
                            "PASSIVE",
                            "NOT_CONFIGURED"
                        ],
                        "readOnly": true,
                        "example": "Example ha_status"
                    },
                    "hwid": {
                        "type": "string",
                        "description": "Hardware ID.",
                        "readOnly": true,
                        "example": "Example hwid"
                    },
                    "hwmodel": {
                        "type": "string",
                        "description": "Hardware model.",
                        "readOnly": true,
                        "example": "Example hwmodel"
                    },
                    "hwtype": {
                        "type": "string",
                        "description": "Hardware type.",
                        "readOnly": true,
                        "example": "Example hwtype"
                    },
                    "host_platform": {
                        "type": "string",
                        "description": "Host Platform",
                        "readOnly": true,
                        "example": "Example host_platform"
                    },
                    "hypervisor": {
                        "type": "string",
                        "description": "Hypervisor",
                        "readOnly": true,
                        "example": "Example hypervisor"
                    },
                    "paid_nios": {
                        "type": "boolean",
                        "description": "True if node is Paid NIOS.",
                        "readOnly": true,
                        "example": false
                    },
                    "mgmt_network_setting": {
                        "description": "Network settings for the MGMT port of the node.",
                        "enum": [
                            "setting:network"
                        ],
                        "$ref": "#/components/schemas/MembernodeinfoMgmtNetworkSetting"
                    },
                    "lan_ha_port_setting": {
                        "description": "LAN/HA port settings for the node.",
                        "enum": [
                            "lanhaportsetting"
                        ],
                        "$ref": "#/components/schemas/MembernodeinfoLanHaPortSetting"
                    },
                    "mgmt_physical_setting": {
                        "description": "Physical port settings for the MGMT interface.",
                        "enum": [
                            "physicalportsetting"
                        ],
                        "$ref": "#/components/schemas/MembernodeinfoMgmtPhysicalSetting"
                    },
                    "lan2_physical_setting": {
                        "description": "Physical port settings for the LAN2 interface.",
                        "enum": [
                            "physicalportsetting"
                        ],
                        "$ref": "#/components/schemas/MembernodeinfoLan2PhysicalSetting"
                    },
                    "nat_external_ip": {
                        "type": "string",
                        "description": "The NAT external IP address for the node.",
                        "example": "Example nat_external_ip"
                    },
                    "v6_mgmt_network_setting": {
                        "description": "The network settings for the IPv6 MGMT port of the node.",
                        "enum": [
                            "ipv6setting"
                        ],
                        "$ref": "#/components/schemas/MembernodeinfoV6MgmtNetworkSetting"
                    }
                }
            },
            "MembernodeinfoServiceStatus": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the current service status.",
                        "readOnly": true,
                        "example": "Example description"
                    },
                    "status": {
                        "type": "string",
                        "description": "The service status.",
                        "enum": [
                            "FAILED",
                            "WARNING",
                            "WORKING",
                            "INACTIVE"
                        ],
                        "readOnly": true,
                        "example": "Example status"
                    },
                    "service": {
                        "type": "string",
                        "description": "The service identifier.",
                        "enum": [
                            "JOIN_STATUS",
                            "NODE_STATUS",
                            "DISK_USAGE",
                            "ENET_LAN",
                            "ENET_LAN2",
                            "ENET_HA",
                            "ENET_MGMT",
                            "LCD",
                            "REPLICATION",
                            "DB_OBJECT",
                            "RAID_SUMMARY",
                            "RAID_DISK1",
                            "RAID_DISK2",
                            "RAID_DISK3",
                            "RAID_DISK4",
                            "RAID_DISK5",
                            "RAID_DISK6",
                            "RAID_DISK7",
                            "RAID_DISK8",
                            "FAN1",
                            "FAN2",
                            "FAN3",
                            "FAN4",
                            "FAN5",
                            "FAN6",
                            "FAN7",
                            "FAN8",
                            "POWER_SUPPLY",
                            "POWER1",
                            "POWER2",
                            "POWER3",
                            "POWER4",
                            "NTP_SYNC",
                            "CPU1_TEMP",
                            "CPU2_TEMP",
                            "SYS_TEMP",
                            "RAID_BATTERY",
                            "CPU_USAGE",
                            "OSPF",
                            "OSPF6",
                            "BGP",
                            "BFD",
                            "AUTH_NAMED",
                            "CORE_FILES",
                            "MGM_SERVICE",
                            "SUBGRID_CONN",
                            "NETWORK_CAPACITY",
                            "DISK_SIZE",
                            "SFP_MGMT",
                            "SFP_LAN",
                            "SFP_HA",
                            "SFP_LAN2",
                            "SNIC_UTIL",
                            "SNIC_PCB_TEMP",
                            "SNIC_CHIP_TEMP",
                            "SNIC_CORE_UTIL",
                            "FP_UTIL",
                            "FP_CORE_UTIL",
                            "CPU_USAGE",
                            "MEMORY",
                            "EXTERNAL_STORAGE",
                            "SWAP_USAGE",
                            "DISCOVERY_CAPACITY",
                            "PASSIVE_HA_CONNECTIVITY",
                            "VPN_CERT"
                        ],
                        "readOnly": true,
                        "example": "Example service"
                    }
                }
            },
            "MembernodeinfoMgmtNetworkSetting": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example address"
                    },
                    "gateway": {
                        "type": "string",
                        "description": "The default gateway for the Grid Member.",
                        "example": "Example gateway"
                    },
                    "subnet_mask": {
                        "type": "string",
                        "description": "The subnet mask for the Grid Member.",
                        "example": "Example subnet_mask"
                    },
                    "vlan_id": {
                        "type": "integer",
                        "description": "The identifier for the VLAN. Valid values are from 1 to 4096.",
                        "format": "int64",
                        "example": 1
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Determines if the current address is the primary VLAN address or not.",
                        "example": false
                    },
                    "dscp": {
                        "type": "integer",
                        "description": "The DSCP (Differentiated Services Code Point) value determines relative priorities for the type of services on your network. The appliance implements QoS (Quality of Service) rules based on this configuration. Valid values are from 0 to 63.",
                        "format": "int64",
                        "example": 1
                    },
                    "lan_subnet_mask": {
                        "type": "string",
                        "description": "LAN netmask only for GCP HA.",
                        "example": "Example lan_subnet_mask"
                    },
                    "lan_gateway": {
                        "type": "string",
                        "description": "LAN gateway only for GCP HA.",
                        "example": "Example lan_gateway"
                    },
                    "use_dscp": {
                        "type": "boolean",
                        "description": "Use flag for: dscp",
                        "example": false
                    }
                }
            },
            "MembernodeinfoLanHaPortSetting": {
                "type": "object",
                "properties": {
                    "mgmt_lan": {
                        "type": "string",
                        "description": "Public IPv4 address for the LAN1 interface.",
                        "example": "Example mgmt_lan"
                    },
                    "mgmt_ipv6addr": {
                        "type": "string",
                        "description": "Public IPv6 address for the LAN1 interface.",
                        "example": "Example mgmt_ipv6addr"
                    },
                    "ha_ip_address": {
                        "type": "string",
                        "description": "HA IP address.",
                        "example": "Example ha_ip_address"
                    },
                    "lan_port_setting": {
                        "description": "Physical port settings for the LAN interface.",
                        "enum": [
                            "physicalportsetting"
                        ],
                        "$ref": "#/components/schemas/MembernodeinfolanhaportsettingLanPortSetting"
                    },
                    "ha_port_setting": {
                        "description": "Physical port settings for the HA interface.",
                        "enum": [
                            "physicalportsetting"
                        ],
                        "$ref": "#/components/schemas/MembernodeinfolanhaportsettingHaPortSetting"
                    },
                    "ha_cloud_attribute": {
                        "type": "string",
                        "description": "HA cloud interface from cloud platform side.",
                        "example": "Example ha_cloud_attribute"
                    }
                }
            },
            "MembernodeinfolanhaportsettingLanPortSetting": {
                "type": "object",
                "properties": {
                    "auto_port_setting_enabled": {
                        "type": "boolean",
                        "description": "Enable or disalbe the auto port setting.",
                        "example": false
                    },
                    "speed": {
                        "type": "string",
                        "description": "The port speed; if speed is 1000, duplex is FULL.",
                        "enum": [
                            "10",
                            "100",
                            "1000"
                        ],
                        "example": "Example speed"
                    },
                    "duplex": {
                        "type": "string",
                        "description": "The port duplex; if speed is 1000, duplex must be FULL.",
                        "enum": [
                            "HALF",
                            "FULL"
                        ],
                        "example": "Example duplex"
                    }
                }
            },
            "MembernodeinfolanhaportsettingHaPortSetting": {
                "type": "object",
                "properties": {
                    "auto_port_setting_enabled": {
                        "type": "boolean",
                        "description": "Enable or disalbe the auto port setting.",
                        "example": false
                    },
                    "speed": {
                        "type": "string",
                        "description": "The port speed; if speed is 1000, duplex is FULL.",
                        "enum": [
                            "10",
                            "100",
                            "1000"
                        ],
                        "example": "Example speed"
                    },
                    "duplex": {
                        "type": "string",
                        "description": "The port duplex; if speed is 1000, duplex must be FULL.",
                        "enum": [
                            "HALF",
                            "FULL"
                        ],
                        "example": "Example duplex"
                    }
                }
            },
            "MembernodeinfoMgmtPhysicalSetting": {
                "type": "object",
                "properties": {
                    "auto_port_setting_enabled": {
                        "type": "boolean",
                        "description": "Enable or disalbe the auto port setting.",
                        "example": false
                    },
                    "speed": {
                        "type": "string",
                        "description": "The port speed; if speed is 1000, duplex is FULL.",
                        "enum": [
                            "10",
                            "100",
                            "1000"
                        ],
                        "example": "Example speed"
                    },
                    "duplex": {
                        "type": "string",
                        "description": "The port duplex; if speed is 1000, duplex must be FULL.",
                        "enum": [
                            "HALF",
                            "FULL"
                        ],
                        "example": "Example duplex"
                    }
                }
            },
            "MembernodeinfoLan2PhysicalSetting": {
                "type": "object",
                "properties": {
                    "auto_port_setting_enabled": {
                        "type": "boolean",
                        "description": "Enable or disalbe the auto port setting.",
                        "example": false
                    },
                    "speed": {
                        "type": "string",
                        "description": "The port speed; if speed is 1000, duplex is FULL.",
                        "enum": [
                            "10",
                            "100",
                            "1000"
                        ],
                        "example": "Example speed"
                    },
                    "duplex": {
                        "type": "string",
                        "description": "The port duplex; if speed is 1000, duplex must be FULL.",
                        "enum": [
                            "HALF",
                            "FULL"
                        ],
                        "example": "Example duplex"
                    }
                }
            },
            "MembernodeinfoV6MgmtNetworkSetting": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Determines if IPv6 networking should be enabled.",
                        "example": false
                    },
                    "virtual_ip": {
                        "type": "string",
                        "description": "IPv6 address.",
                        "example": "Example virtual_ip"
                    },
                    "cidr_prefix": {
                        "type": "integer",
                        "description": "IPv6 cidr prefix",
                        "format": "int64",
                        "example": 1
                    },
                    "gateway": {
                        "type": "string",
                        "description": "Gateway address.",
                        "example": "Example gateway"
                    },
                    "auto_router_config_enabled": {
                        "type": "boolean",
                        "description": "Determines if automatic router configuration should be enabled.",
                        "example": false
                    },
                    "vlan_id": {
                        "type": "integer",
                        "description": "The identifier for the VLAN. Valid values are from 1 to 4096.",
                        "format": "int64",
                        "example": 1
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Determines if the current address is the primary VLAN address or not.",
                        "example": false
                    },
                    "dscp": {
                        "type": "integer",
                        "description": "The DSCP (Differentiated Services Code Point) value determines relative priorities for the type of services on your network. The appliance implements QoS (Quality of Service) rules based on this configuration. Valid values are from 0 to 63.",
                        "format": "int64",
                        "example": 1
                    },
                    "use_dscp": {
                        "type": "boolean",
                        "description": "Use flag for: dscp",
                        "example": false
                    }
                }
            },
            "MemberNtpSetting": {
                "type": "object",
                "properties": {
                    "enable_ntp": {
                        "type": "boolean",
                        "description": "Determines whether the NTP service is enabled on the member.",
                        "example": false
                    },
                    "ntp_servers": {
                        "description": "The list of NTP servers configured on a member.",
                        "enum": [
                            "ntpserver"
                        ],
                        "$ref": "#/components/schemas/MemberntpsettingNtpServers"
                    },
                    "ntp_keys": {
                        "description": "The list of NTP authentication keys used to authenticate NTP clients.",
                        "enum": [
                            "ntpkey"
                        ],
                        "$ref": "#/components/schemas/MemberntpsettingNtpKeys"
                    },
                    "ntp_acl": {
                        "description": "The NTP access control settings.",
                        "enum": [
                            "ntpaccess"
                        ],
                        "$ref": "#/components/schemas/MemberntpsettingNtpAcl"
                    },
                    "ntp_kod": {
                        "type": "boolean",
                        "description": "Determines whether the Kiss-o'-Death packets are enabled or disabled.",
                        "example": false
                    },
                    "enable_external_ntp_servers": {
                        "type": "boolean",
                        "description": "Determines whether the use of the external NTP servers is enabled for the member.",
                        "example": false
                    },
                    "exclude_grid_master_ntp_server": {
                        "type": "boolean",
                        "description": "Determines whether the Grid Master is excluded as an NTP server.",
                        "example": false
                    },
                    "use_local_ntp_stratum": {
                        "type": "boolean",
                        "description": "Override Grid level NTP stratum.",
                        "example": false
                    },
                    "local_ntp_stratum": {
                        "type": "integer",
                        "description": "Vnode level local NTP stratum.",
                        "format": "int64",
                        "example": 1
                    },
                    "use_default_stratum": {
                        "type": "boolean",
                        "description": "Vnode level default stratum.",
                        "example": false
                    },
                    "use_ntp_servers": {
                        "type": "boolean",
                        "description": "Use flag for: ntp_servers",
                        "example": false
                    },
                    "use_ntp_keys": {
                        "type": "boolean",
                        "description": "Use flag for: ntp_keys",
                        "example": false
                    },
                    "use_ntp_acl": {
                        "type": "boolean",
                        "description": "Use flag for: ntp_acl",
                        "example": false
                    },
                    "use_ntp_kod": {
                        "type": "boolean",
                        "description": "Use flag for: ntp_kod",
                        "example": false
                    }
                }
            },
            "MemberntpsettingNtpServers": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The NTP server IP address or FQDN.",
                        "example": "Example address"
                    },
                    "enable_authentication": {
                        "type": "boolean",
                        "description": "Determines whether the NTP authentication is enabled.",
                        "example": false
                    },
                    "ntp_key_number": {
                        "type": "integer",
                        "description": "The NTP authentication key number.",
                        "format": "int64",
                        "example": 1
                    },
                    "preferred": {
                        "type": "boolean",
                        "description": "Determines whether the NTP server is a preferred one or not.",
                        "example": false
                    },
                    "burst": {
                        "type": "boolean",
                        "description": "Determines whether the BURST operation mode is enabled. In BURST operating mode, when the external server is reachable and a valid source of synchronization is available, NTP sends a burst of 8 packets with a 2 second interval between packets.",
                        "example": false
                    },
                    "iburst": {
                        "type": "boolean",
                        "description": "Determines whether the IBURST operation mode is enabled. In IBURST operating mode, when the external server is unreachable, NTP server sends a burst of 8 packets with a 2 second interval between packets.",
                        "example": false
                    }
                }
            },
            "MemberntpsettingNtpKeys": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "integer",
                        "description": "The NTP authentication key identifier.",
                        "format": "int64",
                        "example": 1
                    },
                    "string": {
                        "type": "string",
                        "description": "The NTP authentication key string.",
                        "example": "Example string"
                    },
                    "type": {
                        "type": "string",
                        "description": "The NTP authentication key type.",
                        "enum": [
                            "MD5_ASCII",
                            "DES_HEX",
                            "DES_ASCII",
                            "DES_NTP",
                            "SHA1_ASCII"
                        ],
                        "example": "Example type"
                    }
                }
            },
            "MemberntpsettingNtpAcl": {
                "type": "object",
                "properties": {
                    "acl_type": {
                        "type": "string",
                        "description": "The NTP access control list type.",
                        "enum": [
                            "LIST",
                            "NAMED_ACL",
                            "NONE"
                        ],
                        "example": "Example acl_type"
                    },
                    "ac_list": {
                        "description": "The list of NTP access control items.",
                        "enum": [
                            "ntpac"
                        ],
                        "$ref": "#/components/schemas/MemberntpsettingntpaclAcList"
                    },
                    "named_acl": {
                        "type": "string",
                        "description": "The NTP access named ACL.",
                        "example": "Example named_acl"
                    },
                    "service": {
                        "type": "string",
                        "description": "The type of service with access control for the assigned named ACL.",
                        "enum": [
                            "TIME",
                            "TIME_AND_NTPQ"
                        ],
                        "example": "Example service"
                    }
                }
            },
            "MemberntpsettingntpaclAcList": {
                "type": "object",
                "properties": {
                    "address_ac": {
                        "description": "The client address/network with access control.",
                        "enum": [
                            "addressac"
                        ],
                        "$ref": "#/components/schemas/MemberntpsettingntpaclaclistAddressAc"
                    },
                    "service": {
                        "type": "string",
                        "description": "The type of service with access control.",
                        "enum": [
                            "TIME",
                            "TIME_AND_NTPQ"
                        ],
                        "example": "Example service"
                    }
                }
            },
            "MemberntpsettingntpaclaclistAddressAc": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address this rule applies to or \"Any\".",
                        "example": "Example address"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to use for this address.",
                        "enum": [
                            "ALLOW",
                            "DENY"
                        ],
                        "example": "Example permission"
                    }
                }
            },
            "MemberOspfList": {
                "type": "object",
                "properties": {
                    "area_id": {
                        "type": "string",
                        "description": "The area ID value of the OSPF settings.",
                        "example": "Example area_id"
                    },
                    "area_type": {
                        "type": "string",
                        "description": "The OSPF area type.",
                        "enum": [
                            "NSSA",
                            "STUB",
                            "STANDARD"
                        ],
                        "example": "Example area_type"
                    },
                    "authentication_key": {
                        "type": "string",
                        "description": "The authentication password to use for OSPF. The authentication key is valid only when authentication type is \"SIMPLE\" or \"MESSAGE_DIGEST\".",
                        "writeOnly": true,
                        "example": "Example authentication_key"
                    },
                    "authentication_type": {
                        "type": "string",
                        "description": "The authentication type used for the OSPF advertisement.",
                        "enum": [
                            "SIMPLE",
                            "NONE",
                            "MESSAGE_DIGEST"
                        ],
                        "example": "Example authentication_type"
                    },
                    "auto_calc_cost_enabled": {
                        "type": "boolean",
                        "description": "Determines if auto calculate cost is enabled or not.",
                        "example": false
                    },
                    "comment": {
                        "type": "string",
                        "description": "A descriptive comment of the OSPF configuration.",
                        "example": "Example comment"
                    },
                    "cost": {
                        "type": "integer",
                        "description": "The cost metric associated with the OSPF advertisement.",
                        "format": "int64",
                        "example": 1
                    },
                    "dead_interval": {
                        "type": "integer",
                        "description": "The dead interval value of OSPF (in seconds). The dead interval describes the time to wait before declaring the device is unavailable and down.",
                        "format": "int64",
                        "example": 1
                    },
                    "hello_interval": {
                        "type": "integer",
                        "description": "The hello interval value of OSPF. The hello interval specifies how often to send OSPF hello advertisement, in seconds.",
                        "format": "int64",
                        "example": 1
                    },
                    "interface": {
                        "type": "string",
                        "description": "The interface that sends out OSPF advertisement information.",
                        "enum": [
                            "LAN_HA",
                            "IP"
                        ],
                        "example": "Example interface"
                    },
                    "is_ipv4": {
                        "type": "boolean",
                        "description": "The OSPF protocol version. Specify \"true\" if the IPv4 version of OSPF is used, or \"false\" if the IPv6 version of OSPF is used.",
                        "example": false
                    },
                    "key_id": {
                        "type": "integer",
                        "description": "The hash key identifier to use for \"MESSAGE_DIGEST\" authentication. The hash key identifier is valid only when authentication type is \"MESSAGE_DIGEST\".",
                        "format": "int64",
                        "example": 1
                    },
                    "retransmit_interval": {
                        "type": "integer",
                        "description": "The retransmit interval time of OSPF (in seconds). The retransmit interval describes the time to wait before retransmitting OSPF advertisement.",
                        "format": "int64",
                        "example": 1
                    },
                    "transmit_delay": {
                        "type": "integer",
                        "description": "The transmit delay value of OSPF (in seconds). The transmit delay describes the time to wait before sending an advertisement.",
                        "format": "int64",
                        "example": 1
                    },
                    "advertise_interface_vlan": {
                        "type": "string",
                        "description": "The VLAN used as the advertising interface for sending OSPF announcements.",
                        "example": "Example advertise_interface_vlan"
                    },
                    "bfd_template": {
                        "type": "string",
                        "description": "Determines BFD template name.",
                        "example": "Example bfd_template"
                    },
                    "enable_bfd": {
                        "type": "boolean",
                        "description": "Determines if the BFD is enabled or not.",
                        "example": false
                    },
                    "enable_bfd_dnscheck": {
                        "type": "boolean",
                        "description": "Determines if BFD internal DNS monitor is enabled or not.",
                        "example": false
                    }
                }
            },
            "MemberPreProvisioning": {
                "type": "object",
                "properties": {
                    "hardware_info": {
                        "description": "An array of structures that describe the hardware being pre-provisioned.",
                        "enum": [
                            "preprovisionhardware"
                        ],
                        "$ref": "#/components/schemas/MemberpreprovisioningHardwareInfo"
                    },
                    "licenses": {
                        "type": "array",
                        "description": "An array of license types the pre-provisioned member should have in order to join the Grid, or the licenses that must be allocated to the member when it joins the Grid using the token-based authentication.",
                        "enum": [
                            "rpz",
                            "fireeye",
                            "ms_management",
                            "sw_tp",
                            "tp_sub",
                            "nios",
                            "dtc",
                            "vnios",
                            "cloud_api",
                            "dns",
                            "enterprise",
                            "dhcp"
                        ],
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "MemberpreprovisioningHardwareInfo": {
                "type": "object",
                "properties": {
                    "hwtype": {
                        "type": "string",
                        "description": "Hardware type.",
                        "enum": [
                            "IB-815",
                            "IB-825",
                            "IB-926",
                            "IB-1415",
                            "IB-1425",
                            "IB-1516",
                            "IB-1526",
                            "IB-2215",
                            "IB-2225",
                            "IB-2326",
                            "IB-4015",
                            "IB-4025",
                            "IB-4126",
                            "IB-V815",
                            "IB-V825",
                            "IB-V926",
                            "IB-V1415",
                            "IB-V1425",
                            "IB-V1516",
                            "IB-V1526",
                            "IB-V2215",
                            "IB-V2225",
                            "IB-V2326",
                            "IB-V4015",
                            "IB-V4025",
                            "IB-V4126",
                            "IB-FLEX",
                            "CP-V805",
                            "CP-V1405",
                            "CP-V2205"
                        ],
                        "example": "Example hwtype"
                    }
                }
            },
            "MemberServiceStatus": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the current service status.",
                        "readOnly": true,
                        "example": "Example description"
                    },
                    "status": {
                        "type": "string",
                        "description": "The service status.",
                        "enum": [
                            "FAILED",
                            "WARNING",
                            "WORKING",
                            "INACTIVE",
                            "UNKNOWN",
                            "OFFLINE"
                        ],
                        "readOnly": true,
                        "example": "Example status"
                    },
                    "service": {
                        "type": "string",
                        "description": "The service identifier.",
                        "enum": [
                            "DHCP",
                            "DNS",
                            "DFP",
                            "DOT_DOH",
                            "NTP",
                            "TFTP",
                            "HTTP_FILE_DIST",
                            "FTP",
                            "CAPTIVE_PORTAL",
                            "HSM",
                            "REPORTING",
                            "DNS_CACHE_ACCELERATION",
                            "DISCOVERY",
                            "ATP",
                            "CLOUD_API",
                            "IMC",
                            "IMC_DCA_BWL",
                            "ANALYTICS",
                            "TAXII",
                            "CLOUD_DNS_SYNC"
                        ],
                        "readOnly": true,
                        "example": "Example service"
                    }
                }
            },
            "MemberSnmpSetting": {
                "type": "object",
                "properties": {
                    "engine_id": {
                        "type": "array",
                        "description": "The engine ID of the appliance that manages the SNMP agent.",
                        "enum": [
                            "string"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "queries_community_string": {
                        "type": "string",
                        "description": "The community string for SNMP queries.",
                        "example": "Example queries_community_string"
                    },
                    "queries_enable": {
                        "type": "boolean",
                        "description": "If set to True, SNMP queries are enabled.",
                        "example": false
                    },
                    "snmpv3_queries_enable": {
                        "type": "boolean",
                        "description": "If set to True, SNMPv3 queries are enabled.",
                        "example": false
                    },
                    "snmpv3_queries_users": {
                        "description": "A list of SNMPv3 queries users.",
                        "enum": [
                            "queriesuser"
                        ],
                        "$ref": "#/components/schemas/MembersnmpsettingSnmpv3QueriesUsers"
                    },
                    "snmpv3_traps_enable": {
                        "type": "boolean",
                        "description": "If set to True, SNMPv3 traps are enabled.",
                        "example": false
                    },
                    "syscontact": {
                        "type": "array",
                        "description": "The name of the contact person for the appliance. Second value is applicable only for HA pair. Otherwise second value is ignored.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "sysdescr": {
                        "type": "array",
                        "description": "Useful information about the appliance. Second value is applicable only for HA pair. Otherwise second value is ignored.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "syslocation": {
                        "type": "array",
                        "description": "The physical location of the appliance. Second value is applicable only for HA pair. Otherwise second value is ignored.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "sysname": {
                        "type": "array",
                        "description": "The FQDN (Fully Qualified Domain Name) of the appliance. Second value is applicable only for HA pair. Otherwise second value is ignored.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "trap_receivers": {
                        "description": "A list of trap receivers.",
                        "enum": [
                            "trapreceiver"
                        ],
                        "$ref": "#/components/schemas/MembersnmpsettingTrapReceivers"
                    },
                    "traps_community_string": {
                        "type": "string",
                        "description": "A string the NIOS appliance sends to the management system together with its traps. Note that this community string must match exactly what you enter in the management system.",
                        "example": "Example traps_community_string"
                    },
                    "traps_enable": {
                        "type": "boolean",
                        "description": "If set to True, SNMP traps are enabled.",
                        "example": false
                    }
                }
            },
            "MembersnmpsettingSnmpv3QueriesUsers": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "string",
                        "description": "The SNMPv3 user.",
                        "example": "Example user"
                    },
                    "comment": {
                        "type": "string",
                        "description": "A descriptive comment for this queries user.",
                        "example": "Example comment"
                    }
                }
            },
            "MembersnmpsettingTrapReceivers": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address of the trap receiver.",
                        "example": "Example address"
                    },
                    "user": {
                        "type": "string",
                        "description": "The SNMPv3 user for this trap receiver.",
                        "example": "Example user"
                    },
                    "comment": {
                        "type": "string",
                        "description": "A descriptive comment for this trap receiver.",
                        "example": "Example comment"
                    }
                }
            },
            "MemberStaticRoutes": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example address"
                    },
                    "gateway": {
                        "type": "string",
                        "description": "The default gateway for the Grid Member.",
                        "example": "Example gateway"
                    },
                    "subnet_mask": {
                        "type": "string",
                        "description": "The subnet mask for the Grid Member.",
                        "example": "Example subnet_mask"
                    },
                    "vlan_id": {
                        "type": "integer",
                        "description": "The identifier for the VLAN. Valid values are from 1 to 4096.",
                        "format": "int64",
                        "example": 1
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Determines if the current address is the primary VLAN address or not.",
                        "example": false
                    },
                    "dscp": {
                        "type": "integer",
                        "description": "The DSCP (Differentiated Services Code Point) value determines relative priorities for the type of services on your network. The appliance implements QoS (Quality of Service) rules based on this configuration. Valid values are from 0 to 63.",
                        "format": "int64",
                        "example": 1
                    },
                    "lan_subnet_mask": {
                        "type": "string",
                        "description": "LAN netmask only for GCP HA.",
                        "example": "Example lan_subnet_mask"
                    },
                    "lan_gateway": {
                        "type": "string",
                        "description": "LAN gateway only for GCP HA.",
                        "example": "Example lan_gateway"
                    },
                    "use_dscp": {
                        "type": "boolean",
                        "description": "Use flag for: dscp",
                        "example": false
                    }
                }
            },
            "MemberSyslogProxySetting": {
                "type": "object",
                "properties": {
                    "enable": {
                        "type": "boolean",
                        "description": "If set to True, the member receives syslog messages from specified devices, such as syslog servers and routers, and then forwards these messages to an external syslog server.",
                        "example": false
                    },
                    "tcp_enable": {
                        "type": "boolean",
                        "description": "If set to True, the appliance can receive messages from other devices via TCP.",
                        "example": false
                    },
                    "tcp_port": {
                        "type": "integer",
                        "description": "The TCP port the appliance must listen on.",
                        "format": "int64",
                        "example": 1
                    },
                    "udp_enable": {
                        "type": "boolean",
                        "description": "If set to True, the appliance can receive messages from other devices via UDP.",
                        "example": false
                    },
                    "udp_port": {
                        "type": "integer",
                        "description": "The UDP port the appliance must listen on.",
                        "format": "int64",
                        "example": 1
                    },
                    "client_acls": {
                        "description": "This list controls the IP addresses and networks that are allowed to access the syslog proxy.",
                        "enum": [
                            "addressac"
                        ],
                        "$ref": "#/components/schemas/MembersyslogproxysettingClientAcls"
                    }
                }
            },
            "MembersyslogproxysettingClientAcls": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address this rule applies to or \"Any\".",
                        "example": "Example address"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to use for this address.",
                        "enum": [
                            "ALLOW",
                            "DENY"
                        ],
                        "example": "Example permission"
                    },
                    "tsig_key": {
                        "type": "string",
                        "description": "A generated TSIG key. If the external primary server is a NIOS appliance running DNS One 2.x code, this can be set to :2xCOMPAT.",
                        "example": "Example tsig_key"
                    },
                    "tsig_key_alg": {
                        "type": "string",
                        "description": "The TSIG key algorithm.",
                        "enum": [
                            "HMAC-MD5",
                            "HMAC-SHA256"
                        ],
                        "example": "Example tsig_key_alg"
                    },
                    "tsig_key_name": {
                        "type": "string",
                        "description": "The name of the TSIG key. If 2.x TSIG compatibility is used, this is set to 'tsig_xfer' on retrieval, and ignored on insert or update.",
                        "example": "Example tsig_key_name"
                    },
                    "use_tsig_key_name": {
                        "type": "boolean",
                        "description": "Use flag for: tsig_key_name",
                        "example": false
                    }
                }
            },
            "MemberSyslogServers": {
                "type": "object",
                "properties": {
                    "address_or_fqdn": {
                        "type": "string",
                        "description": "The server address or FQDN.",
                        "example": "Example address_or_fqdn"
                    },
                    "certificate": {
                        "type": "string",
                        "description": "Reference to the underlying X509Certificate object grid:x509certificate.",
                        "readOnly": true,
                        "example": "Example certificate"
                    },
                    "certificate_token": {
                        "type": "string",
                        "description": "The token returned by the uploadinit function call in object fileop.",
                        "writeOnly": true,
                        "example": "Example certificate_token"
                    },
                    "connection_type": {
                        "type": "string",
                        "description": "The connection type for communicating with this server.",
                        "enum": [
                            "TCP",
                            "UDP",
                            "STCP"
                        ],
                        "example": "Example connection_type"
                    },
                    "port": {
                        "type": "integer",
                        "description": "The port this server listens on.",
                        "format": "int64",
                        "example": 1
                    },
                    "local_interface": {
                        "type": "string",
                        "description": "The local interface through which the appliance sends syslog messages to the syslog server.",
                        "enum": [
                            "ANY",
                            "LAN",
                            "MGMT"
                        ],
                        "example": "Example local_interface"
                    },
                    "message_source": {
                        "type": "string",
                        "description": "The source of syslog messages to be sent to the external syslog server. If set to 'INTERNAL', only messages the appliance generates will be sent to the syslog server. If set to 'EXTERNAL', the appliance sends syslog messages that it receives from other devices, such as syslog servers and routers. If set to 'ANY', the appliance sends both internal and external syslog messages.",
                        "enum": [
                            "ANY",
                            "EXTERNAL",
                            "INTERNAL"
                        ],
                        "example": "Example message_source"
                    },
                    "message_node_id": {
                        "type": "string",
                        "description": "Identify the node in the syslog message.",
                        "enum": [
                            "LAN",
                            "MGMT",
                            "HOSTNAME",
                            "IP_HOSTNAME"
                        ],
                        "example": "Example message_node_id"
                    },
                    "severity": {
                        "type": "string",
                        "description": "The severity filter. The appliance sends log messages of the specified severity and above to the external syslog server.",
                        "enum": [
                            "ALERT",
                            "CRIT",
                            "DEBUG",
                            "EMERG",
                            "INFO",
                            "NOTICE",
                            "WARNING"
                        ],
                        "example": "Example severity"
                    },
                    "category_list": {
                        "type": "array",
                        "description": "The list of all syslog logging categories.",
                        "enum": [
                            "NON_CATEGORIZED",
                            "ATP",
                            "DNS_CLIENT",
                            "DNS_CONFIG",
                            "DNS_DATABASE",
                            "DNS_DNSSEC",
                            "DNS_GENERAL",
                            "DNS_LAME_SERVERS",
                            "DNS_NETWORK",
                            "DNS_NOTIFY",
                            "DNS_QUERIES",
                            "DNS_QUERY_REWRITE",
                            "DNS_RESOLVER",
                            "DNS_RESPONSES",
                            "DNS_RPZ",
                            "DNS_SCAVENGING",
                            "DNS_SECURITY",
                            "DNS_UPDATE",
                            "DNS_UPDATE_SECURITY",
                            "DNS_XFER_IN",
                            "DNS_XFER_OUT",
                            "DTC_HEALTHD",
                            "DTC_IDNSD",
                            "DHCPD",
                            "NTP",
                            "FTPD",
                            "TFTPD",
                            "CLOUD_API",
                            "MS_DNS_SERVER",
                            "MS_CONNECT_STATUS",
                            "MS_DNS_ZONE",
                            "MS_DHCP_SERVER",
                            "MS_DHCP_LEASE",
                            "MS_DHCP_CLEAR_LEASE",
                            "MS_SITES",
                            "MS_AD_USERS",
                            "AUTH_COMMON",
                            "AUTH_NON_SYSTEM",
                            "AUTH_UI_API",
                            "AUTH_ACTIVE_DIRECTORY",
                            "AUTH_RADIUS",
                            "AUTH_TACACS",
                            "AUTH_LDAP",
                            "OUTBOUND_API"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "only_category_list": {
                        "type": "boolean",
                        "description": "The list of selected syslog logging categories. The appliance forwards syslog messages that belong to the selected categories.",
                        "example": false
                    }
                }
            },
            "MemberThresholdTraps": {
                "type": "object",
                "properties": {
                    "trap_type": {
                        "type": "string",
                        "description": "Determines the type of a given trap.",
                        "enum": [
                            "DBObjects",
                            "Disk",
                            "Memory",
                            "NetworkCapacity",
                            "Rootfs",
                            "Tmpfs",
                            "CpuUsage",
                            "Reporting",
                            "ReportingVolume",
                            "FDUsage",
                            "ExtStorage",
                            "SwapUsage",
                            "TcpUdpFloodAlertRate",
                            "TcpUdpFloodDropRate",
                            "RecursiveClients",
                            "ThreatProtectionTotalTraffic",
                            "ThreatProtectionDroppedTraffic",
                            "FastpathDroppedTraffic",
                            "Fastpathmbuffdepletion",
                            "IPAMUtilization",
                            "RPZHitRate"
                        ],
                        "example": "Example trap_type"
                    },
                    "trap_reset": {
                        "type": "integer",
                        "description": "Determines the threshold value to reset the trap.",
                        "format": "int64",
                        "example": 1
                    },
                    "trap_trigger": {
                        "type": "integer",
                        "description": "Determines the threshold value to trigger the trap.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "MemberTrafficCaptureAuthDnsSetting": {
                "type": "object",
                "properties": {
                    "auth_dns_latency_trigger_enable": {
                        "type": "boolean",
                        "description": "Enabling trigger automated traffic capture based on authoritative DNS latency.",
                        "example": false
                    },
                    "auth_dns_latency_threshold": {
                        "type": "integer",
                        "description": "Authoritative DNS latency below which traffic capture will be triggered.",
                        "format": "int64",
                        "example": 1
                    },
                    "auth_dns_latency_reset": {
                        "type": "integer",
                        "description": "Authoritative DNS latency above which traffic capture will stopped.",
                        "format": "int64",
                        "example": 1
                    },
                    "auth_dns_latency_listen_on_source": {
                        "type": "string",
                        "description": "The local IP DNS service is listen on (for authoritative DNS latency trigger).",
                        "enum": [
                            "IP",
                            "LAN2_V4",
                            "LAN2_V6",
                            "MGMT_V4",
                            "MGMT_V6",
                            "VIP_V4",
                            "VIP_V6"
                        ],
                        "example": "Example auth_dns_latency_listen_on_source"
                    },
                    "auth_dns_latency_listen_on_ip": {
                        "type": "string",
                        "description": "The DNS listen-on IP address used if auth_dns_latency_on_source is IP.",
                        "example": "Example auth_dns_latency_listen_on_ip"
                    }
                }
            },
            "MemberTrafficCaptureChrSetting": {
                "type": "object",
                "properties": {
                    "chr_trigger_enable": {
                        "type": "boolean",
                        "description": "Enable triggering automated traffic capture based on cache hit ratio thresholds.",
                        "example": false
                    },
                    "chr_threshold": {
                        "type": "integer",
                        "description": "DNS Cache hit ratio threshold(%) below which traffic capture will be triggered.",
                        "format": "int64",
                        "example": 1
                    },
                    "chr_reset": {
                        "type": "integer",
                        "description": "DNS Cache hit ratio threshold(%) above which traffic capture will be triggered.",
                        "format": "int64",
                        "example": 1
                    },
                    "chr_min_cache_utilization": {
                        "type": "integer",
                        "description": "Minimum DNS cache utilization threshold(%) for triggering traffic capture based on DNS cache hit ratio.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "MemberTrafficCaptureQpsSetting": {
                "type": "object",
                "properties": {
                    "qps_trigger_enable": {
                        "type": "boolean",
                        "description": "Enable triggering automated traffic capture based on DNS queries per second threshold.",
                        "example": false
                    },
                    "qps_threshold": {
                        "type": "integer",
                        "description": "DNS queries per second threshold below which traffic capture will be triggered.",
                        "format": "int64",
                        "example": 1
                    },
                    "qps_reset": {
                        "type": "integer",
                        "description": "DNS queries per second threshold below which traffic capture will be stopped.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "MemberTrafficCaptureRecDnsSetting": {
                "type": "object",
                "properties": {
                    "rec_dns_latency_trigger_enable": {
                        "type": "boolean",
                        "description": "Enable triggering automated traffic capture based on recursive DNS latency.",
                        "example": false
                    },
                    "rec_dns_latency_threshold": {
                        "type": "integer",
                        "description": "Recursive DNS latency below which traffic capture will be triggered.",
                        "format": "int64",
                        "example": 1
                    },
                    "rec_dns_latency_reset": {
                        "type": "integer",
                        "description": "Recursive DNS latency above which traffic capture will be stopped.",
                        "format": "int64",
                        "example": 1
                    },
                    "rec_dns_latency_listen_on_source": {
                        "type": "string",
                        "description": "The local IP DNS service is listen on ( for recursive DNS latency trigger).",
                        "enum": [
                            "IP",
                            "LAN2_V4",
                            "LAN2_V6",
                            "MGMT_V4",
                            "MGMT_V6",
                            "VIP_V4",
                            "VIP_V6"
                        ],
                        "example": "Example rec_dns_latency_listen_on_source"
                    },
                    "rec_dns_latency_listen_on_ip": {
                        "type": "string",
                        "description": "The DNS listen-on IP address used if rec_dns_latency_listen_on_source is IP.",
                        "example": "Example rec_dns_latency_listen_on_ip"
                    },
                    "kpi_monitored_domains": {
                        "description": "List of domains monitored by 'Recursive DNS Latency Threshold' trigger.",
                        "enum": [
                            "monitoreddomains"
                        ],
                        "$ref": "#/components/schemas/MembertrafficcapturerecdnssettingKpiMonitoredDomains"
                    }
                }
            },
            "MembertrafficcapturerecdnssettingKpiMonitoredDomains": {
                "type": "object",
                "properties": {
                    "domain_name": {
                        "type": "string",
                        "description": "Domain name (FQDN to Query).",
                        "example": "Example domain_name"
                    },
                    "record_type": {
                        "type": "string",
                        "description": "Record type(record to query).",
                        "example": "Example record_type"
                    }
                }
            },
            "MemberTrafficCaptureRecQueriesSetting": {
                "type": "object",
                "properties": {
                    "recursive_clients_count_trigger_enable": {
                        "type": "boolean",
                        "description": "Enable triggering automated traffic capture based on outgoing recursive queries count.",
                        "example": false
                    },
                    "recursive_clients_count_threshold": {
                        "type": "integer",
                        "description": "Concurrent outgoing recursive queries count below which traffic capture will be triggered.",
                        "format": "int64",
                        "example": 1
                    },
                    "recursive_clients_count_reset": {
                        "type": "integer",
                        "description": "Concurrent outgoing recursive queries count below which traffic capture will be stopped.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "MemberTrapNotifications": {
                "type": "object",
                "properties": {
                    "trap_type": {
                        "type": "string",
                        "description": "Determines the type of a given trap.",
                        "enum": [
                            "Fan",
                            "Disk",
                            "Memory",
                            "CPU",
                            "MGM",
                            "HSM",
                            "Login",
                            "PowerSupply",
                            "FTP",
                            "TFTP",
                            "HTTP",
                            "NTP",
                            "DNS",
                            "DHCP",
                            "RootFS",
                            "TmpFS",
                            "Database",
                            "RAID",
                            "HA",
                            "HAOnCloud",
                            "MSServer",
                            "Backup",
                            "Clear",
                            "SNMP",
                            "LCD",
                            "SSH",
                            "SerialConsole",
                            "ENAT",
                            "Network",
                            "Cluster",
                            "Controld",
                            "OSPF",
                            "OSPF6",
                            "IFMAP",
                            "BGP",
                            "CaptivePortal",
                            "DuplicateIP",
                            "License",
                            "System",
                            "Syslog",
                            "DiscoveryConflict",
                            "Reporting",
                            "FDUsage",
                            "OCSPResponders",
                            "DisconnectedGrid",
                            "LDAPServers",
                            "RIRSWIP",
                            "SwapUsage",
                            "Discovery",
                            "ThreatProtection",
                            "DNSIntegrityCheck",
                            "DNSIntegrityCheckConnection",
                            "CloudAPI",
                            "RecursiveClients",
                            "DiscoveryUnmanaged",
                            "IPMIDevice",
                            "CiscoISEServer",
                            "ThreatInsight",
                            "AnalyticsRPZ",
                            "DNSAttack",
                            "IMC",
                            "Taxii",
                            "BFD",
                            "Outbound",
                            "AutomatedTrafficCapture",
                            "CloudDNSsync",
                            "IMCGRPCServer",
                            "IPAMUtilization",
                            "RPZHitRate"
                        ],
                        "example": "Example trap_type"
                    },
                    "enable_email": {
                        "type": "boolean",
                        "description": "Determines if the email notifications for the given trap are enabled or not.",
                        "example": false
                    },
                    "enable_trap": {
                        "type": "boolean",
                        "description": "Determines if the trap is enabled or not.",
                        "example": false
                    }
                }
            },
            "MemberVipSetting": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example address"
                    },
                    "gateway": {
                        "type": "string",
                        "description": "The default gateway for the Grid Member.",
                        "example": "Example gateway"
                    },
                    "subnet_mask": {
                        "type": "string",
                        "description": "The subnet mask for the Grid Member.",
                        "example": "Example subnet_mask"
                    },
                    "vlan_id": {
                        "type": "integer",
                        "description": "The identifier for the VLAN. Valid values are from 1 to 4096.",
                        "format": "int64",
                        "example": 1
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Determines if the current address is the primary VLAN address or not.",
                        "example": false
                    },
                    "dscp": {
                        "type": "integer",
                        "description": "The DSCP (Differentiated Services Code Point) value determines relative priorities for the type of services on your network. The appliance implements QoS (Quality of Service) rules based on this configuration. Valid values are from 0 to 63.",
                        "format": "int64",
                        "example": 1
                    },
                    "lan_subnet_mask": {
                        "type": "string",
                        "description": "LAN netmask only for GCP HA.",
                        "example": "Example lan_subnet_mask"
                    },
                    "lan_gateway": {
                        "type": "string",
                        "description": "LAN gateway only for GCP HA.",
                        "example": "Example lan_gateway"
                    },
                    "use_dscp": {
                        "type": "boolean",
                        "description": "Use flag for: dscp",
                        "example": false
                    }
                }
            },
            "ListMemberResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Member__ objects.",
                        "type": "array",
                        "title": "ListMemberResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Member"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Member__ objects.",
                        "type": "object",
                        "title": "ListMemberResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Member"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateMemberResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Member__ in object format.",
                        "type": "object",
                        "title": "CreateMemberResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Member"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Member__.",
                        "type": "string",
                        "title": "CreateMemberResponse"
                    }
                ]
            },
            "GetMemberResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Member"
                    },
                    {
                        "description": "The response format to retrieve __Member__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetMemberResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Member"
                            }
                        }
                    }
                ]
            },
            "UpdateMemberResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Member__ in object format.",
                        "type": "object",
                        "title": "UpdateMemberResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Member"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Member__ .",
                        "type": "string",
                        "title": "UpdateMemberResponse"
                    }
                ]
            },
            "MemberDhcpproperties": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "auth_server_group": {
                        "type": "string",
                        "description": "The Authentication Server Group object associated with this member.",
                        "example": "Example auth_server_group"
                    },
                    "authn_captive_portal": {
                        "type": "string",
                        "description": "The captive portal responsible for authenticating this DHCP member.",
                        "example": "Example authn_captive_portal"
                    },
                    "authn_captive_portal_authenticated_filter": {
                        "type": "string",
                        "description": "The MAC filter representing the authenticated range.",
                        "example": "Example authn_captive_portal_authenticated_filter"
                    },
                    "authn_captive_portal_enabled": {
                        "type": "boolean",
                        "description": "The flag that controls if this DHCP member is enabled for captive portal authentication.",
                        "example": false
                    },
                    "authn_captive_portal_guest_filter": {
                        "type": "string",
                        "description": "The MAC filter representing the guest range.",
                        "example": "Example authn_captive_portal_guest_filter"
                    },
                    "authn_server_group_enabled": {
                        "type": "boolean",
                        "description": "The flag that controls if this DHCP member can send authentication requests to an authentication server group.",
                        "example": false
                    },
                    "authority": {
                        "type": "boolean",
                        "description": "The authority flag of a Grid member. This flag specifies if a DHCP server is authoritative for a domain.",
                        "example": false
                    },
                    "bootfile": {
                        "type": "string",
                        "description": "The name of a file that DHCP clients need to boot. This setting overrides the Grid level setting.",
                        "example": "Example bootfile"
                    },
                    "bootserver": {
                        "type": "string",
                        "description": "The name of the server on which a boot file is stored. This setting overrides the Grid level setting.",
                        "example": "Example bootserver"
                    },
                    "ddns_domainname": {
                        "type": "string",
                        "description": "The member DDNS domain name value.",
                        "example": "Example ddns_domainname"
                    },
                    "ddns_generate_hostname": {
                        "type": "boolean",
                        "description": "Determines the ability of a member DHCP server to generate a host name and update DNS with this host name when it receives a DHCP REQUEST message that does not include a host name.",
                        "example": false
                    },
                    "ddns_retry_interval": {
                        "type": "integer",
                        "description": "Determines the retry interval when the member DHCP server makes repeated attempts to send DDNS updates to a DNS server.",
                        "format": "int64",
                        "example": 1
                    },
                    "ddns_server_always_updates": {
                        "type": "boolean",
                        "description": "Determines that only the DHCP server is allowed to update DNS, regardless of the requests from the DHCP clients. This setting overrides the Grid level setting.",
                        "example": false
                    },
                    "ddns_ttl": {
                        "type": "integer",
                        "description": "The DDNS TTL (Dynamic DNS Time To Live) value specifies the number of seconds an IP address for the name is cached.",
                        "format": "int64",
                        "example": 1
                    },
                    "ddns_update_fixed_addresses": {
                        "type": "boolean",
                        "description": "Determines if the member DHCP server's ability to update the A and PTR records with a fixed address is enabled or not.",
                        "example": false
                    },
                    "ddns_use_option81": {
                        "type": "boolean",
                        "description": "Determines if support for option 81 is enabled or not.",
                        "example": false
                    },
                    "ddns_zone_primaries": {
                        "type": "array",
                        "description": "An ordered list of zone primaries that will receive DDNS updates.",
                        "enum": [
                            "dhcpddns"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberDhcppropertiesDdnsZonePrimaries"
                        }
                    },
                    "deny_bootp": {
                        "type": "boolean",
                        "description": "Determines if a BOOTP server denies BOOTP request or not. This setting overrides the Grid level setting.",
                        "example": false
                    },
                    "dhcp_utilization": {
                        "type": "integer",
                        "description": "The percentage of the total DHCP utilization of DHCP objects belonging to the Grid Member multiplied by 1000. This is the percentage of the total number of available IP addresses from all the DHCP objects belonging to the Grid Member versus the total number of all IP addresses in all of the DHCP objects on the Grid Member.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "dhcp_utilization_status": {
                        "type": "string",
                        "description": "A string describing the utilization level of DHCP objects that belong to the Grid Member.",
                        "enum": [
                            "FULL",
                            "HIGH",
                            "LOW",
                            "NORMAL"
                        ],
                        "readOnly": true,
                        "example": "Example dhcp_utilization_status"
                    },
                    "dns_update_style": {
                        "type": "string",
                        "description": "The update style for dynamic DNS updates.",
                        "enum": [
                            "INTERIM",
                            "STANDARD"
                        ],
                        "example": "Example dns_update_style"
                    },
                    "dynamic_hosts": {
                        "type": "integer",
                        "description": "The total number of DHCP leases issued for the DHCP objects on the Grid Member.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "email_list": {
                        "type": "array",
                        "description": "The email_list value of a member DHCP server.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "enable_ddns": {
                        "type": "boolean",
                        "description": "Determines if the member DHCP server's ability to send DDNS updates is enabled or not.",
                        "example": false
                    },
                    "enable_dhcp": {
                        "type": "boolean",
                        "description": "Determines if the DHCP service of a member is enabled or not.",
                        "example": false
                    },
                    "enable_dhcp_on_ipv6_lan2": {
                        "type": "boolean",
                        "description": "Determines if the DHCP service on the IPv6 LAN2 interface is enabled or not.",
                        "example": false
                    },
                    "enable_dhcp_on_lan2": {
                        "type": "boolean",
                        "description": "Determines if the DHCP service on the LAN2 interface is enabled or not.",
                        "example": false
                    },
                    "enable_dhcp_thresholds": {
                        "type": "boolean",
                        "description": "Represents the watermarks above or below which address usage in a network is unexpected and might warrant your attention. This setting overrides the Grid level setting.",
                        "example": false
                    },
                    "enable_dhcpv6_service": {
                        "type": "boolean",
                        "description": "Determines if DHCPv6 service for the member is enabled or not.",
                        "example": false
                    },
                    "enable_email_warnings": {
                        "type": "boolean",
                        "description": "Determines if e-mail warnings are enabled or disabled. When DHCP threshold is enabled and DHCP address usage crosses a watermark threshold, the appliance sends an e-mail notification to an administrator.",
                        "example": false
                    },
                    "enable_fingerprint": {
                        "type": "boolean",
                        "description": "Determines if fingerprint feature is enabled on this member. If you enable this feature, the server will match a fingerprint for incoming lease requests.",
                        "example": false
                    },
                    "enable_gss_tsig": {
                        "type": "boolean",
                        "description": "Determines whether the appliance is enabled to receive GSS-TSIG authenticated updates from DHCP clients.",
                        "example": false
                    },
                    "enable_hostname_rewrite": {
                        "type": "boolean",
                        "description": "Determines if the Grid member's host name rewrite feature is enabled or not.",
                        "example": false
                    },
                    "enable_leasequery": {
                        "type": "boolean",
                        "description": "Determines if lease query is allowed or not. This setting overrides the Grid-level setting.",
                        "example": false
                    },
                    "enable_snmp_warnings": {
                        "type": "boolean",
                        "description": "Determines if SNMP warnings are enabled or disabled on this DHCP member. When DHCP threshold is enabled and DHCP address usage crosses a watermark threshold, the appliance sends an SNMP trap to the trap receiver that was defined for the Grid member level.",
                        "example": false
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "gss_tsig_keys": {
                        "type": "array",
                        "description": "The list of GSS-TSIG keys for a member DHCP object.",
                        "enum": [
                            "kerberoskey"
                        ],
                        "items": {
                            "type": "string",
                            "enum": [
                                "kerberoskey"
                            ]
                        }
                    },
                    "high_water_mark": {
                        "type": "integer",
                        "description": "Determines the high watermark value of a member DHCP server. If the percentage of allocated addresses exceeds this watermark, the appliance makes a syslog entry and sends an e-mail notification (if enabled). Specifies the percentage of allocated addresses. The range is from 1 to 100.",
                        "format": "int64",
                        "example": 1
                    },
                    "high_water_mark_reset": {
                        "type": "integer",
                        "description": "Determines the high watermark reset value of a member DHCP server. If the percentage of allocated addresses drops below this value, a corresponding SNMP trap is reset. Specifies the percentage of allocated addresses. The range is from 1 to 100. The high watermark reset value must be lower than the high watermark value.",
                        "format": "int64",
                        "example": 1
                    },
                    "host_name": {
                        "type": "string",
                        "description": "Host name of the Grid member.",
                        "readOnly": true,
                        "example": "Example host_name"
                    },
                    "hostname_rewrite_policy": {
                        "type": "string",
                        "description": "The hostname rewrite policy that is in the protocol hostname rewrite policies array of the Grid DHCP object. This attribute is mandatory if enable_hostname_rewrite is \"true\".",
                        "example": "Example hostname_rewrite_policy"
                    },
                    "ignore_dhcp_option_list_request": {
                        "type": "boolean",
                        "description": "Determines if the ignore DHCP option list request flag of a Grid member DHCP is enabled or not. If this flag is set to true all available DHCP options will be returned to the client.",
                        "example": false
                    },
                    "ignore_id": {
                        "type": "string",
                        "description": "Indicates whether the appliance will ignore DHCP client IDs or MAC addresses. Valid values are \"NONE\", \"CLIENT\", or \"MACADDR\". The default is \"NONE\".",
                        "enum": [
                            "NONE",
                            "CLIENT",
                            "MACADDR"
                        ],
                        "example": "Example ignore_id"
                    },
                    "ignore_mac_addresses": {
                        "type": "array",
                        "description": "A list of MAC addresses the appliance will ignore.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "immediate_fa_configuration": {
                        "type": "boolean",
                        "description": "Determines if the Immediate Fixed address configuration apply feature for the DHCP member is enabled or not.",
                        "example": false
                    },
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid member.",
                        "readOnly": true,
                        "example": "Example ipv4addr"
                    },
                    "ipv6_ddns_domainname": {
                        "type": "string",
                        "description": "The member DDNS IPv6 domain name value.",
                        "example": "Example ipv6_ddns_domainname"
                    },
                    "ipv6_ddns_enable_option_fqdn": {
                        "type": "boolean",
                        "description": "Controls whether the FQDN option sent by the DHCPv6 client is to be used, or if the server can automatically generate the FQDN.",
                        "example": false
                    },
                    "ipv6_ddns_hostname": {
                        "type": "string",
                        "description": "The member IPv6 DDNS hostname value.",
                        "example": "Example ipv6_ddns_hostname"
                    },
                    "ipv6_ddns_server_always_updates": {
                        "type": "boolean",
                        "description": "Determines if the server always updates DNS or updates only if requested by the client.",
                        "example": false
                    },
                    "ipv6_ddns_ttl": {
                        "type": "integer",
                        "description": "The member IPv6 DDNS TTL value.",
                        "format": "int64",
                        "example": 1
                    },
                    "ipv6_dns_update_style": {
                        "type": "string",
                        "description": "The update style for dynamic DHCPv6 DNS updates.",
                        "enum": [
                            "INTERIM",
                            "STANDARD"
                        ],
                        "example": "Example ipv6_dns_update_style"
                    },
                    "ipv6_domain_name": {
                        "type": "string",
                        "description": "The IPv6 domain name.",
                        "example": "Example ipv6_domain_name"
                    },
                    "ipv6_domain_name_servers": {
                        "type": "array",
                        "description": "The comma separated list of domain name server addresses in IPv6 address format.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "ipv6_enable_ddns": {
                        "type": "boolean",
                        "description": "Determines if sending DDNS updates by the member DHCPv6 server is enabled or not.",
                        "example": false
                    },
                    "ipv6_enable_gss_tsig": {
                        "type": "boolean",
                        "description": "Determines whether the appliance is enabled to receive GSS-TSIG authenticated updates from DHCPv6 clients.",
                        "example": false
                    },
                    "ipv6_enable_lease_scavenging": {
                        "type": "boolean",
                        "description": "Indicates whether DHCPv6 lease scavenging is enabled or disabled.",
                        "example": false
                    },
                    "ipv6_enable_retry_updates": {
                        "type": "boolean",
                        "description": "Determines if the DHCPv6 server retries failed dynamic DNS updates or not.",
                        "example": false
                    },
                    "ipv6_generate_hostname": {
                        "type": "boolean",
                        "description": "Determines if the server generates the hostname if it is not sent by the client.",
                        "example": false
                    },
                    "ipv6_gss_tsig_keys": {
                        "type": "array",
                        "description": "The list of GSS-TSIG keys for a member DHCPv6 object.",
                        "enum": [
                            "kerberoskey"
                        ],
                        "items": {
                            "type": "string",
                            "enum": [
                                "kerberoskey"
                            ]
                        }
                    },
                    "ipv6_kdc_server": {
                        "type": "string",
                        "description": "Determines the IPv6 address or FQDN of the Kerberos server for DHCPv6 GSS-TSIG authentication. This setting overrides the Grid level setting.",
                        "example": "Example ipv6_kdc_server"
                    },
                    "ipv6_lease_scavenging_time": {
                        "type": "integer",
                        "description": "The member-level grace period (in seconds) to keep an expired lease before it is deleted by the scavenging process.",
                        "format": "int64",
                        "example": 1
                    },
                    "ipv6_microsoft_code_page": {
                        "type": "string",
                        "description": "The Microsoft client DHCP IPv6 code page value of a Grid member. This value is the hostname translation code page for Microsoft DHCP IPv6 clients and overrides the Grid level Microsoft DHCP IPv6 client code page.",
                        "enum": [
                            "None",
                            "US (437)",
                            "Greek (737)",
                            "Baltic (775)",
                            "Multilingual Latin I (850)",
                            "Latin II (852)",
                            "Cyrillic (855)",
                            "Turkish (857)",
                            "Hebrew (862)",
                            "Russian (866)",
                            "Thai (874)",
                            "Japanese Shift-JIS (932)",
                            "Simplified Chinese GBK (936)",
                            "Korean (949)",
                            "Traditional Chinese Big5 (950)",
                            "Central Europe (1250)",
                            "Cyrillic (1251)",
                            "Latin I (1252)",
                            "Greek (1253)",
                            "Turkish (1254)",
                            "Hebrew (1255)",
                            "Arabic (1256)",
                            "Baltic (1257)",
                            "Vietnam (1258)",
                            "Latin 1 (ISO-8859-1)",
                            "Latin 2 (ISO-8859-2)",
                            "Latin 3 (ISO-8859-3)",
                            "Baltic (ISO-8859-4)",
                            "Cyrillic (ISO-8859-5)",
                            "Arabic (ISO-8859-6)",
                            "Greek (ISO-8859-7)",
                            "Hebrew (ISO-8859-8)",
                            "Turkish (ISO-8859-9)",
                            "Latin 9 (ISO-8859-15)"
                        ],
                        "example": "Example ipv6_microsoft_code_page"
                    },
                    "ipv6_options": {
                        "type": "array",
                        "description": "An array of DHCP option dhcpoption structs that lists the DHCPv6 options associated with the object.",
                        "enum": [
                            "dhcpoption"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberDhcppropertiesIpv6Options"
                        }
                    },
                    "ipv6_recycle_leases": {
                        "type": "boolean",
                        "description": "Determines if the IPv6 recycle leases feature is enabled or not. If the feature is enabled, leases are kept in the Recycle Bin until one week after lease expiration. When the feature is disabled, the leases are irrecoverably deleted.",
                        "example": false
                    },
                    "ipv6_remember_expired_client_association": {
                        "type": "boolean",
                        "description": "Enable binding for expired DHCPv6 leases.",
                        "example": false
                    },
                    "ipv6_retry_updates_interval": {
                        "type": "integer",
                        "description": "Determines the retry interval when the member DHCPv6 server makes repeated attempts to send DDNS updates to a DNS server.",
                        "format": "int64",
                        "example": 1
                    },
                    "ipv6_server_duid": {
                        "type": "string",
                        "description": "The server DHCPv6 unique identifier (DUID) for the Grid member.",
                        "example": "Example ipv6_server_duid"
                    },
                    "ipv6_update_dns_on_lease_renewal": {
                        "type": "boolean",
                        "description": "Controls whether the DHCPv6 server updates DNS when an IPv6 DHCP lease is renewed.",
                        "example": false
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid member.",
                        "readOnly": true,
                        "example": "Example ipv6addr"
                    },
                    "kdc_server": {
                        "type": "string",
                        "description": "The IPv4 address or FQDN of the Kerberos server for DHCPv4 GSS-TSIG authentication. This setting overrides the Grid level setting.",
                        "example": "Example kdc_server"
                    },
                    "lease_per_client_settings": {
                        "type": "string",
                        "description": "Defines how the appliance releases DHCP leases. Valid values are \"RELEASE_MACHING_ID\", \"NEVER_RELEASE\", or \"ONE_LEASE_PER_CLIENT\". The default is \"RELEASE_MATCHING_ID\".",
                        "enum": [
                            "RELEASE_MATCHING_ID",
                            "NEVER_RELEASE",
                            "ONE_LEASE_PER_CLIENT"
                        ],
                        "example": "Example lease_per_client_settings"
                    },
                    "lease_scavenge_time": {
                        "type": "integer",
                        "description": "Determines the lease scavenging time value. When this field is set, the appliance permanently deletes the free and backup leases that remain in the database beyond a specified period of time. To disable lease scavenging, set the parameter to -1. The minimum positive value must be greater than 86400 seconds (1 day).",
                        "format": "int64",
                        "example": 1
                    },
                    "log_lease_events": {
                        "type": "boolean",
                        "description": "This value specifies whether the grid member logs lease events. This setting overrides the Grid level setting.",
                        "example": false
                    },
                    "logic_filter_rules": {
                        "type": "array",
                        "description": "This field contains the logic filters to be applied on the Grid member. This list corresponds to the match rules that are written to the dhcpd configuration file.",
                        "enum": [
                            "logicfilterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberDhcppropertiesLogicFilterRules"
                        }
                    },
                    "low_water_mark": {
                        "type": "integer",
                        "description": "Determines the low watermark value. If the percent of allocated addresses drops below this watermark, the appliance makes a syslog entry and sends an e-mail notification (if enabled).",
                        "format": "int64",
                        "example": 1
                    },
                    "low_water_mark_reset": {
                        "type": "integer",
                        "description": "Determines the low watermark reset value. If the percentage of allocated addresses exceeds this value, a corresponding SNMP trap is reset. A number that specifies the percentage of allocated addresses. The range is from 1 to 100. The low watermark reset value must be higher than the low watermark value.",
                        "format": "int64",
                        "example": 1
                    },
                    "microsoft_code_page": {
                        "type": "string",
                        "description": "The Microsoft client DHCP IPv4 code page value of a grid member. This value is the hostname translation code page for Microsoft DHCP IPv4 clients and overrides the Grid level Microsoft DHCP IPv4 client code page.",
                        "enum": [
                            "None",
                            "US (437)",
                            "Greek (737)",
                            "Baltic (775)",
                            "Multilingual Latin I (850)",
                            "Latin II (852)",
                            "Cyrillic (855)",
                            "Turkish (857)",
                            "Hebrew (862)",
                            "Russian (866)",
                            "Thai (874)",
                            "Japanese Shift-JIS (932)",
                            "Simplified Chinese GBK (936)",
                            "Korean (949)",
                            "Traditional Chinese Big5 (950)",
                            "Central Europe (1250)",
                            "Cyrillic (1251)",
                            "Latin I (1252)",
                            "Greek (1253)",
                            "Turkish (1254)",
                            "Hebrew (1255)",
                            "Arabic (1256)",
                            "Baltic (1257)",
                            "Vietnam (1258)",
                            "Latin 1 (ISO-8859-1)",
                            "Latin 2 (ISO-8859-2)",
                            "Latin 3 (ISO-8859-3)",
                            "Baltic (ISO-8859-4)",
                            "Cyrillic (ISO-8859-5)",
                            "Arabic (ISO-8859-6)",
                            "Greek (ISO-8859-7)",
                            "Hebrew (ISO-8859-8)",
                            "Turkish (ISO-8859-9)",
                            "Latin 9 (ISO-8859-15)"
                        ],
                        "example": "Example microsoft_code_page"
                    },
                    "nextserver": {
                        "type": "string",
                        "description": "The next server value of a member DHCP server. This value is the IP address or name of the boot file server on which the boot file is stored.",
                        "example": "Example nextserver"
                    },
                    "option60_match_rules": {
                        "type": "array",
                        "description": "The list of option 60 match rules.",
                        "enum": [
                            "option60matchrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberDhcppropertiesOption60MatchRules"
                        }
                    },
                    "options": {
                        "type": "array",
                        "description": "An array of DHCP option dhcpoption structs that lists the DHCP options associated with the object.",
                        "enum": [
                            "dhcpoption"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberDhcppropertiesOptions"
                        }
                    },
                    "ping_count": {
                        "type": "integer",
                        "description": "Specifies the number of pings that the Infoblox appliance sends to an IP address to verify that it is not in use. Values are from 0 to 10, where 0 disables pings.",
                        "format": "int64",
                        "example": 1
                    },
                    "ping_timeout": {
                        "type": "integer",
                        "description": "Indicates the number of milliseconds the appliance waits for a response to its ping. Valid values are 100, 500, 1000, 2000, 3000, 4000 and 5000 milliseconds.",
                        "format": "int64",
                        "example": 1
                    },
                    "preferred_lifetime": {
                        "type": "integer",
                        "description": "The preferred lifetime value.",
                        "format": "int64",
                        "example": 1
                    },
                    "prefix_length_mode": {
                        "type": "string",
                        "description": "The Prefix length mode for DHCPv6.",
                        "enum": [
                            "EXACT",
                            "IGNORE",
                            "MINIMUM",
                            "MAXIMUM",
                            "PREFER"
                        ],
                        "example": "Example prefix_length_mode"
                    },
                    "pxe_lease_time": {
                        "type": "integer",
                        "description": "Specifies the duration of time it takes a host to connect to a boot server, such as a TFTP server, and download the file it needs to boot. A 32-bit unsigned integer that represents the duration, in seconds, for which the update is cached. Zero indicates that the update is not cached.",
                        "format": "int64",
                        "example": 1
                    },
                    "recycle_leases": {
                        "type": "boolean",
                        "description": "Determines if the recycle leases feature is enabled or not. If you enabled this feature and then delete a DHCP range, the appliance stores active leases from this range up to one week after the leases expires.",
                        "example": false
                    },
                    "retry_ddns_updates": {
                        "type": "boolean",
                        "description": "Indicates whether the DHCP server makes repeated attempts to send DDNS updates to a DNS server.",
                        "example": false
                    },
                    "static_hosts": {
                        "type": "integer",
                        "description": "The number of static DHCP addresses configured in DHCP objects that belong to the Grid Member.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "syslog_facility": {
                        "type": "string",
                        "description": "The syslog facility is the location on the syslog server to which you want to sort the syslog messages.",
                        "enum": [
                            "DAEMON",
                            "LOCAL0",
                            "LOCAL1",
                            "LOCAL2",
                            "LOCAL3",
                            "LOCAL4",
                            "LOCAL5",
                            "LOCAL6",
                            "LOCAL7"
                        ],
                        "example": "Example syslog_facility"
                    },
                    "total_hosts": {
                        "type": "integer",
                        "description": "The total number of DHCP addresses configured in DHCP objects that belong to the Grid Member.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "update_dns_on_lease_renewal": {
                        "type": "boolean",
                        "description": "Controls whether the DHCP server updates DNS when a DHCP lease is renewed.",
                        "example": false
                    },
                    "use_authority": {
                        "type": "boolean",
                        "description": "Use flag for: authority",
                        "example": false
                    },
                    "use_bootfile": {
                        "type": "boolean",
                        "description": "Use flag for: bootfile",
                        "example": false
                    },
                    "use_bootserver": {
                        "type": "boolean",
                        "description": "Use flag for: bootserver",
                        "example": false
                    },
                    "use_ddns_domainname": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_domainname",
                        "example": false
                    },
                    "use_ddns_generate_hostname": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_generate_hostname",
                        "example": false
                    },
                    "use_ddns_ttl": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_ttl",
                        "example": false
                    },
                    "use_ddns_update_fixed_addresses": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_update_fixed_addresses",
                        "example": false
                    },
                    "use_ddns_use_option81": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_use_option81",
                        "example": false
                    },
                    "use_deny_bootp": {
                        "type": "boolean",
                        "description": "Use flag for: deny_bootp",
                        "example": false
                    },
                    "use_dns_update_style": {
                        "type": "boolean",
                        "description": "Use flag for: dns_update_style",
                        "example": false
                    },
                    "use_email_list": {
                        "type": "boolean",
                        "description": "Use flag for: email_list",
                        "example": false
                    },
                    "use_enable_ddns": {
                        "type": "boolean",
                        "description": "Use flag for: enable_ddns",
                        "example": false
                    },
                    "use_enable_dhcp_thresholds": {
                        "type": "boolean",
                        "description": "Use flag for: enable_dhcp_thresholds , high_water_mark, high_water_mark_reset, low_water_mark, low_water_mark_reset",
                        "example": false
                    },
                    "use_enable_fingerprint": {
                        "type": "boolean",
                        "description": "Use flag for: enable_fingerprint",
                        "example": false
                    },
                    "use_enable_gss_tsig": {
                        "type": "boolean",
                        "description": "Use flag for: kdc_server , enable_gss_tsig",
                        "example": false
                    },
                    "use_enable_hostname_rewrite": {
                        "type": "boolean",
                        "description": "Use flag for: enable_hostname_rewrite , hostname_rewrite_policy",
                        "example": false
                    },
                    "use_enable_leasequery": {
                        "type": "boolean",
                        "description": "Use flag for: enable_leasequery",
                        "example": false
                    },
                    "use_enable_one_lease_per_client": {
                        "type": "boolean",
                        "description": "Use flag for: enable_one_lease_per_client",
                        "example": false
                    },
                    "use_gss_tsig_keys": {
                        "type": "boolean",
                        "description": "Use flag for: gss_tsig_keys",
                        "example": false
                    },
                    "use_ignore_dhcp_option_list_request": {
                        "type": "boolean",
                        "description": "Use flag for: ignore_dhcp_option_list_request",
                        "example": false
                    },
                    "use_ignore_id": {
                        "type": "boolean",
                        "description": "Use flag for: ignore_id",
                        "example": false
                    },
                    "use_immediate_fa_configuration": {
                        "type": "boolean",
                        "description": "Use flag for: immediate_fa_configuration",
                        "example": false
                    },
                    "use_ipv6_ddns_domainname": {
                        "type": "boolean",
                        "description": "Use flag for: ipv6_ddns_domainname",
                        "example": false
                    },
                    "use_ipv6_ddns_enable_option_fqdn": {
                        "type": "boolean",
                        "description": "Use flag for: ipv6_ddns_enable_option_fqdn",
                        "example": false
                    },
                    "use_ipv6_ddns_hostname": {
                        "type": "boolean",
                        "description": "Use flag for: ipv6_ddns_hostname",
                        "example": false
                    },
                    "use_ipv6_ddns_ttl": {
                        "type": "boolean",
                        "description": "Use flag for: ipv6_ddns_ttl",
                        "example": false
                    },
                    "use_ipv6_dns_update_style": {
                        "type": "boolean",
                        "description": "Use flag for: ipv6_dns_update_style",
                        "example": false
                    },
                    "use_ipv6_domain_name": {
                        "type": "boolean",
                        "description": "Use flag for: ipv6_domain_name",
                        "example": false
                    },
                    "use_ipv6_domain_name_servers": {
                        "type": "boolean",
                        "description": "Use flag for: ipv6_domain_name_servers",
                        "example": false
                    },
                    "use_ipv6_enable_ddns": {
                        "type": "boolean",
                        "description": "Use flag for: ipv6_enable_ddns",
                        "example": false
                    },
                    "use_ipv6_enable_gss_tsig": {
                        "type": "boolean",
                        "description": "Use flag for: ipv6_kdc_server , ipv6_enable_gss_tsig",
                        "example": false
                    },
                    "use_ipv6_enable_retry_updates": {
                        "type": "boolean",
                        "description": "Use flag for: ipv6_enable_retry_updates , ipv6_retry_updates_interval",
                        "example": false
                    },
                    "use_ipv6_generate_hostname": {
                        "type": "boolean",
                        "description": "Use flag for: ipv6_generate_hostname",
                        "example": false
                    },
                    "use_ipv6_gss_tsig_keys": {
                        "type": "boolean",
                        "description": "Use flag for: ipv6_gss_tsig_keys",
                        "example": false
                    },
                    "use_ipv6_lease_scavenging": {
                        "type": "boolean",
                        "description": "Use flag for: ipv6_enable_lease_scavenging , ipv6_lease_scavenging_time, ipv6_remember_expired_client_association",
                        "example": false
                    },
                    "use_ipv6_microsoft_code_page": {
                        "type": "boolean",
                        "description": "Use flag for: ipv6_microsoft_code_page",
                        "example": false
                    },
                    "use_ipv6_options": {
                        "type": "boolean",
                        "description": "Use flag for: ipv6_options",
                        "example": false
                    },
                    "use_ipv6_recycle_leases": {
                        "type": "boolean",
                        "description": "Use flag for: ipv6_recycle_leases",
                        "example": false
                    },
                    "use_ipv6_update_dns_on_lease_renewal": {
                        "type": "boolean",
                        "description": "Use flag for: ipv6_update_dns_on_lease_renewal",
                        "example": false
                    },
                    "use_lease_per_client_settings": {
                        "type": "boolean",
                        "description": "Use flag for: lease_per_client_settings",
                        "example": false
                    },
                    "use_lease_scavenge_time": {
                        "type": "boolean",
                        "description": "Use flag for: lease_scavenge_time",
                        "example": false
                    },
                    "use_log_lease_events": {
                        "type": "boolean",
                        "description": "Use flag for: log_lease_events",
                        "example": false
                    },
                    "use_logic_filter_rules": {
                        "type": "boolean",
                        "description": "Use flag for: logic_filter_rules",
                        "example": false
                    },
                    "use_microsoft_code_page": {
                        "type": "boolean",
                        "description": "Use flag for: microsoft_code_page",
                        "example": false
                    },
                    "use_nextserver": {
                        "type": "boolean",
                        "description": "Use flag for: nextserver",
                        "example": false
                    },
                    "use_options": {
                        "type": "boolean",
                        "description": "Use flag for: options",
                        "example": false
                    },
                    "use_ping_count": {
                        "type": "boolean",
                        "description": "Use flag for: ping_count",
                        "example": false
                    },
                    "use_ping_timeout": {
                        "type": "boolean",
                        "description": "Use flag for: ping_timeout",
                        "example": false
                    },
                    "use_preferred_lifetime": {
                        "type": "boolean",
                        "description": "Use flag for: preferred_lifetime",
                        "example": false
                    },
                    "use_prefix_length_mode": {
                        "type": "boolean",
                        "description": "Use flag for: prefix_length_mode",
                        "example": false
                    },
                    "use_pxe_lease_time": {
                        "type": "boolean",
                        "description": "Use flag for: pxe_lease_time",
                        "example": false
                    },
                    "use_recycle_leases": {
                        "type": "boolean",
                        "description": "Use flag for: recycle_leases",
                        "example": false
                    },
                    "use_retry_ddns_updates": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_retry_interval , retry_ddns_updates",
                        "example": false
                    },
                    "use_syslog_facility": {
                        "type": "boolean",
                        "description": "Use flag for: syslog_facility",
                        "example": false
                    },
                    "use_update_dns_on_lease_renewal": {
                        "type": "boolean",
                        "description": "Use flag for: update_dns_on_lease_renewal",
                        "example": false
                    },
                    "use_valid_lifetime": {
                        "type": "boolean",
                        "description": "Use flag for: valid_lifetime",
                        "example": false
                    },
                    "valid_lifetime": {
                        "type": "integer",
                        "description": "The valid lifetime for Grid Member DHCP. Specifies the length of time addresses that are assigned to DHCPv6 clients remain in the valid state.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "MemberDhcppropertiesDdnsZonePrimaries": {
                "type": "object",
                "properties": {
                    "zone_match": {
                        "type": "string",
                        "description": "Indicate matching type.",
                        "enum": [
                            "GRID",
                            "EXTERNAL",
                            "ANY_EXTERNAL",
                            "ANY_GRID"
                        ],
                        "example": "Example zone_match"
                    },
                    "dns_grid_zone": {
                        "type": "string",
                        "description": "The ref of a DNS zone.",
                        "example": "Example dns_grid_zone"
                    },
                    "dns_grid_primary": {
                        "type": "string",
                        "description": "The name of a Grid member.",
                        "example": "Example dns_grid_primary"
                    },
                    "dns_ext_zone": {
                        "type": "string",
                        "description": "The name of external zone in FQDN format.",
                        "example": "Example dns_ext_zone"
                    },
                    "dns_ext_primary": {
                        "type": "string",
                        "description": "The IP address of the External server. Valid when zone_match is \"EXTERNAL\" or \"ANY_EXTERNAL\".",
                        "example": "Example dns_ext_primary"
                    }
                }
            },
            "MemberDhcppropertiesIpv6Options": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the DHCP option.",
                        "example": "Example name"
                    },
                    "num": {
                        "type": "integer",
                        "description": "The code of the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "vendor_class": {
                        "type": "string",
                        "description": "The name of the space this DHCP option is associated to.",
                        "example": "Example vendor_class"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the DHCP option",
                        "example": "Example value"
                    },
                    "use_option": {
                        "type": "boolean",
                        "description": "Only applies to special options that are displayed separately from other options and have a use flag. These options are: * routers * router-templates * domain-name-servers * domain-name * broadcast-address * broadcast-address-offset * dhcp-lease-time * dhcp6.name-servers",
                        "example": false
                    }
                }
            },
            "MemberDhcppropertiesLogicFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The filter name.",
                        "example": "Example filter"
                    },
                    "type": {
                        "type": "string",
                        "description": "The filter type. Valid values are: * MAC * NAC * Option",
                        "example": "Example type"
                    }
                }
            },
            "MemberDhcppropertiesOption60MatchRules": {
                "type": "object",
                "properties": {
                    "match_value": {
                        "type": "string",
                        "description": "The match value for this DHCP Option 60 match rule.",
                        "example": "Example match_value"
                    },
                    "option_space": {
                        "type": "string",
                        "description": "The option space for this DHCP Option 60 match rule.",
                        "example": "Example option_space"
                    },
                    "is_substring": {
                        "type": "boolean",
                        "description": "Determines if the match value is a substring.",
                        "example": false
                    },
                    "substring_offset": {
                        "type": "integer",
                        "description": "The offset of match value for this DHCP Option 60 match rule.",
                        "format": "int64",
                        "example": 1
                    },
                    "substring_length": {
                        "type": "integer",
                        "description": "The length of match value for this DHCP Option 60 match rule.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "MemberDhcppropertiesOptions": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the DHCP option.",
                        "example": "Example name"
                    },
                    "num": {
                        "type": "integer",
                        "description": "The code of the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "vendor_class": {
                        "type": "string",
                        "description": "The name of the space this DHCP option is associated to.",
                        "example": "Example vendor_class"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the DHCP option",
                        "example": "Example value"
                    },
                    "use_option": {
                        "type": "boolean",
                        "description": "Only applies to special options that are displayed separately from other options and have a use flag. These options are: * routers * router-templates * domain-name-servers * domain-name * broadcast-address * broadcast-address-offset * dhcp-lease-time * dhcp6.name-servers",
                        "example": false
                    }
                }
            },
            "ListMemberDhcppropertiesResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __MemberDhcpproperties__ objects.",
                        "type": "array",
                        "title": "ListMemberDhcppropertiesResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/MemberDhcpproperties"
                        }
                    },
                    {
                        "description": "The response format to retrieve __MemberDhcpproperties__ objects.",
                        "type": "object",
                        "title": "ListMemberDhcppropertiesResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/MemberDhcpproperties"
                                }
                            }
                        }
                    }
                ]
            },
            "GetMemberDhcppropertiesResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MemberDhcpproperties"
                    },
                    {
                        "description": "The response format to retrieve __MemberDhcpproperties__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetMemberDhcppropertiesResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/MemberDhcpproperties"
                            }
                        }
                    }
                ]
            },
            "UpdateMemberDhcppropertiesResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __MemberDhcpproperties__ in object format.",
                        "type": "object",
                        "title": "UpdateMemberDhcppropertiesResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/MemberDhcpproperties"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __MemberDhcpproperties__ .",
                        "type": "string",
                        "title": "UpdateMemberDhcppropertiesResponse"
                    }
                ]
            },
            "MemberDns": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "add_client_ip_mac_options": {
                        "type": "boolean",
                        "description": "Add custom IP, MAC and DNS View name ENDS0 options to outgoing recursive queries.",
                        "example": false
                    },
                    "additional_ip_list": {
                        "type": "array",
                        "description": "The list of additional IP addresses on which DNS is enabled for a Grid member. Only one of \"additional_ip_list\" or \"additional_ip_list_struct\" should be set when modifying the object.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "additional_ip_list_struct": {
                        "type": "array",
                        "description": "The list of additional IP addresses and IP Space Discriminator short names on which DNS is enabled for a Grid member. Only one of \"additional_ip_list\" or \"additional_ip_list_struct\" should be set when modifying the object.",
                        "enum": [
                            "member:dnsip"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberDnsAdditionalIpListStruct"
                        }
                    },
                    "allow_gss_tsig_zone_updates": {
                        "type": "boolean",
                        "description": "Determines whether the GSS-TSIG zone updates is enabled for the Grid member.",
                        "example": false
                    },
                    "allow_query": {
                        "type": "array",
                        "description": "Determines if queries from specified IPv4 or IPv6 addresses and networks are enabled or not. The appliance can also use Transaction Signature (TSIG) keys to authenticate the queries. This setting overrides the Grid query settings.",
                        "enum": [
                            "addressac"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberDnsAllowQuery"
                        }
                    },
                    "allow_recursive_query": {
                        "type": "boolean",
                        "description": "Determines if the responses to recursive queries is enabled or not. This setting overrides Grid recursive query settings.",
                        "example": false
                    },
                    "allow_transfer": {
                        "type": "array",
                        "description": "Allows or rejects zone transfers from specified IPv4 or IPv6 addresses and networks or allows transfers from hosts authenticated by Transaction signature (TSIG) key. This setting overrides the Grid zone transfer settings.",
                        "enum": [
                            "addressac"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberDnsAllowTransfer"
                        }
                    },
                    "allow_update": {
                        "type": "array",
                        "description": "Allows or rejects dynamic updates from specified IPv4 or IPv6 addresses, networks or from host authenticated by TSIG key. This setting overrides Grid update settings.",
                        "enum": [
                            "addressac"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberDnsAllowUpdate"
                        }
                    },
                    "anonymize_response_logging": {
                        "type": "boolean",
                        "description": "The flag that indicates whether the anonymization of captured DNS responses is enabled or disabled.",
                        "example": false
                    },
                    "atc_fwd_enable": {
                        "type": "boolean",
                        "description": "Enable DNS recursive query forwarding to Active Trust Cloud.",
                        "example": false
                    },
                    "attack_mitigation": {
                        "$ref": "#/components/schemas/MemberDnsAttackMitigation"
                    },
                    "auto_blackhole": {
                        "$ref": "#/components/schemas/MemberDnsAutoBlackhole"
                    },
                    "auto_create_a_and_ptr_for_lan2": {
                        "type": "boolean",
                        "description": "Determines if the auto-generation of A and PTR records for the LAN2 IP address is enabled or not, if DNS service is enabled on LAN2.",
                        "example": false
                    },
                    "auto_create_aaaa_and_ipv6ptr_for_lan2": {
                        "type": "boolean",
                        "description": "Determines if auto-generation of AAAA and IPv6 PTR records for LAN2 IPv6 address is enabled or not.",
                        "example": false
                    },
                    "auto_sort_views": {
                        "type": "boolean",
                        "description": "Determines if a Grid member to automatically sort DNS views is enabled or not. The order of the DNS views determines the order in which the appliance checks the match lists.",
                        "example": false
                    },
                    "bind_check_names_policy": {
                        "type": "string",
                        "description": "The BIND check names policy, which indicates the action the appliance takes when it encounters host names that do not comply with the Strict Hostname Checking policy. This method applies only if the host name restriction policy is set to 'Strict Hostname Checking'.",
                        "enum": [
                            "FAIL",
                            "WARN"
                        ],
                        "example": "Example bind_check_names_policy"
                    },
                    "bind_hostname_directive": {
                        "type": "string",
                        "description": "The value of the hostname directive for BIND.",
                        "enum": [
                            "NONE",
                            "HOSTNAME",
                            "USER_DEFINED"
                        ],
                        "example": "Example bind_hostname_directive"
                    },
                    "bind_hostname_directive_fqdn": {
                        "type": "string",
                        "description": "The value of the user-defined hostname directive for BIND. To enable user-defined hostname directive, you must set the bind_hostname_directive to \"USER_DEFINED\".",
                        "example": "Example bind_hostname_directive_fqdn"
                    },
                    "blackhole_list": {
                        "type": "array",
                        "description": "The list of IPv4 or IPv6 addresses and networks from which DNS queries are blocked. This setting overrides the Grid blackhole_list.",
                        "enum": [
                            "addressac"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberDnsBlackholeList"
                        }
                    },
                    "blacklist_action": {
                        "type": "string",
                        "description": "The action to perform when a domain name matches the pattern defined in a rule that is specified by the blacklist_ruleset method.",
                        "enum": [
                            "REDIRECT",
                            "REFUSE"
                        ],
                        "example": "Example blacklist_action"
                    },
                    "blacklist_log_query": {
                        "type": "boolean",
                        "description": "Determines if blacklist redirection queries are logged or not.",
                        "example": false
                    },
                    "blacklist_redirect_addresses": {
                        "type": "array",
                        "description": "The IP addresses the appliance includes in the response it sends in place of a blacklisted IP address.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "blacklist_redirect_ttl": {
                        "type": "integer",
                        "description": "The TTL value of the synthetic DNS responses that result from blacklist redirection.",
                        "format": "int64",
                        "example": 1
                    },
                    "blacklist_rulesets": {
                        "type": "array",
                        "description": "The DNS Ruleset object names assigned at the Grid level for blacklist redirection.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "capture_dns_queries_on_all_domains": {
                        "type": "boolean",
                        "description": "The flag that indicates whether the capture of DNS queries for all domains is enabled or disabled.",
                        "example": false
                    },
                    "check_names_for_ddns_and_zone_transfer": {
                        "type": "boolean",
                        "description": "Determines whether the application of BIND check-names for zone transfers and DDNS updates are enabled.",
                        "example": false
                    },
                    "copy_client_ip_mac_options": {
                        "type": "boolean",
                        "description": "Copy custom IP, MAC and DNS View name ENDS0 options from incoming to outgoing recursive queries.",
                        "example": false
                    },
                    "copy_xfer_to_notify": {
                        "type": "boolean",
                        "description": "Copies the allowed IPs from the zone transfer list into the also-notify statement in the named.conf file.",
                        "example": false
                    },
                    "custom_root_name_servers": {
                        "type": "array",
                        "description": "The list of custom root name servers. You can either select and use Internet root name servers or specify custom root name servers by providing a host name and IP address to which the Infoblox appliance can send queries.",
                        "enum": [
                            "extserver"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberDnsCustomRootNameServers"
                        }
                    },
                    "disable_edns": {
                        "type": "boolean",
                        "description": "The EDNS0 support for queries that require recursive resolution on Grid members.",
                        "example": false
                    },
                    "dns64_groups": {
                        "type": "array",
                        "description": "The list of DNS64 synthesis groups associated with this member.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "dns_cache_acceleration_status": {
                        "type": "string",
                        "description": "The DNS cache acceleration status.",
                        "readOnly": true,
                        "example": "Example dns_cache_acceleration_status"
                    },
                    "dns_cache_acceleration_ttl": {
                        "type": "integer",
                        "description": "The minimum TTL value, in seconds, that a DNS record must have in order for it to be cached by the DNS Cache Acceleration service. An integer from 1 to 65000 that represents the TTL in seconds.",
                        "format": "int64",
                        "example": 1
                    },
                    "dns_health_check_anycast_control": {
                        "type": "boolean",
                        "description": "The flag that indicates whether the anycast failure (BFD session down) is enabled on member failure or not.",
                        "example": false
                    },
                    "dns_health_check_domain_list": {
                        "type": "array",
                        "description": "The list of domain names for the DNS health check.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "dns_health_check_interval": {
                        "type": "integer",
                        "description": "The time interval (in seconds) for DNS health check.",
                        "format": "int64",
                        "example": 1
                    },
                    "dns_health_check_recursion_flag": {
                        "type": "boolean",
                        "description": "The flag that indicates whether the recursive DNS health check is enabled or not.",
                        "example": false
                    },
                    "dns_health_check_retries": {
                        "type": "integer",
                        "description": "The number of DNS health check retries.",
                        "format": "int64",
                        "example": 1
                    },
                    "dns_health_check_timeout": {
                        "type": "integer",
                        "description": "The DNS health check timeout interval (in seconds).",
                        "format": "int64",
                        "example": 1
                    },
                    "dns_notify_transfer_source": {
                        "type": "string",
                        "description": "Determines which IP address is used as the source for DDNS notify and transfer operations.",
                        "enum": [
                            "VIP",
                            "MGMT",
                            "LAN2",
                            "ANY",
                            "IP"
                        ],
                        "example": "Example dns_notify_transfer_source"
                    },
                    "dns_notify_transfer_source_address": {
                        "type": "string",
                        "description": "The source address used if dns_notify_transfer_source type is \"IP\".",
                        "example": "Example dns_notify_transfer_source_address"
                    },
                    "dns_over_tls_service": {
                        "type": "boolean",
                        "description": "Enables DNS over TLS service.",
                        "example": false
                    },
                    "dns_query_capture_file_time_limit": {
                        "type": "integer",
                        "description": "The time limit (in minutes) for the DNS query capture file.",
                        "format": "int64",
                        "example": 1
                    },
                    "dns_query_source_address": {
                        "type": "string",
                        "description": "The source address used if dns_query_source_interface type is \"IP\".",
                        "example": "Example dns_query_source_address"
                    },
                    "dns_query_source_interface": {
                        "type": "string",
                        "description": "Determines which IP address is used as the source for DDNS query operations.",
                        "enum": [
                            "VIP",
                            "MGMT",
                            "LAN2",
                            "ANY",
                            "IP"
                        ],
                        "example": "Example dns_query_source_interface"
                    },
                    "dns_view_address_settings": {
                        "type": "array",
                        "description": "Array of notify/query source settings for views.",
                        "enum": [
                            "setting:viewaddress"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberDnsDnsViewAddressSettings"
                        }
                    },
                    "dnssec_blacklist_enabled": {
                        "type": "boolean",
                        "description": "Determines if the blacklist rules for DNSSEC-enabled clients are enabled or not.",
                        "example": false
                    },
                    "dnssec_dns64_enabled": {
                        "type": "boolean",
                        "description": "Determines if the DNS64 groups for DNSSEC-enabled clients are enabled or not.",
                        "example": false
                    },
                    "dnssec_enabled": {
                        "type": "boolean",
                        "description": "Determines if the DNS security extension is enabled or not.",
                        "example": false
                    },
                    "dnssec_expired_signatures_enabled": {
                        "type": "boolean",
                        "description": "Determines when the DNS member accepts expired signatures.",
                        "example": false
                    },
                    "dnssec_negative_trust_anchors": {
                        "type": "array",
                        "description": "A list of zones for which the server does not perform DNSSEC validation.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "dnssec_nxdomain_enabled": {
                        "type": "boolean",
                        "description": "Determines if the NXDOMAIN rules for DNSSEC-enabled clients are enabled or not.",
                        "example": false
                    },
                    "dnssec_rpz_enabled": {
                        "type": "boolean",
                        "description": "Determines if the RPZ policies for DNSSEC-enabled clients are enabled or not.",
                        "example": false
                    },
                    "dnssec_trusted_keys": {
                        "type": "array",
                        "description": "The list of trusted keys for the DNSSEC feature.",
                        "enum": [
                            "dnssectrustedkey"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberDnsDnssecTrustedKeys"
                        }
                    },
                    "dnssec_validation_enabled": {
                        "type": "boolean",
                        "description": "Determines if the DNS security validation is enabled or not.",
                        "example": false
                    },
                    "dnstap_setting": {
                        "$ref": "#/components/schemas/MemberDnsDnstapSetting"
                    },
                    "doh_https_session_duration": {
                        "type": "integer",
                        "description": "DNS over HTTPS sessions duration.",
                        "format": "int64",
                        "example": 1
                    },
                    "doh_service": {
                        "type": "boolean",
                        "description": "Enables DNS over HTTPS service.",
                        "example": false
                    },
                    "domains_to_capture_dns_queries": {
                        "type": "array",
                        "description": "The list of domains for DNS query capture.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "dtc_dns_queries_specific_behavior": {
                        "type": "string",
                        "description": "Setting to control specific behavior for DTC DNS responses for incoming lbdn matched queries.",
                        "enum": [
                            "DTC_RESPONSE_ANYWAY",
                            "DNS_RESPONSE_IF_NO_DTC",
                            "DROP_LBDN_MATCHED_QUERY"
                        ],
                        "example": "Example dtc_dns_queries_specific_behavior"
                    },
                    "dtc_edns_prefer_client_subnet": {
                        "type": "boolean",
                        "description": "Determines whether to prefer the client address from the edns-client-subnet option for DTC or not.",
                        "example": false
                    },
                    "dtc_health_source": {
                        "type": "string",
                        "description": "The health check source type.",
                        "enum": [
                            "VIP",
                            "MGMT",
                            "LAN2",
                            "ANY",
                            "IP"
                        ],
                        "example": "Example dtc_health_source"
                    },
                    "dtc_health_source_address": {
                        "type": "string",
                        "description": "The source address used if dtc_health_source type is \"IP\".",
                        "example": "Example dtc_health_source_address"
                    },
                    "edns_udp_size": {
                        "type": "integer",
                        "description": "Advertises the EDNS0 buffer size to the upstream server. The value should be between 512 and 4096 bytes. The recommended value is between 512 and 1220 bytes.",
                        "format": "int64",
                        "example": 1
                    },
                    "enable_blackhole": {
                        "type": "boolean",
                        "description": "Determines if the blocking of DNS queries is enabled or not. This setting overrides the Grid enable_blackhole settings.",
                        "example": false
                    },
                    "enable_blacklist": {
                        "type": "boolean",
                        "description": "Determines if a blacklist is enabled or not on the Grid member.",
                        "example": false
                    },
                    "enable_capture_dns_queries": {
                        "type": "boolean",
                        "description": "The flag that indicates whether the capture of DNS queries is enabled or disabled.",
                        "example": false
                    },
                    "enable_capture_dns_responses": {
                        "type": "boolean",
                        "description": "The flag that indicates whether the capture of DNS responses is enabled or disabled.",
                        "example": false
                    },
                    "enable_dns": {
                        "type": "boolean",
                        "description": "Determines if the DNS service of a member is enabled or not.",
                        "example": false
                    },
                    "enable_dns64": {
                        "type": "boolean",
                        "description": "Determines if the DNS64 support is enabled or not for this member.",
                        "example": false
                    },
                    "enable_dns_cache_acceleration": {
                        "type": "boolean",
                        "description": "Determines if the DNS Cache Acceleration service is enabled or not for a member.",
                        "example": false
                    },
                    "enable_dns_health_check": {
                        "type": "boolean",
                        "description": "The flag that indicates whether the DNS health check is enabled or not.",
                        "example": false
                    },
                    "enable_dnstap_queries": {
                        "type": "boolean",
                        "description": "Determines whether the query messages need to be forwarded to DNSTAP or not.",
                        "example": false
                    },
                    "enable_dnstap_responses": {
                        "type": "boolean",
                        "description": "Determines whether the response messages need to be forwarded to DNSTAP or not.",
                        "example": false
                    },
                    "enable_dnstap_violations_tls": {
                        "type": "boolean",
                        "description": "Determines whether the violations messages need to be forwarded to DNSTAP or not.",
                        "example": false
                    },
                    "enable_excluded_domain_names": {
                        "type": "boolean",
                        "description": "The flag that indicates whether excluding domain names from captured DNS queries and responses is enabled or disabled.",
                        "example": false
                    },
                    "enable_fixed_rrset_order_fqdns": {
                        "type": "boolean",
                        "description": "Determines if the fixed RRset order FQDN is enabled or not.",
                        "example": false
                    },
                    "enable_ftc": {
                        "type": "boolean",
                        "description": "Determines whether Fault Tolerant Caching (FTC) is enabled.",
                        "example": false
                    },
                    "enable_gss_tsig": {
                        "type": "boolean",
                        "description": "Determines whether the appliance is enabled to receive GSS-TSIG authenticated updates from DHCP clients.",
                        "example": false
                    },
                    "enable_notify_source_port": {
                        "type": "boolean",
                        "description": "Determines if the notify source port for a member is enabled or not.",
                        "example": false
                    },
                    "enable_query_rewrite": {
                        "type": "boolean",
                        "description": "Determines if the DNS query rewrite is enabled or not for this member.",
                        "example": false
                    },
                    "enable_query_source_port": {
                        "type": "boolean",
                        "description": "Determines if the query source port for a memer is enabled or not.",
                        "example": false
                    },
                    "excluded_domain_names": {
                        "type": "array",
                        "description": "The list of domains that are excluded from DNS query and response capture.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "file_transfer_setting": {
                        "$ref": "#/components/schemas/MemberDnsFileTransferSetting"
                    },
                    "filter_aaaa": {
                        "type": "string",
                        "description": "The type of AAAA filtering for this member DNS object.",
                        "enum": [
                            "YES",
                            "NO",
                            "BREAK_DNSSEC"
                        ],
                        "example": "Example filter_aaaa"
                    },
                    "filter_aaaa_list": {
                        "type": "array",
                        "description": "The list of IPv4 addresses and networks from which queries are received. AAAA filtering is applied to these addresses.",
                        "enum": [
                            "addressac"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberDnsFilterAaaaList"
                        }
                    },
                    "fixed_rrset_order_fqdns": {
                        "type": "array",
                        "description": "The fixed RRset order FQDN. If this field does not contain an empty value, the appliance will automatically set the enable_fixed_rrset_order_fqdns field to 'true', unless the same request sets the enable field to 'false'.",
                        "enum": [
                            "grid:dns:fixedrrsetorderfqdn"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberDnsFixedRrsetOrderFqdns"
                        }
                    },
                    "forward_only": {
                        "type": "boolean",
                        "description": "Permits this member to send queries to forwarders only. When the value is \"true\", the member sends queries to forwarders only, and not to other internal or Internet root servers.",
                        "example": false
                    },
                    "forward_updates": {
                        "type": "boolean",
                        "description": "Allows secondary servers to forward updates to the DNS server. This setting overrides grid update settings.",
                        "example": false
                    },
                    "forwarders": {
                        "type": "array",
                        "description": "The forwarders for the member. A forwarder is essentially a name server to which other name servers first send all of their off-site queries. The forwarder builds up a cache of information, avoiding the need for the other name servers to send queries off-site. This setting overrides the Grid level setting.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "ftc_expired_record_timeout": {
                        "type": "integer",
                        "description": "The timeout interval (in seconds) after which the expired Fault Tolerant Caching (FTC)record is stale and no longer valid.",
                        "format": "int64",
                        "example": 1
                    },
                    "ftc_expired_record_ttl": {
                        "type": "integer",
                        "description": "The TTL value (in seconds) of the expired Fault Tolerant Caching (FTC) record in DNS responses.",
                        "format": "int64",
                        "example": 1
                    },
                    "glue_record_addresses": {
                        "type": "array",
                        "description": "The list of glue record addresses.",
                        "enum": [
                            "member:dnsgluerecordaddr"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberDnsGlueRecordAddresses"
                        }
                    },
                    "gss_tsig_keys": {
                        "type": "array",
                        "description": "The list of GSS-TSIG keys for a member DNS object.",
                        "enum": [
                            "kerberoskey"
                        ],
                        "items": {
                            "type": "string",
                            "enum": [
                                "kerberoskey"
                            ]
                        }
                    },
                    "host_name": {
                        "type": "string",
                        "description": "The host name of the Grid member.",
                        "readOnly": true,
                        "example": "Example host_name"
                    },
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid member.",
                        "readOnly": true,
                        "example": "Example ipv4addr"
                    },
                    "ipv6_glue_record_addresses": {
                        "type": "array",
                        "description": "The list of IPv6 glue record addresses.",
                        "enum": [
                            "member:dnsgluerecordaddr"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberDnsIpv6GlueRecordAddresses"
                        }
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid member.",
                        "readOnly": true,
                        "example": "Example ipv6addr"
                    },
                    "logging_categories": {
                        "$ref": "#/components/schemas/MemberDnsLoggingCategories"
                    },
                    "max_cache_ttl": {
                        "type": "integer",
                        "description": "The maximum time (in seconds) for which the server will cache positive answers.",
                        "format": "int64",
                        "example": 1
                    },
                    "max_cached_lifetime": {
                        "type": "integer",
                        "description": "The maximum time in seconds a DNS response can be stored in the hardware acceleration cache. Valid values are unsigned integer between 60 and 86400, inclusive.",
                        "format": "int64",
                        "example": 1
                    },
                    "max_ncache_ttl": {
                        "type": "integer",
                        "description": "The maximum time (in seconds) for which the server will cache negative (NXDOMAIN) responses. The maximum allowed value is 604800.",
                        "format": "int64",
                        "example": 1
                    },
                    "max_udp_size": {
                        "type": "integer",
                        "description": "The value is used by authoritative DNS servers to never send DNS responses larger than the configured value. The value should be between 512 and 4096 bytes. The recommended value is between 512 and 1220 bytes.",
                        "format": "int64",
                        "example": 1
                    },
                    "minimal_resp": {
                        "type": "boolean",
                        "description": "Enables the ability to return a minimal amount of data in response to a query. This capability speeds up the DNS services provided by the appliance.",
                        "example": false
                    },
                    "notify_delay": {
                        "type": "integer",
                        "description": "Specifies the number of seconds of delay the notify messages are sent to secondaries.",
                        "format": "int64",
                        "example": 1
                    },
                    "notify_source_port": {
                        "type": "integer",
                        "description": "The source port for notify messages. When requesting zone transfers from the primary server, some secondary DNS servers use the source port number (the primary server used to send the notify message) as the destination port number in the zone transfer request. This setting overrides Grid static source port settings. Valid values are between 1 and 63999. The default is selected by BIND.",
                        "format": "int64",
                        "example": 1
                    },
                    "nxdomain_log_query": {
                        "type": "boolean",
                        "description": "Determines if NXDOMAIN redirection queries are logged or not.",
                        "example": false
                    },
                    "nxdomain_redirect": {
                        "type": "boolean",
                        "description": "Enables NXDOMAIN redirection.",
                        "example": false
                    },
                    "nxdomain_redirect_addresses": {
                        "type": "array",
                        "description": "The IPv4 NXDOMAIN redirection addresses.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "nxdomain_redirect_addresses_v6": {
                        "type": "array",
                        "description": "The IPv6 NXDOMAIN redirection addresses.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "nxdomain_redirect_ttl": {
                        "type": "integer",
                        "description": "The TTL value of synthetic DNS responses that result from NXDOMAIN redirection.",
                        "format": "int64",
                        "example": 1
                    },
                    "nxdomain_rulesets": {
                        "type": "array",
                        "description": "The names of the Ruleset objects assigned at the Grid level for NXDOMAIN redirection.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "query_source_port": {
                        "type": "integer",
                        "description": "The source port for queries. Specifying a source port number for recursive queries ensures that a firewall will allow the response. Valid values are between 1 and 63999. The default is selected by BIND.",
                        "format": "int64",
                        "example": 1
                    },
                    "record_name_policy": {
                        "type": "string",
                        "description": "The record name restriction policy.",
                        "example": "Example record_name_policy"
                    },
                    "recursive_client_limit": {
                        "type": "integer",
                        "description": "A limit on the number of concurrent recursive clients.",
                        "format": "int64",
                        "example": 1
                    },
                    "recursive_query_list": {
                        "type": "array",
                        "description": "The list of IPv4 or IPv6 addresses, networks or hosts authenticated by Transaction signature (TSIG) key from which recursive queries are allowed or denied.",
                        "enum": [
                            "addressac"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberDnsRecursiveQueryList"
                        }
                    },
                    "recursive_resolver": {
                        "type": "string",
                        "description": "The recursive resolver for member DNS. UNBOUND support has been deprecated from NIOS 9.0 onwards.",
                        "enum": [
                            "BIND"
                        ],
                        "example": "Example recursive_resolver"
                    },
                    "resolver_query_timeout": {
                        "type": "integer",
                        "description": "The recursive query timeout for the member. The value must be 0 or between 10 and 30.",
                        "format": "int64",
                        "example": 1
                    },
                    "response_rate_limiting": {
                        "$ref": "#/components/schemas/MemberDnsResponseRateLimiting"
                    },
                    "root_name_server_type": {
                        "type": "string",
                        "description": "Determines the type of root name servers.",
                        "enum": [
                            "CUSTOM",
                            "INTERNET"
                        ],
                        "example": "Example root_name_server_type"
                    },
                    "rpz_disable_nsdname_nsip": {
                        "type": "boolean",
                        "description": "Enables NSDNAME and NSIP resource records from RPZ feeds at member level.",
                        "example": false
                    },
                    "rpz_drop_ip_rule_enabled": {
                        "type": "boolean",
                        "description": "Enables the appliance to ignore RPZ-IP triggers with prefix lengths less than the specified minimum prefix length.",
                        "example": false
                    },
                    "rpz_drop_ip_rule_min_prefix_length_ipv4": {
                        "type": "integer",
                        "description": "The minimum prefix length for IPv4 RPZ-IP triggers. The appliance ignores RPZ-IP triggers with prefix lengths less than the specified minimum IPv4 prefix length.",
                        "format": "int64",
                        "example": 1
                    },
                    "rpz_drop_ip_rule_min_prefix_length_ipv6": {
                        "type": "integer",
                        "description": "The minimum prefix length for IPv6 RPZ-IP triggers. The appliance ignores RPZ-IP triggers with prefix lengths less than the specified minimum IPv6 prefix length.",
                        "format": "int64",
                        "example": 1
                    },
                    "rpz_qname_wait_recurse": {
                        "type": "boolean",
                        "description": "The flag that indicates whether recursive RPZ lookups are enabled.",
                        "example": false
                    },
                    "serial_query_rate": {
                        "type": "integer",
                        "description": "The number of maximum concurrent SOA queries per second for the member.",
                        "format": "int64",
                        "example": 1
                    },
                    "server_id_directive": {
                        "type": "string",
                        "description": "The value of the server-id directive for BIND and Unbound DNS.",
                        "enum": [
                            "NONE",
                            "HOSTNAME",
                            "USER_DEFINED"
                        ],
                        "example": "Example server_id_directive"
                    },
                    "server_id_directive_string": {
                        "type": "string",
                        "description": "The value of the user-defined hostname directive for BIND DNS. To enable user-defined hostname directive, you must set the bind_hostname_directive to \"USER_DEFINED\".",
                        "example": "Example server_id_directive_string"
                    },
                    "skip_in_grid_rpz_queries": {
                        "type": "boolean",
                        "description": "Determines if RPZ rules are applied to queries originated from this member and received by other Grid members.",
                        "example": false
                    },
                    "sortlist": {
                        "type": "array",
                        "description": "A sort list determines the order of addresses in responses made to DNS queries. This setting overrides Grid sort list settings.",
                        "enum": [
                            "sortlist"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberDnsSortlist"
                        }
                    },
                    "store_locally": {
                        "type": "boolean",
                        "description": "The flag that indicates whether the storage of query capture reports on the appliance is enabled or disabled.",
                        "example": false
                    },
                    "syslog_facility": {
                        "type": "string",
                        "description": "The syslog facility. This is the location on the syslog server to which you want to sort the DNS logging messages. This setting overrides the Grid logging facility settings.",
                        "enum": [
                            "DAEMON",
                            "LOCAL0",
                            "LOCAL1",
                            "LOCAL2",
                            "LOCAL3",
                            "LOCAL4",
                            "LOCAL5",
                            "LOCAL6",
                            "LOCAL7"
                        ],
                        "example": "Example syslog_facility"
                    },
                    "tcp_idle_timeout": {
                        "type": "integer",
                        "description": "TCP Idle timeout for DNS over TLS connections.",
                        "format": "int64",
                        "example": 1
                    },
                    "tls_session_duration": {
                        "type": "integer",
                        "description": "DNS over TLS sessions duration.",
                        "format": "int64",
                        "example": 1
                    },
                    "transfer_excluded_servers": {
                        "type": "array",
                        "description": "Excludes specified DNS servers during zone transfers.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "transfer_format": {
                        "type": "string",
                        "description": "The BIND format for a zone transfer. This provides tracking capabilities for single or multiple transfers and their associated servers.",
                        "enum": [
                            "MANY_ANSWERS",
                            "ONE_ANSWER"
                        ],
                        "example": "Example transfer_format"
                    },
                    "transfers_in": {
                        "type": "integer",
                        "description": "The number of maximum concurrent transfers for the member.",
                        "format": "int64",
                        "example": 1
                    },
                    "transfers_out": {
                        "type": "integer",
                        "description": "The number of maximum outbound concurrent zone transfers for the member.",
                        "format": "int64",
                        "example": 1
                    },
                    "transfers_per_ns": {
                        "type": "integer",
                        "description": "The number of maximum concurrent transfers per member for the member.",
                        "format": "int64",
                        "example": 1
                    },
                    "upstream_address_family_preference": {
                        "type": "string",
                        "description": "Upstream address family preference when dual mode is configured.",
                        "enum": [
                            "IPV4",
                            "IPV6",
                            "ANY"
                        ],
                        "example": "Example upstream_address_family_preference"
                    },
                    "use_add_client_ip_mac_options": {
                        "type": "boolean",
                        "description": "Use flag for: add_client_ip_mac_options",
                        "example": false
                    },
                    "use_allow_query": {
                        "type": "boolean",
                        "description": "Use flag for: allow_query",
                        "example": false
                    },
                    "use_allow_transfer": {
                        "type": "boolean",
                        "description": "Use flag for: allow_transfer",
                        "example": false
                    },
                    "use_attack_mitigation": {
                        "type": "boolean",
                        "description": "Use flag for: attack_mitigation",
                        "example": false
                    },
                    "use_auto_blackhole": {
                        "type": "boolean",
                        "description": "Use flag for: auto_blackhole",
                        "example": false
                    },
                    "use_bind_hostname_directive": {
                        "type": "boolean",
                        "description": "Use flag for: bind_hostname_directive",
                        "example": false
                    },
                    "use_blackhole": {
                        "type": "boolean",
                        "description": "Use flag for: enable_blackhole",
                        "example": false
                    },
                    "use_blacklist": {
                        "type": "boolean",
                        "description": "Use flag for: blackhole_list , blacklist_action, blacklist_log_query, blacklist_redirect_addresses, blacklist_redirect_ttl, blacklist_rulesets, enable_blacklist",
                        "example": false
                    },
                    "use_capture_dns_queries_on_all_domains": {
                        "type": "boolean",
                        "description": "Use flag for: capture_dns_queries_on_all_domains",
                        "example": false
                    },
                    "use_copy_client_ip_mac_options": {
                        "type": "boolean",
                        "description": "Use flag for: copy_client_ip_mac_options",
                        "example": false
                    },
                    "use_copy_xfer_to_notify": {
                        "type": "boolean",
                        "description": "Use flag for: copy_xfer_to_notify",
                        "example": false
                    },
                    "use_disable_edns": {
                        "type": "boolean",
                        "description": "Use flag for: disable_edns",
                        "example": false
                    },
                    "use_dns64": {
                        "type": "boolean",
                        "description": "Use flag for: enable_dns64 , dns64_groups",
                        "example": false
                    },
                    "use_dns_cache_acceleration_ttl": {
                        "type": "boolean",
                        "description": "Use flag for: dns_cache_acceleration_ttl",
                        "example": false
                    },
                    "use_dns_health_check": {
                        "type": "boolean",
                        "description": "Use flag for: dns_health_check_domain_list , dns_health_check_recursion_flag, dns_health_check_anycast_control, enable_dns_health_check, dns_health_check_interval, dns_health_check_timeout, dns_health_check_retries",
                        "example": false
                    },
                    "use_dnssec": {
                        "type": "boolean",
                        "description": "Use flag for: dnssec_enabled , dnssec_expired_signatures_enabled, dnssec_validation_enabled, dnssec_trusted_keys",
                        "example": false
                    },
                    "use_dnstap_setting": {
                        "type": "boolean",
                        "description": "Use flag for: enable_dnstap_queries , enable_dnstap_responses, enable_dnstap_violations_tls, dnstap_setting",
                        "example": false
                    },
                    "use_dtc_dns_queries_specific_behavior": {
                        "type": "boolean",
                        "description": "Use flag for: dtc_dns_queries_specific_behavior",
                        "example": false
                    },
                    "use_dtc_edns_prefer_client_subnet": {
                        "type": "boolean",
                        "description": "Use flag for: dtc_edns_prefer_client_subnet",
                        "example": false
                    },
                    "use_edns_udp_size": {
                        "type": "boolean",
                        "description": "Use flag for: edns_udp_size",
                        "example": false
                    },
                    "use_enable_capture_dns": {
                        "type": "boolean",
                        "description": "Use flag for: enable_capture_dns_queries , enable_capture_dns_responses",
                        "example": false
                    },
                    "use_enable_excluded_domain_names": {
                        "type": "boolean",
                        "description": "Use flag for: enable_excluded_domain_names",
                        "example": false
                    },
                    "use_enable_gss_tsig": {
                        "type": "boolean",
                        "description": "Use flag for: enable_gss_tsig",
                        "example": false
                    },
                    "use_enable_query_rewrite": {
                        "type": "boolean",
                        "description": "Use flag for: enable_query_rewrite",
                        "example": false
                    },
                    "use_filter_aaaa": {
                        "type": "boolean",
                        "description": "Use flag for: filter_aaaa , filter_aaaa_list",
                        "example": false
                    },
                    "use_fixed_rrset_order_fqdns": {
                        "type": "boolean",
                        "description": "Use flag for: fixed_rrset_order_fqdns , enable_fixed_rrset_order_fqdns",
                        "example": false
                    },
                    "use_forward_updates": {
                        "type": "boolean",
                        "description": "Use flag for: forward_updates",
                        "example": false
                    },
                    "use_forwarders": {
                        "type": "boolean",
                        "description": "Use flag for: forwarders , forward_only",
                        "example": false
                    },
                    "use_ftc": {
                        "type": "boolean",
                        "description": "Use flag for: enable_ftc , ftc_expired_record_ttl, ftc_expired_record_timeout",
                        "example": false
                    },
                    "use_gss_tsig_keys": {
                        "type": "boolean",
                        "description": "Use flag for: gss_tsig_keys",
                        "example": false
                    },
                    "use_lan2_ipv6_port": {
                        "type": "boolean",
                        "description": "Determines if the DNS service on the IPv6 LAN2 port is enabled or not.",
                        "example": false
                    },
                    "use_lan2_port": {
                        "type": "boolean",
                        "description": "Determines if the DNS service on the LAN2 port is enabled or not.",
                        "example": false
                    },
                    "use_lan_ipv6_port": {
                        "type": "boolean",
                        "description": "Determines if the DNS service on the IPv6 LAN port is enabled or not.",
                        "example": false
                    },
                    "use_lan_port": {
                        "type": "boolean",
                        "description": "Determines the status of the use of DNS services on the IPv4 LAN1 port.",
                        "example": false
                    },
                    "use_logging_categories": {
                        "type": "boolean",
                        "description": "Use flag for: logging_categories",
                        "example": false
                    },
                    "use_max_cache_ttl": {
                        "type": "boolean",
                        "description": "Use flag for: max_cache_ttl",
                        "example": false
                    },
                    "use_max_cached_lifetime": {
                        "type": "boolean",
                        "description": "Use flag for: max_cached_lifetime",
                        "example": false
                    },
                    "use_max_ncache_ttl": {
                        "type": "boolean",
                        "description": "Use flag for: max_ncache_ttl",
                        "example": false
                    },
                    "use_max_udp_size": {
                        "type": "boolean",
                        "description": "Use flag for: max_udp_size",
                        "example": false
                    },
                    "use_mgmt_ipv6_port": {
                        "type": "boolean",
                        "description": "Determines if the DNS services on the IPv6 MGMT port is enabled or not.",
                        "example": false
                    },
                    "use_mgmt_port": {
                        "type": "boolean",
                        "description": "Determines if the DNS services on the MGMT port is enabled or not.",
                        "example": false
                    },
                    "use_notify_delay": {
                        "type": "boolean",
                        "description": "Use flag for: notify_delay",
                        "example": false
                    },
                    "use_nxdomain_redirect": {
                        "type": "boolean",
                        "description": "Use flag for: nxdomain_redirect , nxdomain_redirect_addresses, nxdomain_redirect_addresses_v6, nxdomain_redirect_ttl, nxdomain_log_query, nxdomain_rulesets",
                        "example": false
                    },
                    "use_record_name_policy": {
                        "type": "boolean",
                        "description": "Use flag for: record_name_policy",
                        "example": false
                    },
                    "use_recursive_client_limit": {
                        "type": "boolean",
                        "description": "Use flag for: recursive_client_limit",
                        "example": false
                    },
                    "use_recursive_query_setting": {
                        "type": "boolean",
                        "description": "Use flag for: allow_recursive_query , recursive_query_list",
                        "example": false
                    },
                    "use_resolver_query_timeout": {
                        "type": "boolean",
                        "description": "Use flag for: resolver_query_timeout",
                        "example": false
                    },
                    "use_response_rate_limiting": {
                        "type": "boolean",
                        "description": "Use flag for: response_rate_limiting",
                        "example": false
                    },
                    "use_root_name_server": {
                        "type": "boolean",
                        "description": "Use flag for: root_name_server_type , custom_root_name_servers, use_root_server_for_all_views",
                        "example": false
                    },
                    "use_root_server_for_all_views": {
                        "type": "boolean",
                        "description": "Determines if root name servers should be applied to all views or only to Default view.",
                        "example": false
                    },
                    "use_rpz_disable_nsdname_nsip": {
                        "type": "boolean",
                        "description": "Use flag for: rpz_disable_nsdname_nsip",
                        "example": false
                    },
                    "use_rpz_drop_ip_rule": {
                        "type": "boolean",
                        "description": "Use flag for: rpz_drop_ip_rule_enabled , rpz_drop_ip_rule_min_prefix_length_ipv4, rpz_drop_ip_rule_min_prefix_length_ipv6",
                        "example": false
                    },
                    "use_rpz_qname_wait_recurse": {
                        "type": "boolean",
                        "description": "Use flag for: rpz_qname_wait_recurse",
                        "example": false
                    },
                    "use_serial_query_rate": {
                        "type": "boolean",
                        "description": "Use flag for: serial_query_rate",
                        "example": false
                    },
                    "use_server_id_directive": {
                        "type": "boolean",
                        "description": "Use flag for: server_id_directive",
                        "example": false
                    },
                    "use_sortlist": {
                        "type": "boolean",
                        "description": "Use flag for: sortlist",
                        "example": false
                    },
                    "use_source_ports": {
                        "type": "boolean",
                        "description": "Use flag for: enable_notify_source_port , notify_source_port, enable_query_source_port, query_source_port",
                        "example": false
                    },
                    "use_syslog_facility": {
                        "type": "boolean",
                        "description": "Use flag for: syslog_facility",
                        "example": false
                    },
                    "use_transfers_in": {
                        "type": "boolean",
                        "description": "Use flag for: transfers_in",
                        "example": false
                    },
                    "use_transfers_out": {
                        "type": "boolean",
                        "description": "Use flag for: transfers_out",
                        "example": false
                    },
                    "use_transfers_per_ns": {
                        "type": "boolean",
                        "description": "Use flag for: transfers_per_ns",
                        "example": false
                    },
                    "use_update_setting": {
                        "type": "boolean",
                        "description": "Use flag for: allow_update , allow_gss_tsig_zone_updates",
                        "example": false
                    },
                    "use_zone_transfer_format": {
                        "type": "boolean",
                        "description": "Use flag for: transfer_excluded_servers , transfer_format",
                        "example": false
                    },
                    "views": {
                        "type": "array",
                        "description": "The list of views associated with this member.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "MemberDnsAdditionalIpListStruct": {
                "type": "object",
                "properties": {
                    "ip_address": {
                        "type": "string",
                        "description": "The additional IP address of the member.",
                        "example": "Example ip_address"
                    }
                }
            },
            "MemberDnsAllowQuery": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address this rule applies to or \"Any\".",
                        "example": "Example address"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to use for this address.",
                        "enum": [
                            "ALLOW",
                            "DENY"
                        ],
                        "example": "Example permission"
                    },
                    "tsig_key": {
                        "type": "string",
                        "description": "A generated TSIG key. If the external primary server is a NIOS appliance running DNS One 2.x code, this can be set to :2xCOMPAT.",
                        "example": "Example tsig_key"
                    },
                    "tsig_key_alg": {
                        "type": "string",
                        "description": "The TSIG key algorithm.",
                        "enum": [
                            "HMAC-MD5",
                            "HMAC-SHA256"
                        ],
                        "example": "Example tsig_key_alg"
                    },
                    "tsig_key_name": {
                        "type": "string",
                        "description": "The name of the TSIG key. If 2.x TSIG compatibility is used, this is set to 'tsig_xfer' on retrieval, and ignored on insert or update.",
                        "example": "Example tsig_key_name"
                    },
                    "use_tsig_key_name": {
                        "type": "boolean",
                        "description": "Use flag for: tsig_key_name",
                        "example": false
                    }
                }
            },
            "MemberDnsAllowTransfer": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address this rule applies to or \"Any\".",
                        "example": "Example address"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to use for this address.",
                        "enum": [
                            "ALLOW",
                            "DENY"
                        ],
                        "example": "Example permission"
                    },
                    "tsig_key": {
                        "type": "string",
                        "description": "A generated TSIG key. If the external primary server is a NIOS appliance running DNS One 2.x code, this can be set to :2xCOMPAT.",
                        "example": "Example tsig_key"
                    },
                    "tsig_key_alg": {
                        "type": "string",
                        "description": "The TSIG key algorithm.",
                        "enum": [
                            "HMAC-MD5",
                            "HMAC-SHA256"
                        ],
                        "example": "Example tsig_key_alg"
                    },
                    "tsig_key_name": {
                        "type": "string",
                        "description": "The name of the TSIG key. If 2.x TSIG compatibility is used, this is set to 'tsig_xfer' on retrieval, and ignored on insert or update.",
                        "example": "Example tsig_key_name"
                    },
                    "use_tsig_key_name": {
                        "type": "boolean",
                        "description": "Use flag for: tsig_key_name",
                        "example": false
                    }
                }
            },
            "MemberDnsAllowUpdate": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address this rule applies to or \"Any\".",
                        "example": "Example address"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to use for this address.",
                        "enum": [
                            "ALLOW",
                            "DENY"
                        ],
                        "example": "Example permission"
                    },
                    "tsig_key": {
                        "type": "string",
                        "description": "A generated TSIG key. If the external primary server is a NIOS appliance running DNS One 2.x code, this can be set to :2xCOMPAT.",
                        "example": "Example tsig_key"
                    },
                    "tsig_key_alg": {
                        "type": "string",
                        "description": "The TSIG key algorithm.",
                        "enum": [
                            "HMAC-MD5",
                            "HMAC-SHA256"
                        ],
                        "example": "Example tsig_key_alg"
                    },
                    "tsig_key_name": {
                        "type": "string",
                        "description": "The name of the TSIG key. If 2.x TSIG compatibility is used, this is set to 'tsig_xfer' on retrieval, and ignored on insert or update.",
                        "example": "Example tsig_key_name"
                    },
                    "use_tsig_key_name": {
                        "type": "boolean",
                        "description": "Use flag for: tsig_key_name",
                        "example": false
                    }
                }
            },
            "MemberDnsAttackMitigation": {
                "type": "object",
                "properties": {
                    "detect_chr": {
                        "description": "Configuration for detecting changes for the Cache Hit Ratio (CHR) of recursive queries.",
                        "enum": [
                            "grid:attackdetect"
                        ],
                        "$ref": "#/components/schemas/MemberdnsattackmitigationDetectChr"
                    },
                    "detect_chr_grace": {
                        "type": "integer",
                        "description": "The cache utilization (in percentage) when Cache Hit Ratio (CHR) starts.",
                        "format": "int64",
                        "example": 1
                    },
                    "detect_nxdomain_responses": {
                        "description": "Configuration for detecting NXDOMAIN responses from up-stream servers to all incoming recursive responses.",
                        "enum": [
                            "grid:attackdetect"
                        ],
                        "$ref": "#/components/schemas/MemberdnsattackmitigationDetectNxdomainResponses"
                    },
                    "detect_udp_drop": {
                        "description": "Configuration for detecting the UDP packet drop rate.",
                        "enum": [
                            "grid:attackdetect"
                        ],
                        "$ref": "#/components/schemas/MemberdnsattackmitigationDetectUdpDrop"
                    },
                    "interval": {
                        "type": "integer",
                        "description": "The minimum time interval (in seconds) between changes in attack status.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "MemberdnsattackmitigationDetectChr": {
                "type": "object",
                "properties": {
                    "enable": {
                        "type": "boolean",
                        "description": "Determines if DNS attack detection is enabled or not.",
                        "example": false
                    },
                    "high": {
                        "type": "integer",
                        "description": "The high threshold value (in percentage) for starting DNS attack detection.",
                        "format": "int64",
                        "example": 1
                    },
                    "interval_max": {
                        "type": "integer",
                        "description": "The maximum number of events that have occurred before processing DNS attack detection.",
                        "format": "int64",
                        "example": 1
                    },
                    "interval_min": {
                        "type": "integer",
                        "description": "The minimum number of events that have occurred before processing DNS attack detection.",
                        "format": "int64",
                        "example": 1
                    },
                    "interval_time": {
                        "type": "integer",
                        "description": "The time interval between detection processing.",
                        "format": "int64",
                        "example": 1
                    },
                    "low": {
                        "type": "integer",
                        "description": "The low threshold value (in percentage) for starting DNS attack detection.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "MemberdnsattackmitigationDetectNxdomainResponses": {
                "type": "object",
                "properties": {
                    "enable": {
                        "type": "boolean",
                        "description": "Determines if DNS attack detection is enabled or not.",
                        "example": false
                    },
                    "high": {
                        "type": "integer",
                        "description": "The high threshold value (in percentage) for starting DNS attack detection.",
                        "format": "int64",
                        "example": 1
                    },
                    "interval_max": {
                        "type": "integer",
                        "description": "The maximum number of events that have occurred before processing DNS attack detection.",
                        "format": "int64",
                        "example": 1
                    },
                    "interval_min": {
                        "type": "integer",
                        "description": "The minimum number of events that have occurred before processing DNS attack detection.",
                        "format": "int64",
                        "example": 1
                    },
                    "interval_time": {
                        "type": "integer",
                        "description": "The time interval between detection processing.",
                        "format": "int64",
                        "example": 1
                    },
                    "low": {
                        "type": "integer",
                        "description": "The low threshold value (in percentage) for starting DNS attack detection.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "MemberdnsattackmitigationDetectUdpDrop": {
                "type": "object",
                "properties": {
                    "enable": {
                        "type": "boolean",
                        "description": "Determines if DNS attack detection is enabled or not.",
                        "example": false
                    },
                    "high": {
                        "type": "integer",
                        "description": "The high threshold value (in percentage) for starting DNS attack detection.",
                        "format": "int64",
                        "example": 1
                    },
                    "interval_max": {
                        "type": "integer",
                        "description": "The maximum number of events that have occurred before processing DNS attack detection.",
                        "format": "int64",
                        "example": 1
                    },
                    "interval_min": {
                        "type": "integer",
                        "description": "The minimum number of events that have occurred before processing DNS attack detection.",
                        "format": "int64",
                        "example": 1
                    },
                    "interval_time": {
                        "type": "integer",
                        "description": "The time interval between detection processing.",
                        "format": "int64",
                        "example": 1
                    },
                    "low": {
                        "type": "integer",
                        "description": "The low threshold value (in percentage) for starting DNS attack detection.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "MemberDnsAutoBlackhole": {
                "type": "object",
                "properties": {
                    "enable_fetches_per_server": {
                        "type": "boolean",
                        "description": "Enables or disables the configuration of the maximum number of concurrent recursive queries the appliance sends to each upstream DNS server.",
                        "example": false
                    },
                    "enable_fetches_per_zone": {
                        "type": "boolean",
                        "description": "Enables or disables the configuration of the maximum number of concurrent recursive queries the appliance sends to each DNS zone.",
                        "example": false
                    },
                    "enable_holddown": {
                        "type": "boolean",
                        "description": "Enables or disables the holddown configuration when the appliance stops sending queries to non-responsive servers.",
                        "example": false
                    },
                    "fetches_per_server": {
                        "type": "integer",
                        "description": "The maximum number of concurrent recursive queries the appliance sends to a single upstream name server before blocking additional queries to that server.",
                        "format": "int64",
                        "example": 1
                    },
                    "fetches_per_zone": {
                        "type": "integer",
                        "description": "The maximum number of concurrent recursive queries that a server sends for its domains.",
                        "format": "int64",
                        "example": 1
                    },
                    "fps_freq": {
                        "type": "integer",
                        "description": "Determines how often (in number of recursive responses) the appliance recalculates the average timeout ratio for each DNS server.",
                        "format": "int64",
                        "example": 1
                    },
                    "holddown": {
                        "type": "integer",
                        "description": "The holddown duration for non-responsive servers.",
                        "format": "int64",
                        "example": 1
                    },
                    "holddown_threshold": {
                        "type": "integer",
                        "description": "The number of consecutive timeouts before holding down a non-responsive server.",
                        "format": "int64",
                        "example": 1
                    },
                    "holddown_timeout": {
                        "type": "integer",
                        "description": "The minimum time (in seconds) that needs to be passed before a timeout occurs. Note that only these timeouts are counted towards the number of consecutive timeouts.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "MemberDnsBlackholeList": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address this rule applies to or \"Any\".",
                        "example": "Example address"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to use for this address.",
                        "enum": [
                            "ALLOW",
                            "DENY"
                        ],
                        "example": "Example permission"
                    },
                    "tsig_key": {
                        "type": "string",
                        "description": "A generated TSIG key. If the external primary server is a NIOS appliance running DNS One 2.x code, this can be set to :2xCOMPAT.",
                        "example": "Example tsig_key"
                    },
                    "tsig_key_alg": {
                        "type": "string",
                        "description": "The TSIG key algorithm.",
                        "enum": [
                            "HMAC-MD5",
                            "HMAC-SHA256"
                        ],
                        "example": "Example tsig_key_alg"
                    },
                    "tsig_key_name": {
                        "type": "string",
                        "description": "The name of the TSIG key. If 2.x TSIG compatibility is used, this is set to 'tsig_xfer' on retrieval, and ignored on insert or update.",
                        "example": "Example tsig_key_name"
                    },
                    "use_tsig_key_name": {
                        "type": "boolean",
                        "description": "Use flag for: tsig_key_name",
                        "example": false
                    }
                }
            },
            "MemberDnsCustomRootNameServers": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The IPv4 Address or IPv6 Address of the server.",
                        "example": "Example address"
                    },
                    "name": {
                        "type": "string",
                        "description": "A resolvable domain name for the external DNS server.",
                        "example": "Example name"
                    },
                    "shared_with_ms_parent_delegation": {
                        "type": "boolean",
                        "description": "This flag represents whether the name server is shared with the parent Microsoft primary zone's delegation server.",
                        "readOnly": true,
                        "example": false
                    },
                    "stealth": {
                        "type": "boolean",
                        "description": "Set this flag to hide the NS record for the primary name server from DNS queries.",
                        "example": false
                    },
                    "tsig_key": {
                        "type": "string",
                        "description": "A generated TSIG key.",
                        "example": "Example tsig_key"
                    },
                    "tsig_key_alg": {
                        "type": "string",
                        "description": "The TSIG key algorithm.",
                        "enum": [
                            "HMAC-MD5",
                            "HMAC-SHA256"
                        ],
                        "example": "Example tsig_key_alg"
                    },
                    "tsig_key_name": {
                        "type": "string",
                        "description": "The TSIG key name.",
                        "example": "Example tsig_key_name"
                    },
                    "use_tsig_key_name": {
                        "type": "boolean",
                        "description": "Use flag for: tsig_key_name",
                        "example": false
                    }
                }
            },
            "MemberDnsDnsViewAddressSettings": {
                "type": "object",
                "properties": {
                    "view_name": {
                        "type": "string",
                        "description": "The reference to DNS View",
                        "example": "Example view_name"
                    },
                    "dns_notify_transfer_source": {
                        "type": "string",
                        "description": "Determines which IP address is used as the source for DDNS notify and transfer operations.",
                        "enum": [
                            "VIP",
                            "MGMT",
                            "LAN2",
                            "ANY",
                            "IP"
                        ],
                        "example": "Example dns_notify_transfer_source"
                    },
                    "dns_notify_transfer_source_address": {
                        "type": "string",
                        "description": "The source address used if dns_notify_transfer_source type is \"IP\".",
                        "example": "Example dns_notify_transfer_source_address"
                    },
                    "dns_query_source_interface": {
                        "type": "string",
                        "description": "Determines which IP address is used as the source for DDNS query operations.",
                        "enum": [
                            "VIP",
                            "MGMT",
                            "LAN2",
                            "ANY",
                            "IP"
                        ],
                        "example": "Example dns_query_source_interface"
                    },
                    "dns_query_source_address": {
                        "type": "string",
                        "description": "The source address used if dns_query_source_interface type is \"IP\".",
                        "example": "Example dns_query_source_address"
                    },
                    "enable_notify_source_port": {
                        "type": "boolean",
                        "description": "Determines if the notify source port for a view is enabled or not.",
                        "example": false
                    },
                    "notify_source_port": {
                        "type": "integer",
                        "description": "The source port for notify messages. When requesting zone transfers from the primary server, some secondary DNS servers use the source port number (the primary server used to send the notify message) as the destination port number in the zone transfer request. This setting overrides Grid static source port settings. Valid values are between 1 and 63999. The default is selected by BIND.",
                        "format": "int64",
                        "example": 1
                    },
                    "enable_query_source_port": {
                        "type": "boolean",
                        "description": "Determines if the query source port for a view is enabled or not.",
                        "example": false
                    },
                    "query_source_port": {
                        "type": "integer",
                        "description": "The source port for queries. Specifying a source port number for recursive queries ensures that a firewall will allow the response. Valid values are between 1 and 63999. The default is selected by BIND.",
                        "format": "int64",
                        "example": 1
                    },
                    "notify_delay": {
                        "type": "integer",
                        "description": "Specifies the number of seconds of delay the notify messages are sent to secondaries.",
                        "format": "int64",
                        "example": 1
                    },
                    "use_source_ports": {
                        "type": "boolean",
                        "description": "Use flag for: enable_notify_source_port , notify_source_port, enable_query_source_port, query_source_port",
                        "example": false
                    },
                    "use_notify_delay": {
                        "type": "boolean",
                        "description": "Use flag for: notify_delay",
                        "example": false
                    }
                }
            },
            "MemberDnsDnssecTrustedKeys": {
                "type": "object",
                "properties": {
                    "fqdn": {
                        "type": "string",
                        "description": "The FQDN of the domain for which the member validates responses to recursive queries.",
                        "example": "Example fqdn"
                    },
                    "algorithm": {
                        "type": "string",
                        "description": "The DNSSEC algorithm used to generate the key.",
                        "example": "Example algorithm"
                    },
                    "key": {
                        "type": "string",
                        "description": "The DNSSEC key.",
                        "example": "Example key"
                    },
                    "secure_entry_point": {
                        "type": "boolean",
                        "description": "The secure entry point flag, if set it means this is a KSK configuration.",
                        "example": false
                    },
                    "dnssec_must_be_secure": {
                        "type": "boolean",
                        "description": "Responses must be DNSSEC secure for this hierarchy/domain.",
                        "example": false
                    }
                }
            },
            "MemberDnsDnstapSetting": {
                "type": "object",
                "properties": {
                    "dnstap_receiver_address_or_fqdn": {
                        "type": "string",
                        "description": "Address or FQDN of DNSTAP receiver.",
                        "example": "Example dnstap_receiver_address_or_fqdn"
                    },
                    "dnstap_receiver_port": {
                        "type": "integer",
                        "description": "DNSTAP receiver port number.",
                        "format": "int64",
                        "example": 1
                    },
                    "dnstap_identity": {
                        "type": "string",
                        "description": "DNSTAP id string.",
                        "readOnly": true,
                        "example": "Example dnstap_identity"
                    },
                    "dnstap_version": {
                        "type": "string",
                        "description": "DNSTAP version.",
                        "readOnly": true,
                        "example": "Example dnstap_version"
                    }
                }
            },
            "MemberDnsFileTransferSetting": {
                "type": "object",
                "properties": {
                    "directory": {
                        "type": "string",
                        "description": "The directory to save the captured DNS queries and responses.",
                        "example": "Example directory"
                    },
                    "server_address_or_fqdn": {
                        "type": "string",
                        "description": "The server address or a FQDN name of the destination server for DNS capture transfer.",
                        "example": "Example server_address_or_fqdn"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password to access the destination server directory.",
                        "writeOnly": true,
                        "example": "Example password"
                    },
                    "type": {
                        "type": "string",
                        "description": "The transfer protocol for the captured DNS queries and responses.",
                        "enum": [
                            "NONE",
                            "FTP",
                            "SCP"
                        ],
                        "example": "Example type"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username to access the destination server directory.",
                        "example": "Example username"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Transfer scp port.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "MemberDnsFilterAaaaList": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address this rule applies to or \"Any\".",
                        "example": "Example address"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to use for this address.",
                        "enum": [
                            "ALLOW",
                            "DENY"
                        ],
                        "example": "Example permission"
                    }
                }
            },
            "MemberDnsFixedRrsetOrderFqdns": {
                "type": "object",
                "properties": {
                    "fqdn": {
                        "type": "string",
                        "description": "The FQDN of the fixed RRset configuration item.",
                        "example": "Example fqdn"
                    },
                    "record_type": {
                        "type": "string",
                        "description": "The record type for the specified FQDN in the fixed RRset configuration.",
                        "enum": [
                            "A",
                            "AAAA",
                            "BOTH"
                        ],
                        "example": "Example record_type"
                    }
                }
            },
            "MemberDnsGlueRecordAddresses": {
                "type": "object",
                "properties": {
                    "attach_empty_recursive_view": {
                        "type": "boolean",
                        "description": "Determines if empty view with recursion enabled will be written into the conf file.",
                        "example": false
                    },
                    "glue_record_address": {
                        "type": "string",
                        "description": "The address the appliance uses to generate the glue record.",
                        "example": "Example glue_record_address"
                    },
                    "view": {
                        "type": "string",
                        "description": "The name of the DNS View in which the record resides. Example: \"external\".",
                        "example": "Example view"
                    },
                    "glue_address_choice": {
                        "type": "string",
                        "description": "The address choice for auto-created glue records for this view.",
                        "enum": [
                            "INTERFACE",
                            "NAT",
                            "OTHER"
                        ],
                        "example": "Example glue_address_choice"
                    }
                }
            },
            "MemberDnsIpv6GlueRecordAddresses": {
                "type": "object",
                "properties": {
                    "attach_empty_recursive_view": {
                        "type": "boolean",
                        "description": "Determines if empty view with recursion enabled will be written into the conf file.",
                        "example": false
                    },
                    "glue_record_address": {
                        "type": "string",
                        "description": "The address the appliance uses to generate the glue record.",
                        "example": "Example glue_record_address"
                    },
                    "view": {
                        "type": "string",
                        "description": "The name of the DNS View in which the record resides. Example: \"external\".",
                        "example": "Example view"
                    },
                    "glue_address_choice": {
                        "type": "string",
                        "description": "The address choice for auto-created glue records for this view.",
                        "enum": [
                            "INTERFACE",
                            "NAT",
                            "OTHER"
                        ],
                        "example": "Example glue_address_choice"
                    }
                }
            },
            "MemberDnsLoggingCategories": {
                "type": "object",
                "properties": {
                    "log_dtc_gslb": {
                        "type": "boolean",
                        "description": "Determines whether the DTC GSLB activity is captured or not.",
                        "example": false
                    },
                    "log_dtc_health": {
                        "type": "boolean",
                        "description": "Determines whether the DTC health monitoring information is captured or not.",
                        "example": false
                    },
                    "log_general": {
                        "type": "boolean",
                        "description": "Determines whether the BIND messages that are not specifically classified are captured or not.",
                        "example": false
                    },
                    "log_client": {
                        "type": "boolean",
                        "description": "Determines whether the client requests are captured or not.",
                        "example": false
                    },
                    "log_config": {
                        "type": "boolean",
                        "description": "Determines whether the configuration file parsing is captured or not.",
                        "example": false
                    },
                    "log_database": {
                        "type": "boolean",
                        "description": "Determines whether the BIND's internal database processes are captured or not.",
                        "example": false
                    },
                    "log_dnssec": {
                        "type": "boolean",
                        "description": "Determines whether the DNSSEC-signed responses are captured or not.",
                        "example": false
                    },
                    "log_lame_servers": {
                        "type": "boolean",
                        "description": "Determines whether the bad delegation instances are captured or not.",
                        "example": false
                    },
                    "log_network": {
                        "type": "boolean",
                        "description": "Determines whether the network operation messages are captured or not.",
                        "example": false
                    },
                    "log_notify": {
                        "type": "boolean",
                        "description": "Determines whether the asynchronous zone change notification messages are captured or not.",
                        "example": false
                    },
                    "log_queries": {
                        "type": "boolean",
                        "description": "Determines whether the query messages are captured or not.",
                        "example": false
                    },
                    "log_query_rewrite": {
                        "type": "boolean",
                        "description": "Determines whether the query rewrite messages are captured or not.",
                        "example": false
                    },
                    "log_responses": {
                        "type": "boolean",
                        "description": "Determines whether the response messages are captured or not.",
                        "example": false
                    },
                    "log_resolver": {
                        "type": "boolean",
                        "description": "Determines whether the DNS resolution instances, including recursive queries from resolvers are captured or not.",
                        "example": false
                    },
                    "log_security": {
                        "type": "boolean",
                        "description": "Determines whether the approved and denied requests are captured or not.",
                        "example": false
                    },
                    "log_update": {
                        "type": "boolean",
                        "description": "Determines whether the dynamic update instances are captured or not.",
                        "example": false
                    },
                    "log_xfer_in": {
                        "type": "boolean",
                        "description": "Determines whether the zone transfer messages from the remote name servers to the appliance are captured or not.",
                        "example": false
                    },
                    "log_xfer_out": {
                        "type": "boolean",
                        "description": "Determines whether the zone transfer messages from the Infoblox appliance to remote name servers are captured or not.",
                        "example": false
                    },
                    "log_update_security": {
                        "type": "boolean",
                        "description": "Determines whether the security update messages are captured or not.",
                        "example": false
                    },
                    "log_rate_limit": {
                        "type": "boolean",
                        "description": "Determines whether the rate limit messages are captured or not.",
                        "example": false
                    },
                    "log_rpz": {
                        "type": "boolean",
                        "description": "Determines whether the Response Policy Zone messages are captured or not.",
                        "example": false
                    }
                }
            },
            "MemberDnsRecursiveQueryList": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address this rule applies to or \"Any\".",
                        "example": "Example address"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to use for this address.",
                        "enum": [
                            "ALLOW",
                            "DENY"
                        ],
                        "example": "Example permission"
                    }
                }
            },
            "MemberDnsResponseRateLimiting": {
                "type": "object",
                "properties": {
                    "enable_rrl": {
                        "type": "boolean",
                        "description": "Determines if the response rate limiting is enabled or not.",
                        "example": false
                    },
                    "log_only": {
                        "type": "boolean",
                        "description": "Determines if logging for response rate limiting without dropping any requests is enabled or not.",
                        "example": false
                    },
                    "responses_per_second": {
                        "type": "integer",
                        "description": "The number of responses per client per second.",
                        "format": "int64",
                        "example": 1
                    },
                    "window": {
                        "type": "integer",
                        "description": "The time interval in seconds over which responses are tracked.",
                        "format": "int64",
                        "example": 1
                    },
                    "slip": {
                        "type": "integer",
                        "description": "The response rate limiting slip. Note that if slip is not equal to 0 every n-th rate-limited UDP request is sent a truncated response instead of being dropped.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "MemberDnsSortlist": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The source address of a sortlist object.",
                        "example": "Example address"
                    },
                    "match_list": {
                        "type": "array",
                        "description": "The match list of a sortlist.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ListMemberDnsResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __MemberDns__ objects.",
                        "type": "array",
                        "title": "ListMemberDnsResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/MemberDns"
                        }
                    },
                    {
                        "description": "The response format to retrieve __MemberDns__ objects.",
                        "type": "object",
                        "title": "ListMemberDnsResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/MemberDns"
                                }
                            }
                        }
                    }
                ]
            },
            "GetMemberDnsResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MemberDns"
                    },
                    {
                        "description": "The response format to retrieve __MemberDns__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetMemberDnsResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/MemberDns"
                            }
                        }
                    }
                ]
            },
            "UpdateMemberDnsResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __MemberDns__ in object format.",
                        "type": "object",
                        "title": "UpdateMemberDnsResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/MemberDns"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __MemberDns__ .",
                        "type": "string",
                        "title": "UpdateMemberDnsResponse"
                    }
                ]
            },
            "MemberFiledistribution": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "allow_uploads": {
                        "type": "boolean",
                        "description": "Determines whether uploads to the Grid member are allowed.",
                        "example": false
                    },
                    "comment": {
                        "type": "string",
                        "description": "The Grid member descriptive comment.",
                        "readOnly": true,
                        "example": "Example comment"
                    },
                    "enable_ftp": {
                        "type": "boolean",
                        "description": "Determines whether the FTP prtocol is enabled for file distribution.",
                        "example": false
                    },
                    "enable_ftp_filelist": {
                        "type": "boolean",
                        "description": "Determines whether the LIST command for FTP is enabled.",
                        "example": false
                    },
                    "enable_ftp_passive": {
                        "type": "boolean",
                        "description": "Determines whether the passive mode for FTP is enabled.",
                        "example": false
                    },
                    "enable_http": {
                        "type": "boolean",
                        "description": "Determines whether the HTTP prtocol is enabled for file distribution.",
                        "example": false
                    },
                    "enable_http_acl": {
                        "type": "boolean",
                        "description": "Determines whether the HTTP prtocol access control (AC) settings are enabled.",
                        "example": false
                    },
                    "enable_tftp": {
                        "type": "boolean",
                        "description": "Determines whether the TFTP prtocol is enabled for file distribution.",
                        "example": false
                    },
                    "ftp_acls": {
                        "type": "array",
                        "description": "Access control (AC) settings for the FTP protocol.",
                        "enum": [
                            "addressac"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberFiledistributionFtpAcls"
                        }
                    },
                    "ftp_port": {
                        "type": "integer",
                        "description": "The network port used by the FTP protocol.",
                        "format": "int64",
                        "example": 1
                    },
                    "ftp_status": {
                        "type": "string",
                        "description": "The FTP protocol status.",
                        "enum": [
                            "UNKNOWN",
                            "INACTIVE",
                            "WORKING",
                            "WARNING",
                            "FAILED"
                        ],
                        "readOnly": true,
                        "example": "Example ftp_status"
                    },
                    "host_name": {
                        "type": "string",
                        "description": "The Grid member host name.",
                        "readOnly": true,
                        "example": "Example host_name"
                    },
                    "http_acls": {
                        "type": "array",
                        "description": "Access control (AC) settings for the HTTP protocol.",
                        "enum": [
                            "addressac"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberFiledistributionHttpAcls"
                        }
                    },
                    "http_status": {
                        "type": "string",
                        "description": "The HTTP protocol status.",
                        "enum": [
                            "UNKNOWN",
                            "INACTIVE",
                            "WORKING",
                            "WARNING",
                            "FAILED"
                        ],
                        "readOnly": true,
                        "example": "Example http_status"
                    },
                    "ipv4_address": {
                        "type": "string",
                        "description": "The IPv4 address of the Grid member.",
                        "readOnly": true,
                        "example": "Example ipv4_address"
                    },
                    "ipv6_address": {
                        "type": "string",
                        "description": "The IPv6 address of the Grid member.",
                        "readOnly": true,
                        "example": "Example ipv6_address"
                    },
                    "status": {
                        "type": "string",
                        "description": "The Grid member file distribution status.",
                        "enum": [
                            "UNKNOWN",
                            "INACTIVE",
                            "WORKING",
                            "WARNING",
                            "FAILED"
                        ],
                        "readOnly": true,
                        "example": "Example status"
                    },
                    "tftp_acls": {
                        "type": "array",
                        "description": "The access control (AC) settings for the TFTP protocol.",
                        "enum": [
                            "addressac"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberFiledistributionTftpAcls"
                        }
                    },
                    "tftp_port": {
                        "type": "integer",
                        "description": "The network port used by the TFTP protocol.",
                        "format": "int64",
                        "example": 1
                    },
                    "tftp_status": {
                        "type": "string",
                        "description": "The TFTP protocol status.",
                        "enum": [
                            "UNKNOWN",
                            "INACTIVE",
                            "WORKING",
                            "WARNING",
                            "FAILED"
                        ],
                        "readOnly": true,
                        "example": "Example tftp_status"
                    },
                    "use_allow_uploads": {
                        "type": "boolean",
                        "description": "Use flag for: allow_uploads",
                        "example": false
                    }
                }
            },
            "MemberFiledistributionFtpAcls": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address this rule applies to or \"Any\".",
                        "example": "Example address"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to use for this address.",
                        "enum": [
                            "ALLOW",
                            "DENY"
                        ],
                        "example": "Example permission"
                    }
                }
            },
            "MemberFiledistributionHttpAcls": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address this rule applies to or \"Any\".",
                        "example": "Example address"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to use for this address.",
                        "enum": [
                            "ALLOW",
                            "DENY"
                        ],
                        "example": "Example permission"
                    }
                }
            },
            "MemberFiledistributionTftpAcls": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address this rule applies to or \"Any\".",
                        "example": "Example address"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to use for this address.",
                        "enum": [
                            "ALLOW",
                            "DENY"
                        ],
                        "example": "Example permission"
                    }
                }
            },
            "ListMemberFiledistributionResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __MemberFiledistribution__ objects.",
                        "type": "array",
                        "title": "ListMemberFiledistributionResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/MemberFiledistribution"
                        }
                    },
                    {
                        "description": "The response format to retrieve __MemberFiledistribution__ objects.",
                        "type": "object",
                        "title": "ListMemberFiledistributionResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/MemberFiledistribution"
                                }
                            }
                        }
                    }
                ]
            },
            "GetMemberFiledistributionResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MemberFiledistribution"
                    },
                    {
                        "description": "The response format to retrieve __MemberFiledistribution__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetMemberFiledistributionResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/MemberFiledistribution"
                            }
                        }
                    }
                ]
            },
            "UpdateMemberFiledistributionResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __MemberFiledistribution__ in object format.",
                        "type": "object",
                        "title": "UpdateMemberFiledistributionResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/MemberFiledistribution"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __MemberFiledistribution__ .",
                        "type": "string",
                        "title": "UpdateMemberFiledistributionResponse"
                    }
                ]
            },
            "MemberLicense": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "expiration_status": {
                        "type": "string",
                        "description": "The license expiration status.",
                        "enum": [
                            "NOT_EXPIRED",
                            "EXPIRED",
                            "PERMANENT",
                            "EXPIRING_SOON",
                            "EXPIRING_VERY_SOON",
                            "DELETED"
                        ],
                        "readOnly": true,
                        "example": "Example expiration_status"
                    },
                    "expiry_date": {
                        "type": "integer",
                        "description": "The expiration timestamp of the license.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "hwid": {
                        "type": "string",
                        "description": "The hardware ID of the physical node on which the license is installed.",
                        "readOnly": true,
                        "example": "Example hwid"
                    },
                    "key": {
                        "type": "string",
                        "description": "License string.",
                        "readOnly": true,
                        "example": "Example key"
                    },
                    "kind": {
                        "type": "string",
                        "description": "The overall type of license: static or dynamic.",
                        "enum": [
                            "Static",
                            "Dynamic",
                            "Payg",
                            "Gridwide"
                        ],
                        "readOnly": true,
                        "example": "Example kind"
                    },
                    "limit": {
                        "type": "string",
                        "description": "The license limit value.",
                        "readOnly": true,
                        "example": "Example limit"
                    },
                    "limit_context": {
                        "type": "string",
                        "description": "The license limit context.",
                        "enum": [
                            "NONE",
                            "LEASES",
                            "MODEL",
                            "TIER"
                        ],
                        "readOnly": true,
                        "example": "Example limit_context"
                    },
                    "type": {
                        "type": "string",
                        "description": "The license type.",
                        "enum": [
                            "ANYCAST",
                            "CLOUD",
                            "CLOUD_API",
                            "DCA",
                            "DDI_TRIAL",
                            "DHCP",
                            "DISCOVERY",
                            "DNS",
                            "DNSQRW",
                            "DNS_CACHE_ACCEL",
                            "DTC",
                            "FIREEYE",
                            "FLEX_GRID_ACTIVATION",
                            "FLEX_GRID_ACTIVATION_MS",
                            "FREQ_CONTROL",
                            "GRID",
                            "GRID_MAINTENANCE",
                            "IPAM",
                            "IPAM_FREEWARE",
                            "LDAP",
                            "LOAD_BALANCER",
                            "MGM",
                            "MSMGMT",
                            "NIOS",
                            "NIOS_MAINTENANCE",
                            "NTP",
                            "OEM",
                            "QRD",
                            "REPORTING",
                            "REPORTING_SUB",
                            "RPZ",
                            "SECURITY_ECOSYSTEM",
                            "SW_TP",
                            "TAE",
                            "TFTP",
                            "THREAT_INSIGHT",
                            "TP",
                            "TP_SUB",
                            "VNIOS"
                        ],
                        "readOnly": true,
                        "example": "Example type"
                    }
                }
            },
            "ListMemberLicenseResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __MemberLicense__ objects.",
                        "type": "array",
                        "title": "ListMemberLicenseResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/MemberLicense"
                        }
                    },
                    {
                        "description": "The response format to retrieve __MemberLicense__ objects.",
                        "type": "object",
                        "title": "ListMemberLicenseResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/MemberLicense"
                                }
                            }
                        }
                    }
                ]
            },
            "GetMemberLicenseResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MemberLicense"
                    },
                    {
                        "description": "The response format to retrieve __MemberLicense__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetMemberLicenseResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/MemberLicense"
                            }
                        }
                    }
                ]
            },
            "UpdateMemberLicenseResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __MemberLicense__ in object format.",
                        "type": "object",
                        "title": "UpdateMemberLicenseResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/MemberLicense"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __MemberLicense__ .",
                        "type": "string",
                        "title": "UpdateMemberLicenseResponse"
                    }
                ]
            },
            "MemberThreatprotection": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "The human readable comment for member threat protection properties.",
                        "readOnly": true,
                        "example": "Example comment"
                    },
                    "current_ruleset": {
                        "type": "string",
                        "description": "The ruleset used for threat protection.",
                        "example": "Example current_ruleset"
                    },
                    "disable_multiple_dns_tcp_request": {
                        "type": "boolean",
                        "description": "Determines if multiple BIND responses via TCP connection is enabled or not.",
                        "example": false
                    },
                    "enable_accel_resp_before_threat_protection": {
                        "type": "boolean",
                        "description": "Determines if DNS responses are sent from acceleration cache before applying Threat Protection rules. Recommended for better performance when using DNS Cache Acceleration.",
                        "example": false
                    },
                    "enable_nat_rules": {
                        "type": "boolean",
                        "description": "Determines if NAT (Network Address Translation) mapping for threat protection is enabled or not.",
                        "example": false
                    },
                    "enable_service": {
                        "type": "boolean",
                        "description": "Determines if the Threat protection service is enabled or not.",
                        "example": false
                    },
                    "events_per_second_per_rule": {
                        "type": "integer",
                        "description": "The number of events logged per second per rule.",
                        "format": "int64",
                        "example": 1
                    },
                    "hardware_model": {
                        "type": "string",
                        "description": "The hardware model of the member.",
                        "readOnly": true,
                        "example": "Example hardware_model"
                    },
                    "hardware_type": {
                        "type": "string",
                        "description": "The hardware type of the member.",
                        "readOnly": true,
                        "example": "Example hardware_type"
                    },
                    "host_name": {
                        "type": "string",
                        "description": "A Grid member name.",
                        "readOnly": true,
                        "example": "Example host_name"
                    },
                    "ipv4address": {
                        "type": "string",
                        "description": "The IPv4 address of member threat protection service.",
                        "readOnly": true,
                        "example": "Example ipv4address"
                    },
                    "ipv6address": {
                        "type": "string",
                        "description": "The IPv6 address of member threat protection service.",
                        "readOnly": true,
                        "example": "Example ipv6address"
                    },
                    "nat_rules": {
                        "type": "array",
                        "description": "The list of NAT rules.",
                        "enum": [
                            "threatprotection:natrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MemberThreatprotectionNatRules"
                        }
                    },
                    "outbound_settings": {
                        "$ref": "#/components/schemas/MemberThreatprotectionOutboundSettings"
                    },
                    "profile": {
                        "type": "string",
                        "description": "The Threat Protection profile associated with the member.",
                        "example": "Example profile"
                    },
                    "use_current_ruleset": {
                        "type": "boolean",
                        "description": "Use flag for: current_ruleset",
                        "example": false
                    },
                    "use_disable_multiple_dns_tcp_request": {
                        "type": "boolean",
                        "description": "Use flag for: disable_multiple_dns_tcp_request",
                        "example": false
                    },
                    "use_enable_accel_resp_before_threat_protection": {
                        "type": "boolean",
                        "description": "Use flag for: enable_accel_resp_before_threat_protection",
                        "example": false
                    },
                    "use_enable_nat_rules": {
                        "type": "boolean",
                        "description": "Use flag for: enable_nat_rules",
                        "example": false
                    },
                    "use_events_per_second_per_rule": {
                        "type": "boolean",
                        "description": "Use flag for: events_per_second_per_rule",
                        "example": false
                    },
                    "use_outbound_settings": {
                        "type": "boolean",
                        "description": "Use flag for: outbound_settings",
                        "example": false
                    }
                }
            },
            "MemberThreatprotectionNatRules": {
                "type": "object",
                "properties": {
                    "rule_type": {
                        "type": "string",
                        "description": "The rule type for the threat protection NAT mapping rule.",
                        "enum": [
                            "RANGE",
                            "NETWORK",
                            "ADDRESS"
                        ],
                        "example": "Example rule_type"
                    },
                    "address": {
                        "type": "string",
                        "description": "The IP address for the threat protection NAT mapping rule.",
                        "example": "Example address"
                    },
                    "network": {
                        "type": "string",
                        "description": "The network address for the threat protection NAT mapping rule.",
                        "example": "Example network"
                    },
                    "cidr": {
                        "type": "integer",
                        "description": "The network CIDR for the threat protection NAT mapping rule.",
                        "format": "int64",
                        "example": 1
                    },
                    "start_address": {
                        "type": "string",
                        "description": "The start address for the range of the threat protection NAT mapping rule.",
                        "example": "Example start_address"
                    },
                    "end_address": {
                        "type": "string",
                        "description": "The end address for the range of the threat protection NAT mapping rule.",
                        "example": "Example end_address"
                    },
                    "nat_ports": {
                        "description": "The NAT port configuration for the threat protection NAT mapping rule.",
                        "enum": [
                            "threatprotection:natport"
                        ],
                        "$ref": "#/components/schemas/MemberthreatprotectionnatrulesNatPorts"
                    }
                }
            },
            "MemberthreatprotectionnatrulesNatPorts": {
                "type": "object",
                "properties": {
                    "start_port": {
                        "type": "integer",
                        "description": "The start port value for the NAT port configuration object.",
                        "format": "int64",
                        "example": 1
                    },
                    "end_port": {
                        "type": "integer",
                        "description": "The end port value for the NAT port configuration object.",
                        "format": "int64",
                        "example": 1
                    },
                    "block_size": {
                        "type": "integer",
                        "description": "The block size for the NAT Port configuration object.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "MemberThreatprotectionOutboundSettings": {
                "type": "object",
                "properties": {
                    "enable_query_fqdn": {
                        "type": "boolean",
                        "description": "Flag to enable using DNS query FQDN for Outbound.",
                        "example": false
                    },
                    "query_fqdn_limit": {
                        "type": "integer",
                        "description": "Max domain level for DNS Query FQDN",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "ListMemberThreatprotectionResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __MemberThreatprotection__ objects.",
                        "type": "array",
                        "title": "ListMemberThreatprotectionResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/MemberThreatprotection"
                        }
                    },
                    {
                        "description": "The response format to retrieve __MemberThreatprotection__ objects.",
                        "type": "object",
                        "title": "ListMemberThreatprotectionResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/MemberThreatprotection"
                                }
                            }
                        }
                    }
                ]
            },
            "GetMemberThreatprotectionResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MemberThreatprotection"
                    },
                    {
                        "description": "The response format to retrieve __MemberThreatprotection__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetMemberThreatprotectionResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/MemberThreatprotection"
                            }
                        }
                    }
                ]
            },
            "UpdateMemberThreatprotectionResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __MemberThreatprotection__ in object format.",
                        "type": "object",
                        "title": "UpdateMemberThreatprotectionResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/MemberThreatprotection"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __MemberThreatprotection__ .",
                        "type": "string",
                        "title": "UpdateMemberThreatprotectionResponse"
                    }
                ]
            },
            "MemberParentalcontrol": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "enable_service": {
                        "type": "boolean",
                        "description": "Determines if the parental control service is enabled.",
                        "example": false
                    },
                    "name": {
                        "type": "string",
                        "description": "The parental control member hostname.",
                        "readOnly": true,
                        "example": "Example name"
                    }
                }
            },
            "ListMemberParentalcontrolResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __MemberParentalcontrol__ objects.",
                        "type": "array",
                        "title": "ListMemberParentalcontrolResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/MemberParentalcontrol"
                        }
                    },
                    {
                        "description": "The response format to retrieve __MemberParentalcontrol__ objects.",
                        "type": "object",
                        "title": "ListMemberParentalcontrolResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/MemberParentalcontrol"
                                }
                            }
                        }
                    }
                ]
            },
            "GetMemberParentalcontrolResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MemberParentalcontrol"
                    },
                    {
                        "description": "The response format to retrieve __MemberParentalcontrol__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetMemberParentalcontrolResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/MemberParentalcontrol"
                            }
                        }
                    }
                ]
            },
            "UpdateMemberParentalcontrolResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __MemberParentalcontrol__ in object format.",
                        "type": "object",
                        "title": "UpdateMemberParentalcontrolResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/MemberParentalcontrol"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __MemberParentalcontrol__ .",
                        "type": "string",
                        "title": "UpdateMemberParentalcontrolResponse"
                    }
                ]
            },
            "MemberThreatinsight": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "The Grid member descriptive comment.",
                        "readOnly": true,
                        "example": "Example comment"
                    },
                    "enable_service": {
                        "type": "boolean",
                        "description": "Determines whether the threat insight service is enabled.",
                        "example": false
                    },
                    "host_name": {
                        "type": "string",
                        "description": "The Grid member host name.",
                        "readOnly": true,
                        "example": "Example host_name"
                    },
                    "ipv4_address": {
                        "type": "string",
                        "description": "The IPv4 Address address of the Grid member.",
                        "readOnly": true,
                        "example": "Example ipv4_address"
                    },
                    "ipv6_address": {
                        "type": "string",
                        "description": "The IPv6 Address address of the Grid member.",
                        "readOnly": true,
                        "example": "Example ipv6_address"
                    },
                    "status": {
                        "type": "string",
                        "description": "The Grid member threat insight status.",
                        "enum": [
                            "UNKNOWN",
                            "INACTIVE",
                            "WORKING",
                            "WARNING",
                            "FAILED"
                        ],
                        "readOnly": true,
                        "example": "Example status"
                    }
                }
            },
            "ListMemberThreatinsightResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __MemberThreatinsight__ objects.",
                        "type": "array",
                        "title": "ListMemberThreatinsightResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/MemberThreatinsight"
                        }
                    },
                    {
                        "description": "The response format to retrieve __MemberThreatinsight__ objects.",
                        "type": "object",
                        "title": "ListMemberThreatinsightResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/MemberThreatinsight"
                                }
                            }
                        }
                    }
                ]
            },
            "GetMemberThreatinsightResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MemberThreatinsight"
                    },
                    {
                        "description": "The response format to retrieve __MemberThreatinsight__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetMemberThreatinsightResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/MemberThreatinsight"
                            }
                        }
                    }
                ]
            },
            "UpdateMemberThreatinsightResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __MemberThreatinsight__ in object format.",
                        "type": "object",
                        "title": "UpdateMemberThreatinsightResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/MemberThreatinsight"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __MemberThreatinsight__ .",
                        "type": "string",
                        "title": "UpdateMemberThreatinsightResponse"
                    }
                ]
            },
            "Membercloudsync": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "cloud_sync_enabled": {
                        "type": "boolean",
                        "description": "Option to enable/disable Cloud Sync.",
                        "example": false
                    },
                    "host_name": {
                        "type": "string",
                        "description": "Host name of the parent Member",
                        "readOnly": true,
                        "example": "Example host_name"
                    }
                }
            },
            "ListMembercloudsyncResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Membercloudsync__ objects.",
                        "type": "array",
                        "title": "ListMembercloudsyncResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Membercloudsync"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Membercloudsync__ objects.",
                        "type": "object",
                        "title": "ListMembercloudsyncResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Membercloudsync"
                                }
                            }
                        }
                    }
                ]
            },
            "GetMembercloudsyncResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Membercloudsync"
                    },
                    {
                        "description": "The response format to retrieve __Membercloudsync__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetMembercloudsyncResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Membercloudsync"
                            }
                        }
                    }
                ]
            },
            "UpdateMembercloudsyncResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Membercloudsync__ in object format.",
                        "type": "object",
                        "title": "UpdateMembercloudsyncResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Membercloudsync"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Membercloudsync__ .",
                        "type": "string",
                        "title": "UpdateMembercloudsyncResponse"
                    }
                ]
            },
            "Memberdfp": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "dfp_forward_first": {
                        "type": "boolean",
                        "description": "Option to resolve DNS query if resolution over Active Trust Cloud failed.",
                        "example": false
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "host_name": {
                        "type": "string",
                        "description": "Host name of the parent Member",
                        "readOnly": true,
                        "example": "Example host_name"
                    },
                    "is_dfp_override": {
                        "type": "boolean",
                        "description": "DFP override lock'.",
                        "example": false
                    }
                }
            },
            "ListMemberdfpResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Memberdfp__ objects.",
                        "type": "array",
                        "title": "ListMemberdfpResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Memberdfp"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Memberdfp__ objects.",
                        "type": "object",
                        "title": "ListMemberdfpResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Memberdfp"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateMemberdfpResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Memberdfp__ in object format.",
                        "type": "object",
                        "title": "CreateMemberdfpResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Memberdfp"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Memberdfp__.",
                        "type": "string",
                        "title": "CreateMemberdfpResponse"
                    }
                ]
            },
            "GetMemberdfpResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Memberdfp"
                    },
                    {
                        "description": "The response format to retrieve __Memberdfp__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetMemberdfpResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Memberdfp"
                            }
                        }
                    }
                ]
            },
            "UpdateMemberdfpResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Memberdfp__ in object format.",
                        "type": "object",
                        "title": "UpdateMemberdfpResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Memberdfp"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Memberdfp__ .",
                        "type": "string",
                        "title": "UpdateMemberdfpResponse"
                    }
                ]
            },
            "Gmcgroup": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "Description of the group",
                        "example": "Example comment"
                    },
                    "gmc_promotion_policy": {
                        "type": "string",
                        "description": "This field decides whether the members join back at the same time or sequentially with time gap of 30 seconds.",
                        "enum": [
                            "SIMULTANEOUSLY",
                            "SEQUENTIALLY"
                        ],
                        "example": "Example gmc_promotion_policy"
                    },
                    "members": {
                        "type": "array",
                        "description": "gmcgroup members",
                        "enum": [
                            "gmcgroup:member"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/GmcgroupMembers"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "Group name",
                        "example": "Example name"
                    },
                    "scheduled_time": {
                        "type": "integer",
                        "description": "Absolute time at which the reconnect starts",
                        "format": "int64",
                        "example": 1
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for scheduling operations.",
                        "readOnly": true,
                        "example": "Example time_zone"
                    }
                }
            },
            "GmcgroupMembers": {
                "type": "object",
                "properties": {
                    "member": {
                        "type": "string",
                        "description": "The gmcgroup member name.",
                        "example": "Example member"
                    }
                }
            },
            "ListGmcgroupResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Gmcgroup__ objects.",
                        "type": "array",
                        "title": "ListGmcgroupResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Gmcgroup"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Gmcgroup__ objects.",
                        "type": "object",
                        "title": "ListGmcgroupResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Gmcgroup"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateGmcgroupResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Gmcgroup__ in object format.",
                        "type": "object",
                        "title": "CreateGmcgroupResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Gmcgroup"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Gmcgroup__.",
                        "type": "string",
                        "title": "CreateGmcgroupResponse"
                    }
                ]
            },
            "GetGmcgroupResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Gmcgroup"
                    },
                    {
                        "description": "The response format to retrieve __Gmcgroup__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetGmcgroupResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Gmcgroup"
                            }
                        }
                    }
                ]
            },
            "UpdateGmcgroupResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Gmcgroup__ in object format.",
                        "type": "object",
                        "title": "UpdateGmcgroupResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Gmcgroup"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Gmcgroup__ .",
                        "type": "string",
                        "title": "UpdateGmcgroupResponse"
                    }
                ]
            },
            "Gmcschedule": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "activate_gmc_group_schedule": {
                        "type": "boolean",
                        "description": "Determines whether the gmc schedule is active.",
                        "example": false
                    },
                    "gmc_groups": {
                        "type": "array",
                        "description": "Object array of gmc groups",
                        "enum": [
                            "gmcgroup"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "gmcgroup"
                            ]
                        }
                    }
                }
            },
            "ListGmcscheduleResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Gmcschedule__ objects.",
                        "type": "array",
                        "title": "ListGmcscheduleResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Gmcschedule"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Gmcschedule__ objects.",
                        "type": "object",
                        "title": "ListGmcscheduleResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Gmcschedule"
                                }
                            }
                        }
                    }
                ]
            },
            "GetGmcscheduleResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Gmcschedule"
                    },
                    {
                        "description": "The response format to retrieve __Gmcschedule__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetGmcscheduleResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Gmcschedule"
                            }
                        }
                    }
                ]
            },
            "UpdateGmcscheduleResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Gmcschedule__ in object format.",
                        "type": "object",
                        "title": "UpdateGmcscheduleResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Gmcschedule"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Gmcschedule__ .",
                        "type": "string",
                        "title": "UpdateGmcscheduleResponse"
                    }
                ]
            },
            "Distributionschedule": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Determines whether the distribution schedule is active.",
                        "example": false
                    },
                    "start_time": {
                        "type": "integer",
                        "description": "The start time of the distribution.",
                        "format": "int64",
                        "example": 1
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "Time zone of the distribution start time.",
                        "readOnly": true,
                        "example": "Example time_zone"
                    },
                    "upgrade_groups": {
                        "type": "array",
                        "description": "The upgrade groups scheduling settings.",
                        "enum": [
                            "upgradegroup:schedule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/DistributionscheduleUpgradeGroups"
                        }
                    }
                }
            },
            "DistributionscheduleUpgradeGroups": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The upgrade group name.",
                        "example": "Example name"
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for scheduling operations.",
                        "readOnly": true,
                        "example": "Example time_zone"
                    },
                    "distribution_dependent_group": {
                        "type": "string",
                        "description": "The distribution dependent group name.",
                        "example": "Example distribution_dependent_group"
                    },
                    "upgrade_dependent_group": {
                        "type": "string",
                        "description": "The upgrade dependent group name.",
                        "example": "Example upgrade_dependent_group"
                    },
                    "distribution_time": {
                        "type": "integer",
                        "description": "The time of the next scheduled distribution.",
                        "format": "int64",
                        "example": 1
                    },
                    "upgrade_time": {
                        "type": "integer",
                        "description": "The time of the next scheduled upgrade.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "ListDistributionscheduleResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Distributionschedule__ objects.",
                        "type": "array",
                        "title": "ListDistributionscheduleResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Distributionschedule"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Distributionschedule__ objects.",
                        "type": "object",
                        "title": "ListDistributionscheduleResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Distributionschedule"
                                }
                            }
                        }
                    }
                ]
            },
            "GetDistributionscheduleResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Distributionschedule"
                    },
                    {
                        "description": "The response format to retrieve __Distributionschedule__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDistributionscheduleResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Distributionschedule"
                            }
                        }
                    }
                ]
            },
            "UpdateDistributionscheduleResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Distributionschedule__ in object format.",
                        "type": "object",
                        "title": "UpdateDistributionscheduleResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Distributionschedule"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Distributionschedule__ .",
                        "type": "string",
                        "title": "UpdateDistributionscheduleResponse"
                    }
                ]
            },
            "Upgradegroup": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "The upgrade group descriptive comment.",
                        "example": "Example comment"
                    },
                    "distribution_dependent_group": {
                        "type": "string",
                        "description": "The distribution dependent group name.",
                        "example": "Example distribution_dependent_group"
                    },
                    "distribution_policy": {
                        "type": "string",
                        "description": "The distribution scheduling policy.",
                        "enum": [
                            "SIMULTANEOUSLY",
                            "SEQUENTIALLY"
                        ],
                        "example": "Example distribution_policy"
                    },
                    "distribution_time": {
                        "type": "integer",
                        "description": "The time of the next scheduled distribution.",
                        "format": "int64",
                        "example": 1
                    },
                    "members": {
                        "type": "array",
                        "description": "The upgrade group members.",
                        "enum": [
                            "upgradegroup:member"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/UpgradegroupMembers"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The upgrade group name.",
                        "example": "Example name"
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for scheduling operations.",
                        "readOnly": true,
                        "example": "Example time_zone"
                    },
                    "upgrade_dependent_group": {
                        "type": "string",
                        "description": "The upgrade dependent group name.",
                        "example": "Example upgrade_dependent_group"
                    },
                    "upgrade_policy": {
                        "type": "string",
                        "description": "The upgrade scheduling policy.",
                        "enum": [
                            "SIMULTANEOUSLY",
                            "SEQUENTIALLY"
                        ],
                        "example": "Example upgrade_policy"
                    },
                    "upgrade_time": {
                        "type": "integer",
                        "description": "The time of the next scheduled upgrade.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "UpgradegroupMembers": {
                "type": "object",
                "properties": {
                    "member": {
                        "type": "string",
                        "description": "The upgrade group member name.",
                        "example": "Example member"
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The upgrade group member time zone.",
                        "readOnly": true,
                        "example": "Example time_zone"
                    }
                }
            },
            "ListUpgradegroupResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Upgradegroup__ objects.",
                        "type": "array",
                        "title": "ListUpgradegroupResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Upgradegroup"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Upgradegroup__ objects.",
                        "type": "object",
                        "title": "ListUpgradegroupResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Upgradegroup"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateUpgradegroupResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Upgradegroup__ in object format.",
                        "type": "object",
                        "title": "CreateUpgradegroupResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Upgradegroup"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Upgradegroup__.",
                        "type": "string",
                        "title": "CreateUpgradegroupResponse"
                    }
                ]
            },
            "GetUpgradegroupResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Upgradegroup"
                    },
                    {
                        "description": "The response format to retrieve __Upgradegroup__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetUpgradegroupResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Upgradegroup"
                            }
                        }
                    }
                ]
            },
            "UpdateUpgradegroupResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Upgradegroup__ in object format.",
                        "type": "object",
                        "title": "UpdateUpgradegroupResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Upgradegroup"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Upgradegroup__ .",
                        "type": "string",
                        "title": "UpdateUpgradegroupResponse"
                    }
                ]
            },
            "Upgradeschedule": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Determines whether the upgrade schedule is active.",
                        "example": false
                    },
                    "start_time": {
                        "type": "integer",
                        "description": "The start time of the upgrade.",
                        "format": "int64",
                        "example": 1
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for upgrade start time.",
                        "readOnly": true,
                        "example": "Example time_zone"
                    },
                    "upgrade_groups": {
                        "type": "array",
                        "description": "The upgrade groups scheduling settings.",
                        "enum": [
                            "upgradegroup:schedule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/UpgradescheduleUpgradeGroups"
                        }
                    }
                }
            },
            "UpgradescheduleUpgradeGroups": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The upgrade group name.",
                        "example": "Example name"
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for scheduling operations.",
                        "readOnly": true,
                        "example": "Example time_zone"
                    },
                    "distribution_dependent_group": {
                        "type": "string",
                        "description": "The distribution dependent group name.",
                        "example": "Example distribution_dependent_group"
                    },
                    "upgrade_dependent_group": {
                        "type": "string",
                        "description": "The upgrade dependent group name.",
                        "example": "Example upgrade_dependent_group"
                    },
                    "distribution_time": {
                        "type": "integer",
                        "description": "The time of the next scheduled distribution.",
                        "format": "int64",
                        "example": 1
                    },
                    "upgrade_time": {
                        "type": "integer",
                        "description": "The time of the next scheduled upgrade.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "ListUpgradescheduleResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Upgradeschedule__ objects.",
                        "type": "array",
                        "title": "ListUpgradescheduleResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Upgradeschedule"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Upgradeschedule__ objects.",
                        "type": "object",
                        "title": "ListUpgradescheduleResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Upgradeschedule"
                                }
                            }
                        }
                    }
                ]
            },
            "GetUpgradescheduleResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Upgradeschedule"
                    },
                    {
                        "description": "The response format to retrieve __Upgradeschedule__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetUpgradescheduleResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Upgradeschedule"
                            }
                        }
                    }
                ]
            },
            "UpdateUpgradescheduleResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Upgradeschedule__ in object format.",
                        "type": "object",
                        "title": "UpdateUpgradescheduleResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Upgradeschedule"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Upgradeschedule__ .",
                        "type": "string",
                        "title": "UpdateUpgradescheduleResponse"
                    }
                ]
            },
            "Upgradestatus": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "allow_distribution": {
                        "type": "boolean",
                        "description": "Determines if distribution is allowed for the Grid.",
                        "readOnly": true,
                        "example": false
                    },
                    "allow_distribution_scheduling": {
                        "type": "boolean",
                        "description": "Determines if distribution scheduling is allowed.",
                        "readOnly": true,
                        "example": false
                    },
                    "allow_upgrade": {
                        "type": "boolean",
                        "description": "Determines if upgrade is allowed for the Grid.",
                        "readOnly": true,
                        "example": false
                    },
                    "allow_upgrade_cancel": {
                        "type": "boolean",
                        "description": "Determines if the Grid is allowed to cancel an upgrade.",
                        "readOnly": true,
                        "example": false
                    },
                    "allow_upgrade_pause": {
                        "type": "boolean",
                        "description": "Determines if the Grid is allowed to pause an upgrade.",
                        "readOnly": true,
                        "example": false
                    },
                    "allow_upgrade_resume": {
                        "type": "boolean",
                        "description": "Determines if the Grid is allowed to resume an upgrade.",
                        "readOnly": true,
                        "example": false
                    },
                    "allow_upgrade_scheduling": {
                        "type": "boolean",
                        "description": "Determine if the Grid is allowed to schedule an upgrade.",
                        "readOnly": true,
                        "example": false
                    },
                    "allow_upgrade_test": {
                        "type": "boolean",
                        "description": "Determines if the Grid is allowed to test an upgrade.",
                        "readOnly": true,
                        "example": false
                    },
                    "allow_upload": {
                        "type": "boolean",
                        "description": "Determine if the Grid is allowed to upload a build.",
                        "readOnly": true,
                        "example": false
                    },
                    "alternate_version": {
                        "type": "string",
                        "description": "The alternative version.",
                        "readOnly": true,
                        "example": "Example alternate_version"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment in readable format for an upgrade group a or virtual node.",
                        "readOnly": true,
                        "example": "Example comment"
                    },
                    "current_version": {
                        "type": "string",
                        "description": "The current version.",
                        "readOnly": true,
                        "example": "Example current_version"
                    },
                    "current_version_summary": {
                        "type": "string",
                        "description": "Current version summary for the 'type' requested. This field can be requested for the Grid, a certain group that has virtual nodes as subelements, or for the overall group status.",
                        "readOnly": true,
                        "example": "Example current_version_summary"
                    },
                    "distribution_schedule_active": {
                        "type": "boolean",
                        "description": "Determines if the distribution schedule is active for the Grid.",
                        "readOnly": true,
                        "example": false
                    },
                    "distribution_schedule_time": {
                        "type": "integer",
                        "description": "The Grid master distribution schedule time.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "distribution_state": {
                        "type": "string",
                        "description": "The current state of distribution process.",
                        "enum": [
                            "NONE",
                            "PROGRESSING",
                            "COMPLETED"
                        ],
                        "readOnly": true,
                        "example": "Example distribution_state"
                    },
                    "distribution_version": {
                        "type": "string",
                        "description": "The version that is distributed.",
                        "readOnly": true,
                        "example": "Example distribution_version"
                    },
                    "distribution_version_summary": {
                        "type": "string",
                        "description": "Distribution version summary for the 'type' requested. This field can be requested for the Grid, a certain group that has virtual nodes as subelements, or for the overall group status.",
                        "readOnly": true,
                        "example": "Example distribution_version_summary"
                    },
                    "element_status": {
                        "type": "string",
                        "description": "The status of a certain element with regards to the type requested.",
                        "enum": [
                            "FAILED",
                            "OFFLINE",
                            "WARNING",
                            "WORKING"
                        ],
                        "readOnly": true,
                        "example": "Example element_status"
                    },
                    "grid_state": {
                        "type": "string",
                        "description": "The state of the Grid.",
                        "enum": [
                            "DISTRIBUTING",
                            "DEFAULT",
                            "UPGRADING_FAILED",
                            "REVERTING_COMPLETE",
                            "DISTRIBUTING_COMPLETE",
                            "NONE",
                            "DISTRIBUTING_ENDED",
                            "DOWNGRADING_COMPLETE",
                            "UPLOADED",
                            "DISTRIBUTING_FAILED",
                            "DISTRIBUTING_PAUSED",
                            "UPGRADING_PAUSED",
                            "DOWNGRADING_FAILED",
                            "UPGRADING_COMPLETE",
                            "REVERTING",
                            "REVERTING_FAILED",
                            "UPGRADING",
                            "TEST_UPGRADING"
                        ],
                        "readOnly": true,
                        "example": "Example grid_state"
                    },
                    "group_state": {
                        "type": "string",
                        "description": "The state of a group.",
                        "enum": [
                            "GROUP_UPGRADING_COMPLETE",
                            "GROUP_DISTRIBUTING_FAILED",
                            "GROUP_UPGRADING",
                            "GROUP_DISTRIBUTING",
                            "GROUP_UPGRADING_WAITING",
                            "UPGRADE_STARTED",
                            "GROUP_NONE",
                            "GROUP_DISTRIBUTING_WAITING",
                            "GROUP_DISTRIBUTING_COMPLETE"
                        ],
                        "readOnly": true,
                        "example": "Example group_state"
                    },
                    "ha_status": {
                        "type": "string",
                        "description": "Status of the HA pair.",
                        "enum": [
                            "ACTIVE",
                            "PASSIVE",
                            "NOT_CONFIGURED"
                        ],
                        "readOnly": true,
                        "example": "Example ha_status"
                    },
                    "hotfixes": {
                        "type": "array",
                        "description": "The list of hotfixes.",
                        "enum": [
                            "hotfix"
                        ],
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/UpgradestatusHotfixes"
                        }
                    },
                    "ipv4_address": {
                        "type": "string",
                        "description": "The IPv4 Address of virtual node or physical one.",
                        "readOnly": true,
                        "example": "Example ipv4_address"
                    },
                    "ipv6_address": {
                        "type": "string",
                        "description": "The IPv6 Address of virtual node or physical one.",
                        "readOnly": true,
                        "example": "Example ipv6_address"
                    },
                    "member": {
                        "type": "string",
                        "description": "Member that participates in the upgrade process.",
                        "readOnly": true,
                        "example": "Example member"
                    },
                    "message": {
                        "type": "string",
                        "description": "The Grid message.",
                        "readOnly": true,
                        "example": "Example message"
                    },
                    "pnode_role": {
                        "type": "string",
                        "description": "Status of the physical node in the HA pair.",
                        "readOnly": true,
                        "example": "Example pnode_role"
                    },
                    "reverted": {
                        "type": "boolean",
                        "description": "Determines if the upgrade process is reverted.",
                        "readOnly": true,
                        "example": false
                    },
                    "status_time": {
                        "type": "integer",
                        "description": "The status time.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "status_value": {
                        "type": "string",
                        "description": "Status of a certain group, virtual node or physical node.",
                        "enum": [
                            "PROGRESSING",
                            "FAILURE",
                            "COMPLETED",
                            "NO_STATUS",
                            "NOT_CONNECTED"
                        ],
                        "readOnly": true,
                        "example": "Example status_value"
                    },
                    "status_value_update_time": {
                        "type": "integer",
                        "description": "Timestamp of when the status was updated.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "steps": {
                        "type": "array",
                        "description": "The list of upgrade process steps.",
                        "enum": [
                            "upgradestep"
                        ],
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/UpgradestatusSteps"
                        }
                    },
                    "steps_completed": {
                        "type": "integer",
                        "description": "The number of steps done.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "steps_total": {
                        "type": "integer",
                        "description": "Total number steps in the upgrade process.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "subelement_type": {
                        "type": "string",
                        "description": "The type of subelements to be requested. If 'type' is 'GROUP', or 'VNODE', then 'upgrade_group' or 'member' should have proper values for an operation to return data specific for the values passed. Otherwise, overall data is returned for every group or physical node.",
                        "enum": [
                            "PNODE",
                            "GROUP",
                            "VNODE"
                        ],
                        "readOnly": true,
                        "example": "Example subelement_type"
                    },
                    "subelements_completed": {
                        "type": "integer",
                        "description": "Number of subelements that have accomplished an upgrade.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "subelements_status": {
                        "type": "array",
                        "description": "The upgrade process information of subelements.",
                        "enum": [
                            "upgradestatus"
                        ],
                        "items": {
                            "type": "string",
                            "enum": [
                                "upgradestatus"
                            ]
                        }
                    },
                    "subelements_total": {
                        "type": "integer",
                        "description": "Number of subelements number in a certain group, virtual node, or the Grid.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of upper level elements to be requested.",
                        "enum": [
                            "GRID",
                            "GROUP",
                            "VNODE",
                            "PNODE"
                        ],
                        "readOnly": true,
                        "example": "Example type"
                    },
                    "upgrade_group": {
                        "type": "string",
                        "description": "Upgrade group that participates in the upgrade process.",
                        "readOnly": true,
                        "example": "Example upgrade_group"
                    },
                    "upgrade_schedule_active": {
                        "type": "boolean",
                        "description": "Determines if the upgrade schedule is active.",
                        "readOnly": true,
                        "example": false
                    },
                    "upgrade_state": {
                        "type": "string",
                        "description": "The upgrade state of the Grid.",
                        "enum": [
                            "PROGRESSING",
                            "NONE"
                        ],
                        "readOnly": true,
                        "example": "Example upgrade_state"
                    },
                    "upgrade_test_status": {
                        "type": "string",
                        "description": "The upgrade test status of the Grid.",
                        "enum": [
                            "PROGRESSING",
                            "NONE",
                            "FAILED",
                            "COMPLETED"
                        ],
                        "readOnly": true,
                        "example": "Example upgrade_test_status"
                    },
                    "upload_version": {
                        "type": "string",
                        "description": "The version that is uploaded.",
                        "readOnly": true,
                        "example": "Example upload_version"
                    },
                    "upload_version_summary": {
                        "type": "string",
                        "description": "Upload version summary for the 'type' requested. This field can be requested for the Grid, a certain group that has virtual nodes as subelements, or overall group status.",
                        "readOnly": true,
                        "example": "Example upload_version_summary"
                    }
                }
            },
            "UpgradestatusHotfixes": {
                "type": "object",
                "properties": {
                    "status_text": {
                        "type": "string",
                        "description": "The status text of the hotfix.",
                        "example": "Example status_text"
                    },
                    "unique_id": {
                        "type": "string",
                        "description": "Unique ID of the hotfix.",
                        "example": "Example unique_id"
                    }
                }
            },
            "UpgradestatusSteps": {
                "type": "object",
                "properties": {
                    "status_value": {
                        "type": "string",
                        "description": "The status value of a step.",
                        "enum": [
                            "PROGRESSING",
                            "FAILURE",
                            "COMPLETED",
                            "NO_STATUS",
                            "NOT_CONNECTED"
                        ],
                        "example": "Example status_value"
                    },
                    "status_text": {
                        "type": "string",
                        "description": "The status text that describes a step.",
                        "example": "Example status_text"
                    }
                }
            },
            "ListUpgradestatusResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Upgradestatus__ objects.",
                        "type": "array",
                        "title": "ListUpgradestatusResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Upgradestatus"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Upgradestatus__ objects.",
                        "type": "object",
                        "title": "ListUpgradestatusResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Upgradestatus"
                                }
                            }
                        }
                    }
                ]
            },
            "GetUpgradestatusResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Upgradestatus"
                    },
                    {
                        "description": "The response format to retrieve __Upgradestatus__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetUpgradestatusResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Upgradestatus"
                            }
                        }
                    }
                ]
            },
            "UpdateUpgradestatusResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Upgradestatus__ in object format.",
                        "type": "object",
                        "title": "UpdateUpgradestatusResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Upgradestatus"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Upgradestatus__ .",
                        "type": "string",
                        "title": "UpdateUpgradestatusResponse"
                    }
                ]
            },
            "LicenseGridwide": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "expiration_status": {
                        "type": "string",
                        "description": "The license expiration status.",
                        "enum": [
                            "NOT_EXPIRED",
                            "EXPIRED",
                            "PERMANENT",
                            "EXPIRING_SOON",
                            "EXPIRING_VERY_SOON",
                            "DELETED"
                        ],
                        "readOnly": true,
                        "example": "Example expiration_status"
                    },
                    "expiry_date": {
                        "type": "integer",
                        "description": "The expiration timestamp of the license.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "key": {
                        "type": "string",
                        "description": "The license string.",
                        "readOnly": true,
                        "example": "Example key"
                    },
                    "limit": {
                        "type": "string",
                        "description": "The license limit value.",
                        "readOnly": true,
                        "example": "Example limit"
                    },
                    "limit_context": {
                        "type": "string",
                        "description": "The license limit context.",
                        "enum": [
                            "NONE",
                            "LEASES",
                            "MODEL",
                            "TIER"
                        ],
                        "readOnly": true,
                        "example": "Example limit_context"
                    },
                    "type": {
                        "type": "string",
                        "description": "The license type.",
                        "enum": [
                            "ANYCAST",
                            "CLOUD",
                            "CLOUD_API",
                            "DCA",
                            "DDI_TRIAL",
                            "DHCP",
                            "DISCOVERY",
                            "DNS",
                            "DNSQRW",
                            "DNS_CACHE_ACCEL",
                            "DTC",
                            "FIREEYE",
                            "FLEX_GRID_ACTIVATION",
                            "FLEX_GRID_ACTIVATION_MS",
                            "FREQ_CONTROL",
                            "GRID",
                            "GRID_MAINTENANCE",
                            "IPAM",
                            "IPAM_FREEWARE",
                            "LDAP",
                            "LOAD_BALANCER",
                            "MGM",
                            "MSMGMT",
                            "NIOS",
                            "NIOS_MAINTENANCE",
                            "NTP",
                            "OEM",
                            "QRD",
                            "REPORTING",
                            "REPORTING_SUB",
                            "RPZ",
                            "SECURITY_ECOSYSTEM",
                            "SW_TP",
                            "TAE",
                            "TFTP",
                            "THREAT_INSIGHT",
                            "TP",
                            "TP_SUB",
                            "VNIOS"
                        ],
                        "readOnly": true,
                        "example": "Example type"
                    }
                }
            },
            "ListLicenseGridwideResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __LicenseGridwide__ objects.",
                        "type": "array",
                        "title": "ListLicenseGridwideResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/LicenseGridwide"
                        }
                    },
                    {
                        "description": "The response format to retrieve __LicenseGridwide__ objects.",
                        "type": "object",
                        "title": "ListLicenseGridwideResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/LicenseGridwide"
                                }
                            }
                        }
                    }
                ]
            },
            "GetLicenseGridwideResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/LicenseGridwide"
                    },
                    {
                        "description": "The response format to retrieve __LicenseGridwide__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetLicenseGridwideResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/LicenseGridwide"
                            }
                        }
                    }
                ]
            },
            "UpdateLicenseGridwideResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __LicenseGridwide__ in object format.",
                        "type": "object",
                        "title": "UpdateLicenseGridwideResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/LicenseGridwide"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __LicenseGridwide__ .",
                        "type": "string",
                        "title": "UpdateLicenseGridwideResponse"
                    }
                ]
            },
            "Extensibleattributedef": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "allowed_object_types": {
                        "type": "array",
                        "description": "The object types this extensible attribute is allowed to associate with.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the Extensible Attribute Definition; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "default_value": {
                        "type": "string",
                        "description": "Default value used to pre-populate the attribute value in the GUI. For email, URL, and string types, the value is a string with a maximum of 256 characters. For an integer, the value is an integer from -2147483648 through 2147483647. For a date, the value is the number of seconds that have elapsed since January 1st, 1970 UTC.",
                        "example": "Example default_value"
                    },
                    "descendants_action": {
                        "$ref": "#/components/schemas/ExtensibleattributedefDescendantsAction"
                    },
                    "flags": {
                        "type": "string",
                        "description": "This field contains extensible attribute flags. Possible values: (A)udited, (C)loud API, Cloud (G)master, (I)nheritable, (L)isted, (M)andatory value, MGM (P)rivate, (R)ead Only, (S)ort enum values, Multiple (V)alues If there are two or more flags in the field, you must list them according to the order they are listed above. For example, 'CR' is a valid value for the 'flags' field because C = Cloud API is listed before R = Read only. However, the value 'RC' is invalid because the order for the 'flags' field is broken.",
                        "example": "Example flags"
                    },
                    "list_values": {
                        "type": "array",
                        "description": "List of Values. Applicable if the extensible attribute type is ENUM.",
                        "enum": [
                            "extensibleattributedef:listvalues"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/ExtensibleattributedefListValues"
                        }
                    },
                    "max": {
                        "type": "integer",
                        "description": "Maximum allowed value of extensible attribute. Applicable if the extensible attribute type is INTEGER.",
                        "format": "int64",
                        "example": 1
                    },
                    "min": {
                        "type": "integer",
                        "description": "Minimum allowed value of extensible attribute. Applicable if the extensible attribute type is INTEGER.",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Extensible Attribute Definition.",
                        "example": "Example name"
                    },
                    "namespace": {
                        "type": "string",
                        "description": "Namespace for the Extensible Attribute Definition.",
                        "enum": [
                            "CLOUD",
                            "CLOUD_GM",
                            "MSADSITES",
                            "RIPE",
                            "default"
                        ],
                        "readOnly": true,
                        "example": "Example namespace"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type for the Extensible Attribute Definition.",
                        "enum": [
                            "STRING",
                            "INTEGER",
                            "EMAIL",
                            "DATE",
                            "ENUM",
                            "URL"
                        ],
                        "example": "Example type"
                    }
                }
            },
            "ExtensibleattributedefDescendantsAction": {
                "type": "object",
                "properties": {
                    "option_with_ea": {
                        "type": "string",
                        "description": "This option describes which action must be taken if the extensible attribute exists for both the parent and descendant objects: * INHERIT: inherit the extensible attribute from the parent object. * RETAIN: retain the value of an extensible attribute that was set for the child object. * CONVERT: the value of the extensible attribute must be copied from the parent object.",
                        "enum": [
                            "RETAIN",
                            "CONVERT",
                            "INHERIT"
                        ],
                        "example": "Example option_with_ea"
                    },
                    "option_without_ea": {
                        "type": "string",
                        "description": "This option describes which action must be taken if the extensible attribute exists for the parent, but is absent from the descendant object: * INHERIT: inherit the extensible attribute from the parent object. * NOT_INHERIT: do nothing.",
                        "enum": [
                            "INHERIT",
                            "NOT_INHERIT"
                        ],
                        "example": "Example option_without_ea"
                    },
                    "option_delete_ea": {
                        "type": "string",
                        "description": "This option describes which action must be taken if the extensible attribute exists for the descendant, but is absent for the parent object: * RETAIN: retain the extensible attribute value for the descendant object. * REMOVE: remove this extensible attribute from the descendant object.",
                        "enum": [
                            "RETAIN",
                            "REMOVE"
                        ],
                        "example": "Example option_delete_ea"
                    }
                }
            },
            "ExtensibleattributedefListValues": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "description": "Enum value",
                        "example": "Example value"
                    }
                }
            },
            "ListExtensibleattributedefResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Extensibleattributedef__ objects.",
                        "type": "array",
                        "title": "ListExtensibleattributedefResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Extensibleattributedef"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Extensibleattributedef__ objects.",
                        "type": "object",
                        "title": "ListExtensibleattributedefResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Extensibleattributedef"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateExtensibleattributedefResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Extensibleattributedef__ in object format.",
                        "type": "object",
                        "title": "CreateExtensibleattributedefResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Extensibleattributedef"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Extensibleattributedef__.",
                        "type": "string",
                        "title": "CreateExtensibleattributedefResponse"
                    }
                ]
            },
            "GetExtensibleattributedefResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Extensibleattributedef"
                    },
                    {
                        "description": "The response format to retrieve __Extensibleattributedef__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetExtensibleattributedefResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Extensibleattributedef"
                            }
                        }
                    }
                ]
            },
            "UpdateExtensibleattributedefResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Extensibleattributedef__ in object format.",
                        "type": "object",
                        "title": "UpdateExtensibleattributedefResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Extensibleattributedef"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Extensibleattributedef__ .",
                        "type": "string",
                        "title": "UpdateExtensibleattributedefResponse"
                    }
                ]
            }
        }
    }
}