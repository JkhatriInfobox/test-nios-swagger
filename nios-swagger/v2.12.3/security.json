{
    "openapi": "3.0.0",
    "info": {
        "title": "Infoblox SECURITY API",
        "description": "OpenAPI specification for Infoblox NIOS WAPI SECURITY objects",
        "version": "2.13.6",
        "termsOfService": "https://www.infoblox.com",
        "contact": {
            "name": "Infoblox",
            "url": "https://www.infoblox.com"
        },
        "license": {
            "name": "Infoblox License",
            "url": "https://www.infoblox.com"
        }
    },
    "servers": [
        {
            "url": "/wapi/v2.13.6",
            "description": "NIOS WAPI server"
        }
    ],
    "tags": [
        {
            "name": "Admingroup",
            "description": "Operations for admingroup objects"
        },
        {
            "name": "Adminrole",
            "description": "Operations for adminrole objects"
        },
        {
            "name": "Adminuser",
            "description": "Operations for adminuser objects"
        },
        {
            "name": "Permission",
            "description": "Operations for permission objects"
        },
        {
            "name": "Userprofile",
            "description": "Operations for userprofile objects"
        },
        {
            "name": "Authpolicy",
            "description": "Operations for authpolicy objects"
        },
        {
            "name": "Approvalworkflow",
            "description": "Operations for approvalworkflow objects"
        },
        {
            "name": "Cacertificate",
            "description": "Operations for cacertificate objects"
        },
        {
            "name": "CertificateAuthservice",
            "description": "Operations for certificate:authservice objects"
        },
        {
            "name": "RadiusAuthservice",
            "description": "Operations for radius:authservice objects"
        },
        {
            "name": "TacacsplusAuthservice",
            "description": "Operations for tacacsplus:authservice objects"
        },
        {
            "name": "LdapAuthService",
            "description": "Operations for ldap_auth_service objects"
        },
        {
            "name": "SamlAuthservice",
            "description": "Operations for saml:authservice objects"
        },
        {
            "name": "LocaluserAuthservice",
            "description": "Operations for localuser:authservice objects"
        },
        {
            "name": "Snmpuser",
            "description": "Operations for snmpuser objects"
        },
        {
            "name": "Ftpuser",
            "description": "Operations for ftpuser objects"
        },
        {
            "name": "Networkuser",
            "description": "Operations for networkuser objects"
        },
        {
            "name": "AdAuthService",
            "description": "Operations for ad_auth_service objects"
        },
        {
            "name": "HsmAllgroups",
            "description": "Operations for hsm:allgroups objects"
        },
        {
            "name": "HsmEntrustnshieldgroup",
            "description": "Operations for hsm:entrustnshieldgroup objects"
        },
        {
            "name": "HsmThaleslunagroup",
            "description": "Operations for hsm:thaleslunagroup objects"
        }
    ],
    "paths": {
        "/admingroup": {
            "get": {
                "tags": [
                    "Admingroup"
                ],
                "operationId": "AdmingroupList",
                "summary": "Retrieve admingroup objects",
                "description": "Returns a list of admingroup objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListAdmingroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admingroup"
                ],
                "operationId": "AdmingroupCreate",
                "summary": "Create a admingroup object",
                "description": "Creates a new admingroup object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Admingroup"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateAdmingroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_security_admingroup",
                "x-tf-datasource": "nios_security_admingroup",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/admingroup/{reference}": {
            "get": {
                "tags": [
                    "Admingroup"
                ],
                "operationId": "AdmingroupRead",
                "summary": "Get a specific admingroup object",
                "description": "Returns a specific admingroup object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the admingroup object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAdmingroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admingroup"
                ],
                "operationId": "AdmingroupUpdate",
                "summary": "Update a admingroup object",
                "description": "Updates a specific admingroup object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the admingroup object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Admingroup"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateAdmingroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Admingroup"
                ],
                "operationId": "AdmingroupDelete",
                "summary": "Delete a admingroup object",
                "description": "Deletes a specific admingroup object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the admingroup object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/adminrole": {
            "get": {
                "tags": [
                    "Adminrole"
                ],
                "operationId": "AdminroleList",
                "summary": "Retrieve adminrole objects",
                "description": "Returns a list of adminrole objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListAdminroleResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Adminrole"
                ],
                "operationId": "AdminroleCreate",
                "summary": "Create a adminrole object",
                "description": "Creates a new adminrole object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Adminrole"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateAdminroleResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_security_adminrole",
                "x-tf-datasource": "nios_security_adminrole",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/adminrole/{reference}": {
            "get": {
                "tags": [
                    "Adminrole"
                ],
                "operationId": "AdminroleRead",
                "summary": "Get a specific adminrole object",
                "description": "Returns a specific adminrole object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the adminrole object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAdminroleResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Adminrole"
                ],
                "operationId": "AdminroleUpdate",
                "summary": "Update a adminrole object",
                "description": "Updates a specific adminrole object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the adminrole object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Adminrole"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateAdminroleResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Adminrole"
                ],
                "operationId": "AdminroleDelete",
                "summary": "Delete a adminrole object",
                "description": "Deletes a specific adminrole object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the adminrole object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/adminuser": {
            "get": {
                "tags": [
                    "Adminuser"
                ],
                "operationId": "AdminuserList",
                "summary": "Retrieve adminuser objects",
                "description": "Returns a list of adminuser objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListAdminuserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Adminuser"
                ],
                "operationId": "AdminuserCreate",
                "summary": "Create a adminuser object",
                "description": "Creates a new adminuser object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Adminuser"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateAdminuserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_security_adminuser",
                "x-tf-datasource": "nios_security_adminuser",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/adminuser/{reference}": {
            "get": {
                "tags": [
                    "Adminuser"
                ],
                "operationId": "AdminuserRead",
                "summary": "Get a specific adminuser object",
                "description": "Returns a specific adminuser object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the adminuser object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAdminuserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Adminuser"
                ],
                "operationId": "AdminuserUpdate",
                "summary": "Update a adminuser object",
                "description": "Updates a specific adminuser object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the adminuser object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Adminuser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateAdminuserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Adminuser"
                ],
                "operationId": "AdminuserDelete",
                "summary": "Delete a adminuser object",
                "description": "Deletes a specific adminuser object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the adminuser object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/permission": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "operationId": "PermissionList",
                "summary": "Retrieve permission objects",
                "description": "Returns a list of permission objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListPermissionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Permission"
                ],
                "operationId": "PermissionCreate",
                "summary": "Create a permission object",
                "description": "Creates a new permission object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Permission"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePermissionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_security_permission",
                "x-tf-datasource": "nios_security_permission"
            }
        },
        "/permission/{reference}": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "operationId": "PermissionRead",
                "summary": "Get a specific permission object",
                "description": "Returns a specific permission object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the permission object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPermissionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Permission"
                ],
                "operationId": "PermissionUpdate",
                "summary": "Update a permission object",
                "description": "Updates a specific permission object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the permission object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Permission"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdatePermissionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Permission"
                ],
                "operationId": "PermissionDelete",
                "summary": "Delete a permission object",
                "description": "Deletes a specific permission object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the permission object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/userprofile": {
            "get": {
                "tags": [
                    "Userprofile"
                ],
                "operationId": "UserprofileList",
                "summary": "Retrieve userprofile objects",
                "description": "Returns a list of userprofile objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListUserprofileResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/userprofile/{reference}": {
            "get": {
                "tags": [
                    "Userprofile"
                ],
                "operationId": "UserprofileRead",
                "summary": "Get a specific userprofile object",
                "description": "Returns a specific userprofile object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the userprofile object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUserprofileResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Userprofile"
                ],
                "operationId": "UserprofileUpdate",
                "summary": "Update a userprofile object",
                "description": "Updates a specific userprofile object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the userprofile object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Userprofile"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateUserprofileResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/authpolicy": {
            "get": {
                "tags": [
                    "Authpolicy"
                ],
                "operationId": "AuthpolicyList",
                "summary": "Retrieve authpolicy objects",
                "description": "Returns a list of authpolicy objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListAuthpolicyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/authpolicy/{reference}": {
            "get": {
                "tags": [
                    "Authpolicy"
                ],
                "operationId": "AuthpolicyRead",
                "summary": "Get a specific authpolicy object",
                "description": "Returns a specific authpolicy object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the authpolicy object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAuthpolicyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Authpolicy"
                ],
                "operationId": "AuthpolicyUpdate",
                "summary": "Update a authpolicy object",
                "description": "Updates a specific authpolicy object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the authpolicy object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Authpolicy"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateAuthpolicyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/approvalworkflow": {
            "get": {
                "tags": [
                    "Approvalworkflow"
                ],
                "operationId": "ApprovalworkflowList",
                "summary": "Retrieve approvalworkflow objects",
                "description": "Returns a list of approvalworkflow objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListApprovalworkflowResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Approvalworkflow"
                ],
                "operationId": "ApprovalworkflowCreate",
                "summary": "Create a approvalworkflow object",
                "description": "Creates a new approvalworkflow object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Approvalworkflow"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateApprovalworkflowResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_security_approvalworkflow",
                "x-tf-datasource": "nios_security_approvalworkflow",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/approvalworkflow/{reference}": {
            "get": {
                "tags": [
                    "Approvalworkflow"
                ],
                "operationId": "ApprovalworkflowRead",
                "summary": "Get a specific approvalworkflow object",
                "description": "Returns a specific approvalworkflow object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the approvalworkflow object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetApprovalworkflowResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Approvalworkflow"
                ],
                "operationId": "ApprovalworkflowUpdate",
                "summary": "Update a approvalworkflow object",
                "description": "Updates a specific approvalworkflow object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the approvalworkflow object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Approvalworkflow"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateApprovalworkflowResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Approvalworkflow"
                ],
                "operationId": "ApprovalworkflowDelete",
                "summary": "Delete a approvalworkflow object",
                "description": "Deletes a specific approvalworkflow object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the approvalworkflow object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/cacertificate": {
            "get": {
                "tags": [
                    "Cacertificate"
                ],
                "operationId": "CacertificateList",
                "summary": "Retrieve cacertificate objects",
                "description": "Returns a list of cacertificate objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListCacertificateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/cacertificate/{reference}": {
            "get": {
                "tags": [
                    "Cacertificate"
                ],
                "operationId": "CacertificateRead",
                "summary": "Get a specific cacertificate object",
                "description": "Returns a specific cacertificate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the cacertificate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetCacertificateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cacertificate"
                ],
                "operationId": "CacertificateDelete",
                "summary": "Delete a cacertificate object",
                "description": "Deletes a specific cacertificate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the cacertificate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/certificate:authservice": {
            "get": {
                "tags": [
                    "CertificateAuthservice"
                ],
                "operationId": "CertificateAuthserviceList",
                "summary": "Retrieve certificate:authservice objects",
                "description": "Returns a list of certificate:authservice objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListCertificateAuthserviceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "CertificateAuthservice"
                ],
                "operationId": "CertificateAuthserviceCreate",
                "summary": "Create a certificate:authservice object",
                "description": "Creates a new certificate:authservice object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CertificateAuthservice"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateCertificateAuthserviceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_security_certificate_authservice",
                "x-tf-datasource": "nios_security_certificate_authservice"
            }
        },
        "/certificate:authservice/{reference}": {
            "get": {
                "tags": [
                    "CertificateAuthservice"
                ],
                "operationId": "CertificateAuthserviceRead",
                "summary": "Get a specific certificate:authservice object",
                "description": "Returns a specific certificate:authservice object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the certificate:authservice object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetCertificateAuthserviceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "CertificateAuthservice"
                ],
                "operationId": "CertificateAuthserviceUpdate",
                "summary": "Update a certificate:authservice object",
                "description": "Updates a specific certificate:authservice object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the certificate:authservice object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CertificateAuthservice"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateCertificateAuthserviceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "CertificateAuthservice"
                ],
                "operationId": "CertificateAuthserviceDelete",
                "summary": "Delete a certificate:authservice object",
                "description": "Deletes a specific certificate:authservice object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the certificate:authservice object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/radius:authservice": {
            "get": {
                "tags": [
                    "RadiusAuthservice"
                ],
                "operationId": "RadiusAuthserviceList",
                "summary": "Retrieve radius:authservice objects",
                "description": "Returns a list of radius:authservice objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListRadiusAuthserviceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "RadiusAuthservice"
                ],
                "operationId": "RadiusAuthserviceCreate",
                "summary": "Create a radius:authservice object",
                "description": "Creates a new radius:authservice object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RadiusAuthservice"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateRadiusAuthserviceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_security_radius_authservice",
                "x-tf-datasource": "nios_security_radius_authservice"
            }
        },
        "/radius:authservice/{reference}": {
            "get": {
                "tags": [
                    "RadiusAuthservice"
                ],
                "operationId": "RadiusAuthserviceRead",
                "summary": "Get a specific radius:authservice object",
                "description": "Returns a specific radius:authservice object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the radius:authservice object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetRadiusAuthserviceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "RadiusAuthservice"
                ],
                "operationId": "RadiusAuthserviceUpdate",
                "summary": "Update a radius:authservice object",
                "description": "Updates a specific radius:authservice object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the radius:authservice object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RadiusAuthservice"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateRadiusAuthserviceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "RadiusAuthservice"
                ],
                "operationId": "RadiusAuthserviceDelete",
                "summary": "Delete a radius:authservice object",
                "description": "Deletes a specific radius:authservice object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the radius:authservice object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/tacacsplus:authservice": {
            "get": {
                "tags": [
                    "TacacsplusAuthservice"
                ],
                "operationId": "TacacsplusAuthserviceList",
                "summary": "Retrieve tacacsplus:authservice objects",
                "description": "Returns a list of tacacsplus:authservice objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListTacacsplusAuthserviceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "TacacsplusAuthservice"
                ],
                "operationId": "TacacsplusAuthserviceCreate",
                "summary": "Create a tacacsplus:authservice object",
                "description": "Creates a new tacacsplus:authservice object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TacacsplusAuthservice"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateTacacsplusAuthserviceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_security_tacacsplus_authservice",
                "x-tf-datasource": "nios_security_tacacsplus_authservice"
            }
        },
        "/tacacsplus:authservice/{reference}": {
            "get": {
                "tags": [
                    "TacacsplusAuthservice"
                ],
                "operationId": "TacacsplusAuthserviceRead",
                "summary": "Get a specific tacacsplus:authservice object",
                "description": "Returns a specific tacacsplus:authservice object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the tacacsplus:authservice object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTacacsplusAuthserviceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "TacacsplusAuthservice"
                ],
                "operationId": "TacacsplusAuthserviceUpdate",
                "summary": "Update a tacacsplus:authservice object",
                "description": "Updates a specific tacacsplus:authservice object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the tacacsplus:authservice object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TacacsplusAuthservice"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateTacacsplusAuthserviceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "TacacsplusAuthservice"
                ],
                "operationId": "TacacsplusAuthserviceDelete",
                "summary": "Delete a tacacsplus:authservice object",
                "description": "Deletes a specific tacacsplus:authservice object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the tacacsplus:authservice object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/ldap_auth_service": {
            "get": {
                "tags": [
                    "LdapAuthService"
                ],
                "operationId": "LdapAuthServiceList",
                "summary": "Retrieve ldap_auth_service objects",
                "description": "Returns a list of ldap_auth_service objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListLdapAuthServiceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "LdapAuthService"
                ],
                "operationId": "LdapAuthServiceCreate",
                "summary": "Create a ldap_auth_service object",
                "description": "Creates a new ldap_auth_service object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LdapAuthService"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateLdapAuthServiceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_security_ldap_auth_service",
                "x-tf-datasource": "nios_security_ldap_auth_service"
            }
        },
        "/ldap_auth_service/{reference}": {
            "get": {
                "tags": [
                    "LdapAuthService"
                ],
                "operationId": "LdapAuthServiceRead",
                "summary": "Get a specific ldap_auth_service object",
                "description": "Returns a specific ldap_auth_service object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ldap_auth_service object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetLdapAuthServiceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "LdapAuthService"
                ],
                "operationId": "LdapAuthServiceUpdate",
                "summary": "Update a ldap_auth_service object",
                "description": "Updates a specific ldap_auth_service object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ldap_auth_service object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LdapAuthService"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateLdapAuthServiceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "LdapAuthService"
                ],
                "operationId": "LdapAuthServiceDelete",
                "summary": "Delete a ldap_auth_service object",
                "description": "Deletes a specific ldap_auth_service object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ldap_auth_service object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/saml:authservice": {
            "get": {
                "tags": [
                    "SamlAuthservice"
                ],
                "operationId": "SamlAuthserviceList",
                "summary": "Retrieve saml:authservice objects",
                "description": "Returns a list of saml:authservice objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListSamlAuthserviceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "SamlAuthservice"
                ],
                "operationId": "SamlAuthserviceCreate",
                "summary": "Create a saml:authservice object",
                "description": "Creates a new saml:authservice object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SamlAuthservice"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateSamlAuthserviceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_security_saml_authservice",
                "x-tf-datasource": "nios_security_saml_authservice"
            }
        },
        "/saml:authservice/{reference}": {
            "get": {
                "tags": [
                    "SamlAuthservice"
                ],
                "operationId": "SamlAuthserviceRead",
                "summary": "Get a specific saml:authservice object",
                "description": "Returns a specific saml:authservice object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the saml:authservice object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetSamlAuthserviceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "SamlAuthservice"
                ],
                "operationId": "SamlAuthserviceUpdate",
                "summary": "Update a saml:authservice object",
                "description": "Updates a specific saml:authservice object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the saml:authservice object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SamlAuthservice"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateSamlAuthserviceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "SamlAuthservice"
                ],
                "operationId": "SamlAuthserviceDelete",
                "summary": "Delete a saml:authservice object",
                "description": "Deletes a specific saml:authservice object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the saml:authservice object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/localuser:authservice": {
            "get": {
                "tags": [
                    "LocaluserAuthservice"
                ],
                "operationId": "LocaluserAuthserviceList",
                "summary": "Retrieve localuser:authservice objects",
                "description": "Returns a list of localuser:authservice objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListLocaluserAuthserviceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/localuser:authservice/{reference}": {
            "get": {
                "tags": [
                    "LocaluserAuthservice"
                ],
                "operationId": "LocaluserAuthserviceRead",
                "summary": "Get a specific localuser:authservice object",
                "description": "Returns a specific localuser:authservice object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the localuser:authservice object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetLocaluserAuthserviceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/snmpuser": {
            "get": {
                "tags": [
                    "Snmpuser"
                ],
                "operationId": "SnmpuserList",
                "summary": "Retrieve snmpuser objects",
                "description": "Returns a list of snmpuser objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListSnmpuserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Snmpuser"
                ],
                "operationId": "SnmpuserCreate",
                "summary": "Create a snmpuser object",
                "description": "Creates a new snmpuser object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Snmpuser"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateSnmpuserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_security_snmpuser",
                "x-tf-datasource": "nios_security_snmpuser",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/snmpuser/{reference}": {
            "get": {
                "tags": [
                    "Snmpuser"
                ],
                "operationId": "SnmpuserRead",
                "summary": "Get a specific snmpuser object",
                "description": "Returns a specific snmpuser object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the snmpuser object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetSnmpuserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Snmpuser"
                ],
                "operationId": "SnmpuserUpdate",
                "summary": "Update a snmpuser object",
                "description": "Updates a specific snmpuser object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the snmpuser object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Snmpuser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateSnmpuserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Snmpuser"
                ],
                "operationId": "SnmpuserDelete",
                "summary": "Delete a snmpuser object",
                "description": "Deletes a specific snmpuser object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the snmpuser object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/ftpuser": {
            "get": {
                "tags": [
                    "Ftpuser"
                ],
                "operationId": "FtpuserList",
                "summary": "Retrieve ftpuser objects",
                "description": "Returns a list of ftpuser objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListFtpuserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ftpuser"
                ],
                "operationId": "FtpuserCreate",
                "summary": "Create a ftpuser object",
                "description": "Creates a new ftpuser object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ftpuser"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateFtpuserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_security_ftpuser",
                "x-tf-datasource": "nios_security_ftpuser",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/ftpuser/{reference}": {
            "get": {
                "tags": [
                    "Ftpuser"
                ],
                "operationId": "FtpuserRead",
                "summary": "Get a specific ftpuser object",
                "description": "Returns a specific ftpuser object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ftpuser object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetFtpuserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Ftpuser"
                ],
                "operationId": "FtpuserUpdate",
                "summary": "Update a ftpuser object",
                "description": "Updates a specific ftpuser object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ftpuser object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ftpuser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateFtpuserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Ftpuser"
                ],
                "operationId": "FtpuserDelete",
                "summary": "Delete a ftpuser object",
                "description": "Deletes a specific ftpuser object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ftpuser object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/networkuser": {
            "get": {
                "tags": [
                    "Networkuser"
                ],
                "operationId": "NetworkuserList",
                "summary": "Retrieve networkuser objects",
                "description": "Returns a list of networkuser objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListNetworkuserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Networkuser"
                ],
                "operationId": "NetworkuserCreate",
                "summary": "Create a networkuser object",
                "description": "Creates a new networkuser object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Networkuser"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateNetworkuserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_security_networkuser",
                "x-tf-datasource": "nios_security_networkuser"
            }
        },
        "/networkuser/{reference}": {
            "get": {
                "tags": [
                    "Networkuser"
                ],
                "operationId": "NetworkuserRead",
                "summary": "Get a specific networkuser object",
                "description": "Returns a specific networkuser object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the networkuser object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetNetworkuserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Networkuser"
                ],
                "operationId": "NetworkuserUpdate",
                "summary": "Update a networkuser object",
                "description": "Updates a specific networkuser object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the networkuser object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Networkuser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateNetworkuserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Networkuser"
                ],
                "operationId": "NetworkuserDelete",
                "summary": "Delete a networkuser object",
                "description": "Deletes a specific networkuser object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the networkuser object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/ad_auth_service": {
            "get": {
                "tags": [
                    "AdAuthService"
                ],
                "operationId": "AdAuthServiceList",
                "summary": "Retrieve ad_auth_service objects",
                "description": "Returns a list of ad_auth_service objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListAdAuthServiceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "AdAuthService"
                ],
                "operationId": "AdAuthServiceCreate",
                "summary": "Create a ad_auth_service object",
                "description": "Creates a new ad_auth_service object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdAuthService"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateAdAuthServiceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_security_ad_auth_service",
                "x-tf-datasource": "nios_security_ad_auth_service"
            }
        },
        "/ad_auth_service/{reference}": {
            "get": {
                "tags": [
                    "AdAuthService"
                ],
                "operationId": "AdAuthServiceRead",
                "summary": "Get a specific ad_auth_service object",
                "description": "Returns a specific ad_auth_service object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ad_auth_service object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAdAuthServiceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "AdAuthService"
                ],
                "operationId": "AdAuthServiceUpdate",
                "summary": "Update a ad_auth_service object",
                "description": "Updates a specific ad_auth_service object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ad_auth_service object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdAuthService"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateAdAuthServiceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "AdAuthService"
                ],
                "operationId": "AdAuthServiceDelete",
                "summary": "Delete a ad_auth_service object",
                "description": "Deletes a specific ad_auth_service object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ad_auth_service object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/hsm:allgroups": {
            "get": {
                "tags": [
                    "HsmAllgroups"
                ],
                "operationId": "HsmAllgroupsList",
                "summary": "Retrieve hsm:allgroups objects",
                "description": "Returns a list of hsm:allgroups objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListHsmAllgroupsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/hsm:allgroups/{reference}": {
            "get": {
                "tags": [
                    "HsmAllgroups"
                ],
                "operationId": "HsmAllgroupsRead",
                "summary": "Get a specific hsm:allgroups object",
                "description": "Returns a specific hsm:allgroups object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the hsm:allgroups object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetHsmAllgroupsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "HsmAllgroups"
                ],
                "operationId": "HsmAllgroupsUpdate",
                "summary": "Update a hsm:allgroups object",
                "description": "Updates a specific hsm:allgroups object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the hsm:allgroups object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HsmAllgroups"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateHsmAllgroupsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/hsm:entrustnshieldgroup": {
            "get": {
                "tags": [
                    "HsmEntrustnshieldgroup"
                ],
                "operationId": "HsmEntrustnshieldgroupList",
                "summary": "Retrieve hsm:entrustnshieldgroup objects",
                "description": "Returns a list of hsm:entrustnshieldgroup objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListHsmEntrustnshieldgroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "HsmEntrustnshieldgroup"
                ],
                "operationId": "HsmEntrustnshieldgroupCreate",
                "summary": "Create a hsm:entrustnshieldgroup object",
                "description": "Creates a new hsm:entrustnshieldgroup object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HsmEntrustnshieldgroup"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateHsmEntrustnshieldgroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_security_hsm_entrustnshieldgroup",
                "x-tf-datasource": "nios_security_hsm_entrustnshieldgroup"
            }
        },
        "/hsm:entrustnshieldgroup/{reference}": {
            "get": {
                "tags": [
                    "HsmEntrustnshieldgroup"
                ],
                "operationId": "HsmEntrustnshieldgroupRead",
                "summary": "Get a specific hsm:entrustnshieldgroup object",
                "description": "Returns a specific hsm:entrustnshieldgroup object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the hsm:entrustnshieldgroup object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetHsmEntrustnshieldgroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "HsmEntrustnshieldgroup"
                ],
                "operationId": "HsmEntrustnshieldgroupUpdate",
                "summary": "Update a hsm:entrustnshieldgroup object",
                "description": "Updates a specific hsm:entrustnshieldgroup object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the hsm:entrustnshieldgroup object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HsmEntrustnshieldgroup"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateHsmEntrustnshieldgroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "HsmEntrustnshieldgroup"
                ],
                "operationId": "HsmEntrustnshieldgroupDelete",
                "summary": "Delete a hsm:entrustnshieldgroup object",
                "description": "Deletes a specific hsm:entrustnshieldgroup object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the hsm:entrustnshieldgroup object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/hsm:thaleslunagroup": {
            "get": {
                "tags": [
                    "HsmThaleslunagroup"
                ],
                "operationId": "HsmThaleslunagroupList",
                "summary": "Retrieve hsm:thaleslunagroup objects",
                "description": "Returns a list of hsm:thaleslunagroup objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListHsmThaleslunagroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "HsmThaleslunagroup"
                ],
                "operationId": "HsmThaleslunagroupCreate",
                "summary": "Create a hsm:thaleslunagroup object",
                "description": "Creates a new hsm:thaleslunagroup object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HsmThaleslunagroup"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateHsmThaleslunagroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_security_hsm_thaleslunagroup",
                "x-tf-datasource": "nios_security_hsm_thaleslunagroup"
            }
        },
        "/hsm:thaleslunagroup/{reference}": {
            "get": {
                "tags": [
                    "HsmThaleslunagroup"
                ],
                "operationId": "HsmThaleslunagroupRead",
                "summary": "Get a specific hsm:thaleslunagroup object",
                "description": "Returns a specific hsm:thaleslunagroup object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the hsm:thaleslunagroup object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetHsmThaleslunagroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "HsmThaleslunagroup"
                ],
                "operationId": "HsmThaleslunagroupUpdate",
                "summary": "Update a hsm:thaleslunagroup object",
                "description": "Updates a specific hsm:thaleslunagroup object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the hsm:thaleslunagroup object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HsmThaleslunagroup"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateHsmThaleslunagroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "HsmThaleslunagroup"
                ],
                "operationId": "HsmThaleslunagroupDelete",
                "summary": "Delete a hsm:thaleslunagroup object",
                "description": "Deletes a specific hsm:thaleslunagroup object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the hsm:thaleslunagroup object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            }
        },
        "parameters": {
            "ReturnFields": {
                "name": "_return_fields",
                "in": "query",
                "description": "Enter the field names followed by comma",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "ReturnFieldsPlus": {
                "name": "_return_fields+",
                "in": "query",
                "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "MaxResults": {
                "name": "_max_results",
                "in": "query",
                "description": "Enter the number of results to be fetched",
                "required": false,
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1
                }
            },
            "ReturnAsObject": {
                "name": "_return_as_object",
                "in": "query",
                "description": "Select 1 if result is required as an object",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "Paging": {
                "name": "_paging",
                "in": "query",
                "description": "Control paging of results",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "PageId": {
                "name": "_page_id",
                "in": "query",
                "description": "Page id for retrieving next page of results",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "ProxySearch": {
                "name": "_proxy_search",
                "in": "query",
                "description": "Search Grid members for data",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "Schema": {
                "name": "_schema",
                "in": "query",
                "description": "Return schema for this object type",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "SchemaVersion": {
                "name": "_schema_version",
                "in": "query",
                "description": "Schema version to use",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        1,
                        2
                    ]
                }
            },
            "GetDoc": {
                "name": "_get_doc",
                "in": "query",
                "description": "Return documentation with schema",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "SchemaSearchable": {
                "name": "_schema_searchable",
                "in": "query",
                "description": "Return searchable fields with schema",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "Inheritance": {
                "name": "_inheritance",
                "in": "query",
                "description": "If this option is set to True, fields which support inheritance, will display data properly.",
                "required": false,
                "schema": {
                    "type": "boolean"
                }
            },
            "filters": {
                "name": "filters",
                "in": "query",
                "schema": {
                    "type": "object",
                    "additionalProperties": true
                },
                "style": "form",
                "explode": false
            },
            "ExtAttrFilters": {
                "name": "extattrfilter",
                "in": "query",
                "schema": {
                    "type": "object",
                    "additionalProperties": true
                },
                "style": "form",
                "explode": false
            },
            "Method": {
                "name": "_method",
                "in": "query",
                "description": "Enter the method type for the request",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "Body": {
                "name": "body",
                "in": "query",
                "schema": {
                    "type": "object"
                }
            }
        },
        "schemas": {
            "ExtAttrs": {
                "type": "object",
                "properties": {
                    "value": {
                        "description": "The value of the extensible attribute."
                    }
                },
                "required": [
                    "value"
                ],
                "description": "Extensible attributes associated with the object."
            },
            "Admingroup": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "access_method": {
                        "type": "array",
                        "description": "Access methods specify whether an admin group can use the GUI and the API to access the appliance or to send Taxii messages to the appliance. Note that API includes both the Perl API and RESTful API.",
                        "enum": [
                            "GUI",
                            "API",
                            "TAXII",
                            "CLOUD_API",
                            "CLI"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "admin_set_commands": {
                        "$ref": "#/components/schemas/AdmingroupAdminSetCommands"
                    },
                    "admin_show_commands": {
                        "$ref": "#/components/schemas/AdmingroupAdminShowCommands"
                    },
                    "admin_toplevel_commands": {
                        "$ref": "#/components/schemas/AdmingroupAdminToplevelCommands"
                    },
                    "cloud_set_commands": {
                        "$ref": "#/components/schemas/AdmingroupCloudSetCommands"
                    },
                    "cloud_show_commands": {
                        "$ref": "#/components/schemas/AdmingroupCloudShowCommands"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the Admin Group; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "database_set_commands": {
                        "$ref": "#/components/schemas/AdmingroupDatabaseSetCommands"
                    },
                    "database_show_commands": {
                        "$ref": "#/components/schemas/AdmingroupDatabaseShowCommands"
                    },
                    "dhcp_set_commands": {
                        "$ref": "#/components/schemas/AdmingroupDhcpSetCommands"
                    },
                    "dhcp_show_commands": {
                        "$ref": "#/components/schemas/AdmingroupDhcpShowCommands"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines whether the Admin Group is disabled or not. When this is set to False, the Admin Group is enabled.",
                        "example": false
                    },
                    "disable_concurrent_login": {
                        "type": "boolean",
                        "description": "Disable concurrent login feature",
                        "example": false
                    },
                    "dns_set_commands": {
                        "$ref": "#/components/schemas/AdmingroupDnsSetCommands"
                    },
                    "dns_show_commands": {
                        "$ref": "#/components/schemas/AdmingroupDnsShowCommands"
                    },
                    "dns_toplevel_commands": {
                        "$ref": "#/components/schemas/AdmingroupDnsToplevelCommands"
                    },
                    "docker_set_commands": {
                        "$ref": "#/components/schemas/AdmingroupDockerSetCommands"
                    },
                    "docker_show_commands": {
                        "$ref": "#/components/schemas/AdmingroupDockerShowCommands"
                    },
                    "email_addresses": {
                        "type": "array",
                        "description": "The e-mail addresses for the Admin Group.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "enable_restricted_user_access": {
                        "type": "boolean",
                        "description": "Determines whether the restrictions will be applied to the admin connector level for users of this Admin Group.",
                        "example": false
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "grid_set_commands": {
                        "$ref": "#/components/schemas/AdmingroupGridSetCommands"
                    },
                    "grid_show_commands": {
                        "$ref": "#/components/schemas/AdmingroupGridShowCommands"
                    },
                    "inactivity_lockout_setting": {
                        "$ref": "#/components/schemas/AdmingroupInactivityLockoutSetting"
                    },
                    "licensing_set_commands": {
                        "$ref": "#/components/schemas/AdmingroupLicensingSetCommands"
                    },
                    "licensing_show_commands": {
                        "$ref": "#/components/schemas/AdmingroupLicensingShowCommands"
                    },
                    "lockout_setting": {
                        "$ref": "#/components/schemas/AdmingroupLockoutSetting"
                    },
                    "machine_control_toplevel_commands": {
                        "$ref": "#/components/schemas/AdmingroupMachineControlToplevelCommands"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Admin Group.",
                        "example": "Example name"
                    },
                    "networking_set_commands": {
                        "$ref": "#/components/schemas/AdmingroupNetworkingSetCommands"
                    },
                    "networking_show_commands": {
                        "$ref": "#/components/schemas/AdmingroupNetworkingShowCommands"
                    },
                    "password_setting": {
                        "$ref": "#/components/schemas/AdmingroupPasswordSetting"
                    },
                    "roles": {
                        "type": "array",
                        "description": "The names of roles this Admin Group applies to.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "saml_setting": {
                        "$ref": "#/components/schemas/AdmingroupSamlSetting"
                    },
                    "security_set_commands": {
                        "$ref": "#/components/schemas/AdmingroupSecuritySetCommands"
                    },
                    "security_show_commands": {
                        "$ref": "#/components/schemas/AdmingroupSecurityShowCommands"
                    },
                    "superuser": {
                        "type": "boolean",
                        "description": "Determines whether this Admin Group is a superuser group. A superuser group can perform all operations on the appliance, and can view and configure all types of data.",
                        "example": false
                    },
                    "trouble_shooting_toplevel_commands": {
                        "$ref": "#/components/schemas/AdmingroupTroubleShootingToplevelCommands"
                    },
                    "use_account_inactivity_lockout_enable": {
                        "type": "boolean",
                        "description": "This is the use flag for account inactivity lockout settings.",
                        "example": false
                    },
                    "use_disable_concurrent_login": {
                        "type": "boolean",
                        "description": "Whether to override grid concurrent login",
                        "example": false
                    },
                    "use_lockout_setting": {
                        "type": "boolean",
                        "description": "Whether to override grid sequential lockout setting",
                        "example": false
                    },
                    "use_password_setting": {
                        "type": "boolean",
                        "description": "Whether grid password expiry setting should be override.",
                        "example": false
                    },
                    "user_access": {
                        "type": "array",
                        "description": "The access control items for this Admin Group.",
                        "enum": [
                            "addressac"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/AdmingroupUserAccess"
                        }
                    }
                }
            },
            "AdmingroupAdminSetCommands": {
                "type": "object",
                "properties": {
                    "set_admin_group_acl": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "et_bfd": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_bfd": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_bgp": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_clean_mscache": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_debug": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_debug_analytics": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_delete_tasks_interval": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_disable_gui_one_click_support": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_hardware_type": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_ibtrap": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_hw_ident": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_lines": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_ms_max_connection": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_nosafemode": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_ocsp": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_purge_restart_objects": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_reporting_user_capabilities": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_rpz_recursive_only": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_safemode": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_scheduled": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_snmptrap": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_sysname": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_term": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_thresholdtrap": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_expertmode": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_maintenancemode": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_transfer_reporting_data": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_transfer_supportbundle": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_analytics_database_dump": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_analytics_parameter": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_collect_old_logs": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_core_files_quota": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_hsm_group": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_wred": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_enable_doh_key_logging": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_enable_dot_key_logging": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_hotfix": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_mgm": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_ntp_stratum": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_pc_domain": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_report_frequency": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "enable_all": {
                        "type": "boolean",
                        "description": "If True then enable all fields",
                        "example": false
                    },
                    "disable_all": {
                        "type": "boolean",
                        "description": "If True then disable all fields",
                        "example": false
                    }
                }
            },
            "AdmingroupAdminShowCommands": {
                "type": "object",
                "properties": {
                    "show_admin_group_acl": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_analytics_parameter": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_arp": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_bfd": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_bgp": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_capacity": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_clusterd_info": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_config": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_cpu": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_date": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_debug": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_debug_analytics": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_delete_tasks_interval": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_disk": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_hardware_type": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_hardware_status": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_hwid": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_ibtrap": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_hw_ident": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_log": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_logfiles": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_memory": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_ntp": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_reporting_user_capabilities": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_rpz_recursive_only": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_scheduled": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_snmp": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_status": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_tech_support": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_temperature": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_thresholdtrap": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_upgrade_history": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_uptime": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_version": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_analytics_database_dumps": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_cores": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_coresummary": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_csp_threat_db": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_hsm_group": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_hsm_info": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_pmap": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_process": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_pstack": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_safenet_support_info": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_wred_stats": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_wred_status": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_ntp_stratum": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_pc_domain": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_report_frequency": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "enable_all": {
                        "type": "boolean",
                        "description": "If True then enable all fields",
                        "example": false
                    },
                    "disable_all": {
                        "type": "boolean",
                        "description": "If True then disable all fields",
                        "example": false
                    }
                }
            },
            "AdmingroupAdminToplevelCommands": {
                "type": "object",
                "properties": {
                    "ps": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "iostat": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "netstat": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "vmstat": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "tcpdump": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "rndc": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "sar": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "resilver": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "restart_product": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "scrape": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "saml_restart": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "synctime": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "enable_all": {
                        "type": "boolean",
                        "description": "If True then enable all fields",
                        "example": false
                    },
                    "disable_all": {
                        "type": "boolean",
                        "description": "If True then disable all fields",
                        "example": false
                    }
                }
            },
            "AdmingroupCloudSetCommands": {
                "type": "object",
                "properties": {
                    "set_cloud_services_portal_force_refresh": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_cloud_services_portal": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "enable_all": {
                        "type": "boolean",
                        "description": "If True then enable all fields",
                        "example": false
                    },
                    "disable_all": {
                        "type": "boolean",
                        "description": "If True then disable all fields",
                        "example": false
                    }
                }
            },
            "AdmingroupCloudShowCommands": {
                "type": "object",
                "properties": {
                    "show_cloud_services_portal": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "enable_all": {
                        "type": "boolean",
                        "description": "If True then enable all fields",
                        "example": false
                    },
                    "disable_all": {
                        "type": "boolean",
                        "description": "If True then disable all fields",
                        "example": false
                    }
                }
            },
            "AdmingroupDatabaseSetCommands": {
                "type": "object",
                "properties": {
                    "set_named_max_journal_size": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_txn_trace": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_database_transfer": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_db_rollover": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_db_snapshot": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_dbsize": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_debug_tools": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_circ_txn_trace": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "enable_all": {
                        "type": "boolean",
                        "description": "If True then enable all fields",
                        "example": false
                    },
                    "disable_all": {
                        "type": "boolean",
                        "description": "If True then disable all fields",
                        "example": false
                    }
                }
            },
            "AdmingroupDatabaseShowCommands": {
                "type": "object",
                "properties": {
                    "show_named_max_journal_size": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_txn_trace": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_database_transfer_status": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_backup": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_db_ph": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_dbsize": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_ibdbstat": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "enable_all": {
                        "type": "boolean",
                        "description": "If True then enable all fields",
                        "example": false
                    },
                    "disable_all": {
                        "type": "boolean",
                        "description": "If True then disable all fields",
                        "example": false
                    }
                }
            },
            "AdmingroupDhcpSetCommands": {
                "type": "object",
                "properties": {
                    "set_dhcpd_recv_sock_buf_size": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_log_txn_id": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_overload_bootp": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_regenerate_dhcp_updater_keys": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "enable_all": {
                        "type": "boolean",
                        "description": "If True then enable all fields",
                        "example": false
                    },
                    "disable_all": {
                        "type": "boolean",
                        "description": "If True then disable all fields",
                        "example": false
                    }
                }
            },
            "AdmingroupDhcpShowCommands": {
                "type": "object",
                "properties": {
                    "show_dhcp_gss_tsig": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_dhcpv6_gss_tsig": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_dhcpd_recv_sock_buf_size": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_overload_bootp": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_log_txn_id": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "enable_all": {
                        "type": "boolean",
                        "description": "If True then enable all fields",
                        "example": false
                    },
                    "disable_all": {
                        "type": "boolean",
                        "description": "If True then disable all fields",
                        "example": false
                    }
                }
            },
            "AdmingroupDnsSetCommands": {
                "type": "object",
                "properties": {
                    "set_dns": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_dns_rrl": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_enable_dnstap": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_enable_match_recursive_only": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_extra_dns_name_validations": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_log_guest_lookups": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_max_recursion_depth": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_max_recursion_queries": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_monitor": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_ms_dns_reports_sync_interval": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_ms_sticky_ip": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_restart_anycast_with_dns_restart": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_rpz_add_soa": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_dns_accel": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_dns_accel_debug": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_dns_auto_gen": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_allow_query_domain": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "enable_all": {
                        "type": "boolean",
                        "description": "If True then enable all fields",
                        "example": false
                    },
                    "disable_all": {
                        "type": "boolean",
                        "description": "If True then disable all fields",
                        "example": false
                    }
                }
            },
            "AdmingroupDnsShowCommands": {
                "type": "object",
                "properties": {
                    "show_log_guest_lookups": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_dns_gss_tsig": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_dns": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_dnstap_stats": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_dnstap_status": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_dns_over_tls_config": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_dns_over_tls_status": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_dns_over_tls_stats": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_doh_config": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_doh_status": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_doh_stats": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_extra_dns_name_validations": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_ms_sticky_ip": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_dns_rrl": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_enable_match_recursive_only": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_max_recursion_depth": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_max_recursion_queries": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_monitor": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_query_capture": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_dtc_ea": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_dtc_geoip": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_restart_anycast_with_dns_restart": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_rpz_add_soa": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_dns_accel": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_dns_accel_debug": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_allow_query_domain": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_allow_query_domain_views": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "enable_all": {
                        "type": "boolean",
                        "description": "If True then enable all fields",
                        "example": false
                    },
                    "disable_all": {
                        "type": "boolean",
                        "description": "If True then disable all fields",
                        "example": false
                    }
                }
            },
            "AdmingroupDnsToplevelCommands": {
                "type": "object",
                "properties": {
                    "ddns_add": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "ddns_delete": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "delete": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "dns_a_record_delete": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "enable_all": {
                        "type": "boolean",
                        "description": "If True then enable all fields",
                        "example": false
                    },
                    "disable_all": {
                        "type": "boolean",
                        "description": "If True then disable all fields",
                        "example": false
                    }
                }
            },
            "AdmingroupDockerSetCommands": {
                "type": "object",
                "properties": {
                    "set_docker_bridge": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "enable_all": {
                        "type": "boolean",
                        "description": "If True then enable all fields",
                        "example": false
                    },
                    "disable_all": {
                        "type": "boolean",
                        "description": "If True then disable all fields",
                        "example": false
                    }
                }
            },
            "AdmingroupDockerShowCommands": {
                "type": "object",
                "properties": {
                    "show_docker_bridge": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "enable_all": {
                        "type": "boolean",
                        "description": "If True then enable all fields",
                        "example": false
                    },
                    "disable_all": {
                        "type": "boolean",
                        "description": "If True then disable all fields",
                        "example": false
                    }
                }
            },
            "AdmingroupGridSetCommands": {
                "type": "object",
                "properties": {
                    "set_default_revert_window": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_dscp": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_membership": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_nogrid": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_nomastergrid": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_promote_master": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_revert_grid": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_token": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_test_promote_master": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "enable_all": {
                        "type": "boolean",
                        "description": "If True then enable all fields",
                        "example": false
                    },
                    "disable_all": {
                        "type": "boolean",
                        "description": "If True then disable all fields",
                        "example": false
                    }
                }
            },
            "AdmingroupGridShowCommands": {
                "type": "object",
                "properties": {
                    "show_test_promote_master": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_token": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "enable_all": {
                        "type": "boolean",
                        "description": "If True then enable all fields",
                        "example": false
                    },
                    "disable_all": {
                        "type": "boolean",
                        "description": "If True then disable all fields",
                        "example": false
                    },
                    "show_dscp": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    }
                }
            },
            "AdmingroupInactivityLockoutSetting": {
                "type": "object",
                "properties": {
                    "account_inactivity_lockout_enable": {
                        "type": "boolean",
                        "description": "Enable/disable the account inactivity lockout.",
                        "example": false
                    },
                    "inactive_days": {
                        "type": "integer",
                        "description": "Number of days after which account gets locked out if user does not login.",
                        "format": "int64",
                        "example": 1
                    },
                    "reminder_days": {
                        "type": "integer",
                        "description": "The number of days before the account lockout date when the appliance sends a reminder.",
                        "format": "int64",
                        "example": 1
                    },
                    "reactivate_via_serial_console_enable": {
                        "type": "boolean",
                        "description": "Enable/disable reactivating user account by logging in from serial console.",
                        "example": false
                    },
                    "reactivate_via_remote_console_enable": {
                        "type": "boolean",
                        "description": "Enable/disable reactivating user account by logging in from remote console.",
                        "example": false
                    }
                }
            },
            "AdmingroupLicensingSetCommands": {
                "type": "object",
                "properties": {
                    "set_license": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_reporting_reset_license": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_temp_license": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "enable_all": {
                        "type": "boolean",
                        "description": "If True then enable all fields",
                        "example": false
                    },
                    "disable_all": {
                        "type": "boolean",
                        "description": "If True then disable all fields",
                        "example": false
                    }
                }
            },
            "AdmingroupLicensingShowCommands": {
                "type": "object",
                "properties": {
                    "show_license": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_license_pool_container": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_license_uid": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "enable_all": {
                        "type": "boolean",
                        "description": "If True then enable all fields",
                        "example": false
                    },
                    "disable_all": {
                        "type": "boolean",
                        "description": "If True then disable all fields",
                        "example": false
                    }
                }
            },
            "AdmingroupLockoutSetting": {
                "type": "object",
                "properties": {
                    "enable_sequential_failed_login_attempts_lockout": {
                        "type": "boolean",
                        "description": "Enable/disable sequential failed login attempts lockout for local users",
                        "example": false
                    },
                    "sequential_attempts": {
                        "type": "integer",
                        "description": "The number of failed login attempts",
                        "format": "int64",
                        "example": 1
                    },
                    "failed_lockout_duration": {
                        "type": "integer",
                        "description": "Time period the account remains locked after sequential failed login attempt lockout.",
                        "format": "int64",
                        "example": 1
                    },
                    "never_unlock_user": {
                        "type": "boolean",
                        "description": "Never unlock option is also provided and if set then user account is locked forever and only super user can unlock this account",
                        "example": false
                    }
                }
            },
            "AdmingroupMachineControlToplevelCommands": {
                "type": "object",
                "properties": {
                    "reboot": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "reset": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "restart": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "enable_all": {
                        "type": "boolean",
                        "description": "If True then enable all fields",
                        "example": false
                    },
                    "disable_all": {
                        "type": "boolean",
                        "description": "If True then disable all fields",
                        "example": false
                    }
                }
            },
            "AdmingroupNetworkingSetCommands": {
                "type": "object",
                "properties": {
                    "set_connection_limit": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_default_route": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_interface": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_ip_rate_limit": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_ipv6_disable_on_dad": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_ipv6_neighbor": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_ipv6_ospf": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_ipv6_status": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_lom": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_mld_version_1": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_named_recv_sock_buf_size": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_named_tcp_clients_limit": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_network": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_ospf": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_prompt": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_remote_console": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_static_route": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_tcp_timestamps": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_traffic_capture": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_wins_forwarding": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "enable_all": {
                        "type": "boolean",
                        "description": "If True then enable all fields",
                        "example": false
                    },
                    "disable_all": {
                        "type": "boolean",
                        "description": "If True then disable all fields",
                        "example": false
                    }
                }
            },
            "AdmingroupNetworkingShowCommands": {
                "type": "object",
                "properties": {
                    "show_connection_limit": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_connections": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_interface": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_ip_rate_limit": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_ipv6_bgp": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_ipv6_disable_on_dad": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_ipv6_neighbor": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_ipv6_ospf": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_lom": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_mld_version": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_named_recv_sock_buf_size": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_named_tcp_clients_limit": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_network": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_ospf": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_remote_console": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_routes": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_static_routes": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_tcp_timestamps": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_traffic_capture_status": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_wins_forwarding": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_default_route": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_iproute": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_iprule": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_iptables": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_mtu_size": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_network_connectivity": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_trafficfiles": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_interface_stats": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "enable_all": {
                        "type": "boolean",
                        "description": "If True then enable all fields",
                        "example": false
                    },
                    "disable_all": {
                        "type": "boolean",
                        "description": "If True then disable all fields",
                        "example": false
                    }
                }
            },
            "AdmingroupPasswordSetting": {
                "type": "object",
                "properties": {
                    "expire_enable": {
                        "type": "boolean",
                        "description": "Whether password expiry enabled or not.",
                        "example": false
                    },
                    "expire_days": {
                        "type": "integer",
                        "description": "The days that password must expire",
                        "format": "int64",
                        "example": 1
                    },
                    "reminder_days": {
                        "type": "integer",
                        "description": "Days to show up reminder prior to expiration",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "AdmingroupSamlSetting": {
                "type": "object",
                "properties": {
                    "auto_create_user": {
                        "type": "boolean",
                        "description": "Whether or not auto create user.",
                        "example": false
                    },
                    "persist_auto_created_user": {
                        "type": "boolean",
                        "description": "Whether or not persist auto created user after logout.",
                        "example": false
                    }
                }
            },
            "AdmingroupSecuritySetCommands": {
                "type": "object",
                "properties": {
                    "set_adp": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_apache_https_cert": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_cc_mode": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_certificate_auth_admins": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_certificate_auth_services": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_check_auth_ns": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_check_ssl_certificate": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_disable_https_cert_regeneration": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_fips_mode": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_reporting_cert": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_security": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_session_timeout": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_subscriber_secure_data": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_support_access": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_support_install": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_adp_debug": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_support_timeout": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "set_update_rabbitmq_password": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "enable_all": {
                        "type": "boolean",
                        "description": "If True then enable all fields",
                        "example": false
                    },
                    "disable_all": {
                        "type": "boolean",
                        "description": "If True then disable all fields",
                        "example": false
                    }
                }
            },
            "AdmingroupSecurityShowCommands": {
                "type": "object",
                "properties": {
                    "show_fips_mode": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_cc_mode": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_certificate_auth_admins": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_certificate_auth_services": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_check_auth_ns": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_check_ssl_certificate": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_security": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_session_timeout": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_subscriber_secure_data": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_support_access": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_vpn_cert_dates": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_adp": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_adp_debug": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "show_support_timeout": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "enable_all": {
                        "type": "boolean",
                        "description": "If True then enable all fields",
                        "example": false
                    },
                    "disable_all": {
                        "type": "boolean",
                        "description": "If True then disable all fields",
                        "example": false
                    }
                }
            },
            "AdmingroupTroubleShootingToplevelCommands": {
                "type": "object",
                "properties": {
                    "ping": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "ping6": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "strace": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "traceroute": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "traffic_capture": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "dig": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "rotate": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "snmpwalk": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "snmpget": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "console": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "tracepath": {
                        "type": "boolean",
                        "description": "If True then CLI user has permission to run the command",
                        "example": false
                    },
                    "enable_all": {
                        "type": "boolean",
                        "description": "If True then enable all fields",
                        "example": false
                    },
                    "disable_all": {
                        "type": "boolean",
                        "description": "If True then disable all fields",
                        "example": false
                    }
                }
            },
            "AdmingroupUserAccess": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address this rule applies to or \"Any\".",
                        "example": "Example address"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to use for this address.",
                        "enum": [
                            "ALLOW",
                            "DENY"
                        ],
                        "example": "Example permission"
                    }
                }
            },
            "ListAdmingroupResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Admingroup__ objects.",
                        "type": "array",
                        "title": "ListAdmingroupResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Admingroup"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Admingroup__ objects.",
                        "type": "object",
                        "title": "ListAdmingroupResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Admingroup"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateAdmingroupResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Admingroup__ in object format.",
                        "type": "object",
                        "title": "CreateAdmingroupResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Admingroup"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Admingroup__.",
                        "type": "string",
                        "title": "CreateAdmingroupResponse"
                    }
                ]
            },
            "GetAdmingroupResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Admingroup"
                    },
                    {
                        "description": "The response format to retrieve __Admingroup__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetAdmingroupResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Admingroup"
                            }
                        }
                    }
                ]
            },
            "UpdateAdmingroupResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Admingroup__ in object format.",
                        "type": "object",
                        "title": "UpdateAdmingroupResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Admingroup"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Admingroup__ .",
                        "type": "string",
                        "title": "UpdateAdmingroupResponse"
                    }
                ]
            },
            "Adminrole": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "The descriptive comment of the Admin Role object.",
                        "example": "Example comment"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "The disable flag.",
                        "example": false
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of an admin role.",
                        "example": "Example name"
                    }
                }
            },
            "ListAdminroleResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Adminrole__ objects.",
                        "type": "array",
                        "title": "ListAdminroleResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Adminrole"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Adminrole__ objects.",
                        "type": "object",
                        "title": "ListAdminroleResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Adminrole"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateAdminroleResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Adminrole__ in object format.",
                        "type": "object",
                        "title": "CreateAdminroleResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Adminrole"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Adminrole__.",
                        "type": "string",
                        "title": "CreateAdminroleResponse"
                    }
                ]
            },
            "GetAdminroleResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Adminrole"
                    },
                    {
                        "description": "The response format to retrieve __Adminrole__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetAdminroleResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Adminrole"
                            }
                        }
                    }
                ]
            },
            "UpdateAdminroleResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Adminrole__ in object format.",
                        "type": "object",
                        "title": "UpdateAdminroleResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Adminrole"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Adminrole__ .",
                        "type": "string",
                        "title": "UpdateAdminroleResponse"
                    }
                ]
            },
            "Adminuser": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "admin_groups": {
                        "type": "array",
                        "description": "The names of the Admin Groups to which this Admin User belongs. Currently, this is limited to only one Admin Group.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "auth_method": {
                        "type": "string",
                        "description": "Determines the way of authentication",
                        "enum": [
                            "KEYPAIR",
                            "KEYPAIR_PASSWORD"
                        ],
                        "example": "Example auth_method"
                    },
                    "auth_type": {
                        "type": "string",
                        "description": "The authentication type for the admin user.",
                        "enum": [
                            "LOCAL",
                            "RADIUS",
                            "REMOTE",
                            "SAML",
                            "SAML_LOCAL"
                        ],
                        "example": "Example auth_type"
                    },
                    "ca_certificate_issuer": {
                        "type": "string",
                        "description": "The CA certificate that is used for user lookup during authentication.",
                        "example": "Example ca_certificate_issuer"
                    },
                    "client_certificate_serial_number": {
                        "type": "string",
                        "description": "The serial number of the client certificate.",
                        "example": "Example client_certificate_serial_number"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the admin user; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines whether the admin user is disabled or not. When this is set to False, the admin user is enabled.",
                        "example": false
                    },
                    "email": {
                        "type": "string",
                        "description": "The e-mail address for the admin user.",
                        "example": "Example email"
                    },
                    "enable_certificate_authentication": {
                        "type": "boolean",
                        "description": "Determines whether the user is allowed to log in only with the certificate. Regular username/password authentication will be disabled for this user.",
                        "example": false
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the admin user.",
                        "example": "Example name"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password for the administrator to use when logging in.",
                        "writeOnly": true,
                        "example": "Example password"
                    },
                    "ssh_keys": {
                        "type": "array",
                        "description": "List of ssh keys for a particular user.",
                        "enum": [
                            "ssh_key"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/AdminuserSshKeys"
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the user account.",
                        "enum": [
                            "ACTIVE",
                            "INACTIVE",
                            "LOCKED",
                            "DISABLED"
                        ],
                        "readOnly": true,
                        "example": "Example status"
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for this admin user.",
                        "example": "Example time_zone"
                    },
                    "use_ssh_keys": {
                        "type": "boolean",
                        "description": "\\, Enable/disable the ssh keypair authentication.",
                        "example": false
                    },
                    "use_time_zone": {
                        "type": "boolean",
                        "description": "Use flag for: time_zone",
                        "example": false
                    }
                }
            },
            "AdminuserSshKeys": {
                "type": "object",
                "properties": {
                    "key_name": {
                        "type": "string",
                        "description": "Unique identifier for the key",
                        "example": "Example key_name"
                    },
                    "key_type": {
                        "type": "string",
                        "description": "ssh_key_types",
                        "enum": [
                            "RSA",
                            "ECDSA",
                            "ED25519"
                        ],
                        "example": "Example key_type"
                    },
                    "key_value": {
                        "type": "string",
                        "description": "ssh key text",
                        "example": "Example key_value"
                    }
                }
            },
            "ListAdminuserResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Adminuser__ objects.",
                        "type": "array",
                        "title": "ListAdminuserResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Adminuser"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Adminuser__ objects.",
                        "type": "object",
                        "title": "ListAdminuserResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Adminuser"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateAdminuserResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Adminuser__ in object format.",
                        "type": "object",
                        "title": "CreateAdminuserResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Adminuser"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Adminuser__.",
                        "type": "string",
                        "title": "CreateAdminuserResponse"
                    }
                ]
            },
            "GetAdminuserResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Adminuser"
                    },
                    {
                        "description": "The response format to retrieve __Adminuser__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetAdminuserResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Adminuser"
                            }
                        }
                    }
                ]
            },
            "UpdateAdminuserResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Adminuser__ in object format.",
                        "type": "object",
                        "title": "UpdateAdminuserResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Adminuser"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Adminuser__ .",
                        "type": "string",
                        "title": "UpdateAdminuserResponse"
                    }
                ]
            },
            "Permission": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "group": {
                        "type": "string",
                        "description": "The name of the admin group this permission applies to.",
                        "example": "Example group"
                    },
                    "object": {
                        "type": "string",
                        "description": "A reference to a WAPI object, which will be the object this permission applies to.",
                        "example": "Example object"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The type of permission.",
                        "enum": [
                            "DENY",
                            "READ",
                            "WRITE"
                        ],
                        "example": "Example permission"
                    },
                    "resource_type": {
                        "type": "string",
                        "description": "The type of resource this permission applies to. If 'object' is set, the permission is going to apply to child objects of the specified type, for example if 'object' was set to an authoritative zone reference and 'resource_type' was set to 'A', the permission would apply to A Resource Records within the specified zone.",
                        "enum": [
                            "CLUSTER",
                            "MEMBER",
                            "MEMBER_CLOUD",
                            "SUB_GRID",
                            "SUB_GRID_NETWORK_VIEW_PARENT",
                            "SG_NETWORK_VIEW",
                            "SG_IPV4_NETWORK",
                            "SG_IPV6_NETWORK",
                            "MSSERVER",
                            "VIEW",
                            "ZONE",
                            "A",
                            "AAAA",
                            "ALIAS",
                            "CNAME",
                            "DNAME",
                            "MX",
                            "PTR",
                            "SRV",
                            "TXT",
                            "HOST",
                            "BULKHOST",
                            "NAPTR",
                            "TLSA",
                            "CAA",
                            "Unknown",
                            "SHARED_RECORD_GROUP",
                            "SHARED_A",
                            "SHARED_AAAA",
                            "SHARED_MX",
                            "SHARED_SRV",
                            "SHARED_TXT",
                            "SHARED_CNAME",
                            "NETWORK_VIEW",
                            "NETWORK",
                            "IPV6_NETWORK",
                            "NETWORK_CONTAINER",
                            "IPV6_NETWORK_CONTAINER",
                            "RANGE",
                            "IPV6_RANGE",
                            "FIXED_ADDRESS",
                            "IPV6_FIXED_ADDRESS",
                            "ROAMING_HOST",
                            "DHCP_MAC_FILTER",
                            "SHARED_NETWORK",
                            "IPV6_SHARED_NETWORK",
                            "TEMPLATE",
                            "IPV6_TEMPLATE",
                            "NETWORK_TEMPLATE",
                            "IPV6_NETWORK_TEMPLATE",
                            "RANGE_TEMPLATE",
                            "IPV6_RANGE_TEMPLATE",
                            "FIXED_ADDRESS_TEMPLATE",
                            "IPV6_FIXED_ADDRESS_TEMPLATE",
                            "OPTION_SPACE",
                            "RESTORABLE_OPERATION",
                            "CSV_IMPORT_TASK",
                            "DHCP_LEASE_HISTORY",
                            "IPV6_DHCP_LEASE_HISTORY",
                            "GRID_FILE_DIST_PROPERTIES",
                            "MEMBER_FILE_DIST_PROPERTIES",
                            "FILE_DIST_DIRECTORY",
                            "HSM_GROUP",
                            "GRID_AAA_PROPERTIES",
                            "AAA_EXTERNAL_SERVICE",
                            "NETWORK_DISCOVERY",
                            "SCHEDULE_TASK",
                            "MS_SUPERSCOPE",
                            "MEMBER_DNS_PROPERTIES",
                            "MEMBER_DHCP_PROPERTIES",
                            "MEMBER_SECURITY_PROPERTIES",
                            "MEMBER_ANALYTICS_PROPERTIES",
                            "RESTART_SERVICE",
                            "GRID_DNS_PROPERTIES",
                            "GRID_DHCP_PROPERTIES",
                            "GRID_REPORTING_PROPERTIES",
                            "GRID_SECURITY_PROPERTIES",
                            "IMC_PROPERTIES",
                            "IMC_SITE",
                            "IMC_AVP",
                            "GRID_ANALYTICS_PROPERTIES",
                            "RULESET",
                            "DNS64_SYNTHESIS_GROUP",
                            "DASHBOARD_TASK",
                            "REPORTING_DASHBOARD",
                            "REPORTING_SEARCH",
                            "OCSP_SERVICE",
                            "CA_CERTIFICATE",
                            "RESPONSE_POLICY_ZONE",
                            "RESPONSE_POLICY_RULE",
                            "DHCP_FINGERPRINT",
                            "DEFINED_ACL",
                            "FIREEYE_PUBLISH_ALERT",
                            "HOST_ADDRESS",
                            "IPV6_HOST_ADDRESS",
                            "PORT_CONTROL",
                            "DEVICE",
                            "KERBEROS_KEY",
                            "BFD_TEMPLATE",
                            "MS_ADSITES_DOMAIN",
                            "IDNS_LBDN",
                            "IDNS_LBDN_RECORD",
                            "IDNS_POOL",
                            "IDNS_SERVER",
                            "IDNS_TOPOLOGY",
                            "IDNS_MONITOR",
                            "IDNS_CERTIFICATE",
                            "IDNS_GEO_IP",
                            "TENANT",
                            "RECLAMATION",
                            "SUPER_HOST",
                            "ADD_A_RR_WITH_EMPTY_HOSTNAME",
                            "DATACOLLECTOR_CLUSTER",
                            "DELETED_OBJS_INFO_TRACKING",
                            "SAML_AUTH_SERVICE",
                            "VLAN_VIEW",
                            "VLAN_RANGE",
                            "VLAN_OBJECTS"
                        ],
                        "example": "Example resource_type"
                    },
                    "role": {
                        "type": "string",
                        "description": "The name of the role this permission applies to.",
                        "example": "Example role"
                    }
                }
            },
            "ListPermissionResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Permission__ objects.",
                        "type": "array",
                        "title": "ListPermissionResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Permission"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Permission__ objects.",
                        "type": "object",
                        "title": "ListPermissionResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        }
                    }
                ]
            },
            "CreatePermissionResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Permission__ in object format.",
                        "type": "object",
                        "title": "CreatePermissionResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Permission"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Permission__.",
                        "type": "string",
                        "title": "CreatePermissionResponse"
                    }
                ]
            },
            "GetPermissionResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Permission"
                    },
                    {
                        "description": "The response format to retrieve __Permission__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetPermissionResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Permission"
                            }
                        }
                    }
                ]
            },
            "UpdatePermissionResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Permission__ in object format.",
                        "type": "object",
                        "title": "UpdatePermissionResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Permission"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Permission__ .",
                        "type": "string",
                        "title": "UpdatePermissionResponse"
                    }
                ]
            },
            "Userprofile": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "active_dashboard_type": {
                        "type": "string",
                        "description": "Determines the active dashboard type.",
                        "enum": [
                            "INFO",
                            "TASK"
                        ],
                        "example": "Example active_dashboard_type"
                    },
                    "admin_group": {
                        "type": "string",
                        "description": "The Admin Group object to which the admin belongs. An admin user can belong to only one admin group at a time.",
                        "readOnly": true,
                        "example": "Example admin_group"
                    },
                    "days_to_expire": {
                        "type": "integer",
                        "description": "The number of days left before the admin's password expires.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "email": {
                        "type": "string",
                        "description": "The email address of the admin.",
                        "example": "Example email"
                    },
                    "global_search_on_ea": {
                        "type": "boolean",
                        "description": "Determines if extensible attribute values will be returned by global search or not.",
                        "example": false
                    },
                    "global_search_on_ni_data": {
                        "type": "boolean",
                        "description": "Determines if global search will search for network insight devices and interfaces or not.",
                        "example": false
                    },
                    "grid_admin_groups": {
                        "type": "array",
                        "description": "List of Admin Group objects that the current user is mapped to.",
                        "enum": [
                            "string"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "last_login": {
                        "type": "integer",
                        "description": "The timestamp when the admin last logged in.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "lb_tree_nodes_at_gen_level": {
                        "type": "integer",
                        "description": "Determines how many nodes are displayed at generation levels.",
                        "format": "int64",
                        "example": 1
                    },
                    "lb_tree_nodes_at_last_level": {
                        "type": "integer",
                        "description": "Determines how many nodes are displayed at the last level.",
                        "format": "int64",
                        "example": 1
                    },
                    "max_count_widgets": {
                        "type": "integer",
                        "description": "The maximum count of widgets that can be added to one dashboard.",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "The admin name.",
                        "readOnly": true,
                        "example": "Example name"
                    },
                    "old_password": {
                        "type": "string",
                        "description": "The current password that will be replaced by a new password. To change a password in the database, you must provide both the current and new password values. This is a write-only attribute.",
                        "writeOnly": true,
                        "example": "Example old_password"
                    },
                    "password": {
                        "type": "string",
                        "description": "The new password of the admin. To change a password in the database, you must provide both the current and new password values. This is a write-only attribute.",
                        "writeOnly": true,
                        "example": "Example password"
                    },
                    "table_size": {
                        "type": "integer",
                        "description": "The number of lines of data a table or a single list view can contain.",
                        "format": "int64",
                        "example": 1
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone of the admin user.",
                        "example": "Example time_zone"
                    },
                    "use_time_zone": {
                        "type": "boolean",
                        "description": "Use flag for: time_zone",
                        "example": false
                    },
                    "user_type": {
                        "type": "string",
                        "description": "The admin type.",
                        "enum": [
                            "LOCAL",
                            "REMOTE"
                        ],
                        "readOnly": true,
                        "example": "Example user_type"
                    }
                }
            },
            "ListUserprofileResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Userprofile__ objects.",
                        "type": "array",
                        "title": "ListUserprofileResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Userprofile"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Userprofile__ objects.",
                        "type": "object",
                        "title": "ListUserprofileResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Userprofile"
                                }
                            }
                        }
                    }
                ]
            },
            "GetUserprofileResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Userprofile"
                    },
                    {
                        "description": "The response format to retrieve __Userprofile__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetUserprofileResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Userprofile"
                            }
                        }
                    }
                ]
            },
            "UpdateUserprofileResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Userprofile__ in object format.",
                        "type": "object",
                        "title": "UpdateUserprofileResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Userprofile"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Userprofile__ .",
                        "type": "string",
                        "title": "UpdateUserprofileResponse"
                    }
                ]
            },
            "Authpolicy": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "admin_groups": {
                        "type": "array",
                        "description": "List of names of local administration groups that are mapped to remote administration groups.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "auth_services": {
                        "type": "array",
                        "description": "The array that contains an ordered list of refs to :doc:`localuser:authservice object </objects/localuser.authservice>`, ldap_auth_service object ldap_auth_service, :doc:`radius:authservice object </objects/radius.authservice>`, :doc:`tacacsplus:authservice object </objects/tacacsplus.authservice>`, ad_auth_service object ad_auth_service, :doc:`certificate:authservice object </objects/certificate.authservice>`. :doc:`saml:authservice object </objects/saml.authservice>`,",
                        "enum": [
                            "localuser:authservice"
                        ],
                        "items": {
                            "type": "string",
                            "enum": [
                                "localuser:authservice"
                            ]
                        }
                    },
                    "default_group": {
                        "type": "string",
                        "description": "The default admin group that provides authentication in case no valid group is found.",
                        "example": "Example default_group"
                    },
                    "usage_type": {
                        "type": "string",
                        "description": "Remote policies usage.",
                        "enum": [
                            "FULL",
                            "AUTH_ONLY"
                        ],
                        "example": "Example usage_type"
                    }
                }
            },
            "ListAuthpolicyResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Authpolicy__ objects.",
                        "type": "array",
                        "title": "ListAuthpolicyResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Authpolicy"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Authpolicy__ objects.",
                        "type": "object",
                        "title": "ListAuthpolicyResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Authpolicy"
                                }
                            }
                        }
                    }
                ]
            },
            "GetAuthpolicyResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Authpolicy"
                    },
                    {
                        "description": "The response format to retrieve __Authpolicy__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetAuthpolicyResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Authpolicy"
                            }
                        }
                    }
                ]
            },
            "UpdateAuthpolicyResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Authpolicy__ in object format.",
                        "type": "object",
                        "title": "UpdateAuthpolicyResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Authpolicy"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Authpolicy__ .",
                        "type": "string",
                        "title": "UpdateAuthpolicyResponse"
                    }
                ]
            },
            "Approvalworkflow": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "approval_group": {
                        "type": "string",
                        "description": "The approval administration group.",
                        "example": "Example approval_group"
                    },
                    "approval_notify_to": {
                        "type": "string",
                        "description": "The destination for approval task notifications.",
                        "enum": [
                            "SUBMITTER",
                            "APPROVER",
                            "BOTH"
                        ],
                        "example": "Example approval_notify_to"
                    },
                    "approved_notify_to": {
                        "type": "string",
                        "description": "The destination for approved task notifications.",
                        "enum": [
                            "SUBMITTER",
                            "APPROVER",
                            "BOTH"
                        ],
                        "example": "Example approved_notify_to"
                    },
                    "approver_comment": {
                        "type": "string",
                        "description": "The requirement for the comment when an approver approves a submitted task.",
                        "enum": [
                            "UNUSED",
                            "OPTIONAL",
                            "REQUIRED"
                        ],
                        "example": "Example approver_comment"
                    },
                    "enable_approval_notify": {
                        "type": "boolean",
                        "description": "Determines whether approval task notifications are enabled.",
                        "example": false
                    },
                    "enable_approved_notify": {
                        "type": "boolean",
                        "description": "Determines whether approved task notifications are enabled.",
                        "example": false
                    },
                    "enable_failed_notify": {
                        "type": "boolean",
                        "description": "Determines whether failed task notifications are enabled.",
                        "example": false
                    },
                    "enable_notify_group": {
                        "type": "boolean",
                        "description": "Determines whether e-mail notifications to admin group's e-mail address are enabled.",
                        "example": false
                    },
                    "enable_notify_user": {
                        "type": "boolean",
                        "description": "Determines whether e-mail notifications to an admin member's e-mail address are enabled.",
                        "example": false
                    },
                    "enable_rejected_notify": {
                        "type": "boolean",
                        "description": "Determines whether rejected task notifications are enabled.",
                        "example": false
                    },
                    "enable_rescheduled_notify": {
                        "type": "boolean",
                        "description": "Determines whether rescheduled task notifications are enabled.",
                        "example": false
                    },
                    "enable_succeeded_notify": {
                        "type": "boolean",
                        "description": "Determines whether succeeded task notifications are enabled.",
                        "example": false
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "failed_notify_to": {
                        "type": "string",
                        "description": "The destination for failed task notifications.",
                        "enum": [
                            "SUBMITTER",
                            "APPROVER",
                            "BOTH"
                        ],
                        "example": "Example failed_notify_to"
                    },
                    "rejected_notify_to": {
                        "type": "string",
                        "description": "The destination for rejected task notifications.",
                        "enum": [
                            "SUBMITTER",
                            "APPROVER",
                            "BOTH"
                        ],
                        "example": "Example rejected_notify_to"
                    },
                    "rescheduled_notify_to": {
                        "type": "string",
                        "description": "The destination for rescheduled task notifications.",
                        "enum": [
                            "SUBMITTER",
                            "APPROVER",
                            "BOTH"
                        ],
                        "example": "Example rescheduled_notify_to"
                    },
                    "submitter_comment": {
                        "type": "string",
                        "description": "The requirement for the comment when a submitter submits a task for approval.",
                        "enum": [
                            "UNUSED",
                            "OPTIONAL",
                            "REQUIRED"
                        ],
                        "example": "Example submitter_comment"
                    },
                    "submitter_group": {
                        "type": "string",
                        "description": "The submitter admininstration group.",
                        "example": "Example submitter_group"
                    },
                    "succeeded_notify_to": {
                        "type": "string",
                        "description": "The destination for succeeded task notifications.",
                        "enum": [
                            "SUBMITTER",
                            "APPROVER",
                            "BOTH"
                        ],
                        "example": "Example succeeded_notify_to"
                    },
                    "ticket_number": {
                        "type": "string",
                        "description": "The requirement for the ticket number when a submitter submits a task for approval.",
                        "enum": [
                            "UNUSED",
                            "OPTIONAL",
                            "REQUIRED"
                        ],
                        "example": "Example ticket_number"
                    }
                }
            },
            "ListApprovalworkflowResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Approvalworkflow__ objects.",
                        "type": "array",
                        "title": "ListApprovalworkflowResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Approvalworkflow"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Approvalworkflow__ objects.",
                        "type": "object",
                        "title": "ListApprovalworkflowResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Approvalworkflow"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateApprovalworkflowResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Approvalworkflow__ in object format.",
                        "type": "object",
                        "title": "CreateApprovalworkflowResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Approvalworkflow"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Approvalworkflow__.",
                        "type": "string",
                        "title": "CreateApprovalworkflowResponse"
                    }
                ]
            },
            "GetApprovalworkflowResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Approvalworkflow"
                    },
                    {
                        "description": "The response format to retrieve __Approvalworkflow__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetApprovalworkflowResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Approvalworkflow"
                            }
                        }
                    }
                ]
            },
            "UpdateApprovalworkflowResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Approvalworkflow__ in object format.",
                        "type": "object",
                        "title": "UpdateApprovalworkflowResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Approvalworkflow"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Approvalworkflow__ .",
                        "type": "string",
                        "title": "UpdateApprovalworkflowResponse"
                    }
                ]
            },
            "Cacertificate": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "distinguished_name": {
                        "type": "string",
                        "description": "The certificate subject name.",
                        "readOnly": true,
                        "example": "Example distinguished_name"
                    },
                    "issuer": {
                        "type": "string",
                        "description": "The certificate issuer subject name.",
                        "readOnly": true,
                        "example": "Example issuer"
                    },
                    "serial": {
                        "type": "string",
                        "description": "The certificate serial number in hex format.",
                        "readOnly": true,
                        "example": "Example serial"
                    },
                    "used_by": {
                        "type": "string",
                        "description": "Information about the CA certificate usage.",
                        "readOnly": true,
                        "example": "Example used_by"
                    },
                    "valid_not_after": {
                        "type": "integer",
                        "description": "The date after which the certificate becomes invalid.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "valid_not_before": {
                        "type": "integer",
                        "description": "The date before which the certificate is not valid.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "ListCacertificateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Cacertificate__ objects.",
                        "type": "array",
                        "title": "ListCacertificateResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Cacertificate"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Cacertificate__ objects.",
                        "type": "object",
                        "title": "ListCacertificateResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Cacertificate"
                                }
                            }
                        }
                    }
                ]
            },
            "GetCacertificateResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Cacertificate"
                    },
                    {
                        "description": "The response format to retrieve __Cacertificate__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetCacertificateResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Cacertificate"
                            }
                        }
                    }
                ]
            },
            "UpdateCacertificateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Cacertificate__ in object format.",
                        "type": "object",
                        "title": "UpdateCacertificateResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Cacertificate"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Cacertificate__ .",
                        "type": "string",
                        "title": "UpdateCacertificateResponse"
                    }
                ]
            },
            "CertificateAuthservice": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "auto_populate_login": {
                        "type": "string",
                        "description": "Specifies the value of the client certificate for automatically populating the NIOS login name.",
                        "enum": [
                            "SERIAL_NUMBER",
                            "S_DN_CN",
                            "S_DN_EMAIL",
                            "SAN_UPN",
                            "SAN_EMAIL",
                            "AD_SUBJECT_ISSUER"
                        ],
                        "example": "Example auto_populate_login"
                    },
                    "ca_certificates": {
                        "type": "array",
                        "description": "The list of CA certificates.",
                        "enum": [
                            "cacertificate"
                        ],
                        "items": {
                            "type": "string",
                            "enum": [
                                "cacertificate"
                            ]
                        }
                    },
                    "comment": {
                        "type": "string",
                        "description": "The descriptive comment for the certificate authentication service.",
                        "example": "Example comment"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "Determines if this certificate authentication service is enabled or disabled.",
                        "example": false
                    },
                    "enable_password_request": {
                        "type": "boolean",
                        "description": "Determines if username/password authentication together with client certificate authentication is enabled or disabled.",
                        "example": false
                    },
                    "enable_remote_lookup": {
                        "type": "boolean",
                        "description": "Determines if the lookup for user group membership information on remote services is enabled or disabled.",
                        "example": false
                    },
                    "max_retries": {
                        "type": "integer",
                        "description": "The number of validation attempts before the appliance contacts the next responder.",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the certificate authentication service.",
                        "example": "Example name"
                    },
                    "ocsp_check": {
                        "type": "string",
                        "description": "Specifies the source of OCSP settings.",
                        "enum": [
                            "MANUAL",
                            "AIA_ONLY",
                            "AIA_AND_MANUAL",
                            "DISABLED"
                        ],
                        "example": "Example ocsp_check"
                    },
                    "ocsp_responders": {
                        "type": "array",
                        "description": "An ordered list of OCSP responders that are part of the certificate authentication service.",
                        "enum": [
                            "ocsp_responder"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/CertificateAuthserviceOcspResponders"
                        }
                    },
                    "recovery_interval": {
                        "type": "integer",
                        "description": "The period of time the appliance waits before it attempts to contact a responder that is out of service again. The value must be between 1 and 600 seconds.",
                        "format": "int64",
                        "example": 1
                    },
                    "remote_lookup_password": {
                        "type": "string",
                        "description": "The password for the service account.",
                        "writeOnly": true,
                        "example": "Example remote_lookup_password"
                    },
                    "remote_lookup_service": {
                        "type": "string",
                        "description": "The service that will be used for remote lookup.",
                        "example": "Example remote_lookup_service"
                    },
                    "remote_lookup_username": {
                        "type": "string",
                        "description": "The username for the service account.",
                        "example": "Example remote_lookup_username"
                    },
                    "response_timeout": {
                        "type": "integer",
                        "description": "The validation timeout period in milliseconds.",
                        "format": "int64",
                        "example": 1
                    },
                    "trust_model": {
                        "type": "string",
                        "description": "The OCSP trust model.",
                        "enum": [
                            "DIRECT",
                            "DELEGATED"
                        ],
                        "example": "Example trust_model"
                    },
                    "user_match_type": {
                        "type": "string",
                        "description": "Specifies how to search for a user.",
                        "enum": [
                            "DIRECT_MATCH",
                            "AUTO_MATCH"
                        ],
                        "example": "Example user_match_type"
                    }
                }
            },
            "CertificateAuthserviceOcspResponders": {
                "type": "object",
                "properties": {
                    "fqdn_or_ip": {
                        "type": "string",
                        "description": "The FQDN (Fully Qualified Domain Name) or IP address of the server.",
                        "example": "Example fqdn_or_ip"
                    },
                    "port": {
                        "type": "integer",
                        "description": "The port used for connecting.",
                        "format": "int64",
                        "example": 1
                    },
                    "comment": {
                        "type": "string",
                        "description": "The descriptive comment for the OCSP authentication responder.",
                        "example": "Example comment"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "Determines if this OCSP authentication responder is disabled.",
                        "example": false
                    },
                    "certificate": {
                        "type": "string",
                        "description": "The reference to the OCSP responder certificate.",
                        "readOnly": true,
                        "example": "Example certificate"
                    },
                    "certificate_token": {
                        "type": "string",
                        "description": "The token returned by the uploadinit function call in object fileop.",
                        "writeOnly": true,
                        "example": "Example certificate_token"
                    }
                }
            },
            "ListCertificateAuthserviceResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __CertificateAuthservice__ objects.",
                        "type": "array",
                        "title": "ListCertificateAuthserviceResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/CertificateAuthservice"
                        }
                    },
                    {
                        "description": "The response format to retrieve __CertificateAuthservice__ objects.",
                        "type": "object",
                        "title": "ListCertificateAuthserviceResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CertificateAuthservice"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateCertificateAuthserviceResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __CertificateAuthservice__ in object format.",
                        "type": "object",
                        "title": "CreateCertificateAuthserviceResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/CertificateAuthservice"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __CertificateAuthservice__.",
                        "type": "string",
                        "title": "CreateCertificateAuthserviceResponse"
                    }
                ]
            },
            "GetCertificateAuthserviceResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/CertificateAuthservice"
                    },
                    {
                        "description": "The response format to retrieve __CertificateAuthservice__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetCertificateAuthserviceResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/CertificateAuthservice"
                            }
                        }
                    }
                ]
            },
            "UpdateCertificateAuthserviceResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __CertificateAuthservice__ in object format.",
                        "type": "object",
                        "title": "UpdateCertificateAuthserviceResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/CertificateAuthservice"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __CertificateAuthservice__ .",
                        "type": "string",
                        "title": "UpdateCertificateAuthserviceResponse"
                    }
                ]
            },
            "RadiusAuthservice": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "acct_retries": {
                        "type": "integer",
                        "description": "The number of times to attempt to contact an accounting RADIUS server.",
                        "format": "int64",
                        "example": 1
                    },
                    "acct_timeout": {
                        "type": "integer",
                        "description": "The number of seconds to wait for a response from the RADIUS server.",
                        "format": "int64",
                        "example": 1
                    },
                    "auth_retries": {
                        "type": "integer",
                        "description": "The number of times to attempt to contact an authentication RADIUS server.",
                        "format": "int64",
                        "example": 1
                    },
                    "auth_timeout": {
                        "type": "integer",
                        "description": "The number of seconds to wait for a response from the RADIUS server.",
                        "format": "int64",
                        "example": 1
                    },
                    "cache_ttl": {
                        "type": "integer",
                        "description": "The TTL of cached authentication data in seconds.",
                        "format": "int64",
                        "example": 1
                    },
                    "comment": {
                        "type": "string",
                        "description": "The RADIUS descriptive comment.",
                        "example": "Example comment"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines whether the RADIUS authentication service is disabled.",
                        "example": false
                    },
                    "enable_cache": {
                        "type": "boolean",
                        "description": "Determines whether the authentication cache is enabled.",
                        "example": false
                    },
                    "mode": {
                        "type": "string",
                        "description": "The way to contact the RADIUS server.",
                        "enum": [
                            "HUNT_GROUP",
                            "ROUND_ROBIN"
                        ],
                        "example": "Example mode"
                    },
                    "name": {
                        "type": "string",
                        "description": "The RADIUS authentication service name.",
                        "example": "Example name"
                    },
                    "recovery_interval": {
                        "type": "integer",
                        "description": "The time period to wait before retrying a server that has been marked as down.",
                        "format": "int64",
                        "example": 1
                    },
                    "servers": {
                        "type": "array",
                        "description": "The ordered list of RADIUS authentication servers.",
                        "enum": [
                            "radius:server"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/RadiusAuthserviceServers"
                        }
                    }
                }
            },
            "RadiusAuthserviceServers": {
                "type": "object",
                "properties": {
                    "acct_port": {
                        "type": "integer",
                        "description": "The accounting port.",
                        "format": "int64",
                        "example": 1
                    },
                    "auth_port": {
                        "type": "integer",
                        "description": "The authorization port.",
                        "format": "int64",
                        "example": 1
                    },
                    "auth_type": {
                        "type": "string",
                        "description": "The authentication protocol.",
                        "enum": [
                            "CHAP",
                            "PAP"
                        ],
                        "example": "Example auth_type"
                    },
                    "comment": {
                        "type": "string",
                        "description": "The RADIUS descriptive comment.",
                        "example": "Example comment"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines whether the RADIUS server is disabled.",
                        "example": false
                    },
                    "address": {
                        "type": "string",
                        "description": "The FQDN or the IP address of the RADIUS server that is used for authentication.",
                        "example": "Example address"
                    },
                    "shared_secret": {
                        "type": "string",
                        "description": "The shared secret that the NIOS appliance and the RADIUS server use to encrypt and decrypt their messages.",
                        "writeOnly": true,
                        "example": "Example shared_secret"
                    },
                    "use_accounting": {
                        "type": "boolean",
                        "description": "Determines whether RADIUS accounting is enabled.",
                        "example": false
                    },
                    "use_mgmt_port": {
                        "type": "boolean",
                        "description": "Determines whether connection via the management interface is allowed.",
                        "example": false
                    }
                }
            },
            "ListRadiusAuthserviceResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __RadiusAuthservice__ objects.",
                        "type": "array",
                        "title": "ListRadiusAuthserviceResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/RadiusAuthservice"
                        }
                    },
                    {
                        "description": "The response format to retrieve __RadiusAuthservice__ objects.",
                        "type": "object",
                        "title": "ListRadiusAuthserviceResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RadiusAuthservice"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateRadiusAuthserviceResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __RadiusAuthservice__ in object format.",
                        "type": "object",
                        "title": "CreateRadiusAuthserviceResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/RadiusAuthservice"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __RadiusAuthservice__.",
                        "type": "string",
                        "title": "CreateRadiusAuthserviceResponse"
                    }
                ]
            },
            "GetRadiusAuthserviceResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/RadiusAuthservice"
                    },
                    {
                        "description": "The response format to retrieve __RadiusAuthservice__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetRadiusAuthserviceResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/RadiusAuthservice"
                            }
                        }
                    }
                ]
            },
            "UpdateRadiusAuthserviceResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __RadiusAuthservice__ in object format.",
                        "type": "object",
                        "title": "UpdateRadiusAuthserviceResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/RadiusAuthservice"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __RadiusAuthservice__ .",
                        "type": "string",
                        "title": "UpdateRadiusAuthserviceResponse"
                    }
                ]
            },
            "TacacsplusAuthservice": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "acct_retries": {
                        "type": "integer",
                        "description": "The number of the accounting retries before giving up and moving on to the next server.",
                        "format": "int64",
                        "example": 1
                    },
                    "acct_timeout": {
                        "type": "integer",
                        "description": "The accounting retry period in milliseconds.",
                        "format": "int64",
                        "example": 1
                    },
                    "auth_retries": {
                        "type": "integer",
                        "description": "The number of the authentication/authorization retries before giving up and moving on to the next server.",
                        "format": "int64",
                        "example": 1
                    },
                    "auth_timeout": {
                        "type": "integer",
                        "description": "The authentication/authorization timeout period in milliseconds.",
                        "format": "int64",
                        "example": 1
                    },
                    "comment": {
                        "type": "string",
                        "description": "The TACACS+ authentication service descriptive comment.",
                        "example": "Example comment"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines whether the TACACS+ authentication service object is disabled.",
                        "example": false
                    },
                    "name": {
                        "type": "string",
                        "description": "The TACACS+ authentication service name.",
                        "example": "Example name"
                    },
                    "servers": {
                        "type": "array",
                        "description": "The list of the TACACS+ servers used for authentication.",
                        "enum": [
                            "tacacsplus:server"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/TacacsplusAuthserviceServers"
                        }
                    }
                }
            },
            "TacacsplusAuthserviceServers": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The valid IP address or FQDN of the TACACS+ server.",
                        "example": "Example address"
                    },
                    "port": {
                        "type": "integer",
                        "description": "The TACACS+ server port.",
                        "format": "int64",
                        "example": 1
                    },
                    "shared_secret": {
                        "type": "string",
                        "description": "The secret key with which to connect to the TACACS+ server.",
                        "writeOnly": true,
                        "example": "Example shared_secret"
                    },
                    "auth_type": {
                        "type": "string",
                        "description": "The authentication protocol.",
                        "enum": [
                            "ASCII",
                            "PAP",
                            "CHAP"
                        ],
                        "example": "Example auth_type"
                    },
                    "comment": {
                        "type": "string",
                        "description": "The TACACS+ descriptive comment.",
                        "example": "Example comment"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines whether the TACACS+ server is disabled.",
                        "example": false
                    },
                    "use_mgmt_port": {
                        "type": "boolean",
                        "description": "Determines whether the TACACS+ server is connected via the management interface.",
                        "example": false
                    },
                    "use_accounting": {
                        "type": "boolean",
                        "description": "Determines whether the TACACS+ accounting server is used.",
                        "example": false
                    }
                }
            },
            "ListTacacsplusAuthserviceResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __TacacsplusAuthservice__ objects.",
                        "type": "array",
                        "title": "ListTacacsplusAuthserviceResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/TacacsplusAuthservice"
                        }
                    },
                    {
                        "description": "The response format to retrieve __TacacsplusAuthservice__ objects.",
                        "type": "object",
                        "title": "ListTacacsplusAuthserviceResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/TacacsplusAuthservice"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateTacacsplusAuthserviceResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __TacacsplusAuthservice__ in object format.",
                        "type": "object",
                        "title": "CreateTacacsplusAuthserviceResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/TacacsplusAuthservice"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __TacacsplusAuthservice__.",
                        "type": "string",
                        "title": "CreateTacacsplusAuthserviceResponse"
                    }
                ]
            },
            "GetTacacsplusAuthserviceResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/TacacsplusAuthservice"
                    },
                    {
                        "description": "The response format to retrieve __TacacsplusAuthservice__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetTacacsplusAuthserviceResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/TacacsplusAuthservice"
                            }
                        }
                    }
                ]
            },
            "UpdateTacacsplusAuthserviceResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __TacacsplusAuthservice__ in object format.",
                        "type": "object",
                        "title": "UpdateTacacsplusAuthserviceResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/TacacsplusAuthservice"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __TacacsplusAuthservice__ .",
                        "type": "string",
                        "title": "UpdateTacacsplusAuthserviceResponse"
                    }
                ]
            },
            "LdapAuthService": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "The LDAP descriptive comment.",
                        "example": "Example comment"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines if the LDAP authentication service is disabled.",
                        "example": false
                    },
                    "ea_mapping": {
                        "type": "array",
                        "description": "The mapping LDAP fields to extensible attributes.",
                        "enum": [
                            "ldap_eamapping"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/LdapAuthServiceEaMapping"
                        }
                    },
                    "ldap_group_attribute": {
                        "type": "string",
                        "description": "The name of the LDAP attribute that defines group membership.",
                        "example": "Example ldap_group_attribute"
                    },
                    "ldap_group_authentication_type": {
                        "type": "string",
                        "description": "The LDAP group authentication type.",
                        "enum": [
                            "GROUP_ATTRIBUTE",
                            "POSIX_GROUP"
                        ],
                        "example": "Example ldap_group_authentication_type"
                    },
                    "ldap_user_attribute": {
                        "type": "string",
                        "description": "The LDAP userid attribute that is used for search.",
                        "example": "Example ldap_user_attribute"
                    },
                    "mode": {
                        "type": "string",
                        "description": "The LDAP authentication mode.",
                        "enum": [
                            "ORDERED_LIST",
                            "ROUND_ROBIN"
                        ],
                        "example": "Example mode"
                    },
                    "name": {
                        "type": "string",
                        "description": "The LDAP authentication service name.",
                        "example": "Example name"
                    },
                    "recovery_interval": {
                        "type": "integer",
                        "description": "The period of time in seconds to wait before trying to contact a LDAP server that has been marked as 'DOWN'.",
                        "format": "int64",
                        "example": 1
                    },
                    "retries": {
                        "type": "integer",
                        "description": "The maximum number of LDAP authentication attempts.",
                        "format": "int64",
                        "example": 1
                    },
                    "search_scope": {
                        "type": "string",
                        "description": "The starting point of the LDAP search.",
                        "enum": [
                            "BASE",
                            "ONELEVEL",
                            "SUBTREE"
                        ],
                        "example": "Example search_scope"
                    },
                    "servers": {
                        "type": "array",
                        "description": "The list of LDAP servers used for authentication.",
                        "enum": [
                            "ldap_server"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/LdapAuthServiceServers"
                        }
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "The LDAP authentication timeout in seconds.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "LdapAuthServiceEaMapping": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The LDAP attribute name.",
                        "example": "Example name"
                    },
                    "mapped_ea": {
                        "type": "string",
                        "description": "The name of the extensible attribute definition object to which the LDAP attribute is mapped.",
                        "example": "Example mapped_ea"
                    }
                }
            },
            "LdapAuthServiceServers": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The IP address or FQDN of the LDAP server.",
                        "example": "Example address"
                    },
                    "authentication_type": {
                        "type": "string",
                        "description": "The authentication type for the LDAP server.",
                        "enum": [
                            "ANONYMOUS",
                            "AUTHENTICATED"
                        ],
                        "example": "Example authentication_type"
                    },
                    "base_dn": {
                        "type": "string",
                        "description": "The base DN for the LDAP server.",
                        "example": "Example base_dn"
                    },
                    "bind_password": {
                        "type": "string",
                        "description": "The user password for authentication.",
                        "writeOnly": true,
                        "example": "Example bind_password"
                    },
                    "bind_user_dn": {
                        "type": "string",
                        "description": "The user DN for authentication.",
                        "example": "Example bind_user_dn"
                    },
                    "comment": {
                        "type": "string",
                        "description": "The LDAP descriptive comment.",
                        "example": "Example comment"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines if the LDAP server is disabled.",
                        "example": false
                    },
                    "encryption": {
                        "type": "string",
                        "description": "The LDAP server encryption type.",
                        "enum": [
                            "NONE",
                            "SSL"
                        ],
                        "example": "Example encryption"
                    },
                    "port": {
                        "type": "integer",
                        "description": "The LDAP server port.",
                        "format": "int64",
                        "example": 1
                    },
                    "use_mgmt_port": {
                        "type": "boolean",
                        "description": "Determines if the connection via the MGMT interface is allowed.",
                        "example": false
                    },
                    "version": {
                        "type": "string",
                        "description": "The LDAP server version.",
                        "enum": [
                            "V2",
                            "V3"
                        ],
                        "example": "Example version"
                    }
                }
            },
            "ListLdapAuthServiceResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __LdapAuthService__ objects.",
                        "type": "array",
                        "title": "ListLdapAuthServiceResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/LdapAuthService"
                        }
                    },
                    {
                        "description": "The response format to retrieve __LdapAuthService__ objects.",
                        "type": "object",
                        "title": "ListLdapAuthServiceResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/LdapAuthService"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateLdapAuthServiceResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __LdapAuthService__ in object format.",
                        "type": "object",
                        "title": "CreateLdapAuthServiceResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/LdapAuthService"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __LdapAuthService__.",
                        "type": "string",
                        "title": "CreateLdapAuthServiceResponse"
                    }
                ]
            },
            "GetLdapAuthServiceResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/LdapAuthService"
                    },
                    {
                        "description": "The response format to retrieve __LdapAuthService__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetLdapAuthServiceResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/LdapAuthService"
                            }
                        }
                    }
                ]
            },
            "UpdateLdapAuthServiceResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __LdapAuthService__ in object format.",
                        "type": "object",
                        "title": "UpdateLdapAuthServiceResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/LdapAuthService"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __LdapAuthService__ .",
                        "type": "string",
                        "title": "UpdateLdapAuthServiceResponse"
                    }
                ]
            },
            "SamlAuthservice": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "The descriptive comment for the SAML authentication service.",
                        "example": "Example comment"
                    },
                    "idp": {
                        "$ref": "#/components/schemas/SamlAuthserviceIdp"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the SAML authentication service.",
                        "example": "Example name"
                    },
                    "session_timeout": {
                        "type": "integer",
                        "description": "The session timeout in seconds.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "SamlAuthserviceIdp": {
                "type": "object",
                "properties": {
                    "idp_type": {
                        "type": "string",
                        "description": "SAML Identity Provider type.",
                        "enum": [
                            "OKTA",
                            "AZURE_SSO",
                            "SHIBBOLETH_SSO",
                            "PING_IDENTITY",
                            "OTHER"
                        ],
                        "example": "Example idp_type"
                    },
                    "comment": {
                        "type": "string",
                        "description": "The SAML Identity Provider descriptive comment.",
                        "example": "Example comment"
                    },
                    "metadata_url": {
                        "type": "string",
                        "description": "Identity Provider Metadata URL.",
                        "example": "Example metadata_url"
                    },
                    "metadata_token": {
                        "type": "string",
                        "description": "The token returned by the uploadinit function call in object fileop.",
                        "writeOnly": true,
                        "example": "Example metadata_token"
                    },
                    "groupname": {
                        "type": "string",
                        "description": "The SAML groupname optional user group attribute.",
                        "example": "Example groupname"
                    },
                    "sso_redirect_url": {
                        "type": "string",
                        "description": "host name or IP address of the GM",
                        "example": "Example sso_redirect_url"
                    }
                }
            },
            "ListSamlAuthserviceResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __SamlAuthservice__ objects.",
                        "type": "array",
                        "title": "ListSamlAuthserviceResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/SamlAuthservice"
                        }
                    },
                    {
                        "description": "The response format to retrieve __SamlAuthservice__ objects.",
                        "type": "object",
                        "title": "ListSamlAuthserviceResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SamlAuthservice"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateSamlAuthserviceResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __SamlAuthservice__ in object format.",
                        "type": "object",
                        "title": "CreateSamlAuthserviceResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/SamlAuthservice"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __SamlAuthservice__.",
                        "type": "string",
                        "title": "CreateSamlAuthserviceResponse"
                    }
                ]
            },
            "GetSamlAuthserviceResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/SamlAuthservice"
                    },
                    {
                        "description": "The response format to retrieve __SamlAuthservice__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetSamlAuthserviceResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/SamlAuthservice"
                            }
                        }
                    }
                ]
            },
            "UpdateSamlAuthserviceResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __SamlAuthservice__ in object format.",
                        "type": "object",
                        "title": "UpdateSamlAuthserviceResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/SamlAuthservice"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __SamlAuthservice__ .",
                        "type": "string",
                        "title": "UpdateSamlAuthserviceResponse"
                    }
                ]
            },
            "LocaluserAuthservice": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "The local user authentication service comment.",
                        "readOnly": true,
                        "example": "Example comment"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "Flag that indicates whether the local user authentication service is enabled or not.",
                        "readOnly": true,
                        "example": false
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the local user authentication service.",
                        "readOnly": true,
                        "example": "Example name"
                    }
                }
            },
            "ListLocaluserAuthserviceResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __LocaluserAuthservice__ objects.",
                        "type": "array",
                        "title": "ListLocaluserAuthserviceResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/LocaluserAuthservice"
                        }
                    },
                    {
                        "description": "The response format to retrieve __LocaluserAuthservice__ objects.",
                        "type": "object",
                        "title": "ListLocaluserAuthserviceResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/LocaluserAuthservice"
                                }
                            }
                        }
                    }
                ]
            },
            "GetLocaluserAuthserviceResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/LocaluserAuthservice"
                    },
                    {
                        "description": "The response format to retrieve __LocaluserAuthservice__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetLocaluserAuthserviceResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/LocaluserAuthservice"
                            }
                        }
                    }
                ]
            },
            "UpdateLocaluserAuthserviceResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __LocaluserAuthservice__ in object format.",
                        "type": "object",
                        "title": "UpdateLocaluserAuthserviceResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/LocaluserAuthservice"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __LocaluserAuthservice__ .",
                        "type": "string",
                        "title": "UpdateLocaluserAuthserviceResponse"
                    }
                ]
            },
            "Snmpuser": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "authentication_password": {
                        "type": "string",
                        "description": "Determines an authentication password for the user. This is a write-only attribute.",
                        "writeOnly": true,
                        "example": "Example authentication_password"
                    },
                    "authentication_protocol": {
                        "type": "string",
                        "description": "The authentication protocol to be used for this user.",
                        "enum": [
                            "NONE",
                            "MD5",
                            "SHA"
                        ],
                        "example": "Example authentication_protocol"
                    },
                    "comment": {
                        "type": "string",
                        "description": "A descriptive comment for the SNMPv3 User.",
                        "example": "Example comment"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines if SNMPv3 user is disabled or not.",
                        "example": false
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the user.",
                        "example": "Example name"
                    },
                    "privacy_password": {
                        "type": "string",
                        "description": "Determines a password for the privacy protocol.",
                        "writeOnly": true,
                        "example": "Example privacy_password"
                    },
                    "privacy_protocol": {
                        "type": "string",
                        "description": "The privacy protocol to be used for this user.",
                        "enum": [
                            "NONE",
                            "DES",
                            "AES"
                        ],
                        "example": "Example privacy_protocol"
                    }
                }
            },
            "ListSnmpuserResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Snmpuser__ objects.",
                        "type": "array",
                        "title": "ListSnmpuserResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Snmpuser"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Snmpuser__ objects.",
                        "type": "object",
                        "title": "ListSnmpuserResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Snmpuser"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateSnmpuserResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Snmpuser__ in object format.",
                        "type": "object",
                        "title": "CreateSnmpuserResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Snmpuser"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Snmpuser__.",
                        "type": "string",
                        "title": "CreateSnmpuserResponse"
                    }
                ]
            },
            "GetSnmpuserResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Snmpuser"
                    },
                    {
                        "description": "The response format to retrieve __Snmpuser__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetSnmpuserResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Snmpuser"
                            }
                        }
                    }
                ]
            },
            "UpdateSnmpuserResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Snmpuser__ in object format.",
                        "type": "object",
                        "title": "UpdateSnmpuserResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Snmpuser"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Snmpuser__ .",
                        "type": "string",
                        "title": "UpdateSnmpuserResponse"
                    }
                ]
            },
            "Ftpuser": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "create_home_dir": {
                        "type": "boolean",
                        "description": "Determines whether to create the home directory with the user name or to use the existing directory as the home directory.",
                        "writeOnly": true,
                        "example": false
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "home_dir": {
                        "type": "string",
                        "description": "The absolute path of the FTP user's home directory.",
                        "example": "Example home_dir"
                    },
                    "password": {
                        "type": "string",
                        "description": "The FTP user password.",
                        "writeOnly": true,
                        "example": "Example password"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The FTP user permission.",
                        "enum": [
                            "RO",
                            "RW"
                        ],
                        "example": "Example permission"
                    },
                    "username": {
                        "type": "string",
                        "description": "The FTP user name.",
                        "example": "Example username"
                    }
                }
            },
            "ListFtpuserResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Ftpuser__ objects.",
                        "type": "array",
                        "title": "ListFtpuserResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Ftpuser"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Ftpuser__ objects.",
                        "type": "object",
                        "title": "ListFtpuserResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Ftpuser"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateFtpuserResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Ftpuser__ in object format.",
                        "type": "object",
                        "title": "CreateFtpuserResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ftpuser"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Ftpuser__.",
                        "type": "string",
                        "title": "CreateFtpuserResponse"
                    }
                ]
            },
            "GetFtpuserResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Ftpuser"
                    },
                    {
                        "description": "The response format to retrieve __Ftpuser__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetFtpuserResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ftpuser"
                            }
                        }
                    }
                ]
            },
            "UpdateFtpuserResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Ftpuser__ in object format.",
                        "type": "object",
                        "title": "UpdateFtpuserResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ftpuser"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Ftpuser__ .",
                        "type": "string",
                        "title": "UpdateFtpuserResponse"
                    }
                ]
            },
            "Networkuser": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "address": {
                        "type": "string",
                        "description": "The IPv4 Address or IPv6 Address of the Network User.",
                        "example": "Example address"
                    },
                    "address_object": {
                        "type": "string",
                        "description": "The reference of the IPAM IPv4Address or IPv6Address object describing the address of the Network User.",
                        "readOnly": true,
                        "example": "Example address_object"
                    },
                    "data_source": {
                        "type": "string",
                        "description": "The Network User data source.",
                        "readOnly": true,
                        "example": "Example data_source"
                    },
                    "data_source_ip": {
                        "type": "string",
                        "description": "The Network User data source IPv4 Address or IPv6 Address or FQDN address.",
                        "readOnly": true,
                        "example": "Example data_source_ip"
                    },
                    "domainname": {
                        "type": "string",
                        "description": "The domain name of the Network User.",
                        "example": "Example domainname"
                    },
                    "first_seen_time": {
                        "type": "integer",
                        "description": "The first seen timestamp of the Network User.",
                        "format": "int64",
                        "example": 1
                    },
                    "guid": {
                        "type": "string",
                        "description": "The group identifier of the Network User.",
                        "example": "Example guid"
                    },
                    "last_seen_time": {
                        "type": "integer",
                        "description": "The last seen timestamp of the Network User.",
                        "format": "int64",
                        "example": 1
                    },
                    "last_updated_time": {
                        "type": "integer",
                        "description": "The last updated timestamp of the Network User.",
                        "format": "int64",
                        "example": 1
                    },
                    "logon_id": {
                        "type": "string",
                        "description": "The logon identifier of the Network User.",
                        "example": "Example logon_id"
                    },
                    "logout_time": {
                        "type": "integer",
                        "description": "The logout timestamp of the Network User.",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Network User.",
                        "example": "Example name"
                    },
                    "network": {
                        "type": "string",
                        "description": "The reference to the network to which the Network User belongs.",
                        "readOnly": true,
                        "example": "Example network"
                    },
                    "network_view": {
                        "type": "string",
                        "description": "The name of the network view in which this Network User resides.",
                        "example": "Example network_view"
                    },
                    "user_status": {
                        "type": "string",
                        "description": "The status of the Network User.",
                        "enum": [
                            "ACTIVE",
                            "LOGOUT",
                            "TIMEOUT"
                        ],
                        "readOnly": true,
                        "example": "Example user_status"
                    }
                }
            },
            "ListNetworkuserResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Networkuser__ objects.",
                        "type": "array",
                        "title": "ListNetworkuserResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Networkuser"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Networkuser__ objects.",
                        "type": "object",
                        "title": "ListNetworkuserResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Networkuser"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateNetworkuserResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Networkuser__ in object format.",
                        "type": "object",
                        "title": "CreateNetworkuserResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Networkuser"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Networkuser__.",
                        "type": "string",
                        "title": "CreateNetworkuserResponse"
                    }
                ]
            },
            "GetNetworkuserResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Networkuser"
                    },
                    {
                        "description": "The response format to retrieve __Networkuser__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetNetworkuserResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Networkuser"
                            }
                        }
                    }
                ]
            },
            "UpdateNetworkuserResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Networkuser__ in object format.",
                        "type": "object",
                        "title": "UpdateNetworkuserResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Networkuser"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Networkuser__ .",
                        "type": "string",
                        "title": "UpdateNetworkuserResponse"
                    }
                ]
            },
            "AdAuthService": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "ad_domain": {
                        "type": "string",
                        "description": "The Active Directory domain to which this server belongs.",
                        "example": "Example ad_domain"
                    },
                    "comment": {
                        "type": "string",
                        "description": "The descriptive comment for the AD authentication service.",
                        "example": "Example comment"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "Determines if Active Directory Authentication Service is disabled.",
                        "example": false
                    },
                    "domain_controllers": {
                        "type": "array",
                        "description": "The AD authentication server list.",
                        "enum": [
                            "ad_auth_server"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/AdAuthServiceDomainControllers"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The AD authentication service name.",
                        "example": "Example name"
                    },
                    "nested_group_querying": {
                        "type": "boolean",
                        "description": "Determines whether the nested group querying is enabled.",
                        "example": false
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "The number of seconds that the appliance waits for a response from the AD server.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "AdAuthServiceDomainControllers": {
                "type": "object",
                "properties": {
                    "fqdn_or_ip": {
                        "type": "string",
                        "description": "The FQDN (Fully Qualified Domain Name) or IP address of the server.",
                        "example": "Example fqdn_or_ip"
                    },
                    "auth_port": {
                        "type": "integer",
                        "description": "The authentication port.",
                        "format": "int64",
                        "example": 1
                    },
                    "comment": {
                        "type": "string",
                        "description": "The descriptive comment for the AD authentication server.",
                        "example": "Example comment"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "Determines if the AD authorization server is disabled.",
                        "example": false
                    },
                    "encryption": {
                        "type": "string",
                        "description": "The type of encryption to use.",
                        "enum": [
                            "SSL",
                            "NONE"
                        ],
                        "example": "Example encryption"
                    },
                    "mgmt_port": {
                        "type": "boolean",
                        "description": "Determine if the MGMT port is enabled for the AD authentication server.",
                        "example": false
                    },
                    "use_mgmt_port": {
                        "type": "boolean",
                        "description": "Use flag for: mgmt_port",
                        "example": false
                    }
                }
            },
            "ListAdAuthServiceResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __AdAuthService__ objects.",
                        "type": "array",
                        "title": "ListAdAuthServiceResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/AdAuthService"
                        }
                    },
                    {
                        "description": "The response format to retrieve __AdAuthService__ objects.",
                        "type": "object",
                        "title": "ListAdAuthServiceResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AdAuthService"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateAdAuthServiceResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __AdAuthService__ in object format.",
                        "type": "object",
                        "title": "CreateAdAuthServiceResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/AdAuthService"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __AdAuthService__.",
                        "type": "string",
                        "title": "CreateAdAuthServiceResponse"
                    }
                ]
            },
            "GetAdAuthServiceResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/AdAuthService"
                    },
                    {
                        "description": "The response format to retrieve __AdAuthService__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetAdAuthServiceResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/AdAuthService"
                            }
                        }
                    }
                ]
            },
            "UpdateAdAuthServiceResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __AdAuthService__ in object format.",
                        "type": "object",
                        "title": "UpdateAdAuthServiceResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/AdAuthService"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __AdAuthService__ .",
                        "type": "string",
                        "title": "UpdateAdAuthServiceResponse"
                    }
                ]
            },
            "HsmAllgroups": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "groups": {
                        "type": "array",
                        "description": "The list of HSM groups configured on the appliance.",
                        "enum": [
                            "hsm:thaleslunagroup"
                        ],
                        "items": {
                            "type": "string",
                            "enum": [
                                "hsm:thaleslunagroup"
                            ]
                        }
                    }
                }
            },
            "ListHsmAllgroupsResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __HsmAllgroups__ objects.",
                        "type": "array",
                        "title": "ListHsmAllgroupsResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/HsmAllgroups"
                        }
                    },
                    {
                        "description": "The response format to retrieve __HsmAllgroups__ objects.",
                        "type": "object",
                        "title": "ListHsmAllgroupsResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/HsmAllgroups"
                                }
                            }
                        }
                    }
                ]
            },
            "GetHsmAllgroupsResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/HsmAllgroups"
                    },
                    {
                        "description": "The response format to retrieve __HsmAllgroups__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetHsmAllgroupsResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/HsmAllgroups"
                            }
                        }
                    }
                ]
            },
            "UpdateHsmAllgroupsResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __HsmAllgroups__ in object format.",
                        "type": "object",
                        "title": "UpdateHsmAllgroupsResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/HsmAllgroups"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __HsmAllgroups__ .",
                        "type": "string",
                        "title": "UpdateHsmAllgroupsResponse"
                    }
                ]
            },
            "HsmEntrustnshieldgroup": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "card_name": {
                        "type": "string",
                        "description": "The Entrust nShield HSM softcard name.",
                        "example": "Example card_name"
                    },
                    "comment": {
                        "type": "string",
                        "description": "The Entrust nShield HSM group comment.",
                        "example": "Example comment"
                    },
                    "entrustnshield_hsm": {
                        "type": "array",
                        "description": "The list of Entrust nShield HSM devices.",
                        "enum": [
                            "hsm:entrustnshield"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/HsmEntrustnshieldgroupEntrustnshieldHsm"
                        }
                    },
                    "key_server_ip": {
                        "type": "string",
                        "description": "The remote file server (RFS) IPv4 Address.",
                        "example": "Example key_server_ip"
                    },
                    "key_server_port": {
                        "type": "integer",
                        "description": "The remote file server (RFS) port.",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "The Entrust nShield HSM group name.",
                        "example": "Example name"
                    },
                    "pass_phrase": {
                        "type": "string",
                        "description": "The password phrase used to unlock the Entrust nShield HSM keystore.",
                        "writeOnly": true,
                        "example": "Example pass_phrase"
                    },
                    "protection": {
                        "type": "string",
                        "description": "The level of protection that the HSM group uses for the DNSSEC key data.",
                        "enum": [
                            "MODULE",
                            "SOFTCARD"
                        ],
                        "example": "Example protection"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of all Entrust nShield HSM devices in the group.",
                        "enum": [
                            "UP",
                            "DOWN"
                        ],
                        "readOnly": true,
                        "example": "Example status"
                    }
                }
            },
            "HsmEntrustnshieldgroupEntrustnshieldHsm": {
                "type": "object",
                "properties": {
                    "remote_ip": {
                        "type": "string",
                        "description": "The IPv4 Address of the Entrust nShield HSM device.",
                        "example": "Example remote_ip"
                    },
                    "remote_port": {
                        "type": "integer",
                        "description": "The Entrust nShield HSM device destination port.",
                        "format": "int64",
                        "example": 1
                    },
                    "status": {
                        "type": "string",
                        "description": "The Entrust nShield HSM device status.",
                        "enum": [
                            "UP",
                            "DOWN"
                        ],
                        "readOnly": true,
                        "example": "Example status"
                    },
                    "remote_esn": {
                        "type": "string",
                        "description": "The Entrust nShield HSM device electronic serial number.",
                        "readOnly": true,
                        "example": "Example remote_esn"
                    },
                    "keyhash": {
                        "type": "string",
                        "description": "The Entrust nShield HSM device public key digest.",
                        "example": "Example keyhash"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines whether the Entrust nShield HSM device is disabled.",
                        "example": false
                    }
                }
            },
            "ListHsmEntrustnshieldgroupResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __HsmEntrustnshieldgroup__ objects.",
                        "type": "array",
                        "title": "ListHsmEntrustnshieldgroupResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/HsmEntrustnshieldgroup"
                        }
                    },
                    {
                        "description": "The response format to retrieve __HsmEntrustnshieldgroup__ objects.",
                        "type": "object",
                        "title": "ListHsmEntrustnshieldgroupResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/HsmEntrustnshieldgroup"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateHsmEntrustnshieldgroupResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __HsmEntrustnshieldgroup__ in object format.",
                        "type": "object",
                        "title": "CreateHsmEntrustnshieldgroupResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/HsmEntrustnshieldgroup"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __HsmEntrustnshieldgroup__.",
                        "type": "string",
                        "title": "CreateHsmEntrustnshieldgroupResponse"
                    }
                ]
            },
            "GetHsmEntrustnshieldgroupResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/HsmEntrustnshieldgroup"
                    },
                    {
                        "description": "The response format to retrieve __HsmEntrustnshieldgroup__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetHsmEntrustnshieldgroupResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/HsmEntrustnshieldgroup"
                            }
                        }
                    }
                ]
            },
            "UpdateHsmEntrustnshieldgroupResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __HsmEntrustnshieldgroup__ in object format.",
                        "type": "object",
                        "title": "UpdateHsmEntrustnshieldgroupResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/HsmEntrustnshieldgroup"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __HsmEntrustnshieldgroup__ .",
                        "type": "string",
                        "title": "UpdateHsmEntrustnshieldgroupResponse"
                    }
                ]
            },
            "HsmThaleslunagroup": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "The HSM Thales Luna group comment.",
                        "example": "Example comment"
                    },
                    "group_sn": {
                        "type": "string",
                        "description": "The HSM Thales Luna group serial number.",
                        "readOnly": true,
                        "example": "Example group_sn"
                    },
                    "hsm_version": {
                        "type": "string",
                        "description": "The HSM Thales Luna version.",
                        "enum": [
                            "Luna_4",
                            "Luna_5",
                            "Luna_6",
                            "Luna_7_CPL"
                        ],
                        "example": "Example hsm_version"
                    },
                    "name": {
                        "type": "string",
                        "description": "The HSM Thales Luna group name.",
                        "example": "Example name"
                    },
                    "pass_phrase": {
                        "type": "string",
                        "description": "The pass phrase used to unlock the HSM Thales Luna keystore.",
                        "writeOnly": true,
                        "example": "Example pass_phrase"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of all HSM Thales Luna devices in the group.",
                        "enum": [
                            "UP",
                            "DOWN"
                        ],
                        "readOnly": true,
                        "example": "Example status"
                    },
                    "thalesluna": {
                        "type": "array",
                        "description": "The list of HSM Thales Luna devices.",
                        "enum": [
                            "hsm:thalesluna"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/HsmThaleslunagroupThalesluna"
                        }
                    }
                }
            },
            "HsmThaleslunagroupThalesluna": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The HSM Thales Luna device IPv4 Address or FQDN.",
                        "example": "Example name"
                    },
                    "partition_serial_number": {
                        "type": "string",
                        "description": "The HSM Thales Luna device partition serial number (PSN).",
                        "example": "Example partition_serial_number"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines whether the HSM Thales Luna device is disabled.",
                        "example": false
                    },
                    "partition_id": {
                        "type": "string",
                        "description": "Partition ID that is displayed after the appliance has successfully connected to the HSM Thales Luna device.",
                        "readOnly": true,
                        "example": "Example partition_id"
                    },
                    "is_fips_compliant": {
                        "type": "boolean",
                        "description": "Determines whether the HSM Thales Luna device is FIPS compliant.",
                        "readOnly": true,
                        "example": false
                    },
                    "server_cert": {
                        "type": "string",
                        "description": "The token returned by the uploadinit function call in object fileop for a Thales Luna HSM device certificate.",
                        "writeOnly": true,
                        "example": "Example server_cert"
                    },
                    "partition_capacity": {
                        "type": "integer",
                        "description": "The HSM Thales Luna device partition capacity percentage used.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "status": {
                        "type": "string",
                        "description": "The HSM Thales Luna device status.",
                        "enum": [
                            "UP",
                            "DOWN"
                        ],
                        "readOnly": true,
                        "example": "Example status"
                    }
                }
            },
            "ListHsmThaleslunagroupResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __HsmThaleslunagroup__ objects.",
                        "type": "array",
                        "title": "ListHsmThaleslunagroupResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/HsmThaleslunagroup"
                        }
                    },
                    {
                        "description": "The response format to retrieve __HsmThaleslunagroup__ objects.",
                        "type": "object",
                        "title": "ListHsmThaleslunagroupResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/HsmThaleslunagroup"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateHsmThaleslunagroupResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __HsmThaleslunagroup__ in object format.",
                        "type": "object",
                        "title": "CreateHsmThaleslunagroupResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/HsmThaleslunagroup"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __HsmThaleslunagroup__.",
                        "type": "string",
                        "title": "CreateHsmThaleslunagroupResponse"
                    }
                ]
            },
            "GetHsmThaleslunagroupResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/HsmThaleslunagroup"
                    },
                    {
                        "description": "The response format to retrieve __HsmThaleslunagroup__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetHsmThaleslunagroupResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/HsmThaleslunagroup"
                            }
                        }
                    }
                ]
            },
            "UpdateHsmThaleslunagroupResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __HsmThaleslunagroup__ in object format.",
                        "type": "object",
                        "title": "UpdateHsmThaleslunagroupResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/HsmThaleslunagroup"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __HsmThaleslunagroup__ .",
                        "type": "string",
                        "title": "UpdateHsmThaleslunagroupResponse"
                    }
                ]
            }
        }
    }
}