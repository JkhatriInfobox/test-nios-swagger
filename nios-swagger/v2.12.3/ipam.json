{
    "openapi": "3.0.0",
    "info": {
        "title": "Infoblox IPAM API",
        "description": "OpenAPI specification for Infoblox NIOS WAPI IPAM objects",
        "version": "2.13.6",
        "termsOfService": "https://www.infoblox.com",
        "contact": {
            "name": "Infoblox",
            "url": "https://www.infoblox.com"
        },
        "license": {
            "name": "Infoblox License",
            "url": "https://www.infoblox.com"
        }
    },
    "servers": [
        {
            "url": "/wapi/v2.13.6",
            "description": "NIOS WAPI server"
        }
    ],
    "tags": [
        {
            "name": "Ipv4address",
            "description": "Operations for ipv4address objects"
        },
        {
            "name": "Ipv6address",
            "description": "Operations for ipv6address objects"
        },
        {
            "name": "Network",
            "description": "Operations for network objects"
        },
        {
            "name": "Networkcontainer",
            "description": "Operations for networkcontainer objects"
        },
        {
            "name": "Networktemplate",
            "description": "Operations for networktemplate objects"
        },
        {
            "name": "Networkview",
            "description": "Operations for networkview objects"
        },
        {
            "name": "Ipv6network",
            "description": "Operations for ipv6network objects"
        },
        {
            "name": "Ipv6networkcontainer",
            "description": "Operations for ipv6networkcontainer objects"
        },
        {
            "name": "Ipv6networktemplate",
            "description": "Operations for ipv6networktemplate objects"
        },
        {
            "name": "IpamStatistics",
            "description": "Operations for ipam:statistics objects"
        },
        {
            "name": "Vlan",
            "description": "Operations for vlan objects"
        },
        {
            "name": "Vlanview",
            "description": "Operations for vlanview objects"
        },
        {
            "name": "Vlanrange",
            "description": "Operations for vlanrange objects"
        },
        {
            "name": "Bulkhost",
            "description": "Operations for bulkhost objects"
        },
        {
            "name": "Bulkhostnametemplate",
            "description": "Operations for bulkhostnametemplate objects"
        },
        {
            "name": "Discoverytask",
            "description": "Operations for discoverytask objects"
        },
        {
            "name": "NetworkDiscovery",
            "description": "Operations for network_discovery objects"
        },
        {
            "name": "Superhost",
            "description": "Operations for superhost objects"
        },
        {
            "name": "Superhostchild",
            "description": "Operations for superhostchild objects"
        },
        {
            "name": "Hostnamerewritepolicy",
            "description": "Operations for hostnamerewritepolicy objects"
        }
    ],
    "paths": {
        "/ipv4address": {
            "get": {
                "tags": [
                    "Ipv4address"
                ],
                "operationId": "Ipv4addressList",
                "summary": "Retrieve ipv4address objects",
                "description": "Returns a list of ipv4address objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListIpv4addressResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/ipv4address/{reference}": {
            "get": {
                "tags": [
                    "Ipv4address"
                ],
                "operationId": "Ipv4addressRead",
                "summary": "Get a specific ipv4address object",
                "description": "Returns a specific ipv4address object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv4address object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetIpv4addressResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Ipv4address"
                ],
                "operationId": "Ipv4addressUpdate",
                "summary": "Update a ipv4address object",
                "description": "Updates a specific ipv4address object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv4address object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ipv4address"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateIpv4addressResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Ipv4address"
                ],
                "operationId": "Ipv4addressDelete",
                "summary": "Delete a ipv4address object",
                "description": "Deletes a specific ipv4address object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv4address object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/ipv6address": {
            "get": {
                "tags": [
                    "Ipv6address"
                ],
                "operationId": "Ipv6addressList",
                "summary": "Retrieve ipv6address objects",
                "description": "Returns a list of ipv6address objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListIpv6addressResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/ipv6address/{reference}": {
            "get": {
                "tags": [
                    "Ipv6address"
                ],
                "operationId": "Ipv6addressRead",
                "summary": "Get a specific ipv6address object",
                "description": "Returns a specific ipv6address object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6address object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetIpv6addressResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Ipv6address"
                ],
                "operationId": "Ipv6addressUpdate",
                "summary": "Update a ipv6address object",
                "description": "Updates a specific ipv6address object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6address object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ipv6address"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateIpv6addressResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Ipv6address"
                ],
                "operationId": "Ipv6addressDelete",
                "summary": "Delete a ipv6address object",
                "description": "Deletes a specific ipv6address object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6address object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/network": {
            "get": {
                "tags": [
                    "Network"
                ],
                "operationId": "NetworkList",
                "summary": "Retrieve network objects",
                "description": "Returns a list of network objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListNetworkResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Network"
                ],
                "operationId": "NetworkCreate",
                "summary": "Create a network object",
                "description": "Creates a new network object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Network"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateNetworkResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_ipam_network",
                "x-tf-datasource": "nios_ipam_network",
                "x-sdk-default-ext-attrs": true,
                "x-sdk-post-function-call": [
                    "Network"
                ],
                "x-tf-function-call": true
            }
        },
        "/network/{reference}": {
            "get": {
                "tags": [
                    "Network"
                ],
                "operationId": "NetworkRead",
                "summary": "Get a specific network object",
                "description": "Returns a specific network object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the network object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetNetworkResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Network"
                ],
                "operationId": "NetworkUpdate",
                "summary": "Update a network object",
                "description": "Updates a specific network object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the network object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Network"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateNetworkResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true,
                "x-sdk-put-function-call": [
                    "Network"
                ],
                "x-tf-function-call": true
            },
            "delete": {
                "tags": [
                    "Network"
                ],
                "operationId": "NetworkDelete",
                "summary": "Delete a network object",
                "description": "Deletes a specific network object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the network object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/networkcontainer": {
            "get": {
                "tags": [
                    "Networkcontainer"
                ],
                "operationId": "NetworkcontainerList",
                "summary": "Retrieve networkcontainer objects",
                "description": "Returns a list of networkcontainer objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListNetworkcontainerResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Networkcontainer"
                ],
                "operationId": "NetworkcontainerCreate",
                "summary": "Create a networkcontainer object",
                "description": "Creates a new networkcontainer object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Networkcontainer"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateNetworkcontainerResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_ipam_networkcontainer",
                "x-tf-datasource": "nios_ipam_networkcontainer",
                "x-sdk-default-ext-attrs": true,
                "x-sdk-post-function-call": [
                    "Network"
                ],
                "x-tf-function-call": true
            }
        },
        "/networkcontainer/{reference}": {
            "get": {
                "tags": [
                    "Networkcontainer"
                ],
                "operationId": "NetworkcontainerRead",
                "summary": "Get a specific networkcontainer object",
                "description": "Returns a specific networkcontainer object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the networkcontainer object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetNetworkcontainerResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Networkcontainer"
                ],
                "operationId": "NetworkcontainerUpdate",
                "summary": "Update a networkcontainer object",
                "description": "Updates a specific networkcontainer object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the networkcontainer object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Networkcontainer"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateNetworkcontainerResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true,
                "x-sdk-put-function-call": [
                    "Network"
                ],
                "x-tf-function-call": true
            },
            "delete": {
                "tags": [
                    "Networkcontainer"
                ],
                "operationId": "NetworkcontainerDelete",
                "summary": "Delete a networkcontainer object",
                "description": "Deletes a specific networkcontainer object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the networkcontainer object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "remove_subnets",
                        "in": "query",
                        "description": "Remove subnets delete option. Determines whether all child objects should be removed alongside with the network container or child objects should be assigned to another parental container. By default child objects are deleted with the network container.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/networktemplate": {
            "get": {
                "tags": [
                    "Networktemplate"
                ],
                "operationId": "NetworktemplateList",
                "summary": "Retrieve networktemplate objects",
                "description": "Returns a list of networktemplate objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListNetworktemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Networktemplate"
                ],
                "operationId": "NetworktemplateCreate",
                "summary": "Create a networktemplate object",
                "description": "Creates a new networktemplate object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Networktemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateNetworktemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_ipam_networktemplate",
                "x-tf-datasource": "nios_ipam_networktemplate",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/networktemplate/{reference}": {
            "get": {
                "tags": [
                    "Networktemplate"
                ],
                "operationId": "NetworktemplateRead",
                "summary": "Get a specific networktemplate object",
                "description": "Returns a specific networktemplate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the networktemplate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetNetworktemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Networktemplate"
                ],
                "operationId": "NetworktemplateUpdate",
                "summary": "Update a networktemplate object",
                "description": "Updates a specific networktemplate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the networktemplate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Networktemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateNetworktemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Networktemplate"
                ],
                "operationId": "NetworktemplateDelete",
                "summary": "Delete a networktemplate object",
                "description": "Deletes a specific networktemplate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the networktemplate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/networkview": {
            "get": {
                "tags": [
                    "Networkview"
                ],
                "operationId": "NetworkviewList",
                "summary": "Retrieve networkview objects",
                "description": "Returns a list of networkview objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListNetworkviewResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Networkview"
                ],
                "operationId": "NetworkviewCreate",
                "summary": "Create a networkview object",
                "description": "Creates a new networkview object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Networkview"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateNetworkviewResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_ipam_networkview",
                "x-tf-datasource": "nios_ipam_networkview",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/networkview/{reference}": {
            "get": {
                "tags": [
                    "Networkview"
                ],
                "operationId": "NetworkviewRead",
                "summary": "Get a specific networkview object",
                "description": "Returns a specific networkview object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the networkview object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetNetworkviewResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Networkview"
                ],
                "operationId": "NetworkviewUpdate",
                "summary": "Update a networkview object",
                "description": "Updates a specific networkview object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the networkview object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Networkview"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateNetworkviewResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Networkview"
                ],
                "operationId": "NetworkviewDelete",
                "summary": "Delete a networkview object",
                "description": "Deletes a specific networkview object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the networkview object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/ipv6network": {
            "get": {
                "tags": [
                    "Ipv6network"
                ],
                "operationId": "Ipv6networkList",
                "summary": "Retrieve ipv6network objects",
                "description": "Returns a list of ipv6network objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListIpv6networkResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ipv6network"
                ],
                "operationId": "Ipv6networkCreate",
                "summary": "Create a ipv6network object",
                "description": "Creates a new ipv6network object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ipv6network"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateIpv6networkResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_ipam_ipv6network",
                "x-tf-datasource": "nios_ipam_ipv6network",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/ipv6network/{reference}": {
            "get": {
                "tags": [
                    "Ipv6network"
                ],
                "operationId": "Ipv6networkRead",
                "summary": "Get a specific ipv6network object",
                "description": "Returns a specific ipv6network object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6network object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetIpv6networkResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Ipv6network"
                ],
                "operationId": "Ipv6networkUpdate",
                "summary": "Update a ipv6network object",
                "description": "Updates a specific ipv6network object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6network object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ipv6network"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateIpv6networkResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Ipv6network"
                ],
                "operationId": "Ipv6networkDelete",
                "summary": "Delete a ipv6network object",
                "description": "Deletes a specific ipv6network object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6network object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/ipv6networkcontainer": {
            "get": {
                "tags": [
                    "Ipv6networkcontainer"
                ],
                "operationId": "Ipv6networkcontainerList",
                "summary": "Retrieve ipv6networkcontainer objects",
                "description": "Returns a list of ipv6networkcontainer objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListIpv6networkcontainerResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ipv6networkcontainer"
                ],
                "operationId": "Ipv6networkcontainerCreate",
                "summary": "Create a ipv6networkcontainer object",
                "description": "Creates a new ipv6networkcontainer object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ipv6networkcontainer"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateIpv6networkcontainerResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_ipam_ipv6networkcontainer",
                "x-tf-datasource": "nios_ipam_ipv6networkcontainer",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/ipv6networkcontainer/{reference}": {
            "get": {
                "tags": [
                    "Ipv6networkcontainer"
                ],
                "operationId": "Ipv6networkcontainerRead",
                "summary": "Get a specific ipv6networkcontainer object",
                "description": "Returns a specific ipv6networkcontainer object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6networkcontainer object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetIpv6networkcontainerResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Ipv6networkcontainer"
                ],
                "operationId": "Ipv6networkcontainerUpdate",
                "summary": "Update a ipv6networkcontainer object",
                "description": "Updates a specific ipv6networkcontainer object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6networkcontainer object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ipv6networkcontainer"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateIpv6networkcontainerResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Ipv6networkcontainer"
                ],
                "operationId": "Ipv6networkcontainerDelete",
                "summary": "Delete a ipv6networkcontainer object",
                "description": "Deletes a specific ipv6networkcontainer object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6networkcontainer object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "remove_subnets",
                        "in": "query",
                        "description": "Remove subnets delete option. Determines whether all child objects should be removed alongside with the IPv6 network container or child objects should be assigned to another parental container. By default child objects are deleted with this network container.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/ipv6networktemplate": {
            "get": {
                "tags": [
                    "Ipv6networktemplate"
                ],
                "operationId": "Ipv6networktemplateList",
                "summary": "Retrieve ipv6networktemplate objects",
                "description": "Returns a list of ipv6networktemplate objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListIpv6networktemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ipv6networktemplate"
                ],
                "operationId": "Ipv6networktemplateCreate",
                "summary": "Create a ipv6networktemplate object",
                "description": "Creates a new ipv6networktemplate object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ipv6networktemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateIpv6networktemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_ipam_ipv6networktemplate",
                "x-tf-datasource": "nios_ipam_ipv6networktemplate",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/ipv6networktemplate/{reference}": {
            "get": {
                "tags": [
                    "Ipv6networktemplate"
                ],
                "operationId": "Ipv6networktemplateRead",
                "summary": "Get a specific ipv6networktemplate object",
                "description": "Returns a specific ipv6networktemplate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6networktemplate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetIpv6networktemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Ipv6networktemplate"
                ],
                "operationId": "Ipv6networktemplateUpdate",
                "summary": "Update a ipv6networktemplate object",
                "description": "Updates a specific ipv6networktemplate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6networktemplate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ipv6networktemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateIpv6networktemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Ipv6networktemplate"
                ],
                "operationId": "Ipv6networktemplateDelete",
                "summary": "Delete a ipv6networktemplate object",
                "description": "Deletes a specific ipv6networktemplate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6networktemplate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/ipam:statistics": {
            "get": {
                "tags": [
                    "IpamStatistics"
                ],
                "operationId": "IpamStatisticsList",
                "summary": "Retrieve ipam:statistics objects",
                "description": "Returns a list of ipam:statistics objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListIpamStatisticsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/ipam:statistics/{reference}": {
            "get": {
                "tags": [
                    "IpamStatistics"
                ],
                "operationId": "IpamStatisticsRead",
                "summary": "Get a specific ipam:statistics object",
                "description": "Returns a specific ipam:statistics object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipam:statistics object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetIpamStatisticsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/vlan": {
            "get": {
                "tags": [
                    "Vlan"
                ],
                "operationId": "VlanList",
                "summary": "Retrieve vlan objects",
                "description": "Returns a list of vlan objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListVlanResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Vlan"
                ],
                "operationId": "VlanCreate",
                "summary": "Create a vlan object",
                "description": "Creates a new vlan object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Vlan"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateVlanResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_ipam_vlan",
                "x-tf-datasource": "nios_ipam_vlan",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/vlan/{reference}": {
            "get": {
                "tags": [
                    "Vlan"
                ],
                "operationId": "VlanRead",
                "summary": "Get a specific vlan object",
                "description": "Returns a specific vlan object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the vlan object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetVlanResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Vlan"
                ],
                "operationId": "VlanUpdate",
                "summary": "Update a vlan object",
                "description": "Updates a specific vlan object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the vlan object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Vlan"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateVlanResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Vlan"
                ],
                "operationId": "VlanDelete",
                "summary": "Delete a vlan object",
                "description": "Deletes a specific vlan object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the vlan object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/vlanview": {
            "get": {
                "tags": [
                    "Vlanview"
                ],
                "operationId": "VlanviewList",
                "summary": "Retrieve vlanview objects",
                "description": "Returns a list of vlanview objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListVlanviewResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Vlanview"
                ],
                "operationId": "VlanviewCreate",
                "summary": "Create a vlanview object",
                "description": "Creates a new vlanview object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Vlanview"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateVlanviewResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_ipam_vlanview",
                "x-tf-datasource": "nios_ipam_vlanview",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/vlanview/{reference}": {
            "get": {
                "tags": [
                    "Vlanview"
                ],
                "operationId": "VlanviewRead",
                "summary": "Get a specific vlanview object",
                "description": "Returns a specific vlanview object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the vlanview object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetVlanviewResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Vlanview"
                ],
                "operationId": "VlanviewUpdate",
                "summary": "Update a vlanview object",
                "description": "Updates a specific vlanview object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the vlanview object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Vlanview"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateVlanviewResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Vlanview"
                ],
                "operationId": "VlanviewDelete",
                "summary": "Delete a vlanview object",
                "description": "Deletes a specific vlanview object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the vlanview object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/vlanrange": {
            "get": {
                "tags": [
                    "Vlanrange"
                ],
                "operationId": "VlanrangeList",
                "summary": "Retrieve vlanrange objects",
                "description": "Returns a list of vlanrange objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListVlanrangeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Vlanrange"
                ],
                "operationId": "VlanrangeCreate",
                "summary": "Create a vlanrange object",
                "description": "Creates a new vlanrange object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Vlanrange"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateVlanrangeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_ipam_vlanrange",
                "x-tf-datasource": "nios_ipam_vlanrange",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/vlanrange/{reference}": {
            "get": {
                "tags": [
                    "Vlanrange"
                ],
                "operationId": "VlanrangeRead",
                "summary": "Get a specific vlanrange object",
                "description": "Returns a specific vlanrange object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the vlanrange object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetVlanrangeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Vlanrange"
                ],
                "operationId": "VlanrangeUpdate",
                "summary": "Update a vlanrange object",
                "description": "Updates a specific vlanrange object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the vlanrange object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Vlanrange"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateVlanrangeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Vlanrange"
                ],
                "operationId": "VlanrangeDelete",
                "summary": "Delete a vlanrange object",
                "description": "Deletes a specific vlanrange object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the vlanrange object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "delete_vlans",
                        "in": "query",
                        "description": "Vlans delete option. Determines whether all child objects should be removed alongside with the VLAN Range or child objects should be assigned to another parental VLAN Range/View. By default child objects are re-parented.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/bulkhost": {
            "get": {
                "tags": [
                    "Bulkhost"
                ],
                "operationId": "BulkhostList",
                "summary": "Retrieve bulkhost objects",
                "description": "Returns a list of bulkhost objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListBulkhostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Bulkhost"
                ],
                "operationId": "BulkhostCreate",
                "summary": "Create a bulkhost object",
                "description": "Creates a new bulkhost object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Bulkhost"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateBulkhostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_ipam_bulkhost",
                "x-tf-datasource": "nios_ipam_bulkhost",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/bulkhost/{reference}": {
            "get": {
                "tags": [
                    "Bulkhost"
                ],
                "operationId": "BulkhostRead",
                "summary": "Get a specific bulkhost object",
                "description": "Returns a specific bulkhost object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the bulkhost object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBulkhostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Bulkhost"
                ],
                "operationId": "BulkhostUpdate",
                "summary": "Update a bulkhost object",
                "description": "Updates a specific bulkhost object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the bulkhost object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Bulkhost"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateBulkhostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Bulkhost"
                ],
                "operationId": "BulkhostDelete",
                "summary": "Delete a bulkhost object",
                "description": "Deletes a specific bulkhost object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the bulkhost object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/bulkhostnametemplate": {
            "get": {
                "tags": [
                    "Bulkhostnametemplate"
                ],
                "operationId": "BulkhostnametemplateList",
                "summary": "Retrieve bulkhostnametemplate objects",
                "description": "Returns a list of bulkhostnametemplate objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListBulkhostnametemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Bulkhostnametemplate"
                ],
                "operationId": "BulkhostnametemplateCreate",
                "summary": "Create a bulkhostnametemplate object",
                "description": "Creates a new bulkhostnametemplate object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Bulkhostnametemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateBulkhostnametemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_ipam_bulkhostnametemplate",
                "x-tf-datasource": "nios_ipam_bulkhostnametemplate"
            }
        },
        "/bulkhostnametemplate/{reference}": {
            "get": {
                "tags": [
                    "Bulkhostnametemplate"
                ],
                "operationId": "BulkhostnametemplateRead",
                "summary": "Get a specific bulkhostnametemplate object",
                "description": "Returns a specific bulkhostnametemplate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the bulkhostnametemplate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBulkhostnametemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Bulkhostnametemplate"
                ],
                "operationId": "BulkhostnametemplateUpdate",
                "summary": "Update a bulkhostnametemplate object",
                "description": "Updates a specific bulkhostnametemplate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the bulkhostnametemplate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Bulkhostnametemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateBulkhostnametemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Bulkhostnametemplate"
                ],
                "operationId": "BulkhostnametemplateDelete",
                "summary": "Delete a bulkhostnametemplate object",
                "description": "Deletes a specific bulkhostnametemplate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the bulkhostnametemplate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/discoverytask": {
            "get": {
                "tags": [
                    "Discoverytask"
                ],
                "operationId": "DiscoverytaskList",
                "summary": "Retrieve discoverytask objects",
                "description": "Returns a list of discoverytask objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDiscoverytaskResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/discoverytask/{reference}": {
            "get": {
                "tags": [
                    "Discoverytask"
                ],
                "operationId": "DiscoverytaskRead",
                "summary": "Get a specific discoverytask object",
                "description": "Returns a specific discoverytask object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the discoverytask object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDiscoverytaskResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Discoverytask"
                ],
                "operationId": "DiscoverytaskUpdate",
                "summary": "Update a discoverytask object",
                "description": "Updates a specific discoverytask object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the discoverytask object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Discoverytask"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDiscoverytaskResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/network_discovery": {
            "get": {
                "tags": [
                    "NetworkDiscovery"
                ],
                "operationId": "NetworkDiscoveryList",
                "summary": "Retrieve network_discovery objects",
                "description": "Returns a list of network_discovery objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListNetworkDiscoveryResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/network_discovery/{reference}": {
            "get": {
                "tags": [
                    "NetworkDiscovery"
                ],
                "operationId": "NetworkDiscoveryRead",
                "summary": "Get a specific network_discovery object",
                "description": "Returns a specific network_discovery object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the network_discovery object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetNetworkDiscoveryResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/superhost": {
            "get": {
                "tags": [
                    "Superhost"
                ],
                "operationId": "SuperhostList",
                "summary": "Retrieve superhost objects",
                "description": "Returns a list of superhost objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListSuperhostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Superhost"
                ],
                "operationId": "SuperhostCreate",
                "summary": "Create a superhost object",
                "description": "Creates a new superhost object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Superhost"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateSuperhostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_ipam_superhost",
                "x-tf-datasource": "nios_ipam_superhost",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/superhost/{reference}": {
            "get": {
                "tags": [
                    "Superhost"
                ],
                "operationId": "SuperhostRead",
                "summary": "Get a specific superhost object",
                "description": "Returns a specific superhost object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the superhost object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetSuperhostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Superhost"
                ],
                "operationId": "SuperhostUpdate",
                "summary": "Update a superhost object",
                "description": "Updates a specific superhost object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the superhost object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Superhost"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateSuperhostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Superhost"
                ],
                "operationId": "SuperhostDelete",
                "summary": "Delete a superhost object",
                "description": "Deletes a specific superhost object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the superhost object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/superhostchild": {
            "get": {
                "tags": [
                    "Superhostchild"
                ],
                "operationId": "SuperhostchildList",
                "summary": "Retrieve superhostchild objects",
                "description": "Returns a list of superhostchild objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListSuperhostchildResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/superhostchild/{reference}": {
            "get": {
                "tags": [
                    "Superhostchild"
                ],
                "operationId": "SuperhostchildRead",
                "summary": "Get a specific superhostchild object",
                "description": "Returns a specific superhostchild object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the superhostchild object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetSuperhostchildResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/hostnamerewritepolicy": {
            "get": {
                "tags": [
                    "Hostnamerewritepolicy"
                ],
                "operationId": "HostnamerewritepolicyList",
                "summary": "Retrieve hostnamerewritepolicy objects",
                "description": "Returns a list of hostnamerewritepolicy objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListHostnamerewritepolicyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/hostnamerewritepolicy/{reference}": {
            "get": {
                "tags": [
                    "Hostnamerewritepolicy"
                ],
                "operationId": "HostnamerewritepolicyRead",
                "summary": "Get a specific hostnamerewritepolicy object",
                "description": "Returns a specific hostnamerewritepolicy object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the hostnamerewritepolicy object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetHostnamerewritepolicyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Hostnamerewritepolicy"
                ],
                "operationId": "HostnamerewritepolicyUpdate",
                "summary": "Update a hostnamerewritepolicy object",
                "description": "Updates a specific hostnamerewritepolicy object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the hostnamerewritepolicy object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Hostnamerewritepolicy"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateHostnamerewritepolicyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            }
        },
        "parameters": {
            "ReturnFields": {
                "name": "_return_fields",
                "in": "query",
                "description": "Enter the field names followed by comma",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "ReturnFieldsPlus": {
                "name": "_return_fields+",
                "in": "query",
                "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "MaxResults": {
                "name": "_max_results",
                "in": "query",
                "description": "Enter the number of results to be fetched",
                "required": false,
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1
                }
            },
            "ReturnAsObject": {
                "name": "_return_as_object",
                "in": "query",
                "description": "Select 1 if result is required as an object",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "Paging": {
                "name": "_paging",
                "in": "query",
                "description": "Control paging of results",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "PageId": {
                "name": "_page_id",
                "in": "query",
                "description": "Page id for retrieving next page of results",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "ProxySearch": {
                "name": "_proxy_search",
                "in": "query",
                "description": "Search Grid members for data",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "Schema": {
                "name": "_schema",
                "in": "query",
                "description": "Return schema for this object type",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "SchemaVersion": {
                "name": "_schema_version",
                "in": "query",
                "description": "Schema version to use",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        1,
                        2
                    ]
                }
            },
            "GetDoc": {
                "name": "_get_doc",
                "in": "query",
                "description": "Return documentation with schema",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "SchemaSearchable": {
                "name": "_schema_searchable",
                "in": "query",
                "description": "Return searchable fields with schema",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "Inheritance": {
                "name": "_inheritance",
                "in": "query",
                "description": "If this option is set to True, fields which support inheritance, will display data properly.",
                "required": false,
                "schema": {
                    "type": "boolean"
                }
            },
            "filters": {
                "name": "filters",
                "in": "query",
                "schema": {
                    "type": "object",
                    "additionalProperties": true
                },
                "style": "form",
                "explode": false
            },
            "ExtAttrFilters": {
                "name": "extattrfilter",
                "in": "query",
                "schema": {
                    "type": "object",
                    "additionalProperties": true
                },
                "style": "form",
                "explode": false
            },
            "Method": {
                "name": "_method",
                "in": "query",
                "description": "Enter the method type for the request",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "Body": {
                "name": "body",
                "in": "query",
                "schema": {
                    "type": "object"
                }
            }
        },
        "schemas": {
            "ExtAttrs": {
                "type": "object",
                "properties": {
                    "value": {
                        "description": "The value of the extensible attribute."
                    }
                },
                "required": [
                    "value"
                ],
                "description": "Extensible attributes associated with the object."
            },
            "Ipv4address": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the address; maximum 256 characters.",
                        "readOnly": true,
                        "example": "Example comment"
                    },
                    "conflict_types": {
                        "type": "array",
                        "description": "Types of the conflict.",
                        "enum": [
                            "MAC_ADDRESS",
                            "DHCP_RANGE",
                            "DUID",
                            "RESERVED_PORT",
                            "USED_RESERVED_PORT",
                            "DEVICE_VENDOR",
                            "DEVICE_TYPE",
                            "VM_AFFILIATION",
                            "NONE"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "dhcp_client_identifier": {
                        "type": "string",
                        "description": "The client unique identifier.",
                        "readOnly": true,
                        "example": "Example dhcp_client_identifier"
                    },
                    "discover_now_status": {
                        "type": "string",
                        "description": "Discover now status for this address.",
                        "enum": [
                            "NONE",
                            "PENDING",
                            "RUNNING",
                            "COMPLETE",
                            "FAILED"
                        ],
                        "readOnly": true,
                        "example": "Example discover_now_status"
                    },
                    "discovered_data": {
                        "$ref": "#/components/schemas/Ipv4addressDiscoveredData"
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "fingerprint": {
                        "type": "string",
                        "description": "DHCP fingerprint for the address.",
                        "readOnly": true,
                        "example": "Example fingerprint"
                    },
                    "ip_address": {
                        "type": "string",
                        "description": "The IP address.",
                        "readOnly": true,
                        "example": "Example ip_address"
                    },
                    "is_conflict": {
                        "type": "boolean",
                        "description": "If set to True, the IP address has either a MAC address conflict or a DHCP lease conflict detected through a network discovery.",
                        "readOnly": true,
                        "example": false
                    },
                    "is_invalid_mac": {
                        "type": "boolean",
                        "description": "This flag reflects whether the MAC address for this address is invalid.",
                        "readOnly": true,
                        "example": false
                    },
                    "lease_state": {
                        "type": "string",
                        "description": "The lease state of the address.",
                        "readOnly": true,
                        "example": "Example lease_state"
                    },
                    "mac_address": {
                        "type": "string",
                        "description": "The MAC address.",
                        "readOnly": true,
                        "example": "Example mac_address"
                    },
                    "ms_ad_user_data": {
                        "$ref": "#/components/schemas/Ipv4addressMsAdUserData"
                    },
                    "names": {
                        "type": "array",
                        "description": "The DNS names. For example, if the IP address belongs to a host record, this field contains the hostname. This field supports both single and array search.",
                        "enum": [
                            "string"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "network": {
                        "type": "string",
                        "description": "The network to which this address belongs, in FQDN/CIDR format.",
                        "readOnly": true,
                        "example": "Example network"
                    },
                    "network_view": {
                        "type": "string",
                        "description": "The name of the network view.",
                        "readOnly": true,
                        "example": "Example network_view"
                    },
                    "objects": {
                        "type": "string",
                        "description": "The objects associated with the IP address.",
                        "readOnly": true,
                        "example": "Example objects"
                    },
                    "reserved_port": {
                        "type": "string",
                        "description": "The reserved port for the address.",
                        "readOnly": true,
                        "example": "Example reserved_port"
                    },
                    "status": {
                        "type": "string",
                        "description": "The current status of the address.",
                        "readOnly": true,
                        "example": "Example status"
                    },
                    "types": {
                        "type": "array",
                        "description": "The types of associated objects. This field supports both single and array search.",
                        "enum": [
                            "string"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "usage": {
                        "type": "array",
                        "description": "Indicates whether the IP address is configured for DNS or DHCP. This field supports both single and array search.",
                        "enum": [
                            "string"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "username": {
                        "type": "string",
                        "description": "The name of the user who created or modified the record.",
                        "readOnly": true,
                        "example": "Example username"
                    }
                }
            },
            "Ipv4addressDiscoveredData": {
                "type": "object",
                "properties": {
                    "device_model": {
                        "type": "string",
                        "description": "The model name of the end device in the vendor terminology.",
                        "readOnly": true,
                        "example": "Example device_model"
                    },
                    "device_port_name": {
                        "type": "string",
                        "description": "The system name of the interface associated with the discovered IP address.",
                        "readOnly": true,
                        "example": "Example device_port_name"
                    },
                    "device_port_type": {
                        "type": "string",
                        "description": "The hardware type of the interface associated with the discovered IP address.",
                        "readOnly": true,
                        "example": "Example device_port_type"
                    },
                    "device_type": {
                        "type": "string",
                        "description": "The type of end host in vendor terminology.",
                        "readOnly": true,
                        "example": "Example device_type"
                    },
                    "device_vendor": {
                        "type": "string",
                        "description": "The vendor name of the end host.",
                        "readOnly": true,
                        "example": "Example device_vendor"
                    },
                    "discovered_name": {
                        "type": "string",
                        "description": "The name of the network device associated with the discovered IP address.",
                        "readOnly": true,
                        "example": "Example discovered_name"
                    },
                    "discoverer": {
                        "type": "string",
                        "description": "Specifies whether the IP address was discovered by a NetMRI or NIOS discovery process.",
                        "readOnly": true,
                        "example": "Example discoverer"
                    },
                    "duid": {
                        "type": "string",
                        "description": "For IPv6 address only. The DHCP unique identifier of the discovered host. This is an optional field, and data might not be included.",
                        "readOnly": true,
                        "example": "Example duid"
                    },
                    "first_discovered": {
                        "type": "integer",
                        "description": "The date and time the IP address was first discovered in Epoch seconds format.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "iprg_no": {
                        "type": "integer",
                        "description": "The port redundant group number.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "iprg_state": {
                        "type": "string",
                        "description": "The status for the IP address within port redundant group.",
                        "enum": [
                            "VIP",
                            "ACTIVE",
                            "STANDBY",
                            "NEGOTIATION"
                        ],
                        "readOnly": true,
                        "example": "Example iprg_state"
                    },
                    "iprg_type": {
                        "type": "string",
                        "description": "The port redundant group type.",
                        "enum": [
                            "HSRP",
                            "VRRP"
                        ],
                        "readOnly": true,
                        "example": "Example iprg_type"
                    },
                    "last_discovered": {
                        "type": "integer",
                        "description": "The date and time the IP address was last discovered in Epoch seconds format.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "mac_address": {
                        "type": "string",
                        "description": "The discovered MAC address for the host. This is the unique identifier of a network device. The discovery acquires the MAC address for hosts that are located on the same network as the Grid member that is running the discovery. This can also be the MAC address of a virtual entity on a specified vSphere server.",
                        "readOnly": true,
                        "example": "Example mac_address"
                    },
                    "mgmt_ip_address": {
                        "type": "string",
                        "description": "The management IP address of the end host that has more than one IP.",
                        "readOnly": true,
                        "example": "Example mgmt_ip_address"
                    },
                    "netbios_name": {
                        "type": "string",
                        "description": "The name returned in the NetBIOS reply or the name you manually register for the discovered host.",
                        "readOnly": true,
                        "example": "Example netbios_name"
                    },
                    "network_component_description": {
                        "type": "string",
                        "description": "A textual description of the switch that is connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_description"
                    },
                    "network_component_ip": {
                        "type": "string",
                        "description": "The IPv4 Address or IPv6 Address of the switch that is connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_ip"
                    },
                    "network_component_model": {
                        "type": "string",
                        "description": "Model name of the switch port connected to the end host in vendor terminology.",
                        "readOnly": true,
                        "example": "Example network_component_model"
                    },
                    "network_component_name": {
                        "type": "string",
                        "description": "If a reverse lookup was successful for the IP address associated with this switch, the host name is displayed in this field.",
                        "readOnly": true,
                        "example": "Example network_component_name"
                    },
                    "network_component_port_description": {
                        "type": "string",
                        "description": "A textual description of the switch port that is connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_port_description"
                    },
                    "network_component_port_name": {
                        "type": "string",
                        "description": "The name of the switch port connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_port_name"
                    },
                    "network_component_port_number": {
                        "type": "string",
                        "description": "The number of the switch port connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_port_number"
                    },
                    "network_component_type": {
                        "type": "string",
                        "description": "Identifies the switch that is connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_type"
                    },
                    "network_component_vendor": {
                        "type": "string",
                        "description": "The vendor name of the switch port connected to the end host.",
                        "readOnly": true,
                        "example": "Example network_component_vendor"
                    },
                    "open_ports": {
                        "type": "string",
                        "description": "The list of opened ports on the IP address, represented as: \"TCP: 21,22,23 UDP: 137,139\". Limited to max total 1000 ports.",
                        "readOnly": true,
                        "example": "Example open_ports"
                    },
                    "os": {
                        "type": "string",
                        "description": "The operating system of the detected host or virtual entity. The OS can be one of the following: * Microsoft for all discovered hosts that have a non-null value in the MAC addresses using the NetBIOS discovery method. * A value that a TCP discovery returns. * The OS of a virtual entity on a vSphere server.",
                        "readOnly": true,
                        "example": "Example os"
                    },
                    "port_duplex": {
                        "type": "string",
                        "description": "The negotiated or operational duplex setting of the switch port connected to the end device.",
                        "readOnly": true,
                        "example": "Example port_duplex"
                    },
                    "port_link_status": {
                        "type": "string",
                        "description": "The link status of the switch port connected to the end device. Indicates whether it is connected.",
                        "readOnly": true,
                        "example": "Example port_link_status"
                    },
                    "port_speed": {
                        "type": "string",
                        "description": "The interface speed, in Mbps, of the switch port.",
                        "readOnly": true,
                        "example": "Example port_speed"
                    },
                    "port_status": {
                        "type": "string",
                        "description": "The operational status of the switch port. Indicates whether the port is up or down.",
                        "readOnly": true,
                        "example": "Example port_status"
                    },
                    "port_type": {
                        "type": "string",
                        "description": "The type of switch port.",
                        "readOnly": true,
                        "example": "Example port_type"
                    },
                    "port_vlan_description": {
                        "type": "string",
                        "description": "The description of the VLAN of the switch port that is connected to the end device.",
                        "readOnly": true,
                        "example": "Example port_vlan_description"
                    },
                    "port_vlan_name": {
                        "type": "string",
                        "description": "The name of the VLAN of the switch port.",
                        "readOnly": true,
                        "example": "Example port_vlan_name"
                    },
                    "port_vlan_number": {
                        "type": "string",
                        "description": "The ID of the VLAN of the switch port.",
                        "readOnly": true,
                        "example": "Example port_vlan_number"
                    },
                    "v_adapter": {
                        "type": "string",
                        "description": "The name of the physical network adapter through which the virtual entity is connected to the appliance.",
                        "readOnly": true,
                        "example": "Example v_adapter"
                    },
                    "v_cluster": {
                        "type": "string",
                        "description": "The name of the VMware cluster to which the virtual entity belongs.",
                        "readOnly": true,
                        "example": "Example v_cluster"
                    },
                    "v_datacenter": {
                        "type": "string",
                        "description": "The name of the vSphere datacenter or container to which the virtual entity belongs.",
                        "readOnly": true,
                        "example": "Example v_datacenter"
                    },
                    "v_entity_name": {
                        "type": "string",
                        "description": "The name of the virtual entity.",
                        "readOnly": true,
                        "example": "Example v_entity_name"
                    },
                    "v_entity_type": {
                        "type": "string",
                        "description": "The virtual entity type. This can be blank or one of the following: Virtual Machine, Virtual Host, or Virtual Center. Virtual Center represents a VMware vCenter server.",
                        "readOnly": true,
                        "example": "Example v_entity_type"
                    },
                    "v_host": {
                        "type": "string",
                        "description": "The name of the VMware server on which the virtual entity was discovered.",
                        "readOnly": true,
                        "example": "Example v_host"
                    },
                    "v_switch": {
                        "type": "string",
                        "description": "The name of the switch to which the virtual entity is connected.",
                        "readOnly": true,
                        "example": "Example v_switch"
                    },
                    "vmi_name": {
                        "type": "string",
                        "description": "Name of the virtual machine.",
                        "readOnly": true,
                        "example": "Example vmi_name"
                    },
                    "vmi_id": {
                        "type": "string",
                        "description": "ID of the virtual machine.",
                        "readOnly": true,
                        "example": "Example vmi_id"
                    },
                    "vlan_port_group": {
                        "type": "string",
                        "description": "Port group which the virtual machine belongs to.",
                        "readOnly": true,
                        "example": "Example vlan_port_group"
                    },
                    "vswitch_name": {
                        "type": "string",
                        "description": "Name of the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_name"
                    },
                    "vswitch_id": {
                        "type": "string",
                        "description": "ID of the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_id"
                    },
                    "vswitch_type": {
                        "type": "string",
                        "description": "Type of the virtual switch: standard or distributed.",
                        "enum": [
                            "Unknown",
                            "Standard",
                            "Distributed"
                        ],
                        "readOnly": true,
                        "example": "Example vswitch_type"
                    },
                    "vswitch_ipv6_enabled": {
                        "type": "boolean",
                        "description": "Indicates the virtual switch has IPV6 enabled.",
                        "readOnly": true,
                        "example": false
                    },
                    "vport_name": {
                        "type": "string",
                        "description": "Name of the network adapter on the virtual switch connected with the virtual machine.",
                        "readOnly": true,
                        "example": "Example vport_name"
                    },
                    "vport_mac_address": {
                        "type": "string",
                        "description": "MAC address of the network adapter on the virtual switch where the virtual machine connected to.",
                        "readOnly": true,
                        "example": "Example vport_mac_address"
                    },
                    "vport_link_status": {
                        "type": "string",
                        "description": "Link status of the network adapter on the virtual switch where the virtual machine connected to.",
                        "readOnly": true,
                        "example": "Example vport_link_status"
                    },
                    "vport_conf_speed": {
                        "type": "string",
                        "description": "Configured speed of the network adapter on the virtual switch where the virtual machine connected to. Unit is kb.",
                        "readOnly": true,
                        "example": "Example vport_conf_speed"
                    },
                    "vport_conf_mode": {
                        "type": "string",
                        "description": "Configured mode of the network adapter on the virtual switch where the virtual machine connected to.",
                        "enum": [
                            "Unknown",
                            "Full-duplex",
                            "Half-duplex"
                        ],
                        "readOnly": true,
                        "example": "Example vport_conf_mode"
                    },
                    "vport_speed": {
                        "type": "string",
                        "description": "Actual speed of the network adapter on the virtual switch where the virtual machine connected to. Unit is kb.",
                        "readOnly": true,
                        "example": "Example vport_speed"
                    },
                    "vport_mode": {
                        "type": "string",
                        "description": "Actual mode of the network adapter on the virtual switch where the virtual machine connected to.",
                        "enum": [
                            "Unknown",
                            "Full-duplex",
                            "Half-duplex"
                        ],
                        "readOnly": true,
                        "example": "Example vport_mode"
                    },
                    "vswitch_segment_type": {
                        "type": "string",
                        "description": "Type of the network segment on which the current virtual machine/vport connected to.",
                        "readOnly": true,
                        "example": "Example vswitch_segment_type"
                    },
                    "vswitch_segment_name": {
                        "type": "string",
                        "description": "Name of the network segment on which the current virtual machine/vport connected to.",
                        "readOnly": true,
                        "example": "Example vswitch_segment_name"
                    },
                    "vswitch_segment_id": {
                        "type": "string",
                        "description": "ID of the network segment on which the current virtual machine/vport connected to.",
                        "readOnly": true,
                        "example": "Example vswitch_segment_id"
                    },
                    "vswitch_segment_port_group": {
                        "type": "string",
                        "description": "Port group of the network segment on which the current virtual machine/vport connected to.",
                        "readOnly": true,
                        "example": "Example vswitch_segment_port_group"
                    },
                    "vswitch_available_ports_count": {
                        "type": "integer",
                        "description": "Numer of available ports reported by the virtual switch on which the virtual machine/vport connected to.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "vswitch_tep_type": {
                        "type": "string",
                        "description": "Type of virtual tunnel endpoint (VTEP) in the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_type"
                    },
                    "vswitch_tep_ip": {
                        "type": "string",
                        "description": "IP address of the virtual tunnel endpoint (VTEP) in the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_ip"
                    },
                    "vswitch_tep_port_group": {
                        "type": "string",
                        "description": "Port group of the virtual tunnel endpoint (VTEP) in the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_port_group"
                    },
                    "vswitch_tep_vlan": {
                        "type": "string",
                        "description": "VLAN of the virtual tunnel endpoint (VTEP) in the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_vlan"
                    },
                    "vswitch_tep_dhcp_server": {
                        "type": "string",
                        "description": "DHCP server of the virtual tunnel endpoint (VTEP) in the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_dhcp_server"
                    },
                    "vswitch_tep_multicast": {
                        "type": "string",
                        "description": "Muticast address of the virtual tunnel endpoint (VTEP) in the virtual swtich.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_multicast"
                    },
                    "vmhost_ip_address": {
                        "type": "string",
                        "description": "IP address of the physical node on which the virtual machine is hosted.",
                        "readOnly": true,
                        "example": "Example vmhost_ip_address"
                    },
                    "vmhost_name": {
                        "type": "string",
                        "description": "Name of the physical node on which the virtual machine is hosted.",
                        "readOnly": true,
                        "example": "Example vmhost_name"
                    },
                    "vmhost_mac_address": {
                        "type": "string",
                        "description": "MAC address of the physical node on which the virtual machine is hosted.",
                        "readOnly": true,
                        "example": "Example vmhost_mac_address"
                    },
                    "vmhost_subnet_cidr": {
                        "type": "integer",
                        "description": "CIDR subnet of the physical node on which the virtual machine is hosted.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "vmhost_nic_names": {
                        "type": "string",
                        "description": "List of all physical port names used by the virtual switch on the physical node on which the virtual machine is hosted. Represented as: \"eth1,eth2,eth3\".",
                        "readOnly": true,
                        "example": "Example vmhost_nic_names"
                    },
                    "vmi_tenant_id": {
                        "type": "string",
                        "description": "ID of the tenant which virtual machine belongs to.",
                        "readOnly": true,
                        "example": "Example vmi_tenant_id"
                    },
                    "cmp_type": {
                        "type": "string",
                        "description": "If the IP is coming from a Cloud environment, the Cloud Management Platform type.",
                        "readOnly": true,
                        "example": "Example cmp_type"
                    },
                    "vmi_ip_type": {
                        "type": "string",
                        "description": "Discovered IP address type.",
                        "readOnly": true,
                        "example": "Example vmi_ip_type"
                    },
                    "vmi_private_address": {
                        "type": "string",
                        "description": "Private IP address of the virtual machine.",
                        "readOnly": true,
                        "example": "Example vmi_private_address"
                    },
                    "vmi_is_public_address": {
                        "type": "boolean",
                        "description": "Indicates whether the IP address is a public address.",
                        "readOnly": true,
                        "example": false
                    },
                    "cisco_ise_ssid": {
                        "type": "string",
                        "description": "The Cisco ISE SSID.",
                        "readOnly": true,
                        "example": "Example cisco_ise_ssid"
                    },
                    "cisco_ise_endpoint_profile": {
                        "type": "string",
                        "description": "The Endpoint Profile created in Cisco ISE.",
                        "readOnly": true,
                        "example": "Example cisco_ise_endpoint_profile"
                    },
                    "cisco_ise_session_state": {
                        "type": "string",
                        "description": "The Cisco ISE connection session state.",
                        "enum": [
                            "AUTHENTICATED",
                            "AUTHENTICATING",
                            "DISCONNECTED",
                            "POSTURED",
                            "STARTED"
                        ],
                        "readOnly": true,
                        "example": "Example cisco_ise_session_state"
                    },
                    "cisco_ise_security_group": {
                        "type": "string",
                        "description": "The Cisco ISE security group name.",
                        "readOnly": true,
                        "example": "Example cisco_ise_security_group"
                    },
                    "task_name": {
                        "type": "string",
                        "description": "The name of the discovery task.",
                        "readOnly": true,
                        "example": "Example task_name"
                    },
                    "network_component_location": {
                        "type": "string",
                        "description": "Location of the network component on which the IP address was discovered.",
                        "readOnly": true,
                        "example": "Example network_component_location"
                    },
                    "network_component_contact": {
                        "type": "string",
                        "description": "Contact information from the network component on which the IP address was discovered.",
                        "readOnly": true,
                        "example": "Example network_component_contact"
                    },
                    "device_location": {
                        "type": "string",
                        "description": "Location of device on which the IP address was discovered.",
                        "readOnly": true,
                        "example": "Example device_location"
                    },
                    "device_contact": {
                        "type": "string",
                        "description": "Contact information from device on which the IP address was discovered.",
                        "readOnly": true,
                        "example": "Example device_contact"
                    },
                    "ap_name": {
                        "type": "string",
                        "description": "Discovered name of Wireless Access Point.",
                        "readOnly": true,
                        "example": "Example ap_name"
                    },
                    "ap_ip_address": {
                        "type": "string",
                        "description": "Discovered IP address of Wireless Access Point.",
                        "readOnly": true,
                        "example": "Example ap_ip_address"
                    },
                    "ap_ssid": {
                        "type": "string",
                        "description": "Service set identifier (SSID) associated with Wireless Access Point.",
                        "readOnly": true,
                        "example": "Example ap_ssid"
                    },
                    "bridge_domain": {
                        "type": "string",
                        "description": "Discovered bridge domain.",
                        "readOnly": true,
                        "example": "Example bridge_domain"
                    },
                    "endpoint_groups": {
                        "type": "string",
                        "description": "A comma-separated list of the discovered endpoint groups.",
                        "readOnly": true,
                        "example": "Example endpoint_groups"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "Discovered tenant.",
                        "readOnly": true,
                        "example": "Example tenant"
                    },
                    "vrf_name": {
                        "type": "string",
                        "description": "The name of the VRF.",
                        "readOnly": true,
                        "example": "Example vrf_name"
                    },
                    "vrf_description": {
                        "type": "string",
                        "description": "Description of the VRF.",
                        "readOnly": true,
                        "example": "Example vrf_description"
                    },
                    "vrf_rd": {
                        "type": "string",
                        "description": "Route distinguisher of the VRF.",
                        "readOnly": true,
                        "example": "Example vrf_rd"
                    },
                    "bgp_as": {
                        "type": "integer",
                        "description": "The BGP autonomous system number.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "Ipv4addressMsAdUserData": {
                "type": "object",
                "properties": {
                    "active_users_count": {
                        "type": "integer",
                        "description": "The number of active users.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "ListIpv4addressResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Ipv4address__ objects.",
                        "type": "array",
                        "title": "ListIpv4addressResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Ipv4address"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Ipv4address__ objects.",
                        "type": "object",
                        "title": "ListIpv4addressResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Ipv4address"
                                }
                            }
                        }
                    }
                ]
            },
            "GetIpv4addressResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Ipv4address"
                    },
                    {
                        "description": "The response format to retrieve __Ipv4address__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetIpv4addressResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv4address"
                            }
                        }
                    }
                ]
            },
            "UpdateIpv4addressResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Ipv4address__ in object format.",
                        "type": "object",
                        "title": "UpdateIpv4addressResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv4address"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Ipv4address__ .",
                        "type": "string",
                        "title": "UpdateIpv4addressResponse"
                    }
                ]
            },
            "Ipv6address": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the address; maximum 256 characters.",
                        "readOnly": true,
                        "example": "Example comment"
                    },
                    "conflict_types": {
                        "type": "array",
                        "description": "Types of the conflict.",
                        "enum": [
                            "MAC_ADDRESS",
                            "DHCP_RANGE",
                            "DUID",
                            "RESERVED_PORT",
                            "USED_RESERVED_PORT",
                            "DEVICE_VENDOR",
                            "DEVICE_TYPE",
                            "VM_AFFILIATION",
                            "NONE"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "discover_now_status": {
                        "type": "string",
                        "description": "Discover now status for this address.",
                        "enum": [
                            "NONE",
                            "PENDING",
                            "RUNNING",
                            "COMPLETE",
                            "FAILED"
                        ],
                        "readOnly": true,
                        "example": "Example discover_now_status"
                    },
                    "discovered_data": {
                        "$ref": "#/components/schemas/Ipv6addressDiscoveredData"
                    },
                    "duid": {
                        "type": "string",
                        "description": "DHCPv6 Unique Identifier (DUID) of the address object.",
                        "readOnly": true,
                        "example": "Example duid"
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "fingerprint": {
                        "type": "string",
                        "description": "DHCP fingerprint for the address.",
                        "readOnly": true,
                        "example": "Example fingerprint"
                    },
                    "ip_address": {
                        "type": "string",
                        "description": "IPv6 addresses of the address object.",
                        "readOnly": true,
                        "example": "Example ip_address"
                    },
                    "is_conflict": {
                        "type": "boolean",
                        "description": "IP address has either a duid conflict or a DHCP lease conflict detected through a network discovery.",
                        "readOnly": true,
                        "example": false
                    },
                    "lease_state": {
                        "type": "string",
                        "description": "The lease state of the address.",
                        "readOnly": true,
                        "example": "Example lease_state"
                    },
                    "ms_ad_user_data": {
                        "$ref": "#/components/schemas/Ipv6addressMsAdUserData"
                    },
                    "names": {
                        "type": "array",
                        "description": "The DNS names. For example, if the IP address belongs to a host record, this field contains the hostname. This field supports both single and array search.",
                        "enum": [
                            "string"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "network": {
                        "type": "string",
                        "description": "The network to which this address belongs, in FQDN/CIDR format.",
                        "readOnly": true,
                        "example": "Example network"
                    },
                    "network_view": {
                        "type": "string",
                        "description": "The name of the network view.",
                        "readOnly": true,
                        "example": "Example network_view"
                    },
                    "objects": {
                        "type": "string",
                        "description": "The objects associated with the IP address.",
                        "readOnly": true,
                        "example": "Example objects"
                    },
                    "reserved_port": {
                        "type": "string",
                        "description": "The reserved port for the address.",
                        "readOnly": true,
                        "example": "Example reserved_port"
                    },
                    "status": {
                        "type": "string",
                        "description": "The current status of the address.",
                        "enum": [
                            "USED",
                            "UNUSED"
                        ],
                        "readOnly": true,
                        "example": "Example status"
                    },
                    "types": {
                        "type": "array",
                        "description": "The types of associated objects. This field supports both single and array search.",
                        "enum": [
                            "string"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "usage": {
                        "type": "array",
                        "description": "Indicates whether the IP address is configured for DNS or DHCP. This field supports both single and array search.",
                        "enum": [
                            "string"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Ipv6addressDiscoveredData": {
                "type": "object",
                "properties": {
                    "device_model": {
                        "type": "string",
                        "description": "The model name of the end device in the vendor terminology.",
                        "readOnly": true,
                        "example": "Example device_model"
                    },
                    "device_port_name": {
                        "type": "string",
                        "description": "The system name of the interface associated with the discovered IP address.",
                        "readOnly": true,
                        "example": "Example device_port_name"
                    },
                    "device_port_type": {
                        "type": "string",
                        "description": "The hardware type of the interface associated with the discovered IP address.",
                        "readOnly": true,
                        "example": "Example device_port_type"
                    },
                    "device_type": {
                        "type": "string",
                        "description": "The type of end host in vendor terminology.",
                        "readOnly": true,
                        "example": "Example device_type"
                    },
                    "device_vendor": {
                        "type": "string",
                        "description": "The vendor name of the end host.",
                        "readOnly": true,
                        "example": "Example device_vendor"
                    },
                    "discovered_name": {
                        "type": "string",
                        "description": "The name of the network device associated with the discovered IP address.",
                        "readOnly": true,
                        "example": "Example discovered_name"
                    },
                    "discoverer": {
                        "type": "string",
                        "description": "Specifies whether the IP address was discovered by a NetMRI or NIOS discovery process.",
                        "readOnly": true,
                        "example": "Example discoverer"
                    },
                    "duid": {
                        "type": "string",
                        "description": "For IPv6 address only. The DHCP unique identifier of the discovered host. This is an optional field, and data might not be included.",
                        "readOnly": true,
                        "example": "Example duid"
                    },
                    "first_discovered": {
                        "type": "integer",
                        "description": "The date and time the IP address was first discovered in Epoch seconds format.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "iprg_no": {
                        "type": "integer",
                        "description": "The port redundant group number.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "iprg_state": {
                        "type": "string",
                        "description": "The status for the IP address within port redundant group.",
                        "enum": [
                            "VIP",
                            "ACTIVE",
                            "STANDBY",
                            "NEGOTIATION"
                        ],
                        "readOnly": true,
                        "example": "Example iprg_state"
                    },
                    "iprg_type": {
                        "type": "string",
                        "description": "The port redundant group type.",
                        "enum": [
                            "HSRP",
                            "VRRP"
                        ],
                        "readOnly": true,
                        "example": "Example iprg_type"
                    },
                    "last_discovered": {
                        "type": "integer",
                        "description": "The date and time the IP address was last discovered in Epoch seconds format.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "mac_address": {
                        "type": "string",
                        "description": "The discovered MAC address for the host. This is the unique identifier of a network device. The discovery acquires the MAC address for hosts that are located on the same network as the Grid member that is running the discovery. This can also be the MAC address of a virtual entity on a specified vSphere server.",
                        "readOnly": true,
                        "example": "Example mac_address"
                    },
                    "mgmt_ip_address": {
                        "type": "string",
                        "description": "The management IP address of the end host that has more than one IP.",
                        "readOnly": true,
                        "example": "Example mgmt_ip_address"
                    },
                    "netbios_name": {
                        "type": "string",
                        "description": "The name returned in the NetBIOS reply or the name you manually register for the discovered host.",
                        "readOnly": true,
                        "example": "Example netbios_name"
                    },
                    "network_component_description": {
                        "type": "string",
                        "description": "A textual description of the switch that is connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_description"
                    },
                    "network_component_ip": {
                        "type": "string",
                        "description": "The IPv4 Address or IPv6 Address of the switch that is connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_ip"
                    },
                    "network_component_model": {
                        "type": "string",
                        "description": "Model name of the switch port connected to the end host in vendor terminology.",
                        "readOnly": true,
                        "example": "Example network_component_model"
                    },
                    "network_component_name": {
                        "type": "string",
                        "description": "If a reverse lookup was successful for the IP address associated with this switch, the host name is displayed in this field.",
                        "readOnly": true,
                        "example": "Example network_component_name"
                    },
                    "network_component_port_description": {
                        "type": "string",
                        "description": "A textual description of the switch port that is connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_port_description"
                    },
                    "network_component_port_name": {
                        "type": "string",
                        "description": "The name of the switch port connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_port_name"
                    },
                    "network_component_port_number": {
                        "type": "string",
                        "description": "The number of the switch port connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_port_number"
                    },
                    "network_component_type": {
                        "type": "string",
                        "description": "Identifies the switch that is connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_type"
                    },
                    "network_component_vendor": {
                        "type": "string",
                        "description": "The vendor name of the switch port connected to the end host.",
                        "readOnly": true,
                        "example": "Example network_component_vendor"
                    },
                    "open_ports": {
                        "type": "string",
                        "description": "The list of opened ports on the IP address, represented as: \"TCP: 21,22,23 UDP: 137,139\". Limited to max total 1000 ports.",
                        "readOnly": true,
                        "example": "Example open_ports"
                    },
                    "os": {
                        "type": "string",
                        "description": "The operating system of the detected host or virtual entity. The OS can be one of the following: * Microsoft for all discovered hosts that have a non-null value in the MAC addresses using the NetBIOS discovery method. * A value that a TCP discovery returns. * The OS of a virtual entity on a vSphere server.",
                        "readOnly": true,
                        "example": "Example os"
                    },
                    "port_duplex": {
                        "type": "string",
                        "description": "The negotiated or operational duplex setting of the switch port connected to the end device.",
                        "readOnly": true,
                        "example": "Example port_duplex"
                    },
                    "port_link_status": {
                        "type": "string",
                        "description": "The link status of the switch port connected to the end device. Indicates whether it is connected.",
                        "readOnly": true,
                        "example": "Example port_link_status"
                    },
                    "port_speed": {
                        "type": "string",
                        "description": "The interface speed, in Mbps, of the switch port.",
                        "readOnly": true,
                        "example": "Example port_speed"
                    },
                    "port_status": {
                        "type": "string",
                        "description": "The operational status of the switch port. Indicates whether the port is up or down.",
                        "readOnly": true,
                        "example": "Example port_status"
                    },
                    "port_type": {
                        "type": "string",
                        "description": "The type of switch port.",
                        "readOnly": true,
                        "example": "Example port_type"
                    },
                    "port_vlan_description": {
                        "type": "string",
                        "description": "The description of the VLAN of the switch port that is connected to the end device.",
                        "readOnly": true,
                        "example": "Example port_vlan_description"
                    },
                    "port_vlan_name": {
                        "type": "string",
                        "description": "The name of the VLAN of the switch port.",
                        "readOnly": true,
                        "example": "Example port_vlan_name"
                    },
                    "port_vlan_number": {
                        "type": "string",
                        "description": "The ID of the VLAN of the switch port.",
                        "readOnly": true,
                        "example": "Example port_vlan_number"
                    },
                    "v_adapter": {
                        "type": "string",
                        "description": "The name of the physical network adapter through which the virtual entity is connected to the appliance.",
                        "readOnly": true,
                        "example": "Example v_adapter"
                    },
                    "v_cluster": {
                        "type": "string",
                        "description": "The name of the VMware cluster to which the virtual entity belongs.",
                        "readOnly": true,
                        "example": "Example v_cluster"
                    },
                    "v_datacenter": {
                        "type": "string",
                        "description": "The name of the vSphere datacenter or container to which the virtual entity belongs.",
                        "readOnly": true,
                        "example": "Example v_datacenter"
                    },
                    "v_entity_name": {
                        "type": "string",
                        "description": "The name of the virtual entity.",
                        "readOnly": true,
                        "example": "Example v_entity_name"
                    },
                    "v_entity_type": {
                        "type": "string",
                        "description": "The virtual entity type. This can be blank or one of the following: Virtual Machine, Virtual Host, or Virtual Center. Virtual Center represents a VMware vCenter server.",
                        "readOnly": true,
                        "example": "Example v_entity_type"
                    },
                    "v_host": {
                        "type": "string",
                        "description": "The name of the VMware server on which the virtual entity was discovered.",
                        "readOnly": true,
                        "example": "Example v_host"
                    },
                    "v_switch": {
                        "type": "string",
                        "description": "The name of the switch to which the virtual entity is connected.",
                        "readOnly": true,
                        "example": "Example v_switch"
                    },
                    "vmi_name": {
                        "type": "string",
                        "description": "Name of the virtual machine.",
                        "readOnly": true,
                        "example": "Example vmi_name"
                    },
                    "vmi_id": {
                        "type": "string",
                        "description": "ID of the virtual machine.",
                        "readOnly": true,
                        "example": "Example vmi_id"
                    },
                    "vlan_port_group": {
                        "type": "string",
                        "description": "Port group which the virtual machine belongs to.",
                        "readOnly": true,
                        "example": "Example vlan_port_group"
                    },
                    "vswitch_name": {
                        "type": "string",
                        "description": "Name of the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_name"
                    },
                    "vswitch_id": {
                        "type": "string",
                        "description": "ID of the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_id"
                    },
                    "vswitch_type": {
                        "type": "string",
                        "description": "Type of the virtual switch: standard or distributed.",
                        "enum": [
                            "Unknown",
                            "Standard",
                            "Distributed"
                        ],
                        "readOnly": true,
                        "example": "Example vswitch_type"
                    },
                    "vswitch_ipv6_enabled": {
                        "type": "boolean",
                        "description": "Indicates the virtual switch has IPV6 enabled.",
                        "readOnly": true,
                        "example": false
                    },
                    "vport_name": {
                        "type": "string",
                        "description": "Name of the network adapter on the virtual switch connected with the virtual machine.",
                        "readOnly": true,
                        "example": "Example vport_name"
                    },
                    "vport_mac_address": {
                        "type": "string",
                        "description": "MAC address of the network adapter on the virtual switch where the virtual machine connected to.",
                        "readOnly": true,
                        "example": "Example vport_mac_address"
                    },
                    "vport_link_status": {
                        "type": "string",
                        "description": "Link status of the network adapter on the virtual switch where the virtual machine connected to.",
                        "readOnly": true,
                        "example": "Example vport_link_status"
                    },
                    "vport_conf_speed": {
                        "type": "string",
                        "description": "Configured speed of the network adapter on the virtual switch where the virtual machine connected to. Unit is kb.",
                        "readOnly": true,
                        "example": "Example vport_conf_speed"
                    },
                    "vport_conf_mode": {
                        "type": "string",
                        "description": "Configured mode of the network adapter on the virtual switch where the virtual machine connected to.",
                        "enum": [
                            "Unknown",
                            "Full-duplex",
                            "Half-duplex"
                        ],
                        "readOnly": true,
                        "example": "Example vport_conf_mode"
                    },
                    "vport_speed": {
                        "type": "string",
                        "description": "Actual speed of the network adapter on the virtual switch where the virtual machine connected to. Unit is kb.",
                        "readOnly": true,
                        "example": "Example vport_speed"
                    },
                    "vport_mode": {
                        "type": "string",
                        "description": "Actual mode of the network adapter on the virtual switch where the virtual machine connected to.",
                        "enum": [
                            "Unknown",
                            "Full-duplex",
                            "Half-duplex"
                        ],
                        "readOnly": true,
                        "example": "Example vport_mode"
                    },
                    "vswitch_segment_type": {
                        "type": "string",
                        "description": "Type of the network segment on which the current virtual machine/vport connected to.",
                        "readOnly": true,
                        "example": "Example vswitch_segment_type"
                    },
                    "vswitch_segment_name": {
                        "type": "string",
                        "description": "Name of the network segment on which the current virtual machine/vport connected to.",
                        "readOnly": true,
                        "example": "Example vswitch_segment_name"
                    },
                    "vswitch_segment_id": {
                        "type": "string",
                        "description": "ID of the network segment on which the current virtual machine/vport connected to.",
                        "readOnly": true,
                        "example": "Example vswitch_segment_id"
                    },
                    "vswitch_segment_port_group": {
                        "type": "string",
                        "description": "Port group of the network segment on which the current virtual machine/vport connected to.",
                        "readOnly": true,
                        "example": "Example vswitch_segment_port_group"
                    },
                    "vswitch_available_ports_count": {
                        "type": "integer",
                        "description": "Numer of available ports reported by the virtual switch on which the virtual machine/vport connected to.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "vswitch_tep_type": {
                        "type": "string",
                        "description": "Type of virtual tunnel endpoint (VTEP) in the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_type"
                    },
                    "vswitch_tep_ip": {
                        "type": "string",
                        "description": "IP address of the virtual tunnel endpoint (VTEP) in the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_ip"
                    },
                    "vswitch_tep_port_group": {
                        "type": "string",
                        "description": "Port group of the virtual tunnel endpoint (VTEP) in the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_port_group"
                    },
                    "vswitch_tep_vlan": {
                        "type": "string",
                        "description": "VLAN of the virtual tunnel endpoint (VTEP) in the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_vlan"
                    },
                    "vswitch_tep_dhcp_server": {
                        "type": "string",
                        "description": "DHCP server of the virtual tunnel endpoint (VTEP) in the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_dhcp_server"
                    },
                    "vswitch_tep_multicast": {
                        "type": "string",
                        "description": "Muticast address of the virtual tunnel endpoint (VTEP) in the virtual swtich.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_multicast"
                    },
                    "vmhost_ip_address": {
                        "type": "string",
                        "description": "IP address of the physical node on which the virtual machine is hosted.",
                        "readOnly": true,
                        "example": "Example vmhost_ip_address"
                    },
                    "vmhost_name": {
                        "type": "string",
                        "description": "Name of the physical node on which the virtual machine is hosted.",
                        "readOnly": true,
                        "example": "Example vmhost_name"
                    },
                    "vmhost_mac_address": {
                        "type": "string",
                        "description": "MAC address of the physical node on which the virtual machine is hosted.",
                        "readOnly": true,
                        "example": "Example vmhost_mac_address"
                    },
                    "vmhost_subnet_cidr": {
                        "type": "integer",
                        "description": "CIDR subnet of the physical node on which the virtual machine is hosted.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "vmhost_nic_names": {
                        "type": "string",
                        "description": "List of all physical port names used by the virtual switch on the physical node on which the virtual machine is hosted. Represented as: \"eth1,eth2,eth3\".",
                        "readOnly": true,
                        "example": "Example vmhost_nic_names"
                    },
                    "vmi_tenant_id": {
                        "type": "string",
                        "description": "ID of the tenant which virtual machine belongs to.",
                        "readOnly": true,
                        "example": "Example vmi_tenant_id"
                    },
                    "cmp_type": {
                        "type": "string",
                        "description": "If the IP is coming from a Cloud environment, the Cloud Management Platform type.",
                        "readOnly": true,
                        "example": "Example cmp_type"
                    },
                    "vmi_ip_type": {
                        "type": "string",
                        "description": "Discovered IP address type.",
                        "readOnly": true,
                        "example": "Example vmi_ip_type"
                    },
                    "vmi_private_address": {
                        "type": "string",
                        "description": "Private IP address of the virtual machine.",
                        "readOnly": true,
                        "example": "Example vmi_private_address"
                    },
                    "vmi_is_public_address": {
                        "type": "boolean",
                        "description": "Indicates whether the IP address is a public address.",
                        "readOnly": true,
                        "example": false
                    },
                    "cisco_ise_ssid": {
                        "type": "string",
                        "description": "The Cisco ISE SSID.",
                        "readOnly": true,
                        "example": "Example cisco_ise_ssid"
                    },
                    "cisco_ise_endpoint_profile": {
                        "type": "string",
                        "description": "The Endpoint Profile created in Cisco ISE.",
                        "readOnly": true,
                        "example": "Example cisco_ise_endpoint_profile"
                    },
                    "cisco_ise_session_state": {
                        "type": "string",
                        "description": "The Cisco ISE connection session state.",
                        "enum": [
                            "AUTHENTICATED",
                            "AUTHENTICATING",
                            "DISCONNECTED",
                            "POSTURED",
                            "STARTED"
                        ],
                        "readOnly": true,
                        "example": "Example cisco_ise_session_state"
                    },
                    "cisco_ise_security_group": {
                        "type": "string",
                        "description": "The Cisco ISE security group name.",
                        "readOnly": true,
                        "example": "Example cisco_ise_security_group"
                    },
                    "task_name": {
                        "type": "string",
                        "description": "The name of the discovery task.",
                        "readOnly": true,
                        "example": "Example task_name"
                    },
                    "network_component_location": {
                        "type": "string",
                        "description": "Location of the network component on which the IP address was discovered.",
                        "readOnly": true,
                        "example": "Example network_component_location"
                    },
                    "network_component_contact": {
                        "type": "string",
                        "description": "Contact information from the network component on which the IP address was discovered.",
                        "readOnly": true,
                        "example": "Example network_component_contact"
                    },
                    "device_location": {
                        "type": "string",
                        "description": "Location of device on which the IP address was discovered.",
                        "readOnly": true,
                        "example": "Example device_location"
                    },
                    "device_contact": {
                        "type": "string",
                        "description": "Contact information from device on which the IP address was discovered.",
                        "readOnly": true,
                        "example": "Example device_contact"
                    },
                    "ap_name": {
                        "type": "string",
                        "description": "Discovered name of Wireless Access Point.",
                        "readOnly": true,
                        "example": "Example ap_name"
                    },
                    "ap_ip_address": {
                        "type": "string",
                        "description": "Discovered IP address of Wireless Access Point.",
                        "readOnly": true,
                        "example": "Example ap_ip_address"
                    },
                    "ap_ssid": {
                        "type": "string",
                        "description": "Service set identifier (SSID) associated with Wireless Access Point.",
                        "readOnly": true,
                        "example": "Example ap_ssid"
                    },
                    "bridge_domain": {
                        "type": "string",
                        "description": "Discovered bridge domain.",
                        "readOnly": true,
                        "example": "Example bridge_domain"
                    },
                    "endpoint_groups": {
                        "type": "string",
                        "description": "A comma-separated list of the discovered endpoint groups.",
                        "readOnly": true,
                        "example": "Example endpoint_groups"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "Discovered tenant.",
                        "readOnly": true,
                        "example": "Example tenant"
                    },
                    "vrf_name": {
                        "type": "string",
                        "description": "The name of the VRF.",
                        "readOnly": true,
                        "example": "Example vrf_name"
                    },
                    "vrf_description": {
                        "type": "string",
                        "description": "Description of the VRF.",
                        "readOnly": true,
                        "example": "Example vrf_description"
                    },
                    "vrf_rd": {
                        "type": "string",
                        "description": "Route distinguisher of the VRF.",
                        "readOnly": true,
                        "example": "Example vrf_rd"
                    },
                    "bgp_as": {
                        "type": "integer",
                        "description": "The BGP autonomous system number.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "Ipv6addressMsAdUserData": {
                "type": "object",
                "properties": {
                    "active_users_count": {
                        "type": "integer",
                        "description": "The number of active users.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "ListIpv6addressResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Ipv6address__ objects.",
                        "type": "array",
                        "title": "ListIpv6addressResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Ipv6address"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Ipv6address__ objects.",
                        "type": "object",
                        "title": "ListIpv6addressResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Ipv6address"
                                }
                            }
                        }
                    }
                ]
            },
            "GetIpv6addressResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Ipv6address"
                    },
                    {
                        "description": "The response format to retrieve __Ipv6address__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetIpv6addressResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6address"
                            }
                        }
                    }
                ]
            },
            "UpdateIpv6addressResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Ipv6address__ in object format.",
                        "type": "object",
                        "title": "UpdateIpv6addressResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6address"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Ipv6address__ .",
                        "type": "string",
                        "title": "UpdateIpv6addressResponse"
                    }
                ]
            },
            "Network": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "authority": {
                        "type": "boolean",
                        "description": "Authority for the DHCP network.",
                        "example": false
                    },
                    "auto_create_reversezone": {
                        "type": "boolean",
                        "description": "This flag controls whether reverse zones are automatically created when the network is added.",
                        "writeOnly": true,
                        "example": false
                    },
                    "bootfile": {
                        "type": "string",
                        "description": "The bootfile name for the network. You can configure the DHCP server to support clients that use the boot file name option in their DHCPREQUEST messages.",
                        "example": "Example bootfile"
                    },
                    "bootserver": {
                        "type": "string",
                        "description": "The bootserver address for the network. You can specify the name and/or IP address of the boot server that the host needs to boot. The boot server IPv4 Address or name in FQDN format.",
                        "example": "Example bootserver"
                    },
                    "cloud_info": {
                        "$ref": "#/components/schemas/NetworkCloudInfo"
                    },
                    "cloud_shared": {
                        "type": "boolean",
                        "description": "Boolean flag to indicate if the network is shared with cloud.",
                        "example": false
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the network, maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "conflict_count": {
                        "type": "integer",
                        "description": "The number of conflicts discovered via network discovery.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "ddns_domainname": {
                        "type": "string",
                        "description": "The dynamic DNS domain name the appliance uses specifically for DDNS updates for this network.",
                        "example": "Example ddns_domainname"
                    },
                    "ddns_generate_hostname": {
                        "type": "boolean",
                        "description": "If this field is set to True, the DHCP server generates a hostname and updates DNS with it when the DHCP client request does not contain a hostname.",
                        "example": false
                    },
                    "ddns_server_always_updates": {
                        "type": "boolean",
                        "description": "This field controls whether only the DHCP server is allowed to update DNS, regardless of the DHCP clients requests. Note that changes for this field take effect only if ddns_use_option81 is True.",
                        "example": false
                    },
                    "ddns_ttl": {
                        "type": "integer",
                        "description": "The DNS update Time to Live (TTL) value of a DHCP network object. The TTL is a 32-bit unsigned integer that represents the duration, in seconds, for which the update is cached. Zero indicates that the update is not cached.",
                        "format": "int64",
                        "example": 1
                    },
                    "ddns_update_fixed_addresses": {
                        "type": "boolean",
                        "description": "By default, the DHCP server does not update DNS when it allocates a fixed address to a client. You can configure the DHCP server to update the A and PTR records of a client with a fixed address. When this feature is enabled and the DHCP server adds A and PTR records for a fixed address, the DHCP server never discards the records.",
                        "example": false
                    },
                    "ddns_use_option81": {
                        "type": "boolean",
                        "description": "The support for DHCP Option 81 at the network level.",
                        "example": false
                    },
                    "delete_reason": {
                        "type": "string",
                        "description": "The reason for deleting the RIR registration request.",
                        "writeOnly": true,
                        "example": "Example delete_reason"
                    },
                    "deny_bootp": {
                        "type": "boolean",
                        "description": "If set to true, BOOTP settings are disabled and BOOTP requests will be denied.",
                        "example": false
                    },
                    "dhcp_utilization": {
                        "type": "integer",
                        "description": "The percentage of the total DHCP utilization of the network multiplied by 1000. This is the percentage of the total number of available IP addresses belonging to the network versus the total number of all IP addresses in network.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "dhcp_utilization_status": {
                        "type": "string",
                        "description": "A string describing the utilization level of the network.",
                        "enum": [
                            "FULL",
                            "HIGH",
                            "LOW",
                            "NORMAL"
                        ],
                        "readOnly": true,
                        "example": "Example dhcp_utilization_status"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines whether a network is disabled or not. When this is set to False, the network is enabled.",
                        "example": false
                    },
                    "discover_now_status": {
                        "type": "string",
                        "description": "Discover now status for this network.",
                        "enum": [
                            "NONE",
                            "PENDING",
                            "RUNNING",
                            "COMPLETE",
                            "FAILED"
                        ],
                        "readOnly": true,
                        "example": "Example discover_now_status"
                    },
                    "discovered_bgp_as": {
                        "type": "string",
                        "description": "Number of the discovered BGP AS. When multiple BGP autonomous systems are discovered in the network, this field displays \"Multiple\".",
                        "readOnly": true,
                        "example": "Example discovered_bgp_as"
                    },
                    "discovered_bridge_domain": {
                        "type": "string",
                        "description": "Discovered bridge domain.",
                        "example": "Example discovered_bridge_domain"
                    },
                    "discovered_tenant": {
                        "type": "string",
                        "description": "Discovered tenant.",
                        "example": "Example discovered_tenant"
                    },
                    "discovered_vlan_id": {
                        "type": "string",
                        "description": "The identifier of the discovered VLAN. When multiple VLANs are discovered in the network, this field displays \"Multiple\".",
                        "readOnly": true,
                        "example": "Example discovered_vlan_id"
                    },
                    "discovered_vlan_name": {
                        "type": "string",
                        "description": "The name of the discovered VLAN. When multiple VLANs are discovered in the network, this field displays \"Multiple\".",
                        "readOnly": true,
                        "example": "Example discovered_vlan_name"
                    },
                    "discovered_vrf_description": {
                        "type": "string",
                        "description": "Description of the discovered VRF. When multiple VRFs are discovered in the network, this field displays \"Multiple\".",
                        "readOnly": true,
                        "example": "Example discovered_vrf_description"
                    },
                    "discovered_vrf_name": {
                        "type": "string",
                        "description": "The name of the discovered VRF. When multiple VRFs are discovered in the network, this field displays \"Multiple\".",
                        "readOnly": true,
                        "example": "Example discovered_vrf_name"
                    },
                    "discovered_vrf_rd": {
                        "type": "string",
                        "description": "Route distinguisher of the discovered VRF. When multiple VRFs are discovered in the network, this field displays \"Multiple\".",
                        "readOnly": true,
                        "example": "Example discovered_vrf_rd"
                    },
                    "discovery_basic_poll_settings": {
                        "$ref": "#/components/schemas/NetworkDiscoveryBasicPollSettings"
                    },
                    "discovery_blackout_setting": {
                        "$ref": "#/components/schemas/NetworkDiscoveryBlackoutSetting"
                    },
                    "discovery_engine_type": {
                        "type": "string",
                        "description": "The network discovery engine type.",
                        "enum": [
                            "NETMRI",
                            "VDISCOVERY",
                            "NETWORK_INSIGHT",
                            "UNKNOWN",
                            "NONE"
                        ],
                        "readOnly": true,
                        "example": "Example discovery_engine_type"
                    },
                    "discovery_member": {
                        "type": "string",
                        "description": "The member that will run discovery for this network.",
                        "example": "Example discovery_member"
                    },
                    "dynamic_hosts": {
                        "type": "integer",
                        "description": "The total number of DHCP leases issued for the network.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "email_list": {
                        "type": "array",
                        "description": "The e-mail lists to which the appliance sends DHCP threshold alarm e-mail messages.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "enable_ddns": {
                        "type": "boolean",
                        "description": "The dynamic DNS updates flag of a DHCP network object. If set to True, the DHCP server sends DDNS updates to DNS servers in the same Grid, and to external DNS servers.",
                        "example": false
                    },
                    "enable_dhcp_thresholds": {
                        "type": "boolean",
                        "description": "Determines if DHCP thresholds are enabled for the network.",
                        "example": false
                    },
                    "enable_discovery": {
                        "type": "boolean",
                        "description": "Determines whether a discovery is enabled or not for this network. When this is set to False, the network discovery is disabled.",
                        "example": false
                    },
                    "enable_email_warnings": {
                        "type": "boolean",
                        "description": "Determines if DHCP threshold warnings are sent through email.",
                        "example": false
                    },
                    "enable_ifmap_publishing": {
                        "type": "boolean",
                        "description": "Determines if IFMAP publishing is enabled for the network.",
                        "example": false
                    },
                    "enable_immediate_discovery": {
                        "type": "boolean",
                        "description": "Determines if the discovery for the network should be immediately enabled.",
                        "writeOnly": true,
                        "example": false
                    },
                    "enable_pxe_lease_time": {
                        "type": "boolean",
                        "description": "Set this to True if you want the DHCP server to use a different lease time for PXE clients.",
                        "example": false
                    },
                    "enable_snmp_warnings": {
                        "type": "boolean",
                        "description": "Determines if DHCP threshold warnings are send through SNMP.",
                        "example": false
                    },
                    "endpoint_sources": {
                        "type": "array",
                        "description": "The endpoints that provides data for the DHCP Network object.",
                        "enum": [
                            "pxgrid:endpoint"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "pxgrid:endpoint"
                            ]
                        }
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "federated_realms": {
                        "type": "array",
                        "description": "This field contains the federated realms associated to this network",
                        "enum": [
                            "federatedrealm"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/NetworkFederatedRealms"
                        }
                    },
                    "high_water_mark": {
                        "type": "integer",
                        "description": "The percentage of DHCP network usage threshold above which network usage is not expected and may warrant your attention. When the high watermark is reached, the Infoblox appliance generates a syslog message and sends a warning (if enabled). A number that specifies the percentage of allocated addresses. The range is from 1 to 100.",
                        "format": "int64",
                        "example": 1
                    },
                    "high_water_mark_reset": {
                        "type": "integer",
                        "description": "The percentage of DHCP network usage below which the corresponding SNMP trap is reset. A number that specifies the percentage of allocated addresses. The range is from 1 to 100. The high watermark reset value must be lower than the high watermark value.",
                        "format": "int64",
                        "example": 1
                    },
                    "ignore_dhcp_option_list_request": {
                        "type": "boolean",
                        "description": "If this field is set to False, the appliance returns all DHCP options the client is eligible to receive, rather than only the list of options the client has requested.",
                        "example": false
                    },
                    "ignore_id": {
                        "type": "string",
                        "description": "Indicates whether the appliance will ignore DHCP client IDs or MAC addresses. Valid values are \"NONE\", \"CLIENT\", or \"MACADDR\". The default is \"NONE\".",
                        "enum": [
                            "NONE",
                            "CLIENT",
                            "MACADDR"
                        ],
                        "example": "Example ignore_id"
                    },
                    "ignore_mac_addresses": {
                        "type": "array",
                        "description": "A list of MAC addresses the appliance will ignore.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "ipam_email_addresses": {
                        "type": "array",
                        "description": "The e-mail lists to which the appliance sends IPAM threshold alarm e-mail messages.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "ipam_threshold_settings": {
                        "$ref": "#/components/schemas/NetworkIpamThresholdSettings"
                    },
                    "ipam_trap_settings": {
                        "$ref": "#/components/schemas/NetworkIpamTrapSettings"
                    },
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the network.",
                        "example": "Example ipv4addr"
                    },
                    "last_rir_registration_update_sent": {
                        "type": "integer",
                        "description": "The timestamp when the last RIR registration update was sent.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "last_rir_registration_update_status": {
                        "type": "string",
                        "description": "Last RIR registration update status.",
                        "readOnly": true,
                        "example": "Example last_rir_registration_update_status"
                    },
                    "lease_scavenge_time": {
                        "type": "integer",
                        "description": "An integer that specifies the period of time (in seconds) that frees and backs up leases remained in the database before they are automatically deleted. To disable lease scavenging, set the parameter to -1. The minimum positive value must be greater than 86400 seconds (1 day).",
                        "format": "int64",
                        "example": 1
                    },
                    "logic_filter_rules": {
                        "type": "array",
                        "description": "This field contains the logic filters to be applied on the this network. This list corresponds to the match rules that are written to the dhcpd configuration file.",
                        "enum": [
                            "logicfilterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/NetworkLogicFilterRules"
                        }
                    },
                    "low_water_mark": {
                        "type": "integer",
                        "description": "The percentage of DHCP network usage below which the Infoblox appliance generates a syslog message and sends a warning (if enabled). A number that specifies the percentage of allocated addresses. The range is from 1 to 100.",
                        "format": "int64",
                        "example": 1
                    },
                    "low_water_mark_reset": {
                        "type": "integer",
                        "description": "The percentage of DHCP network usage threshold below which network usage is not expected and may warrant your attention. When the low watermark is crossed, the Infoblox appliance generates a syslog message and sends a warning (if enabled). A number that specifies the percentage of allocated addresses. The range is from 1 to 100. The low watermark reset value must be higher than the low watermark value.",
                        "format": "int64",
                        "example": 1
                    },
                    "members": {
                        "type": "array",
                        "description": "A list of members or Microsoft (r) servers that serve DHCP for this network. All members in the array must be of the same type. The struct type must be indicated in each element, by setting the \"_struct\" member to the struct type.",
                        "enum": [
                            "dhcpmember"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/NetworkMembers"
                        }
                    },
                    "mgm_private": {
                        "type": "boolean",
                        "description": "This field controls whether this object is synchronized with the Multi-Grid Master. If this field is set to True, objects are not synchronized.",
                        "example": false
                    },
                    "mgm_private_overridable": {
                        "type": "boolean",
                        "description": "This field is assumed to be True unless filled by any conforming objects, such as Network, IPv6 Network, Network Container, IPv6 Network Container, and Network View. This value is set to False if mgm_private is set to True in the parent object.",
                        "readOnly": true,
                        "example": false
                    },
                    "ms_ad_user_data": {
                        "$ref": "#/components/schemas/NetworkMsAdUserData"
                    },
                    "netmask": {
                        "type": "integer",
                        "description": "The netmask of the network in CIDR format.",
                        "format": "int64",
                        "example": 1
                    },
                    "network": {
                        "description": "The network address in IPv4 Address/CIDR format. For regular expression searches, only the IPv4 Address portion is supported. Searches for the CIDR portion is always an exact match. For example, both network containers 10.0.0.0/8 and 20.1.0.0/16 are matched by expression '.0' and only 20.1.0.0/16 is matched by '.0/16'.",
                        "oneOf": [
                            {
                                "type": "string",
                                "description": "network: The network address in IPv4 Address/CIDR format. For regular expression searches, only the IPv4 Address portion is supported. Searches for the CIDR portion is always an exact match. For example, both network containers 10.0.0.0/8 and 20.1.0.0/16 are matched by expression '.0' and only 20.1.0.0/16 is matched by '.0/16'."
                            },
                            {
                                "type": "object",
                                "description": "network: The network address in IPv4 Address/CIDR format. For regular expression searches, only the IPv4 Address portion is supported. Searches for the CIDR portion is always an exact match. For example, both network containers 10.0.0.0/8 and 20.1.0.0/16 are matched by expression '.0' and only 20.1.0.0/16 is matched by '.0/16'.",
                                "properties": {
                                    "_object_function": {
                                        "type": "string"
                                    },
                                    "_parameters": {
                                        "type": "object"
                                    },
                                    "_result_field": {
                                        "type": "string"
                                    },
                                    "_object": {
                                        "type": "string"
                                    },
                                    "_object_parameters": {
                                        "type": "object"
                                    },
                                    "_object_ref": {
                                        "type": "string",
                                        "description": "A WAPI object reference on which the function calls. Either _object or _object_ref must be set."
                                    }
                                }
                            }
                        ]
                    },
                    "func_call": {
                        "$ref": "#/components/schemas/FuncCall"
                    },
                    "network_container": {
                        "type": "string",
                        "description": "The network container to which this network belongs (if any).",
                        "readOnly": true,
                        "example": "Example network_container"
                    },
                    "network_view": {
                        "type": "string",
                        "description": "The name of the network view in which this network resides.",
                        "example": "Example network_view"
                    },
                    "nextserver": {
                        "type": "string",
                        "description": "The name in FQDN and/or IPv4 Address of the next server that the host needs to boot.",
                        "example": "Example nextserver"
                    },
                    "options": {
                        "type": "array",
                        "description": "An array of DHCP option dhcpoption structs that lists the DHCP options associated with the object.",
                        "enum": [
                            "dhcpoption"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/NetworkOptions"
                        }
                    },
                    "port_control_blackout_setting": {
                        "$ref": "#/components/schemas/NetworkPortControlBlackoutSetting"
                    },
                    "pxe_lease_time": {
                        "type": "integer",
                        "description": "The PXE lease time value of a DHCP Network object. Some hosts use PXE (Preboot Execution Environment) to boot remotely from a server. To better manage your IP resources, set a different lease time for PXE boot requests. You can configure the DHCP server to allocate an IP address with a shorter lease time to hosts that send PXE boot requests, so IP addresses are not leased longer than necessary. A 32-bit unsigned integer that represents the duration, in seconds, for which the update is cached. Zero indicates that the update is not cached.",
                        "format": "int64",
                        "example": 1
                    },
                    "recycle_leases": {
                        "type": "boolean",
                        "description": "If the field is set to True, the leases are kept in the Recycle Bin until one week after expiration. Otherwise, the leases are permanently deleted.",
                        "example": false
                    },
                    "restart_if_needed": {
                        "type": "boolean",
                        "description": "Restarts the member service.",
                        "writeOnly": true,
                        "example": false
                    },
                    "rir": {
                        "type": "string",
                        "description": "The registry (RIR) that allocated the network address space.",
                        "enum": [
                            "RIPE",
                            "NONE"
                        ],
                        "readOnly": true,
                        "example": "Example rir"
                    },
                    "rir_organization": {
                        "type": "string",
                        "description": "The RIR organization assoicated with the network.",
                        "example": "Example rir_organization"
                    },
                    "rir_registration_action": {
                        "type": "string",
                        "description": "The RIR registration action.",
                        "enum": [
                            "NONE",
                            "CREATE",
                            "MODIFY",
                            "DELETE"
                        ],
                        "writeOnly": true,
                        "example": "Example rir_registration_action"
                    },
                    "rir_registration_status": {
                        "type": "string",
                        "description": "The registration status of the network in RIR.",
                        "enum": [
                            "REGISTERED",
                            "NOT_REGISTERED"
                        ],
                        "example": "Example rir_registration_status"
                    },
                    "same_port_control_discovery_blackout": {
                        "type": "boolean",
                        "description": "If the field is set to True, the discovery blackout setting will be used for port control blackout setting.",
                        "example": false
                    },
                    "send_rir_request": {
                        "type": "boolean",
                        "description": "Determines whether to send the RIR registration request.",
                        "writeOnly": true,
                        "example": false
                    },
                    "static_hosts": {
                        "type": "integer",
                        "description": "The number of static DHCP addresses configured in the network.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "subscribe_settings": {
                        "$ref": "#/components/schemas/NetworkSubscribeSettings"
                    },
                    "template": {
                        "type": "string",
                        "description": "If set on creation, the network is created according to the values specified in the selected template.",
                        "writeOnly": true,
                        "example": "Example template"
                    },
                    "total_hosts": {
                        "type": "integer",
                        "description": "The total number of DHCP addresses configured in the network.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "unmanaged": {
                        "type": "boolean",
                        "description": "Determines whether the DHCP IPv4 Network is unmanaged or not.",
                        "example": false
                    },
                    "unmanaged_count": {
                        "type": "integer",
                        "description": "The number of unmanaged IP addresses as discovered by network discovery.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "update_dns_on_lease_renewal": {
                        "type": "boolean",
                        "description": "This field controls whether the DHCP server updates DNS when a DHCP lease is renewed.",
                        "example": false
                    },
                    "use_authority": {
                        "type": "boolean",
                        "description": "Use flag for: authority",
                        "example": false
                    },
                    "use_blackout_setting": {
                        "type": "boolean",
                        "description": "Use flag for: discovery_blackout_setting , port_control_blackout_setting, same_port_control_discovery_blackout",
                        "example": false
                    },
                    "use_bootfile": {
                        "type": "boolean",
                        "description": "Use flag for: bootfile",
                        "example": false
                    },
                    "use_bootserver": {
                        "type": "boolean",
                        "description": "Use flag for: bootserver",
                        "example": false
                    },
                    "use_ddns_domainname": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_domainname",
                        "example": false
                    },
                    "use_ddns_generate_hostname": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_generate_hostname",
                        "example": false
                    },
                    "use_ddns_ttl": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_ttl",
                        "example": false
                    },
                    "use_ddns_update_fixed_addresses": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_update_fixed_addresses",
                        "example": false
                    },
                    "use_ddns_use_option81": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_use_option81",
                        "example": false
                    },
                    "use_deny_bootp": {
                        "type": "boolean",
                        "description": "Use flag for: deny_bootp",
                        "example": false
                    },
                    "use_discovery_basic_polling_settings": {
                        "type": "boolean",
                        "description": "Use flag for: discovery_basic_poll_settings",
                        "example": false
                    },
                    "use_email_list": {
                        "type": "boolean",
                        "description": "Use flag for: email_list",
                        "example": false
                    },
                    "use_enable_ddns": {
                        "type": "boolean",
                        "description": "Use flag for: enable_ddns",
                        "example": false
                    },
                    "use_enable_dhcp_thresholds": {
                        "type": "boolean",
                        "description": "Use flag for: enable_dhcp_thresholds",
                        "example": false
                    },
                    "use_enable_discovery": {
                        "type": "boolean",
                        "description": "Use flag for: discovery_member , enable_discovery",
                        "example": false
                    },
                    "use_enable_ifmap_publishing": {
                        "type": "boolean",
                        "description": "Use flag for: enable_ifmap_publishing",
                        "example": false
                    },
                    "use_ignore_dhcp_option_list_request": {
                        "type": "boolean",
                        "description": "Use flag for: ignore_dhcp_option_list_request",
                        "example": false
                    },
                    "use_ignore_id": {
                        "type": "boolean",
                        "description": "Use flag for: ignore_id",
                        "example": false
                    },
                    "use_ipam_email_addresses": {
                        "type": "boolean",
                        "description": "Use flag for: ipam_email_addresses",
                        "example": false
                    },
                    "use_ipam_threshold_settings": {
                        "type": "boolean",
                        "description": "Use flag for: ipam_threshold_settings",
                        "example": false
                    },
                    "use_ipam_trap_settings": {
                        "type": "boolean",
                        "description": "Use flag for: ipam_trap_settings",
                        "example": false
                    },
                    "use_lease_scavenge_time": {
                        "type": "boolean",
                        "description": "Use flag for: lease_scavenge_time",
                        "example": false
                    },
                    "use_logic_filter_rules": {
                        "type": "boolean",
                        "description": "Use flag for: logic_filter_rules",
                        "example": false
                    },
                    "use_mgm_private": {
                        "type": "boolean",
                        "description": "Use flag for: mgm_private",
                        "example": false
                    },
                    "use_nextserver": {
                        "type": "boolean",
                        "description": "Use flag for: nextserver",
                        "example": false
                    },
                    "use_options": {
                        "type": "boolean",
                        "description": "Use flag for: options",
                        "example": false
                    },
                    "use_pxe_lease_time": {
                        "type": "boolean",
                        "description": "Use flag for: pxe_lease_time",
                        "example": false
                    },
                    "use_recycle_leases": {
                        "type": "boolean",
                        "description": "Use flag for: recycle_leases",
                        "example": false
                    },
                    "use_subscribe_settings": {
                        "type": "boolean",
                        "description": "Use flag for: subscribe_settings",
                        "example": false
                    },
                    "use_update_dns_on_lease_renewal": {
                        "type": "boolean",
                        "description": "Use flag for: update_dns_on_lease_renewal",
                        "example": false
                    },
                    "use_zone_associations": {
                        "type": "boolean",
                        "description": "Use flag for: zone_associations",
                        "example": false
                    },
                    "utilization": {
                        "type": "integer",
                        "description": "The network utilization in percentage.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "utilization_update": {
                        "type": "integer",
                        "description": "The timestamp when the utilization statistics were last updated.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "vlans": {
                        "type": "array",
                        "description": "List of VLANs assigned to Network.",
                        "enum": [
                            "vlanlink"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/NetworkVlans"
                        }
                    },
                    "zone_associations": {
                        "type": "array",
                        "description": "The list of zones associated with this network.",
                        "enum": [
                            "zoneassociation"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/NetworkZoneAssociations"
                        }
                    }
                }
            },
            "FuncCall": {
                "type": "object",
                "description": "Function Call attribute",
                "required": [
                    "attribute_name"
                ],
                "properties": {
                    "attribute_name": {
                        "type": "string",
                        "description": "The attribute to be called."
                    },
                    "_object_function": {
                        "type": "string",
                        "description": "The function to be called."
                    },
                    "_parameters": {
                        "type": "object",
                        "description": "The parameters for the function."
                    },
                    "_result_field": {
                        "type": "string",
                        "description": "The result field of the function."
                    },
                    "_object": {
                        "type": "string",
                        "description": "The object to be called."
                    },
                    "_object_parameters": {
                        "type": "object",
                        "description": "The parameters for the object."
                    },
                    "_object_ref": {
                        "type": "string",
                        "description": "A WAPI object reference on which the function calls. Either _object or _object_ref must be set."
                    }
                }
            },
            "NetworkCloudInfo": {
                "type": "object",
                "properties": {
                    "delegated_member": {
                        "description": "The Cloud Platform Appliance to which authority of the object is delegated.",
                        "enum": [
                            "dhcpmember"
                        ],
                        "$ref": "#/components/schemas/NetworkcloudinfoDelegatedMember"
                    },
                    "delegated_scope": {
                        "type": "string",
                        "description": "Indicates the scope of delegation for the object. This can be one of the following: NONE (outside any delegation), ROOT (the delegation point), SUBTREE (within the scope of a delegation), RECLAIMING (within the scope of a delegation being reclaimed, either as the delegation point or in the subtree).",
                        "enum": [
                            "NONE",
                            "ROOT",
                            "SUBTREE",
                            "RECLAIMING"
                        ],
                        "readOnly": true,
                        "example": "Example delegated_scope"
                    },
                    "delegated_root": {
                        "type": "string",
                        "description": "Indicates the root of the delegation if delegated_scope is SUBTREE or RECLAIMING. This is not set otherwise.",
                        "readOnly": true,
                        "example": "Example delegated_root"
                    },
                    "owned_by_adaptor": {
                        "type": "boolean",
                        "description": "Determines whether the object was created by the cloud adapter or not.",
                        "readOnly": true,
                        "example": false
                    },
                    "usage": {
                        "type": "string",
                        "description": "Indicates the cloud origin of the object.",
                        "enum": [
                            "NONE",
                            "ADAPTER",
                            "USED_BY",
                            "DELEGATED"
                        ],
                        "readOnly": true,
                        "example": "Example usage"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "Reference to the tenant object associated with the object, if any.",
                        "readOnly": true,
                        "example": "Example tenant"
                    },
                    "mgmt_platform": {
                        "type": "string",
                        "description": "Indicates the specified cloud management platform.",
                        "readOnly": true,
                        "example": "Example mgmt_platform"
                    },
                    "authority_type": {
                        "type": "string",
                        "description": "Type of authority over the object.",
                        "enum": [
                            "NONE",
                            "GM",
                            "CP"
                        ],
                        "readOnly": true,
                        "example": "Example authority_type"
                    }
                }
            },
            "NetworkcloudinfoDelegatedMember": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example ipv4addr"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid Member.",
                        "example": "Example ipv6addr"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid member name",
                        "example": "Example name"
                    }
                }
            },
            "NetworkDiscoveryBasicPollSettings": {
                "type": "object",
                "properties": {
                    "port_scanning": {
                        "type": "boolean",
                        "description": "Determines whether port scanning is enabled or not.",
                        "example": false
                    },
                    "device_profile": {
                        "type": "boolean",
                        "description": "Determines whether device profile is enabled or not.",
                        "example": false
                    },
                    "snmp_collection": {
                        "type": "boolean",
                        "description": "Determines whether SNMP collection is enabled or not.",
                        "example": false
                    },
                    "cli_collection": {
                        "type": "boolean",
                        "description": "Determines whether CLI collection is enabled or not.",
                        "example": false
                    },
                    "netbios_scanning": {
                        "type": "boolean",
                        "description": "Determines whether netbios scanning is enabled or not.",
                        "example": false
                    },
                    "complete_ping_sweep": {
                        "type": "boolean",
                        "description": "Determines whether complete ping sweep is enabled or not.",
                        "example": false
                    },
                    "smart_subnet_ping_sweep": {
                        "type": "boolean",
                        "description": "Determines whether smart subnet ping sweep is enabled or not.",
                        "example": false
                    },
                    "auto_arp_refresh_before_switch_port_polling": {
                        "type": "boolean",
                        "description": "Determines whether auto ARP refresh before switch port polling is enabled or not.",
                        "example": false
                    },
                    "switch_port_data_collection_polling": {
                        "type": "string",
                        "description": "A switch port data collection polling mode.",
                        "enum": [
                            "DISABLED",
                            "PERIODIC",
                            "SCHEDULED"
                        ],
                        "example": "Example switch_port_data_collection_polling"
                    },
                    "switch_port_data_collection_polling_schedule": {
                        "description": "A Schedule Setting struct that determines switch port data collection polling schedule.",
                        "enum": [
                            "setting:schedule"
                        ],
                        "$ref": "#/components/schemas/NetworkdiscoverybasicpollsettingsSwitchPortDataCollectionPollingSchedule"
                    },
                    "switch_port_data_collection_polling_interval": {
                        "type": "integer",
                        "description": "Indicates the interval for switch port data collection polling.",
                        "format": "int64",
                        "example": 1
                    },
                    "credential_group": {
                        "type": "string",
                        "description": "Credential group.",
                        "example": "Example credential_group"
                    },
                    "polling_frequency_modifier": {
                        "type": "string",
                        "description": "Polling Frequency Modifier.",
                        "example": "Example polling_frequency_modifier"
                    },
                    "use_global_polling_frequency_modifier": {
                        "type": "boolean",
                        "description": "Use Global Polling Frequency Modifier.",
                        "example": false
                    }
                }
            },
            "NetworkdiscoverybasicpollsettingsSwitchPortDataCollectionPollingSchedule": {
                "type": "object",
                "properties": {
                    "weekdays": {
                        "type": "array",
                        "description": "Days of the week when scheduling is triggered.",
                        "enum": [
                            "SATURDAY",
                            "SUNDAY",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for the schedule.",
                        "example": "Example time_zone"
                    },
                    "recurring_time": {
                        "type": "integer",
                        "description": "The recurring time for the schedule in Epoch seconds format. This field is obsolete and is preserved only for backward compatibility purposes. Please use other applicable fields to define the recurring schedule. DO NOT use recurring_time together with these fields. If you use recurring_time with other fields to define the recurring schedule, recurring_time has priority over year, hour_of_day, and minutes_past_hour and will override the values of these fields, although it does not override month and day_of_month. In this case, the recurring time value might be different than the intended value that you define.",
                        "format": "int64",
                        "example": 1
                    },
                    "frequency": {
                        "type": "string",
                        "description": "The frequency for the scheduled task.",
                        "enum": [
                            "DAILY",
                            "HOURLY",
                            "MONTHLY",
                            "WEEKLY"
                        ],
                        "example": "Example frequency"
                    },
                    "every": {
                        "type": "integer",
                        "description": "The number of frequency to wait before repeating the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "minutes_past_hour": {
                        "type": "integer",
                        "description": "The minutes past the hour for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "hour_of_day": {
                        "type": "integer",
                        "description": "The hour of day for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "year": {
                        "type": "integer",
                        "description": "The year for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "month": {
                        "type": "integer",
                        "description": "The month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "day_of_month": {
                        "type": "integer",
                        "description": "The day of the month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "repeat": {
                        "type": "string",
                        "description": "Indicates if the scheduled task will be repeated or run only once.",
                        "enum": [
                            "ONCE",
                            "RECUR"
                        ],
                        "example": "Example repeat"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "If set to True, the scheduled task is disabled.",
                        "example": false
                    }
                }
            },
            "NetworkDiscoveryBlackoutSetting": {
                "type": "object",
                "properties": {
                    "enable_blackout": {
                        "type": "boolean",
                        "description": "Determines whether a blackout is enabled or not.",
                        "example": false
                    },
                    "blackout_duration": {
                        "type": "integer",
                        "description": "The blackout duration in seconds; minimum value is 1 minute.",
                        "format": "int64",
                        "example": 1
                    },
                    "blackout_schedule": {
                        "description": "A Schedule Setting struct that determines blackout schedule.",
                        "enum": [
                            "setting:schedule"
                        ],
                        "$ref": "#/components/schemas/NetworkdiscoveryblackoutsettingBlackoutSchedule"
                    }
                }
            },
            "NetworkdiscoveryblackoutsettingBlackoutSchedule": {
                "type": "object",
                "properties": {
                    "weekdays": {
                        "type": "array",
                        "description": "Days of the week when scheduling is triggered.",
                        "enum": [
                            "SATURDAY",
                            "SUNDAY",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for the schedule.",
                        "example": "Example time_zone"
                    },
                    "recurring_time": {
                        "type": "integer",
                        "description": "The recurring time for the schedule in Epoch seconds format. This field is obsolete and is preserved only for backward compatibility purposes. Please use other applicable fields to define the recurring schedule. DO NOT use recurring_time together with these fields. If you use recurring_time with other fields to define the recurring schedule, recurring_time has priority over year, hour_of_day, and minutes_past_hour and will override the values of these fields, although it does not override month and day_of_month. In this case, the recurring time value might be different than the intended value that you define.",
                        "format": "int64",
                        "example": 1
                    },
                    "frequency": {
                        "type": "string",
                        "description": "The frequency for the scheduled task.",
                        "enum": [
                            "DAILY",
                            "HOURLY",
                            "MONTHLY",
                            "WEEKLY"
                        ],
                        "example": "Example frequency"
                    },
                    "every": {
                        "type": "integer",
                        "description": "The number of frequency to wait before repeating the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "minutes_past_hour": {
                        "type": "integer",
                        "description": "The minutes past the hour for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "hour_of_day": {
                        "type": "integer",
                        "description": "The hour of day for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "year": {
                        "type": "integer",
                        "description": "The year for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "month": {
                        "type": "integer",
                        "description": "The month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "day_of_month": {
                        "type": "integer",
                        "description": "The day of the month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "repeat": {
                        "type": "string",
                        "description": "Indicates if the scheduled task will be repeated or run only once.",
                        "enum": [
                            "ONCE",
                            "RECUR"
                        ],
                        "example": "Example repeat"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "If set to True, the scheduled task is disabled.",
                        "example": false
                    }
                }
            },
            "NetworkFederatedRealms": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The federated realm name",
                        "example": "Example name"
                    },
                    "id": {
                        "type": "string",
                        "description": "The federated realm id",
                        "example": "Example id"
                    }
                }
            },
            "NetworkIpamThresholdSettings": {
                "type": "object",
                "properties": {
                    "trigger_value": {
                        "type": "integer",
                        "description": "Indicates the percentage point which triggers the email/SNMP trap sending.",
                        "format": "int64",
                        "example": 1
                    },
                    "reset_value": {
                        "type": "integer",
                        "description": "Indicates the percentage point which resets the email/SNMP trap sending.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "NetworkIpamTrapSettings": {
                "type": "object",
                "properties": {
                    "enable_email_warnings": {
                        "type": "boolean",
                        "description": "Determines whether sending warnings by email is enabled or not.",
                        "example": false
                    },
                    "enable_snmp_warnings": {
                        "type": "boolean",
                        "description": "Determines whether sending warnings by SNMP is enabled or not.",
                        "example": false
                    }
                }
            },
            "NetworkLogicFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The filter name.",
                        "example": "Example filter"
                    },
                    "type": {
                        "type": "string",
                        "description": "The filter type. Valid values are: * MAC * NAC * Option",
                        "example": "Example type"
                    }
                }
            },
            "NetworkMembers": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address or FQDN of the Microsoft server.",
                        "example": "Example ipv4addr"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid Member.",
                        "example": "Example ipv6addr"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid member name",
                        "example": "Example name"
                    }
                }
            },
            "NetworkMsAdUserData": {
                "type": "object",
                "properties": {
                    "active_users_count": {
                        "type": "integer",
                        "description": "The number of active users.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "NetworkOptions": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the DHCP option.",
                        "example": "Example name"
                    },
                    "num": {
                        "type": "integer",
                        "description": "The code of the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "vendor_class": {
                        "type": "string",
                        "description": "The name of the space this DHCP option is associated to.",
                        "example": "Example vendor_class"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the DHCP option",
                        "example": "Example value"
                    },
                    "use_option": {
                        "type": "boolean",
                        "description": "Only applies to special options that are displayed separately from other options and have a use flag. These options are: * routers * router-templates * domain-name-servers * domain-name * broadcast-address * broadcast-address-offset * dhcp-lease-time * dhcp6.name-servers",
                        "example": false
                    }
                }
            },
            "NetworkPortControlBlackoutSetting": {
                "type": "object",
                "properties": {
                    "enable_blackout": {
                        "type": "boolean",
                        "description": "Determines whether a blackout is enabled or not.",
                        "example": false
                    },
                    "blackout_duration": {
                        "type": "integer",
                        "description": "The blackout duration in seconds; minimum value is 1 minute.",
                        "format": "int64",
                        "example": 1
                    },
                    "blackout_schedule": {
                        "description": "A Schedule Setting struct that determines blackout schedule.",
                        "enum": [
                            "setting:schedule"
                        ],
                        "$ref": "#/components/schemas/NetworkportcontrolblackoutsettingBlackoutSchedule"
                    }
                }
            },
            "NetworkportcontrolblackoutsettingBlackoutSchedule": {
                "type": "object",
                "properties": {
                    "weekdays": {
                        "type": "array",
                        "description": "Days of the week when scheduling is triggered.",
                        "enum": [
                            "SATURDAY",
                            "SUNDAY",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for the schedule.",
                        "example": "Example time_zone"
                    },
                    "recurring_time": {
                        "type": "integer",
                        "description": "The recurring time for the schedule in Epoch seconds format. This field is obsolete and is preserved only for backward compatibility purposes. Please use other applicable fields to define the recurring schedule. DO NOT use recurring_time together with these fields. If you use recurring_time with other fields to define the recurring schedule, recurring_time has priority over year, hour_of_day, and minutes_past_hour and will override the values of these fields, although it does not override month and day_of_month. In this case, the recurring time value might be different than the intended value that you define.",
                        "format": "int64",
                        "example": 1
                    },
                    "frequency": {
                        "type": "string",
                        "description": "The frequency for the scheduled task.",
                        "enum": [
                            "DAILY",
                            "HOURLY",
                            "MONTHLY",
                            "WEEKLY"
                        ],
                        "example": "Example frequency"
                    },
                    "every": {
                        "type": "integer",
                        "description": "The number of frequency to wait before repeating the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "minutes_past_hour": {
                        "type": "integer",
                        "description": "The minutes past the hour for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "hour_of_day": {
                        "type": "integer",
                        "description": "The hour of day for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "year": {
                        "type": "integer",
                        "description": "The year for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "month": {
                        "type": "integer",
                        "description": "The month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "day_of_month": {
                        "type": "integer",
                        "description": "The day of the month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "repeat": {
                        "type": "string",
                        "description": "Indicates if the scheduled task will be repeated or run only once.",
                        "enum": [
                            "ONCE",
                            "RECUR"
                        ],
                        "example": "Example repeat"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "If set to True, the scheduled task is disabled.",
                        "example": false
                    }
                }
            },
            "NetworkSubscribeSettings": {
                "type": "object",
                "properties": {
                    "enabled_attributes": {
                        "type": "array",
                        "description": "The list of Cisco ISE attributes allowed for subscription.",
                        "enum": [
                            "DOMAINNAME",
                            "ENDPOINT_PROFILE",
                            "SECURITY_GROUP",
                            "SESSION_STATE",
                            "SSID",
                            "USERNAME",
                            "VLAN"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "mapped_ea_attributes": {
                        "description": "The list of NIOS extensible attributes to Cisco ISE attributes mappings.",
                        "enum": [
                            "ciscoise:eaassociation"
                        ],
                        "$ref": "#/components/schemas/NetworksubscribesettingsMappedEaAttributes"
                    }
                }
            },
            "NetworksubscribesettingsMappedEaAttributes": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The Cisco ISE attribute name that is enabled for publishsing from a Cisco ISE endpoint.",
                        "enum": [
                            "ACCOUNT_SESSION_ID",
                            "AUDIT_SESSION_ID",
                            "EPS_STATUS",
                            "IP_ADDRESS",
                            "MAC",
                            "NAS_IP_ADDRESS",
                            "NAS_PORT_ID",
                            "POSTURE_STATUS",
                            "POSTURE_TIMESTAMP"
                        ],
                        "example": "Example name"
                    },
                    "mapped_ea": {
                        "type": "string",
                        "description": "The name of the extensible attribute definition object the Cisco ISE attribute that is enabled for subscription is mapped on.",
                        "example": "Example mapped_ea"
                    }
                }
            },
            "NetworkVlans": {
                "type": "object",
                "properties": {
                    "vlan": {
                        "type": "object",
                        "description": "Reference to the underlying StaticVlan object vlan.",
                        "enum": [
                            "subobj"
                        ]
                    },
                    "id": {
                        "type": "integer",
                        "description": "VLAN ID value.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the VLAN.",
                        "readOnly": true,
                        "example": "Example name"
                    }
                }
            },
            "NetworkZoneAssociations": {
                "type": "object",
                "properties": {
                    "fqdn": {
                        "type": "string",
                        "description": "The FQDN of the authoritative forward zone.",
                        "example": "Example fqdn"
                    },
                    "is_default": {
                        "type": "boolean",
                        "description": "True if this is the default zone.",
                        "example": false
                    },
                    "view": {
                        "type": "string",
                        "description": "The view to which the zone belongs. If a view is not specified, the default view is used.",
                        "example": "Example view"
                    }
                }
            },
            "ListNetworkResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Network__ objects.",
                        "type": "array",
                        "title": "ListNetworkResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Network"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Network__ objects.",
                        "type": "object",
                        "title": "ListNetworkResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Network"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateNetworkResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Network__ in object format.",
                        "type": "object",
                        "title": "CreateNetworkResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Network"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Network__.",
                        "type": "string",
                        "title": "CreateNetworkResponse"
                    }
                ]
            },
            "GetNetworkResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Network"
                    },
                    {
                        "description": "The response format to retrieve __Network__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetNetworkResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Network"
                            }
                        }
                    }
                ]
            },
            "UpdateNetworkResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Network__ in object format.",
                        "type": "object",
                        "title": "UpdateNetworkResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Network"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Network__ .",
                        "type": "string",
                        "title": "UpdateNetworkResponse"
                    }
                ]
            },
            "Networkcontainer": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "authority": {
                        "type": "boolean",
                        "description": "Authority for the DHCP network container.",
                        "example": false
                    },
                    "auto_create_reversezone": {
                        "type": "boolean",
                        "description": "This flag controls whether reverse zones are automatically created when the network is added.",
                        "writeOnly": true,
                        "example": false
                    },
                    "bootfile": {
                        "type": "string",
                        "description": "The boot server IPv4 Address or name in FQDN format for the network container. You can specify the name and/or IP address of the boot server that the host needs to boot.",
                        "example": "Example bootfile"
                    },
                    "bootserver": {
                        "type": "string",
                        "description": "The bootserver address for the network container. You can specify the name and/or IP address of the boot server that the host needs to boot. The boot server IPv4 Address or name in FQDN format.",
                        "example": "Example bootserver"
                    },
                    "cloud_info": {
                        "$ref": "#/components/schemas/NetworkcontainerCloudInfo"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the network container; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "ddns_domainname": {
                        "type": "string",
                        "description": "The dynamic DNS domain name the appliance uses specifically for DDNS updates for this network container.",
                        "example": "Example ddns_domainname"
                    },
                    "ddns_generate_hostname": {
                        "type": "boolean",
                        "description": "If this field is set to True, the DHCP server generates a hostname and updates DNS with it when the DHCP client request does not contain a hostname.",
                        "example": false
                    },
                    "ddns_server_always_updates": {
                        "type": "boolean",
                        "description": "This field controls whether the DHCP server is allowed to update DNS, regardless of the DHCP client requests. Note that changes for this field take effect only if ddns_use_option81 is True.",
                        "example": false
                    },
                    "ddns_ttl": {
                        "type": "integer",
                        "description": "The DNS update Time to Live (TTL) value of a DHCP network container object. The TTL is a 32-bit unsigned integer that represents the duration, in seconds, for which the update is cached. Zero indicates that the update is not cached.",
                        "format": "int64",
                        "example": 1
                    },
                    "ddns_update_fixed_addresses": {
                        "type": "boolean",
                        "description": "By default, the DHCP server does not update DNS when it allocates a fixed address to a client. You can configure the DHCP server to update the A and PTR records of a client with a fixed address. When this feature is enabled and the DHCP server adds A and PTR records for a fixed address, the DHCP server never discards the records.",
                        "example": false
                    },
                    "ddns_use_option81": {
                        "type": "boolean",
                        "description": "The support for DHCP Option 81 at the network container level.",
                        "example": false
                    },
                    "delete_reason": {
                        "type": "string",
                        "description": "The reason for deleting the RIR registration request.",
                        "writeOnly": true,
                        "example": "Example delete_reason"
                    },
                    "deny_bootp": {
                        "type": "boolean",
                        "description": "If set to True, BOOTP settings are disabled and BOOTP requests will be denied.",
                        "example": false
                    },
                    "discover_now_status": {
                        "type": "string",
                        "description": "Discover now status for this network container.",
                        "enum": [
                            "NONE",
                            "PENDING",
                            "RUNNING",
                            "COMPLETE",
                            "FAILED"
                        ],
                        "readOnly": true,
                        "example": "Example discover_now_status"
                    },
                    "discovery_basic_poll_settings": {
                        "$ref": "#/components/schemas/NetworkcontainerDiscoveryBasicPollSettings"
                    },
                    "discovery_blackout_setting": {
                        "$ref": "#/components/schemas/NetworkcontainerDiscoveryBlackoutSetting"
                    },
                    "discovery_engine_type": {
                        "type": "string",
                        "description": "The network discovery engine type.",
                        "enum": [
                            "NETMRI",
                            "VDISCOVERY",
                            "NETWORK_INSIGHT",
                            "UNKNOWN",
                            "NONE"
                        ],
                        "readOnly": true,
                        "example": "Example discovery_engine_type"
                    },
                    "discovery_member": {
                        "type": "string",
                        "description": "The member that will run discovery for this network container.",
                        "example": "Example discovery_member"
                    },
                    "email_list": {
                        "type": "array",
                        "description": "The e-mail lists to which the appliance sends DHCP threshold alarm e-mail messages.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "enable_ddns": {
                        "type": "boolean",
                        "description": "The dynamic DNS updates flag of a DHCP network container object. If set to True, the DHCP server sends DDNS updates to DNS servers in the same Grid, and to external DNS servers.",
                        "example": false
                    },
                    "enable_dhcp_thresholds": {
                        "type": "boolean",
                        "description": "Determines if DHCP thresholds are enabled for the network container.",
                        "example": false
                    },
                    "enable_discovery": {
                        "type": "boolean",
                        "description": "Determines whether a discovery is enabled or not for this network container. When this is set to False, the network container discovery is disabled.",
                        "example": false
                    },
                    "enable_email_warnings": {
                        "type": "boolean",
                        "description": "Determines if DHCP threshold warnings are sent through email.",
                        "example": false
                    },
                    "enable_immediate_discovery": {
                        "type": "boolean",
                        "description": "Determines if the discovery for the network container should be immediately enabled.",
                        "writeOnly": true,
                        "example": false
                    },
                    "enable_pxe_lease_time": {
                        "type": "boolean",
                        "description": "Set this to True if you want the DHCP server to use a different lease time for PXE clients.",
                        "example": false
                    },
                    "enable_snmp_warnings": {
                        "type": "boolean",
                        "description": "Determines if DHCP threshold warnings are send through SNMP.",
                        "example": false
                    },
                    "endpoint_sources": {
                        "type": "array",
                        "description": "The endpoints that provides data for the DHCP Network Container object.",
                        "enum": [
                            "pxgrid:endpoint"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "pxgrid:endpoint"
                            ]
                        }
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "federated_realms": {
                        "type": "array",
                        "description": "This field contains the federated realms associated to this network container.",
                        "enum": [
                            "federatedrealm"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/NetworkcontainerFederatedRealms"
                        }
                    },
                    "high_water_mark": {
                        "type": "integer",
                        "description": "The percentage of DHCP network container usage threshold above which network container usage is not expected and may warrant your attention. When the high watermark is reached, the Infoblox appliance generates a syslog message and sends a warning (if enabled). A number that specifies the percentage of allocated addresses. The range is from 1 to 100.",
                        "format": "int64",
                        "example": 1
                    },
                    "high_water_mark_reset": {
                        "type": "integer",
                        "description": "The percentage of DHCP network container usage below which the corresponding SNMP trap is reset. A number that specifies the percentage of allocated addresses. The range is from 1 to 100. The high watermark reset value must be lower than the high watermark value.",
                        "format": "int64",
                        "example": 1
                    },
                    "ignore_dhcp_option_list_request": {
                        "type": "boolean",
                        "description": "If this field is set to False, the appliance returns all DHCP options the client is eligible to receive, rather than only the list of options the client has requested.",
                        "example": false
                    },
                    "ignore_id": {
                        "type": "string",
                        "description": "Indicates whether the appliance will ignore DHCP client IDs or MAC addresses.",
                        "enum": [
                            "NONE",
                            "CLIENT",
                            "MACADDR"
                        ],
                        "example": "Example ignore_id"
                    },
                    "ignore_mac_addresses": {
                        "type": "array",
                        "description": "A list of MAC addresses the appliance will ignore.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "ipam_email_addresses": {
                        "type": "array",
                        "description": "The e-mail lists to which the appliance sends IPAM threshold alarm e-mail messages.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "ipam_threshold_settings": {
                        "$ref": "#/components/schemas/NetworkcontainerIpamThresholdSettings"
                    },
                    "ipam_trap_settings": {
                        "$ref": "#/components/schemas/NetworkcontainerIpamTrapSettings"
                    },
                    "last_rir_registration_update_sent": {
                        "type": "integer",
                        "description": "The timestamp when the last RIR registration update was sent.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "last_rir_registration_update_status": {
                        "type": "string",
                        "description": "Last RIR registration update status.",
                        "readOnly": true,
                        "example": "Example last_rir_registration_update_status"
                    },
                    "lease_scavenge_time": {
                        "type": "integer",
                        "description": "An integer that specifies the period of time (in seconds) that frees and backs up leases remained in the database before they are automatically deleted. To disable lease scavenging, set the parameter to -1. The minimum positive value must be greater than 86400 seconds (1 day).",
                        "format": "int64",
                        "example": 1
                    },
                    "logic_filter_rules": {
                        "type": "array",
                        "description": "This field contains the logic filters to be applied on the this network container. This list corresponds to the match rules that are written to the dhcpd configuration file.",
                        "enum": [
                            "logicfilterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/NetworkcontainerLogicFilterRules"
                        }
                    },
                    "low_water_mark": {
                        "type": "integer",
                        "description": "The percentage of DHCP network container usage below which the Infoblox appliance generates a syslog message and sends a warning (if enabled). A number that specifies the percentage of allocated addresses. The range is from 1 to 100.",
                        "format": "int64",
                        "example": 1
                    },
                    "low_water_mark_reset": {
                        "type": "integer",
                        "description": "The percentage of DHCP network container usage threshold below which network container usage is not expected and may warrant your attention. When the low watermark is crossed, the Infoblox appliance generates a syslog message and sends a warning (if enabled). A number that specifies the percentage of allocated addresses. The range is from 1 to 100. The low watermark reset value must be higher than the low watermark value.",
                        "format": "int64",
                        "example": 1
                    },
                    "mgm_private": {
                        "type": "boolean",
                        "description": "This field controls whether this object is synchronized with the Multi-Grid Master. If this field is set to True, objects are not synchronized.",
                        "example": false
                    },
                    "mgm_private_overridable": {
                        "type": "boolean",
                        "description": "This field is assumed to be True unless filled by any conforming objects, such as Network, IPv6 Network, Network Container, IPv6 Network Container, and Network View. This value is set to False if mgm_private is set to True in the parent object.",
                        "readOnly": true,
                        "example": false
                    },
                    "ms_ad_user_data": {
                        "$ref": "#/components/schemas/NetworkcontainerMsAdUserData"
                    },
                    "network": {
                        "description": "The network address in IPv4 Address/CIDR format. For regular expression searches, only the IPv4 Address portion is supported. Searches for the CIDR portion is always an exact match. For example, both network containers 10.0.0.0/8 and 20.1.0.0/16 are matched by expression '.0' and only 20.1.0.0/16 is matched by '.0/16'.",
                        "oneOf": [
                            {
                                "type": "string",
                                "description": "networkcontainer: The network address in IPv4 Address/CIDR format. For regular expression searches, only the IPv4 Address portion is supported. Searches for the CIDR portion is always an exact match. For example, both network containers 10.0.0.0/8 and 20.1.0.0/16 are matched by expression '.0' and only 20.1.0.0/16 is matched by '.0/16'."
                            },
                            {
                                "type": "object",
                                "description": "networkcontainer: The network address in IPv4 Address/CIDR format. For regular expression searches, only the IPv4 Address portion is supported. Searches for the CIDR portion is always an exact match. For example, both network containers 10.0.0.0/8 and 20.1.0.0/16 are matched by expression '.0' and only 20.1.0.0/16 is matched by '.0/16'.",
                                "properties": {
                                    "_object_function": {
                                        "type": "string"
                                    },
                                    "_parameters": {
                                        "type": "object"
                                    },
                                    "_result_field": {
                                        "type": "string"
                                    },
                                    "_object": {
                                        "type": "string"
                                    },
                                    "_object_parameters": {
                                        "type": "object"
                                    },
                                    "_object_ref": {
                                        "type": "string",
                                        "description": "A WAPI object reference on which the function calls. Either _object or _object_ref must be set."
                                    }
                                }
                            }
                        ]
                    },
                    "func_call": {
                        "$ref": "#/components/schemas/FuncCall"
                    },
                    "network_container": {
                        "type": "string",
                        "description": "The network container to which this network belongs, if any.",
                        "readOnly": true,
                        "example": "Example network_container"
                    },
                    "network_view": {
                        "type": "string",
                        "description": "The name of the network view in which this network resides.",
                        "example": "Example network_view"
                    },
                    "nextserver": {
                        "type": "string",
                        "description": "The name in FQDN and/or IPv4 Address of the next server that the host needs to boot.",
                        "example": "Example nextserver"
                    },
                    "options": {
                        "type": "array",
                        "description": "An array of DHCP option dhcpoption structs that lists the DHCP options associated with the object.",
                        "enum": [
                            "dhcpoption"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/NetworkcontainerOptions"
                        }
                    },
                    "port_control_blackout_setting": {
                        "$ref": "#/components/schemas/NetworkcontainerPortControlBlackoutSetting"
                    },
                    "pxe_lease_time": {
                        "type": "integer",
                        "description": "The PXE lease time value of a DHCP Network container object. Some hosts use PXE (Preboot Execution Environment) to boot remotely from a server. To better manage your IP resources, set a different lease time for PXE boot requests. You can configure the DHCP server to allocate an IP address with a shorter lease time to hosts that send PXE boot requests, so IP addresses are not leased longer than necessary. A 32-bit unsigned integer that represents the duration, in seconds, for which the update is cached. Zero indicates that the update is not cached.",
                        "format": "int64",
                        "example": 1
                    },
                    "recycle_leases": {
                        "type": "boolean",
                        "description": "If the field is set to True, the leases are kept in the Recycle Bin until one week after expiration. Otherwise, the leases are permanently deleted.",
                        "example": false
                    },
                    "remove_subnets": {
                        "type": "boolean",
                        "description": "Remove subnets delete option. Determines whether all child objects should be removed alongside with the network container or child objects should be assigned to another parental container. By default child objects are deleted with the network container.",
                        "example": false
                    },
                    "restart_if_needed": {
                        "type": "boolean",
                        "description": "Restarts the member service.",
                        "writeOnly": true,
                        "example": false
                    },
                    "rir": {
                        "type": "string",
                        "description": "The registry (RIR) that allocated the network container address space.",
                        "enum": [
                            "RIPE",
                            "NONE"
                        ],
                        "readOnly": true,
                        "example": "Example rir"
                    },
                    "rir_organization": {
                        "type": "string",
                        "description": "The RIR organization assoicated with the network container.",
                        "example": "Example rir_organization"
                    },
                    "rir_registration_action": {
                        "type": "string",
                        "description": "The RIR registration action.",
                        "enum": [
                            "NONE",
                            "CREATE",
                            "MODIFY",
                            "DELETE"
                        ],
                        "writeOnly": true,
                        "example": "Example rir_registration_action"
                    },
                    "rir_registration_status": {
                        "type": "string",
                        "description": "The registration status of the network container in RIR.",
                        "enum": [
                            "REGISTERED",
                            "NOT_REGISTERED"
                        ],
                        "example": "Example rir_registration_status"
                    },
                    "same_port_control_discovery_blackout": {
                        "type": "boolean",
                        "description": "If the field is set to True, the discovery blackout setting will be used for port control blackout setting.",
                        "example": false
                    },
                    "send_rir_request": {
                        "type": "boolean",
                        "description": "Determines whether to send the RIR registration request.",
                        "writeOnly": true,
                        "example": false
                    },
                    "subscribe_settings": {
                        "$ref": "#/components/schemas/NetworkcontainerSubscribeSettings"
                    },
                    "unmanaged": {
                        "type": "boolean",
                        "description": "Determines whether the network container is unmanaged or not.",
                        "example": false
                    },
                    "update_dns_on_lease_renewal": {
                        "type": "boolean",
                        "description": "This field controls whether the DHCP server updates DNS when a DHCP lease is renewed.",
                        "example": false
                    },
                    "use_authority": {
                        "type": "boolean",
                        "description": "Use flag for: authority",
                        "example": false
                    },
                    "use_blackout_setting": {
                        "type": "boolean",
                        "description": "Use flag for: discovery_blackout_setting , port_control_blackout_setting, same_port_control_discovery_blackout",
                        "example": false
                    },
                    "use_bootfile": {
                        "type": "boolean",
                        "description": "Use flag for: bootfile",
                        "example": false
                    },
                    "use_bootserver": {
                        "type": "boolean",
                        "description": "Use flag for: bootserver",
                        "example": false
                    },
                    "use_ddns_domainname": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_domainname",
                        "example": false
                    },
                    "use_ddns_generate_hostname": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_generate_hostname",
                        "example": false
                    },
                    "use_ddns_ttl": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_ttl",
                        "example": false
                    },
                    "use_ddns_update_fixed_addresses": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_update_fixed_addresses",
                        "example": false
                    },
                    "use_ddns_use_option81": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_use_option81",
                        "example": false
                    },
                    "use_deny_bootp": {
                        "type": "boolean",
                        "description": "Use flag for: deny_bootp",
                        "example": false
                    },
                    "use_discovery_basic_polling_settings": {
                        "type": "boolean",
                        "description": "Use flag for: discovery_basic_poll_settings",
                        "example": false
                    },
                    "use_email_list": {
                        "type": "boolean",
                        "description": "Use flag for: email_list",
                        "example": false
                    },
                    "use_enable_ddns": {
                        "type": "boolean",
                        "description": "Use flag for: enable_ddns",
                        "example": false
                    },
                    "use_enable_dhcp_thresholds": {
                        "type": "boolean",
                        "description": "Use flag for: enable_dhcp_thresholds",
                        "example": false
                    },
                    "use_enable_discovery": {
                        "type": "boolean",
                        "description": "Use flag for: discovery_member , enable_discovery",
                        "example": false
                    },
                    "use_ignore_dhcp_option_list_request": {
                        "type": "boolean",
                        "description": "Use flag for: ignore_dhcp_option_list_request",
                        "example": false
                    },
                    "use_ignore_id": {
                        "type": "boolean",
                        "description": "Use flag for: ignore_id",
                        "example": false
                    },
                    "use_ipam_email_addresses": {
                        "type": "boolean",
                        "description": "Use flag for: ipam_email_addresses",
                        "example": false
                    },
                    "use_ipam_threshold_settings": {
                        "type": "boolean",
                        "description": "Use flag for: ipam_threshold_settings",
                        "example": false
                    },
                    "use_ipam_trap_settings": {
                        "type": "boolean",
                        "description": "Use flag for: ipam_trap_settings",
                        "example": false
                    },
                    "use_lease_scavenge_time": {
                        "type": "boolean",
                        "description": "Use flag for: lease_scavenge_time",
                        "example": false
                    },
                    "use_logic_filter_rules": {
                        "type": "boolean",
                        "description": "Use flag for: logic_filter_rules",
                        "example": false
                    },
                    "use_mgm_private": {
                        "type": "boolean",
                        "description": "Use flag for: mgm_private",
                        "example": false
                    },
                    "use_nextserver": {
                        "type": "boolean",
                        "description": "Use flag for: nextserver",
                        "example": false
                    },
                    "use_options": {
                        "type": "boolean",
                        "description": "Use flag for: options",
                        "example": false
                    },
                    "use_pxe_lease_time": {
                        "type": "boolean",
                        "description": "Use flag for: pxe_lease_time",
                        "example": false
                    },
                    "use_recycle_leases": {
                        "type": "boolean",
                        "description": "Use flag for: recycle_leases",
                        "example": false
                    },
                    "use_subscribe_settings": {
                        "type": "boolean",
                        "description": "Use flag for: subscribe_settings",
                        "example": false
                    },
                    "use_update_dns_on_lease_renewal": {
                        "type": "boolean",
                        "description": "Use flag for: update_dns_on_lease_renewal",
                        "example": false
                    },
                    "use_zone_associations": {
                        "type": "boolean",
                        "description": "Use flag for: zone_associations",
                        "example": false
                    },
                    "utilization": {
                        "type": "integer",
                        "description": "The network container utilization in percentage.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "zone_associations": {
                        "type": "array",
                        "description": "The list of zones associated with this network.",
                        "enum": [
                            "zoneassociation"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/NetworkcontainerZoneAssociations"
                        }
                    }
                }
            },
            "NetworkcontainerCloudInfo": {
                "type": "object",
                "properties": {
                    "delegated_member": {
                        "description": "The Cloud Platform Appliance to which authority of the object is delegated.",
                        "enum": [
                            "dhcpmember"
                        ],
                        "$ref": "#/components/schemas/NetworkcontainercloudinfoDelegatedMember"
                    },
                    "delegated_scope": {
                        "type": "string",
                        "description": "Indicates the scope of delegation for the object. This can be one of the following: NONE (outside any delegation), ROOT (the delegation point), SUBTREE (within the scope of a delegation), RECLAIMING (within the scope of a delegation being reclaimed, either as the delegation point or in the subtree).",
                        "enum": [
                            "NONE",
                            "ROOT",
                            "SUBTREE",
                            "RECLAIMING"
                        ],
                        "readOnly": true,
                        "example": "Example delegated_scope"
                    },
                    "delegated_root": {
                        "type": "string",
                        "description": "Indicates the root of the delegation if delegated_scope is SUBTREE or RECLAIMING. This is not set otherwise.",
                        "readOnly": true,
                        "example": "Example delegated_root"
                    },
                    "owned_by_adaptor": {
                        "type": "boolean",
                        "description": "Determines whether the object was created by the cloud adapter or not.",
                        "readOnly": true,
                        "example": false
                    },
                    "usage": {
                        "type": "string",
                        "description": "Indicates the cloud origin of the object.",
                        "enum": [
                            "NONE",
                            "ADAPTER",
                            "USED_BY",
                            "DELEGATED"
                        ],
                        "readOnly": true,
                        "example": "Example usage"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "Reference to the tenant object associated with the object, if any.",
                        "readOnly": true,
                        "example": "Example tenant"
                    },
                    "mgmt_platform": {
                        "type": "string",
                        "description": "Indicates the specified cloud management platform.",
                        "readOnly": true,
                        "example": "Example mgmt_platform"
                    },
                    "authority_type": {
                        "type": "string",
                        "description": "Type of authority over the object.",
                        "enum": [
                            "NONE",
                            "GM",
                            "CP"
                        ],
                        "readOnly": true,
                        "example": "Example authority_type"
                    }
                }
            },
            "NetworkcontainercloudinfoDelegatedMember": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example ipv4addr"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid Member.",
                        "example": "Example ipv6addr"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid member name",
                        "example": "Example name"
                    }
                }
            },
            "NetworkcontainerDiscoveryBasicPollSettings": {
                "type": "object",
                "properties": {
                    "port_scanning": {
                        "type": "boolean",
                        "description": "Determines whether port scanning is enabled or not.",
                        "example": false
                    },
                    "device_profile": {
                        "type": "boolean",
                        "description": "Determines whether device profile is enabled or not.",
                        "example": false
                    },
                    "snmp_collection": {
                        "type": "boolean",
                        "description": "Determines whether SNMP collection is enabled or not.",
                        "example": false
                    },
                    "cli_collection": {
                        "type": "boolean",
                        "description": "Determines whether CLI collection is enabled or not.",
                        "example": false
                    },
                    "netbios_scanning": {
                        "type": "boolean",
                        "description": "Determines whether netbios scanning is enabled or not.",
                        "example": false
                    },
                    "complete_ping_sweep": {
                        "type": "boolean",
                        "description": "Determines whether complete ping sweep is enabled or not.",
                        "example": false
                    },
                    "smart_subnet_ping_sweep": {
                        "type": "boolean",
                        "description": "Determines whether smart subnet ping sweep is enabled or not.",
                        "example": false
                    },
                    "auto_arp_refresh_before_switch_port_polling": {
                        "type": "boolean",
                        "description": "Determines whether auto ARP refresh before switch port polling is enabled or not.",
                        "example": false
                    },
                    "switch_port_data_collection_polling": {
                        "type": "string",
                        "description": "A switch port data collection polling mode.",
                        "enum": [
                            "DISABLED",
                            "PERIODIC",
                            "SCHEDULED"
                        ],
                        "example": "Example switch_port_data_collection_polling"
                    },
                    "switch_port_data_collection_polling_schedule": {
                        "description": "A Schedule Setting struct that determines switch port data collection polling schedule.",
                        "enum": [
                            "setting:schedule"
                        ],
                        "$ref": "#/components/schemas/NetworkcontainerdiscoverybasicpollsettingsSwitchPortDataCollectionPollingSchedule"
                    },
                    "switch_port_data_collection_polling_interval": {
                        "type": "integer",
                        "description": "Indicates the interval for switch port data collection polling.",
                        "format": "int64",
                        "example": 1
                    },
                    "credential_group": {
                        "type": "string",
                        "description": "Credential group.",
                        "example": "Example credential_group"
                    },
                    "polling_frequency_modifier": {
                        "type": "string",
                        "description": "Polling Frequency Modifier.",
                        "example": "Example polling_frequency_modifier"
                    },
                    "use_global_polling_frequency_modifier": {
                        "type": "boolean",
                        "description": "Use Global Polling Frequency Modifier.",
                        "example": false
                    }
                }
            },
            "NetworkcontainerdiscoverybasicpollsettingsSwitchPortDataCollectionPollingSchedule": {
                "type": "object",
                "properties": {
                    "weekdays": {
                        "type": "array",
                        "description": "Days of the week when scheduling is triggered.",
                        "enum": [
                            "SATURDAY",
                            "SUNDAY",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for the schedule.",
                        "example": "Example time_zone"
                    },
                    "recurring_time": {
                        "type": "integer",
                        "description": "The recurring time for the schedule in Epoch seconds format. This field is obsolete and is preserved only for backward compatibility purposes. Please use other applicable fields to define the recurring schedule. DO NOT use recurring_time together with these fields. If you use recurring_time with other fields to define the recurring schedule, recurring_time has priority over year, hour_of_day, and minutes_past_hour and will override the values of these fields, although it does not override month and day_of_month. In this case, the recurring time value might be different than the intended value that you define.",
                        "format": "int64",
                        "example": 1
                    },
                    "frequency": {
                        "type": "string",
                        "description": "The frequency for the scheduled task.",
                        "enum": [
                            "DAILY",
                            "HOURLY",
                            "MONTHLY",
                            "WEEKLY"
                        ],
                        "example": "Example frequency"
                    },
                    "every": {
                        "type": "integer",
                        "description": "The number of frequency to wait before repeating the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "minutes_past_hour": {
                        "type": "integer",
                        "description": "The minutes past the hour for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "hour_of_day": {
                        "type": "integer",
                        "description": "The hour of day for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "year": {
                        "type": "integer",
                        "description": "The year for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "month": {
                        "type": "integer",
                        "description": "The month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "day_of_month": {
                        "type": "integer",
                        "description": "The day of the month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "repeat": {
                        "type": "string",
                        "description": "Indicates if the scheduled task will be repeated or run only once.",
                        "enum": [
                            "ONCE",
                            "RECUR"
                        ],
                        "example": "Example repeat"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "If set to True, the scheduled task is disabled.",
                        "example": false
                    }
                }
            },
            "NetworkcontainerDiscoveryBlackoutSetting": {
                "type": "object",
                "properties": {
                    "enable_blackout": {
                        "type": "boolean",
                        "description": "Determines whether a blackout is enabled or not.",
                        "example": false
                    },
                    "blackout_duration": {
                        "type": "integer",
                        "description": "The blackout duration in seconds; minimum value is 1 minute.",
                        "format": "int64",
                        "example": 1
                    },
                    "blackout_schedule": {
                        "description": "A Schedule Setting struct that determines blackout schedule.",
                        "enum": [
                            "setting:schedule"
                        ],
                        "$ref": "#/components/schemas/NetworkcontainerdiscoveryblackoutsettingBlackoutSchedule"
                    }
                }
            },
            "NetworkcontainerdiscoveryblackoutsettingBlackoutSchedule": {
                "type": "object",
                "properties": {
                    "weekdays": {
                        "type": "array",
                        "description": "Days of the week when scheduling is triggered.",
                        "enum": [
                            "SATURDAY",
                            "SUNDAY",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for the schedule.",
                        "example": "Example time_zone"
                    },
                    "recurring_time": {
                        "type": "integer",
                        "description": "The recurring time for the schedule in Epoch seconds format. This field is obsolete and is preserved only for backward compatibility purposes. Please use other applicable fields to define the recurring schedule. DO NOT use recurring_time together with these fields. If you use recurring_time with other fields to define the recurring schedule, recurring_time has priority over year, hour_of_day, and minutes_past_hour and will override the values of these fields, although it does not override month and day_of_month. In this case, the recurring time value might be different than the intended value that you define.",
                        "format": "int64",
                        "example": 1
                    },
                    "frequency": {
                        "type": "string",
                        "description": "The frequency for the scheduled task.",
                        "enum": [
                            "DAILY",
                            "HOURLY",
                            "MONTHLY",
                            "WEEKLY"
                        ],
                        "example": "Example frequency"
                    },
                    "every": {
                        "type": "integer",
                        "description": "The number of frequency to wait before repeating the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "minutes_past_hour": {
                        "type": "integer",
                        "description": "The minutes past the hour for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "hour_of_day": {
                        "type": "integer",
                        "description": "The hour of day for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "year": {
                        "type": "integer",
                        "description": "The year for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "month": {
                        "type": "integer",
                        "description": "The month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "day_of_month": {
                        "type": "integer",
                        "description": "The day of the month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "repeat": {
                        "type": "string",
                        "description": "Indicates if the scheduled task will be repeated or run only once.",
                        "enum": [
                            "ONCE",
                            "RECUR"
                        ],
                        "example": "Example repeat"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "If set to True, the scheduled task is disabled.",
                        "example": false
                    }
                }
            },
            "NetworkcontainerFederatedRealms": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The federated realm name",
                        "example": "Example name"
                    },
                    "id": {
                        "type": "string",
                        "description": "The federated realm id",
                        "example": "Example id"
                    }
                }
            },
            "NetworkcontainerIpamThresholdSettings": {
                "type": "object",
                "properties": {
                    "trigger_value": {
                        "type": "integer",
                        "description": "Indicates the percentage point which triggers the email/SNMP trap sending.",
                        "format": "int64",
                        "example": 1
                    },
                    "reset_value": {
                        "type": "integer",
                        "description": "Indicates the percentage point which resets the email/SNMP trap sending.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "NetworkcontainerIpamTrapSettings": {
                "type": "object",
                "properties": {
                    "enable_email_warnings": {
                        "type": "boolean",
                        "description": "Determines whether sending warnings by email is enabled or not.",
                        "example": false
                    },
                    "enable_snmp_warnings": {
                        "type": "boolean",
                        "description": "Determines whether sending warnings by SNMP is enabled or not.",
                        "example": false
                    }
                }
            },
            "NetworkcontainerLogicFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The filter name.",
                        "example": "Example filter"
                    },
                    "type": {
                        "type": "string",
                        "description": "The filter type. Valid values are: * MAC * NAC * Option",
                        "example": "Example type"
                    }
                }
            },
            "NetworkcontainerMsAdUserData": {
                "type": "object",
                "properties": {
                    "active_users_count": {
                        "type": "integer",
                        "description": "The number of active users.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "NetworkcontainerOptions": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the DHCP option.",
                        "example": "Example name"
                    },
                    "num": {
                        "type": "integer",
                        "description": "The code of the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "vendor_class": {
                        "type": "string",
                        "description": "The name of the space this DHCP option is associated to.",
                        "example": "Example vendor_class"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the DHCP option",
                        "example": "Example value"
                    },
                    "use_option": {
                        "type": "boolean",
                        "description": "Only applies to special options that are displayed separately from other options and have a use flag. These options are: * routers * router-templates * domain-name-servers * domain-name * broadcast-address * broadcast-address-offset * dhcp-lease-time * dhcp6.name-servers",
                        "example": false
                    }
                }
            },
            "NetworkcontainerPortControlBlackoutSetting": {
                "type": "object",
                "properties": {
                    "enable_blackout": {
                        "type": "boolean",
                        "description": "Determines whether a blackout is enabled or not.",
                        "example": false
                    },
                    "blackout_duration": {
                        "type": "integer",
                        "description": "The blackout duration in seconds; minimum value is 1 minute.",
                        "format": "int64",
                        "example": 1
                    },
                    "blackout_schedule": {
                        "description": "A Schedule Setting struct that determines blackout schedule.",
                        "enum": [
                            "setting:schedule"
                        ],
                        "$ref": "#/components/schemas/NetworkcontainerportcontrolblackoutsettingBlackoutSchedule"
                    }
                }
            },
            "NetworkcontainerportcontrolblackoutsettingBlackoutSchedule": {
                "type": "object",
                "properties": {
                    "weekdays": {
                        "type": "array",
                        "description": "Days of the week when scheduling is triggered.",
                        "enum": [
                            "SATURDAY",
                            "SUNDAY",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for the schedule.",
                        "example": "Example time_zone"
                    },
                    "recurring_time": {
                        "type": "integer",
                        "description": "The recurring time for the schedule in Epoch seconds format. This field is obsolete and is preserved only for backward compatibility purposes. Please use other applicable fields to define the recurring schedule. DO NOT use recurring_time together with these fields. If you use recurring_time with other fields to define the recurring schedule, recurring_time has priority over year, hour_of_day, and minutes_past_hour and will override the values of these fields, although it does not override month and day_of_month. In this case, the recurring time value might be different than the intended value that you define.",
                        "format": "int64",
                        "example": 1
                    },
                    "frequency": {
                        "type": "string",
                        "description": "The frequency for the scheduled task.",
                        "enum": [
                            "DAILY",
                            "HOURLY",
                            "MONTHLY",
                            "WEEKLY"
                        ],
                        "example": "Example frequency"
                    },
                    "every": {
                        "type": "integer",
                        "description": "The number of frequency to wait before repeating the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "minutes_past_hour": {
                        "type": "integer",
                        "description": "The minutes past the hour for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "hour_of_day": {
                        "type": "integer",
                        "description": "The hour of day for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "year": {
                        "type": "integer",
                        "description": "The year for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "month": {
                        "type": "integer",
                        "description": "The month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "day_of_month": {
                        "type": "integer",
                        "description": "The day of the month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "repeat": {
                        "type": "string",
                        "description": "Indicates if the scheduled task will be repeated or run only once.",
                        "enum": [
                            "ONCE",
                            "RECUR"
                        ],
                        "example": "Example repeat"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "If set to True, the scheduled task is disabled.",
                        "example": false
                    }
                }
            },
            "NetworkcontainerSubscribeSettings": {
                "type": "object",
                "properties": {
                    "enabled_attributes": {
                        "type": "array",
                        "description": "The list of Cisco ISE attributes allowed for subscription.",
                        "enum": [
                            "DOMAINNAME",
                            "ENDPOINT_PROFILE",
                            "SECURITY_GROUP",
                            "SESSION_STATE",
                            "SSID",
                            "USERNAME",
                            "VLAN"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "mapped_ea_attributes": {
                        "description": "The list of NIOS extensible attributes to Cisco ISE attributes mappings.",
                        "enum": [
                            "ciscoise:eaassociation"
                        ],
                        "$ref": "#/components/schemas/NetworkcontainersubscribesettingsMappedEaAttributes"
                    }
                }
            },
            "NetworkcontainersubscribesettingsMappedEaAttributes": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The Cisco ISE attribute name that is enabled for publishsing from a Cisco ISE endpoint.",
                        "enum": [
                            "ACCOUNT_SESSION_ID",
                            "AUDIT_SESSION_ID",
                            "EPS_STATUS",
                            "IP_ADDRESS",
                            "MAC",
                            "NAS_IP_ADDRESS",
                            "NAS_PORT_ID",
                            "POSTURE_STATUS",
                            "POSTURE_TIMESTAMP"
                        ],
                        "example": "Example name"
                    },
                    "mapped_ea": {
                        "type": "string",
                        "description": "The name of the extensible attribute definition object the Cisco ISE attribute that is enabled for subscription is mapped on.",
                        "example": "Example mapped_ea"
                    }
                }
            },
            "NetworkcontainerZoneAssociations": {
                "type": "object",
                "properties": {
                    "fqdn": {
                        "type": "string",
                        "description": "The FQDN of the authoritative forward zone.",
                        "example": "Example fqdn"
                    },
                    "is_default": {
                        "type": "boolean",
                        "description": "True if this is the default zone.",
                        "example": false
                    },
                    "view": {
                        "type": "string",
                        "description": "The view to which the zone belongs. If a view is not specified, the default view is used.",
                        "example": "Example view"
                    }
                }
            },
            "ListNetworkcontainerResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Networkcontainer__ objects.",
                        "type": "array",
                        "title": "ListNetworkcontainerResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Networkcontainer"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Networkcontainer__ objects.",
                        "type": "object",
                        "title": "ListNetworkcontainerResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Networkcontainer"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateNetworkcontainerResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Networkcontainer__ in object format.",
                        "type": "object",
                        "title": "CreateNetworkcontainerResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Networkcontainer"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Networkcontainer__.",
                        "type": "string",
                        "title": "CreateNetworkcontainerResponse"
                    }
                ]
            },
            "GetNetworkcontainerResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Networkcontainer"
                    },
                    {
                        "description": "The response format to retrieve __Networkcontainer__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetNetworkcontainerResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Networkcontainer"
                            }
                        }
                    }
                ]
            },
            "UpdateNetworkcontainerResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Networkcontainer__ in object format.",
                        "type": "object",
                        "title": "UpdateNetworkcontainerResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Networkcontainer"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Networkcontainer__ .",
                        "type": "string",
                        "title": "UpdateNetworkcontainerResponse"
                    }
                ]
            },
            "Networktemplate": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "allow_any_netmask": {
                        "type": "boolean",
                        "description": "This flag controls whether the template allows any netmask. You must specify a netmask when creating a network using this template. If you set this parameter to false, you must specify the \"netmask\" field for the network template object.",
                        "example": false
                    },
                    "authority": {
                        "type": "boolean",
                        "description": "Authority for the DHCP network.",
                        "example": false
                    },
                    "auto_create_reversezone": {
                        "type": "boolean",
                        "description": "This flag controls whether reverse zones are automatically created when the network is added.",
                        "example": false
                    },
                    "bootfile": {
                        "type": "string",
                        "description": "The boot server IPv4 Address or name in FQDN format for the network. You can specify the name and/or IP address of the boot server that the host needs to boot.",
                        "example": "Example bootfile"
                    },
                    "bootserver": {
                        "type": "string",
                        "description": "The bootserver address for the network. You can specify the name and/or IP address of the boot server that the host needs to boot. The boot server IPv4 Address or name in FQDN format.",
                        "example": "Example bootserver"
                    },
                    "cloud_api_compatible": {
                        "type": "boolean",
                        "description": "This flag controls whether this template can be used to create network objects in a cloud-computing deployment.",
                        "example": false
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the network; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "ddns_domainname": {
                        "type": "string",
                        "description": "The dynamic DNS domain name the appliance uses specifically for DDNS updates for this network.",
                        "example": "Example ddns_domainname"
                    },
                    "ddns_generate_hostname": {
                        "type": "boolean",
                        "description": "If this field is set to True, the DHCP server generates a hostname and updates DNS with it when the DHCP client request does not contain a hostname.",
                        "example": false
                    },
                    "ddns_server_always_updates": {
                        "type": "boolean",
                        "description": "This field controls whether the DHCP server is allowed to update DNS, regardless of the DHCP client requests. Note that changes for this field take effect only if ddns_use_option81 is True.",
                        "example": false
                    },
                    "ddns_ttl": {
                        "type": "integer",
                        "description": "The DNS update Time to Live (TTL) value of a DHCP network object. The TTL is a 32-bit unsigned integer that represents the duration, in seconds, for which the update is cached. Zero indicates that the update is not cached.",
                        "format": "int64",
                        "example": 1
                    },
                    "ddns_update_fixed_addresses": {
                        "type": "boolean",
                        "description": "By default, the DHCP server does not update DNS when it allocates a fixed address to a client. You can configure the DHCP server to update the A and PTR records of a client with a fixed address. When this feature is enabled and the DHCP server adds A and PTR records for a fixed address, the DHCP server never discards the records.",
                        "example": false
                    },
                    "ddns_use_option81": {
                        "type": "boolean",
                        "description": "The support for DHCP Option 81 at the network level.",
                        "example": false
                    },
                    "delegated_member": {
                        "$ref": "#/components/schemas/NetworktemplateDelegatedMember"
                    },
                    "deny_bootp": {
                        "type": "boolean",
                        "description": "If set to True, BOOTP settings are disabled and BOOTP requests will be denied.",
                        "example": false
                    },
                    "email_list": {
                        "type": "array",
                        "description": "The e-mail lists to which the appliance sends DHCP threshold alarm e-mail messages.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "enable_ddns": {
                        "type": "boolean",
                        "description": "The dynamic DNS updates flag of a DHCP network object. If set to True, the DHCP server sends DDNS updates to DNS servers in the same Grid, and to external DNS servers.",
                        "example": false
                    },
                    "enable_dhcp_thresholds": {
                        "type": "boolean",
                        "description": "Determines if DHCP thresholds are enabled for the network.",
                        "example": false
                    },
                    "enable_email_warnings": {
                        "type": "boolean",
                        "description": "Determines if DHCP threshold warnings are sent through email.",
                        "example": false
                    },
                    "enable_pxe_lease_time": {
                        "type": "boolean",
                        "description": "Set this to True if you want the DHCP server to use a different lease time for PXE clients.",
                        "example": false
                    },
                    "enable_snmp_warnings": {
                        "type": "boolean",
                        "description": "Determines if DHCP threshold warnings are send through SNMP.",
                        "example": false
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "fixed_address_templates": {
                        "type": "array",
                        "description": "The list of fixed address templates assigned to this network template object. When you create a network based on a network template object that contains fixed address templates, the fixed addresses are created based on the associated fixed address templates.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "high_water_mark": {
                        "type": "integer",
                        "description": "The percentage of DHCP network usage threshold above which network usage is not expected and may warrant your attention. When the high watermark is reached, the Infoblox appliance generates a syslog message and sends a warning (if enabled). A number that specifies the percentage of allocated addresses. The range is from 1 to 100.",
                        "format": "int64",
                        "example": 1
                    },
                    "high_water_mark_reset": {
                        "type": "integer",
                        "description": "The percentage of DHCP network usage below which the corresponding SNMP trap is reset. A number that specifies the percentage of allocated addresses. The range is from 1 to 100. The high watermark reset value must be lower than the high watermark value.",
                        "format": "int64",
                        "example": 1
                    },
                    "ignore_dhcp_option_list_request": {
                        "type": "boolean",
                        "description": "If this field is set to False, the appliance returns all DHCP options the client is eligible to receive, rather than only the list of options the client has requested.",
                        "example": false
                    },
                    "ipam_email_addresses": {
                        "type": "array",
                        "description": "The e-mail lists to which the appliance sends IPAM threshold alarm e-mail messages.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "ipam_threshold_settings": {
                        "$ref": "#/components/schemas/NetworktemplateIpamThresholdSettings"
                    },
                    "ipam_trap_settings": {
                        "$ref": "#/components/schemas/NetworktemplateIpamTrapSettings"
                    },
                    "lease_scavenge_time": {
                        "type": "integer",
                        "description": "An integer that specifies the period of time (in seconds) that frees and backs up leases remained in the database before they are automatically deleted. To disable lease scavenging, set the parameter to -1. The minimum positive value must be greater than 86400 seconds (1 day).",
                        "format": "int64",
                        "example": 1
                    },
                    "logic_filter_rules": {
                        "type": "array",
                        "description": "This field contains the logic filters to be applied on the this network template. This list corresponds to the match rules that are written to the dhcpd configuration file.",
                        "enum": [
                            "logicfilterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/NetworktemplateLogicFilterRules"
                        }
                    },
                    "low_water_mark": {
                        "type": "integer",
                        "description": "The percentage of DHCP network usage below which the Infoblox appliance generates a syslog message and sends a warning (if enabled). A number that specifies the percentage of allocated addresses. The range is from 1 to 100.",
                        "format": "int64",
                        "example": 1
                    },
                    "low_water_mark_reset": {
                        "type": "integer",
                        "description": "The percentage of DHCP network usage threshold below which network usage is not expected and may warrant your attention. When the low watermark is crossed, the Infoblox appliance generates a syslog message and sends a warning (if enabled). A number that specifies the percentage of allocated addresses. The range is from 1 to 100. The low watermark reset value must be higher than the low watermark value.",
                        "format": "int64",
                        "example": 1
                    },
                    "members": {
                        "type": "array",
                        "description": "A list of members or Microsoft (r) servers that serve DHCP for this network. All members in the array must be of the same type. The struct type must be indicated in each element, by setting the \"_struct\" member to the struct type.",
                        "enum": [
                            "dhcpmember"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/NetworktemplateMembers"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this network template.",
                        "example": "Example name"
                    },
                    "netmask": {
                        "type": "integer",
                        "description": "The netmask of the network in CIDR format.",
                        "format": "int64",
                        "example": 1
                    },
                    "nextserver": {
                        "type": "string",
                        "description": "The name in FQDN and/or IPv4 Address of the next server that the host needs to boot.",
                        "example": "Example nextserver"
                    },
                    "options": {
                        "type": "array",
                        "description": "An array of DHCP option dhcpoption structs that lists the DHCP options associated with the object.",
                        "enum": [
                            "dhcpoption"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/NetworktemplateOptions"
                        }
                    },
                    "pxe_lease_time": {
                        "type": "integer",
                        "description": "The PXE lease time value of a DHCP Network object. Some hosts use PXE (Preboot Execution Environment) to boot remotely from a server. To better manage your IP resources, set a different lease time for PXE boot requests. You can configure the DHCP server to allocate an IP address with a shorter lease time to hosts that send PXE boot requests, so IP addresses are not leased longer than necessary. A 32-bit unsigned integer that represents the duration, in seconds, for which the update is cached. Zero indicates that the update is not cached.",
                        "format": "int64",
                        "example": 1
                    },
                    "range_templates": {
                        "type": "array",
                        "description": "The list of IP address range templates assigned to this network template object. When you create a network based on a network template object that contains range templates, the IP address ranges are created based on the associated IP address range templates.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "recycle_leases": {
                        "type": "boolean",
                        "description": "If the field is set to True, the leases are kept in the Recycle Bin until one week after expiration. Otherwise, the leases are permanently deleted.",
                        "example": false
                    },
                    "rir": {
                        "type": "string",
                        "description": "THe registry (RIR) that allocated the network address space.",
                        "enum": [
                            "RIPE",
                            "NONE"
                        ],
                        "readOnly": true,
                        "example": "Example rir"
                    },
                    "rir_organization": {
                        "type": "string",
                        "description": "The RIR organization assoicated with the network.",
                        "example": "Example rir_organization"
                    },
                    "rir_registration_action": {
                        "type": "string",
                        "description": "The RIR registration action.",
                        "enum": [
                            "NONE",
                            "CREATE"
                        ],
                        "example": "Example rir_registration_action"
                    },
                    "rir_registration_status": {
                        "type": "string",
                        "description": "The registration status of the network in RIR.",
                        "enum": [
                            "REGISTERED",
                            "NOT_REGISTERED"
                        ],
                        "example": "Example rir_registration_status"
                    },
                    "send_rir_request": {
                        "type": "boolean",
                        "description": "Determines whether to send the RIR registration request.",
                        "example": false
                    },
                    "update_dns_on_lease_renewal": {
                        "type": "boolean",
                        "description": "This field controls whether the DHCP server updates DNS when a DHCP lease is renewed.",
                        "example": false
                    },
                    "use_authority": {
                        "type": "boolean",
                        "description": "Use flag for: authority",
                        "example": false
                    },
                    "use_bootfile": {
                        "type": "boolean",
                        "description": "Use flag for: bootfile",
                        "example": false
                    },
                    "use_bootserver": {
                        "type": "boolean",
                        "description": "Use flag for: bootserver",
                        "example": false
                    },
                    "use_ddns_domainname": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_domainname",
                        "example": false
                    },
                    "use_ddns_generate_hostname": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_generate_hostname",
                        "example": false
                    },
                    "use_ddns_ttl": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_ttl",
                        "example": false
                    },
                    "use_ddns_update_fixed_addresses": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_update_fixed_addresses",
                        "example": false
                    },
                    "use_ddns_use_option81": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_use_option81",
                        "example": false
                    },
                    "use_deny_bootp": {
                        "type": "boolean",
                        "description": "Use flag for: deny_bootp",
                        "example": false
                    },
                    "use_email_list": {
                        "type": "boolean",
                        "description": "Use flag for: email_list",
                        "example": false
                    },
                    "use_enable_ddns": {
                        "type": "boolean",
                        "description": "Use flag for: enable_ddns",
                        "example": false
                    },
                    "use_enable_dhcp_thresholds": {
                        "type": "boolean",
                        "description": "Use flag for: enable_dhcp_thresholds",
                        "example": false
                    },
                    "use_ignore_dhcp_option_list_request": {
                        "type": "boolean",
                        "description": "Use flag for: ignore_dhcp_option_list_request",
                        "example": false
                    },
                    "use_ipam_email_addresses": {
                        "type": "boolean",
                        "description": "Use flag for: ipam_email_addresses",
                        "example": false
                    },
                    "use_ipam_threshold_settings": {
                        "type": "boolean",
                        "description": "Use flag for: ipam_threshold_settings",
                        "example": false
                    },
                    "use_ipam_trap_settings": {
                        "type": "boolean",
                        "description": "Use flag for: ipam_trap_settings",
                        "example": false
                    },
                    "use_lease_scavenge_time": {
                        "type": "boolean",
                        "description": "Use flag for: lease_scavenge_time",
                        "example": false
                    },
                    "use_logic_filter_rules": {
                        "type": "boolean",
                        "description": "Use flag for: logic_filter_rules",
                        "example": false
                    },
                    "use_nextserver": {
                        "type": "boolean",
                        "description": "Use flag for: nextserver",
                        "example": false
                    },
                    "use_options": {
                        "type": "boolean",
                        "description": "Use flag for: options",
                        "example": false
                    },
                    "use_pxe_lease_time": {
                        "type": "boolean",
                        "description": "Use flag for: pxe_lease_time",
                        "example": false
                    },
                    "use_recycle_leases": {
                        "type": "boolean",
                        "description": "Use flag for: recycle_leases",
                        "example": false
                    },
                    "use_update_dns_on_lease_renewal": {
                        "type": "boolean",
                        "description": "Use flag for: update_dns_on_lease_renewal",
                        "example": false
                    }
                }
            },
            "NetworktemplateDelegatedMember": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example ipv4addr"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid Member.",
                        "example": "Example ipv6addr"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid member name",
                        "example": "Example name"
                    }
                }
            },
            "NetworktemplateIpamThresholdSettings": {
                "type": "object",
                "properties": {
                    "trigger_value": {
                        "type": "integer",
                        "description": "Indicates the percentage point which triggers the email/SNMP trap sending.",
                        "format": "int64",
                        "example": 1
                    },
                    "reset_value": {
                        "type": "integer",
                        "description": "Indicates the percentage point which resets the email/SNMP trap sending.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "NetworktemplateIpamTrapSettings": {
                "type": "object",
                "properties": {
                    "enable_email_warnings": {
                        "type": "boolean",
                        "description": "Determines whether sending warnings by email is enabled or not.",
                        "example": false
                    },
                    "enable_snmp_warnings": {
                        "type": "boolean",
                        "description": "Determines whether sending warnings by SNMP is enabled or not.",
                        "example": false
                    }
                }
            },
            "NetworktemplateLogicFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The filter name.",
                        "example": "Example filter"
                    },
                    "type": {
                        "type": "string",
                        "description": "The filter type. Valid values are: * MAC * NAC * Option",
                        "example": "Example type"
                    }
                }
            },
            "NetworktemplateMembers": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address or FQDN of the Microsoft server.",
                        "example": "Example ipv4addr"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid Member.",
                        "example": "Example ipv6addr"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid member name",
                        "example": "Example name"
                    }
                }
            },
            "NetworktemplateOptions": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the DHCP option.",
                        "example": "Example name"
                    },
                    "num": {
                        "type": "integer",
                        "description": "The code of the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "vendor_class": {
                        "type": "string",
                        "description": "The name of the space this DHCP option is associated to.",
                        "example": "Example vendor_class"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the DHCP option",
                        "example": "Example value"
                    },
                    "use_option": {
                        "type": "boolean",
                        "description": "Only applies to special options that are displayed separately from other options and have a use flag. These options are: * routers * router-templates * domain-name-servers * domain-name * broadcast-address * broadcast-address-offset * dhcp-lease-time * dhcp6.name-servers",
                        "example": false
                    }
                }
            },
            "ListNetworktemplateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Networktemplate__ objects.",
                        "type": "array",
                        "title": "ListNetworktemplateResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Networktemplate"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Networktemplate__ objects.",
                        "type": "object",
                        "title": "ListNetworktemplateResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Networktemplate"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateNetworktemplateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Networktemplate__ in object format.",
                        "type": "object",
                        "title": "CreateNetworktemplateResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Networktemplate"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Networktemplate__.",
                        "type": "string",
                        "title": "CreateNetworktemplateResponse"
                    }
                ]
            },
            "GetNetworktemplateResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Networktemplate"
                    },
                    {
                        "description": "The response format to retrieve __Networktemplate__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetNetworktemplateResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Networktemplate"
                            }
                        }
                    }
                ]
            },
            "UpdateNetworktemplateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Networktemplate__ in object format.",
                        "type": "object",
                        "title": "UpdateNetworktemplateResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Networktemplate"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Networktemplate__ .",
                        "type": "string",
                        "title": "UpdateNetworktemplateResponse"
                    }
                ]
            },
            "Networkview": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "associated_dns_views": {
                        "type": "array",
                        "description": "The list of DNS views associated with this network view.",
                        "enum": [
                            "string"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "associated_members": {
                        "type": "array",
                        "description": "The list of members associated with a network view.",
                        "enum": [
                            "networkview:assocmember"
                        ],
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/NetworkviewAssociatedMembers"
                        }
                    },
                    "cloud_info": {
                        "$ref": "#/components/schemas/NetworkviewCloudInfo"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the network view; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "ddns_dns_view": {
                        "type": "string",
                        "description": "DNS views that will receive the updates if you enable the appliance to send updates to Grid members.",
                        "example": "Example ddns_dns_view"
                    },
                    "ddns_zone_primaries": {
                        "type": "array",
                        "description": "An array of Ddns Zone Primary dhcpddns structs that lists the information of primary zone to wich DDNS updates should be sent.",
                        "enum": [
                            "dhcpddns"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/NetworkviewDdnsZonePrimaries"
                        }
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "federated_realms": {
                        "type": "array",
                        "description": "This field contains the federated realms associated to this network view",
                        "enum": [
                            "federatedrealm"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/NetworkviewFederatedRealms"
                        }
                    },
                    "internal_forward_zones": {
                        "type": "array",
                        "description": "The list of linked authoritative DNS zones.",
                        "enum": [
                            "zone_auth"
                        ],
                        "items": {
                            "type": "string",
                            "enum": [
                                "zone_auth"
                            ]
                        }
                    },
                    "is_default": {
                        "type": "boolean",
                        "description": "The NIOS appliance provides one default network view. You can rename the default view and change its settings, but you cannot delete it. There must always be at least one network view in the appliance.",
                        "readOnly": true,
                        "example": false
                    },
                    "mgm_private": {
                        "type": "boolean",
                        "description": "This field controls whether this object is synchronized with the Multi-Grid Master. If this field is set to True, objects are not synchronized.",
                        "example": false
                    },
                    "ms_ad_user_data": {
                        "$ref": "#/components/schemas/NetworkviewMsAdUserData"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the network view.",
                        "example": "Example name"
                    },
                    "remote_forward_zones": {
                        "type": "array",
                        "description": "The list of forward-mapping zones to which the DHCP server sends the updates.",
                        "enum": [
                            "remoteddnszone"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/NetworkviewRemoteForwardZones"
                        }
                    },
                    "remote_reverse_zones": {
                        "type": "array",
                        "description": "The list of reverse-mapping zones to which the DHCP server sends the updates.",
                        "enum": [
                            "remoteddnszone"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/NetworkviewRemoteReverseZones"
                        }
                    }
                }
            },
            "NetworkviewAssociatedMembers": {
                "type": "object",
                "properties": {
                    "member": {
                        "type": "string",
                        "description": "The member object associated with a network view.",
                        "readOnly": true,
                        "example": "Example member"
                    },
                    "failovers": {
                        "type": "array",
                        "description": "The list of failover objects associated with each member.",
                        "enum": [
                            "string"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "NetworkviewCloudInfo": {
                "type": "object",
                "properties": {
                    "delegated_member": {
                        "description": "The Cloud Platform Appliance to which authority of the object is delegated.",
                        "enum": [
                            "dhcpmember"
                        ],
                        "$ref": "#/components/schemas/NetworkviewcloudinfoDelegatedMember"
                    },
                    "delegated_scope": {
                        "type": "string",
                        "description": "Indicates the scope of delegation for the object. This can be one of the following: NONE (outside any delegation), ROOT (the delegation point), SUBTREE (within the scope of a delegation), RECLAIMING (within the scope of a delegation being reclaimed, either as the delegation point or in the subtree).",
                        "enum": [
                            "NONE",
                            "ROOT",
                            "SUBTREE",
                            "RECLAIMING"
                        ],
                        "readOnly": true,
                        "example": "Example delegated_scope"
                    },
                    "delegated_root": {
                        "type": "string",
                        "description": "Indicates the root of the delegation if delegated_scope is SUBTREE or RECLAIMING. This is not set otherwise.",
                        "readOnly": true,
                        "example": "Example delegated_root"
                    },
                    "owned_by_adaptor": {
                        "type": "boolean",
                        "description": "Determines whether the object was created by the cloud adapter or not.",
                        "readOnly": true,
                        "example": false
                    },
                    "usage": {
                        "type": "string",
                        "description": "Indicates the cloud origin of the object.",
                        "enum": [
                            "NONE",
                            "ADAPTER",
                            "USED_BY",
                            "DELEGATED"
                        ],
                        "readOnly": true,
                        "example": "Example usage"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "Reference to the tenant object associated with the object, if any.",
                        "readOnly": true,
                        "example": "Example tenant"
                    },
                    "mgmt_platform": {
                        "type": "string",
                        "description": "Indicates the specified cloud management platform.",
                        "readOnly": true,
                        "example": "Example mgmt_platform"
                    },
                    "authority_type": {
                        "type": "string",
                        "description": "Type of authority over the object.",
                        "enum": [
                            "NONE",
                            "GM",
                            "CP"
                        ],
                        "readOnly": true,
                        "example": "Example authority_type"
                    }
                }
            },
            "NetworkviewcloudinfoDelegatedMember": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example ipv4addr"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid Member.",
                        "example": "Example ipv6addr"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid member name",
                        "example": "Example name"
                    }
                }
            },
            "NetworkviewDdnsZonePrimaries": {
                "type": "object",
                "properties": {
                    "zone_match": {
                        "type": "string",
                        "description": "Indicate matching type.",
                        "enum": [
                            "GRID",
                            "EXTERNAL",
                            "ANY_EXTERNAL",
                            "ANY_GRID"
                        ],
                        "example": "Example zone_match"
                    },
                    "dns_grid_zone": {
                        "type": "string",
                        "description": "The ref of a DNS zone.",
                        "example": "Example dns_grid_zone"
                    },
                    "dns_grid_primary": {
                        "type": "string",
                        "description": "The name of a Grid member.",
                        "example": "Example dns_grid_primary"
                    },
                    "dns_ext_zone": {
                        "type": "string",
                        "description": "The name of external zone in FQDN format.",
                        "example": "Example dns_ext_zone"
                    },
                    "dns_ext_primary": {
                        "type": "string",
                        "description": "The IP address of the External server. Valid when zone_match is \"EXTERNAL\" or \"ANY_EXTERNAL\".",
                        "example": "Example dns_ext_primary"
                    }
                }
            },
            "NetworkviewFederatedRealms": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The federated realm name",
                        "example": "Example name"
                    },
                    "id": {
                        "type": "string",
                        "description": "The federated realm id",
                        "example": "Example id"
                    }
                }
            },
            "NetworkviewMsAdUserData": {
                "type": "object",
                "properties": {
                    "active_users_count": {
                        "type": "integer",
                        "description": "The number of active users.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "NetworkviewRemoteForwardZones": {
                "type": "object",
                "properties": {
                    "fqdn": {
                        "type": "string",
                        "description": "The FQDN of the remote server.",
                        "example": "Example fqdn"
                    },
                    "server_address": {
                        "type": "string",
                        "description": "The remote server IP address.",
                        "example": "Example server_address"
                    },
                    "gss_tsig_dns_principal": {
                        "type": "string",
                        "description": "The principal name in which GSS-TSIG for dynamic updates is enabled.",
                        "example": "Example gss_tsig_dns_principal"
                    },
                    "gss_tsig_domain": {
                        "type": "string",
                        "description": "The domain in which GSS-TSIG for dynamic updates is enabled.",
                        "example": "Example gss_tsig_domain"
                    },
                    "tsig_key": {
                        "type": "string",
                        "description": "The TSIG key value.",
                        "example": "Example tsig_key"
                    },
                    "tsig_key_alg": {
                        "type": "string",
                        "description": "The TSIG key alorithm name.",
                        "enum": [
                            "HMAC-MD5",
                            "HMAC-SHA256"
                        ],
                        "example": "Example tsig_key_alg"
                    },
                    "tsig_key_name": {
                        "type": "string",
                        "description": "The name of the TSIG key. The key name entered here must match the TSIG key name on the external name server.",
                        "example": "Example tsig_key_name"
                    },
                    "key_type": {
                        "type": "string",
                        "description": "The key type to be used.",
                        "enum": [
                            "GSS-TSIG",
                            "NONE",
                            "TSIG"
                        ],
                        "example": "Example key_type"
                    }
                }
            },
            "NetworkviewRemoteReverseZones": {
                "type": "object",
                "properties": {
                    "fqdn": {
                        "type": "string",
                        "description": "The FQDN of the remote server.",
                        "example": "Example fqdn"
                    },
                    "server_address": {
                        "type": "string",
                        "description": "The remote server IP address.",
                        "example": "Example server_address"
                    },
                    "gss_tsig_dns_principal": {
                        "type": "string",
                        "description": "The principal name in which GSS-TSIG for dynamic updates is enabled.",
                        "example": "Example gss_tsig_dns_principal"
                    },
                    "gss_tsig_domain": {
                        "type": "string",
                        "description": "The domain in which GSS-TSIG for dynamic updates is enabled.",
                        "example": "Example gss_tsig_domain"
                    },
                    "tsig_key": {
                        "type": "string",
                        "description": "The TSIG key value.",
                        "example": "Example tsig_key"
                    },
                    "tsig_key_alg": {
                        "type": "string",
                        "description": "The TSIG key alorithm name.",
                        "enum": [
                            "HMAC-MD5",
                            "HMAC-SHA256"
                        ],
                        "example": "Example tsig_key_alg"
                    },
                    "tsig_key_name": {
                        "type": "string",
                        "description": "The name of the TSIG key. The key name entered here must match the TSIG key name on the external name server.",
                        "example": "Example tsig_key_name"
                    },
                    "key_type": {
                        "type": "string",
                        "description": "The key type to be used.",
                        "enum": [
                            "GSS-TSIG",
                            "NONE",
                            "TSIG"
                        ],
                        "example": "Example key_type"
                    }
                }
            },
            "ListNetworkviewResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Networkview__ objects.",
                        "type": "array",
                        "title": "ListNetworkviewResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Networkview"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Networkview__ objects.",
                        "type": "object",
                        "title": "ListNetworkviewResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Networkview"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateNetworkviewResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Networkview__ in object format.",
                        "type": "object",
                        "title": "CreateNetworkviewResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Networkview"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Networkview__.",
                        "type": "string",
                        "title": "CreateNetworkviewResponse"
                    }
                ]
            },
            "GetNetworkviewResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Networkview"
                    },
                    {
                        "description": "The response format to retrieve __Networkview__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetNetworkviewResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Networkview"
                            }
                        }
                    }
                ]
            },
            "UpdateNetworkviewResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Networkview__ in object format.",
                        "type": "object",
                        "title": "UpdateNetworkviewResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Networkview"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Networkview__ .",
                        "type": "string",
                        "title": "UpdateNetworkviewResponse"
                    }
                ]
            },
            "Ipv6network": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "auto_create_reversezone": {
                        "type": "boolean",
                        "description": "This flag controls whether reverse zones are automatically created when the network is added.",
                        "writeOnly": true,
                        "example": false
                    },
                    "cloud_info": {
                        "$ref": "#/components/schemas/Ipv6networkCloudInfo"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the network; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "ddns_domainname": {
                        "type": "string",
                        "description": "The dynamic DNS domain name the appliance uses specifically for DDNS updates for this network.",
                        "example": "Example ddns_domainname"
                    },
                    "ddns_enable_option_fqdn": {
                        "type": "boolean",
                        "description": "Use this method to set or retrieve the ddns_enable_option_fqdn flag of a DHCP IPv6 Network object. This method controls whether the FQDN option sent by the client is to be used, or if the server can automatically generate the FQDN. This setting overrides the upper-level settings.",
                        "example": false
                    },
                    "ddns_generate_hostname": {
                        "type": "boolean",
                        "description": "If this field is set to True, the DHCP server generates a hostname and updates DNS with it when the DHCP client request does not contain a hostname.",
                        "example": false
                    },
                    "ddns_server_always_updates": {
                        "type": "boolean",
                        "description": "This field controls whether only the DHCP server is allowed to update DNS, regardless of the DHCP clients requests. Note that changes for this field take effect only if ddns_enable_option_fqdn is True.",
                        "example": false
                    },
                    "ddns_ttl": {
                        "type": "integer",
                        "description": "The DNS update Time to Live (TTL) value of a DHCP network object. The TTL is a 32-bit unsigned integer that represents the duration, in seconds, for which the update is cached. Zero indicates that the update is not cached.",
                        "format": "int64",
                        "example": 1
                    },
                    "delete_reason": {
                        "type": "string",
                        "description": "The reason for deleting the RIR registration request.",
                        "writeOnly": true,
                        "example": "Example delete_reason"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines whether a network is disabled or not. When this is set to False, the network is enabled.",
                        "example": false
                    },
                    "discover_now_status": {
                        "type": "string",
                        "description": "Discover now status for this network.",
                        "enum": [
                            "NONE",
                            "PENDING",
                            "RUNNING",
                            "COMPLETE",
                            "FAILED"
                        ],
                        "readOnly": true,
                        "example": "Example discover_now_status"
                    },
                    "discovered_bgp_as": {
                        "type": "string",
                        "description": "Number of the discovered BGP AS. When multiple BGP autonomous systems are discovered in the network, this field displays \"Multiple\".",
                        "readOnly": true,
                        "example": "Example discovered_bgp_as"
                    },
                    "discovered_bridge_domain": {
                        "type": "string",
                        "description": "Discovered bridge domain.",
                        "example": "Example discovered_bridge_domain"
                    },
                    "discovered_tenant": {
                        "type": "string",
                        "description": "Discovered tenant.",
                        "example": "Example discovered_tenant"
                    },
                    "discovered_vlan_id": {
                        "type": "string",
                        "description": "The identifier of the discovered VLAN. When multiple VLANs are discovered in the network, this field displays \"Multiple\".",
                        "readOnly": true,
                        "example": "Example discovered_vlan_id"
                    },
                    "discovered_vlan_name": {
                        "type": "string",
                        "description": "The name of the discovered VLAN. When multiple VLANs are discovered in the network, this field displays \"Multiple\".",
                        "readOnly": true,
                        "example": "Example discovered_vlan_name"
                    },
                    "discovered_vrf_description": {
                        "type": "string",
                        "description": "Description of the discovered VRF. When multiple VRFs are discovered in the network, this field displays \"Multiple\".",
                        "readOnly": true,
                        "example": "Example discovered_vrf_description"
                    },
                    "discovered_vrf_name": {
                        "type": "string",
                        "description": "The name of the discovered VRF. When multiple VRFs are discovered in the network, this field displays \"Multiple\".",
                        "readOnly": true,
                        "example": "Example discovered_vrf_name"
                    },
                    "discovered_vrf_rd": {
                        "type": "string",
                        "description": "Route distinguisher of the discovered VRF. When multiple VRFs are discovered in the network, this field displays \"Multiple\".",
                        "readOnly": true,
                        "example": "Example discovered_vrf_rd"
                    },
                    "discovery_basic_poll_settings": {
                        "$ref": "#/components/schemas/Ipv6networkDiscoveryBasicPollSettings"
                    },
                    "discovery_blackout_setting": {
                        "$ref": "#/components/schemas/Ipv6networkDiscoveryBlackoutSetting"
                    },
                    "discovery_engine_type": {
                        "type": "string",
                        "description": "The network discovery engine type.",
                        "enum": [
                            "NETMRI",
                            "VDISCOVERY",
                            "NETWORK_INSIGHT",
                            "UNKNOWN",
                            "NONE"
                        ],
                        "readOnly": true,
                        "example": "Example discovery_engine_type"
                    },
                    "discovery_member": {
                        "type": "string",
                        "description": "The member that will run discovery for this network.",
                        "example": "Example discovery_member"
                    },
                    "domain_name": {
                        "type": "string",
                        "description": "Use this method to set or retrieve the domain_name value of a DHCP IPv6 Network object.",
                        "example": "Example domain_name"
                    },
                    "domain_name_servers": {
                        "type": "array",
                        "description": "Use this method to set or retrieve the dynamic DNS updates flag of a DHCP IPv6 Network object. The DHCP server can send DDNS updates to DNS servers in the same Grid and to external DNS servers. This setting overrides the member level settings.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "enable_ddns": {
                        "type": "boolean",
                        "description": "The dynamic DNS updates flag of a DHCP IPv6 network object. If set to True, the DHCP server sends DDNS updates to DNS servers in the same Grid, and to external DNS servers.",
                        "example": false
                    },
                    "enable_discovery": {
                        "type": "boolean",
                        "description": "Determines whether a discovery is enabled or not for this network. When this is set to False, the network discovery is disabled.",
                        "example": false
                    },
                    "enable_ifmap_publishing": {
                        "type": "boolean",
                        "description": "Determines if IFMAP publishing is enabled for the network.",
                        "example": false
                    },
                    "enable_immediate_discovery": {
                        "type": "boolean",
                        "description": "Determines if the discovery for the network should be immediately enabled.",
                        "writeOnly": true,
                        "example": false
                    },
                    "endpoint_sources": {
                        "type": "array",
                        "description": "The endpoints that provides data for the DHCP IPv6 Network object.",
                        "enum": [
                            "pxgrid:endpoint"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "pxgrid:endpoint"
                            ]
                        }
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "federated_realms": {
                        "type": "array",
                        "description": "This field contains the federated realms associated to this network",
                        "enum": [
                            "federatedrealm"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Ipv6networkFederatedRealms"
                        }
                    },
                    "last_rir_registration_update_sent": {
                        "type": "integer",
                        "description": "The timestamp when the last RIR registration update was sent.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "last_rir_registration_update_status": {
                        "type": "string",
                        "description": "Last RIR registration update status.",
                        "readOnly": true,
                        "example": "Example last_rir_registration_update_status"
                    },
                    "logic_filter_rules": {
                        "type": "array",
                        "description": "This field contains the logic filters to be applied on this IPv6 network. This list corresponds to the match rules that are written to the DHCPv6 configuration file.",
                        "enum": [
                            "logicfilterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Ipv6networkLogicFilterRules"
                        }
                    },
                    "members": {
                        "type": "array",
                        "description": "A list of members servers that serve DHCP for the network. All members in the array must be of the same type. The struct type must be indicated in each element, by setting the \"_struct\" member to the struct type.",
                        "enum": [
                            "dhcpmember"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Ipv6networkMembers"
                        }
                    },
                    "mgm_private": {
                        "type": "boolean",
                        "description": "This field controls whether this object is synchronized with the Multi-Grid Master. If this field is set to True, objects are not synchronized.",
                        "example": false
                    },
                    "mgm_private_overridable": {
                        "type": "boolean",
                        "description": "This field is assumed to be True unless filled by any conforming objects, such as Network, IPv6 Network, Network Container, IPv6 Network Container, and Network View. This value is set to False if mgm_private is set to True in the parent object.",
                        "readOnly": true,
                        "example": false
                    },
                    "ms_ad_user_data": {
                        "$ref": "#/components/schemas/Ipv6networkMsAdUserData"
                    },
                    "network": {
                        "type": "string",
                        "description": "The network address in IPv6 Address/CIDR format. For regular expression searches, only the IPv6 Address portion is supported. Searches for the CIDR portion is always an exact match. For example, both network containers 16::0/28 and 26::0/24 are matched by expression '.6' and only 26::0/24 is matched by '.6/24'.",
                        "example": "Example network"
                    },
                    "network_container": {
                        "type": "string",
                        "description": "The network container to which this network belongs, if any.",
                        "readOnly": true,
                        "example": "Example network_container"
                    },
                    "network_view": {
                        "type": "string",
                        "description": "The name of the network view in which this network resides.",
                        "example": "Example network_view"
                    },
                    "options": {
                        "type": "array",
                        "description": "An array of DHCP option dhcpoption structs that lists the DHCP options associated with the object.",
                        "enum": [
                            "dhcpoption"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Ipv6networkOptions"
                        }
                    },
                    "port_control_blackout_setting": {
                        "$ref": "#/components/schemas/Ipv6networkPortControlBlackoutSetting"
                    },
                    "preferred_lifetime": {
                        "type": "integer",
                        "description": "Use this method to set or retrieve the preferred lifetime value of a DHCP IPv6 Network object.",
                        "format": "int64",
                        "example": 1
                    },
                    "recycle_leases": {
                        "type": "boolean",
                        "description": "If the field is set to True, the leases are kept in the Recycle Bin until one week after expiration. Otherwise, the leases are permanently deleted.",
                        "example": false
                    },
                    "restart_if_needed": {
                        "type": "boolean",
                        "description": "Restarts the member service.",
                        "writeOnly": true,
                        "example": false
                    },
                    "rir": {
                        "type": "string",
                        "description": "The registry (RIR) that allocated the IPv6 network address space.",
                        "enum": [
                            "RIPE",
                            "NONE"
                        ],
                        "readOnly": true,
                        "example": "Example rir"
                    },
                    "rir_organization": {
                        "type": "string",
                        "description": "The RIR organization associated with the IPv6 network.",
                        "example": "Example rir_organization"
                    },
                    "rir_registration_action": {
                        "type": "string",
                        "description": "The RIR registration action.",
                        "enum": [
                            "NONE",
                            "CREATE",
                            "MODIFY",
                            "DELETE"
                        ],
                        "writeOnly": true,
                        "example": "Example rir_registration_action"
                    },
                    "rir_registration_status": {
                        "type": "string",
                        "description": "The registration status of the IPv6 network in RIR.",
                        "enum": [
                            "REGISTERED",
                            "NOT_REGISTERED"
                        ],
                        "example": "Example rir_registration_status"
                    },
                    "same_port_control_discovery_blackout": {
                        "type": "boolean",
                        "description": "If the field is set to True, the discovery blackout setting will be used for port control blackout setting.",
                        "example": false
                    },
                    "send_rir_request": {
                        "type": "boolean",
                        "description": "Determines whether to send the RIR registration request.",
                        "writeOnly": true,
                        "example": false
                    },
                    "subscribe_settings": {
                        "$ref": "#/components/schemas/Ipv6networkSubscribeSettings"
                    },
                    "template": {
                        "type": "string",
                        "description": "If set on creation, the network is created according to the values specified in the selected template.",
                        "writeOnly": true,
                        "example": "Example template"
                    },
                    "unmanaged": {
                        "type": "boolean",
                        "description": "Determines whether the DHCP IPv6 Network is unmanaged or not.",
                        "example": false
                    },
                    "unmanaged_count": {
                        "type": "integer",
                        "description": "The number of unmanaged IP addresses as discovered by network discovery.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "update_dns_on_lease_renewal": {
                        "type": "boolean",
                        "description": "This field controls whether the DHCP server updates DNS when a DHCP lease is renewed.",
                        "example": false
                    },
                    "use_blackout_setting": {
                        "type": "boolean",
                        "description": "Use flag for: discovery_blackout_setting , port_control_blackout_setting, same_port_control_discovery_blackout",
                        "example": false
                    },
                    "use_ddns_domainname": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_domainname",
                        "example": false
                    },
                    "use_ddns_enable_option_fqdn": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_enable_option_fqdn",
                        "example": false
                    },
                    "use_ddns_generate_hostname": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_generate_hostname",
                        "example": false
                    },
                    "use_ddns_ttl": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_ttl",
                        "example": false
                    },
                    "use_discovery_basic_polling_settings": {
                        "type": "boolean",
                        "description": "Use flag for: discovery_basic_poll_settings",
                        "example": false
                    },
                    "use_domain_name": {
                        "type": "boolean",
                        "description": "Use flag for: domain_name",
                        "example": false
                    },
                    "use_domain_name_servers": {
                        "type": "boolean",
                        "description": "Use flag for: domain_name_servers",
                        "example": false
                    },
                    "use_enable_ddns": {
                        "type": "boolean",
                        "description": "Use flag for: enable_ddns",
                        "example": false
                    },
                    "use_enable_discovery": {
                        "type": "boolean",
                        "description": "Use flag for: discovery_member , enable_discovery",
                        "example": false
                    },
                    "use_enable_ifmap_publishing": {
                        "type": "boolean",
                        "description": "Use flag for: enable_ifmap_publishing",
                        "example": false
                    },
                    "use_logic_filter_rules": {
                        "type": "boolean",
                        "description": "Use flag for: logic_filter_rules",
                        "example": false
                    },
                    "use_mgm_private": {
                        "type": "boolean",
                        "description": "Use flag for: mgm_private",
                        "example": false
                    },
                    "use_options": {
                        "type": "boolean",
                        "description": "Use flag for: options",
                        "example": false
                    },
                    "use_preferred_lifetime": {
                        "type": "boolean",
                        "description": "Use flag for: preferred_lifetime",
                        "example": false
                    },
                    "use_recycle_leases": {
                        "type": "boolean",
                        "description": "Use flag for: recycle_leases",
                        "example": false
                    },
                    "use_subscribe_settings": {
                        "type": "boolean",
                        "description": "Use flag for: subscribe_settings",
                        "example": false
                    },
                    "use_update_dns_on_lease_renewal": {
                        "type": "boolean",
                        "description": "Use flag for: update_dns_on_lease_renewal",
                        "example": false
                    },
                    "use_valid_lifetime": {
                        "type": "boolean",
                        "description": "Use flag for: valid_lifetime",
                        "example": false
                    },
                    "use_zone_associations": {
                        "type": "boolean",
                        "description": "Use flag for: zone_associations",
                        "example": false
                    },
                    "valid_lifetime": {
                        "type": "integer",
                        "description": "Use this method to set or retrieve the valid lifetime value of a DHCP IPv6 Network object.",
                        "format": "int64",
                        "example": 1
                    },
                    "vlans": {
                        "type": "array",
                        "description": "List of VLANs assigned to Network.",
                        "enum": [
                            "vlanlink"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Ipv6networkVlans"
                        }
                    },
                    "zone_associations": {
                        "type": "array",
                        "description": "The list of zones associated with this network.",
                        "enum": [
                            "zoneassociation"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Ipv6networkZoneAssociations"
                        }
                    }
                }
            },
            "Ipv6networkCloudInfo": {
                "type": "object",
                "properties": {
                    "delegated_member": {
                        "description": "The Cloud Platform Appliance to which authority of the object is delegated.",
                        "enum": [
                            "dhcpmember"
                        ],
                        "$ref": "#/components/schemas/Ipv6networkcloudinfoDelegatedMember"
                    },
                    "delegated_scope": {
                        "type": "string",
                        "description": "Indicates the scope of delegation for the object. This can be one of the following: NONE (outside any delegation), ROOT (the delegation point), SUBTREE (within the scope of a delegation), RECLAIMING (within the scope of a delegation being reclaimed, either as the delegation point or in the subtree).",
                        "enum": [
                            "NONE",
                            "ROOT",
                            "SUBTREE",
                            "RECLAIMING"
                        ],
                        "readOnly": true,
                        "example": "Example delegated_scope"
                    },
                    "delegated_root": {
                        "type": "string",
                        "description": "Indicates the root of the delegation if delegated_scope is SUBTREE or RECLAIMING. This is not set otherwise.",
                        "readOnly": true,
                        "example": "Example delegated_root"
                    },
                    "owned_by_adaptor": {
                        "type": "boolean",
                        "description": "Determines whether the object was created by the cloud adapter or not.",
                        "readOnly": true,
                        "example": false
                    },
                    "usage": {
                        "type": "string",
                        "description": "Indicates the cloud origin of the object.",
                        "enum": [
                            "NONE",
                            "ADAPTER",
                            "USED_BY",
                            "DELEGATED"
                        ],
                        "readOnly": true,
                        "example": "Example usage"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "Reference to the tenant object associated with the object, if any.",
                        "readOnly": true,
                        "example": "Example tenant"
                    },
                    "mgmt_platform": {
                        "type": "string",
                        "description": "Indicates the specified cloud management platform.",
                        "readOnly": true,
                        "example": "Example mgmt_platform"
                    },
                    "authority_type": {
                        "type": "string",
                        "description": "Type of authority over the object.",
                        "enum": [
                            "NONE",
                            "GM",
                            "CP"
                        ],
                        "readOnly": true,
                        "example": "Example authority_type"
                    }
                }
            },
            "Ipv6networkcloudinfoDelegatedMember": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example ipv4addr"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid Member.",
                        "example": "Example ipv6addr"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid member name",
                        "example": "Example name"
                    }
                }
            },
            "Ipv6networkDiscoveryBasicPollSettings": {
                "type": "object",
                "properties": {
                    "port_scanning": {
                        "type": "boolean",
                        "description": "Determines whether port scanning is enabled or not.",
                        "example": false
                    },
                    "device_profile": {
                        "type": "boolean",
                        "description": "Determines whether device profile is enabled or not.",
                        "example": false
                    },
                    "snmp_collection": {
                        "type": "boolean",
                        "description": "Determines whether SNMP collection is enabled or not.",
                        "example": false
                    },
                    "cli_collection": {
                        "type": "boolean",
                        "description": "Determines whether CLI collection is enabled or not.",
                        "example": false
                    },
                    "netbios_scanning": {
                        "type": "boolean",
                        "description": "Determines whether netbios scanning is enabled or not.",
                        "example": false
                    },
                    "complete_ping_sweep": {
                        "type": "boolean",
                        "description": "Determines whether complete ping sweep is enabled or not.",
                        "example": false
                    },
                    "smart_subnet_ping_sweep": {
                        "type": "boolean",
                        "description": "Determines whether smart subnet ping sweep is enabled or not.",
                        "example": false
                    },
                    "auto_arp_refresh_before_switch_port_polling": {
                        "type": "boolean",
                        "description": "Determines whether auto ARP refresh before switch port polling is enabled or not.",
                        "example": false
                    },
                    "switch_port_data_collection_polling": {
                        "type": "string",
                        "description": "A switch port data collection polling mode.",
                        "enum": [
                            "DISABLED",
                            "PERIODIC",
                            "SCHEDULED"
                        ],
                        "example": "Example switch_port_data_collection_polling"
                    },
                    "switch_port_data_collection_polling_schedule": {
                        "description": "A Schedule Setting struct that determines switch port data collection polling schedule.",
                        "enum": [
                            "setting:schedule"
                        ],
                        "$ref": "#/components/schemas/Ipv6networkdiscoverybasicpollsettingsSwitchPortDataCollectionPollingSchedule"
                    },
                    "switch_port_data_collection_polling_interval": {
                        "type": "integer",
                        "description": "Indicates the interval for switch port data collection polling.",
                        "format": "int64",
                        "example": 1
                    },
                    "credential_group": {
                        "type": "string",
                        "description": "Credential group.",
                        "example": "Example credential_group"
                    },
                    "polling_frequency_modifier": {
                        "type": "string",
                        "description": "Polling Frequency Modifier.",
                        "example": "Example polling_frequency_modifier"
                    },
                    "use_global_polling_frequency_modifier": {
                        "type": "boolean",
                        "description": "Use Global Polling Frequency Modifier.",
                        "example": false
                    }
                }
            },
            "Ipv6networkdiscoverybasicpollsettingsSwitchPortDataCollectionPollingSchedule": {
                "type": "object",
                "properties": {
                    "weekdays": {
                        "type": "array",
                        "description": "Days of the week when scheduling is triggered.",
                        "enum": [
                            "SATURDAY",
                            "SUNDAY",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for the schedule.",
                        "example": "Example time_zone"
                    },
                    "recurring_time": {
                        "type": "integer",
                        "description": "The recurring time for the schedule in Epoch seconds format. This field is obsolete and is preserved only for backward compatibility purposes. Please use other applicable fields to define the recurring schedule. DO NOT use recurring_time together with these fields. If you use recurring_time with other fields to define the recurring schedule, recurring_time has priority over year, hour_of_day, and minutes_past_hour and will override the values of these fields, although it does not override month and day_of_month. In this case, the recurring time value might be different than the intended value that you define.",
                        "format": "int64",
                        "example": 1
                    },
                    "frequency": {
                        "type": "string",
                        "description": "The frequency for the scheduled task.",
                        "enum": [
                            "DAILY",
                            "HOURLY",
                            "MONTHLY",
                            "WEEKLY"
                        ],
                        "example": "Example frequency"
                    },
                    "every": {
                        "type": "integer",
                        "description": "The number of frequency to wait before repeating the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "minutes_past_hour": {
                        "type": "integer",
                        "description": "The minutes past the hour for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "hour_of_day": {
                        "type": "integer",
                        "description": "The hour of day for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "year": {
                        "type": "integer",
                        "description": "The year for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "month": {
                        "type": "integer",
                        "description": "The month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "day_of_month": {
                        "type": "integer",
                        "description": "The day of the month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "repeat": {
                        "type": "string",
                        "description": "Indicates if the scheduled task will be repeated or run only once.",
                        "enum": [
                            "ONCE",
                            "RECUR"
                        ],
                        "example": "Example repeat"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "If set to True, the scheduled task is disabled.",
                        "example": false
                    }
                }
            },
            "Ipv6networkDiscoveryBlackoutSetting": {
                "type": "object",
                "properties": {
                    "enable_blackout": {
                        "type": "boolean",
                        "description": "Determines whether a blackout is enabled or not.",
                        "example": false
                    },
                    "blackout_duration": {
                        "type": "integer",
                        "description": "The blackout duration in seconds; minimum value is 1 minute.",
                        "format": "int64",
                        "example": 1
                    },
                    "blackout_schedule": {
                        "description": "A Schedule Setting struct that determines blackout schedule.",
                        "enum": [
                            "setting:schedule"
                        ],
                        "$ref": "#/components/schemas/Ipv6networkdiscoveryblackoutsettingBlackoutSchedule"
                    }
                }
            },
            "Ipv6networkdiscoveryblackoutsettingBlackoutSchedule": {
                "type": "object",
                "properties": {
                    "weekdays": {
                        "type": "array",
                        "description": "Days of the week when scheduling is triggered.",
                        "enum": [
                            "SATURDAY",
                            "SUNDAY",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for the schedule.",
                        "example": "Example time_zone"
                    },
                    "recurring_time": {
                        "type": "integer",
                        "description": "The recurring time for the schedule in Epoch seconds format. This field is obsolete and is preserved only for backward compatibility purposes. Please use other applicable fields to define the recurring schedule. DO NOT use recurring_time together with these fields. If you use recurring_time with other fields to define the recurring schedule, recurring_time has priority over year, hour_of_day, and minutes_past_hour and will override the values of these fields, although it does not override month and day_of_month. In this case, the recurring time value might be different than the intended value that you define.",
                        "format": "int64",
                        "example": 1
                    },
                    "frequency": {
                        "type": "string",
                        "description": "The frequency for the scheduled task.",
                        "enum": [
                            "DAILY",
                            "HOURLY",
                            "MONTHLY",
                            "WEEKLY"
                        ],
                        "example": "Example frequency"
                    },
                    "every": {
                        "type": "integer",
                        "description": "The number of frequency to wait before repeating the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "minutes_past_hour": {
                        "type": "integer",
                        "description": "The minutes past the hour for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "hour_of_day": {
                        "type": "integer",
                        "description": "The hour of day for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "year": {
                        "type": "integer",
                        "description": "The year for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "month": {
                        "type": "integer",
                        "description": "The month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "day_of_month": {
                        "type": "integer",
                        "description": "The day of the month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "repeat": {
                        "type": "string",
                        "description": "Indicates if the scheduled task will be repeated or run only once.",
                        "enum": [
                            "ONCE",
                            "RECUR"
                        ],
                        "example": "Example repeat"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "If set to True, the scheduled task is disabled.",
                        "example": false
                    }
                }
            },
            "Ipv6networkFederatedRealms": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The federated realm name",
                        "example": "Example name"
                    },
                    "id": {
                        "type": "string",
                        "description": "The federated realm id",
                        "example": "Example id"
                    }
                }
            },
            "Ipv6networkLogicFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The filter name.",
                        "example": "Example filter"
                    },
                    "type": {
                        "type": "string",
                        "description": "The filter type. Valid values are: * MAC * NAC * Option",
                        "example": "Example type"
                    }
                }
            },
            "Ipv6networkMembers": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example ipv4addr"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid Member.",
                        "example": "Example ipv6addr"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid member name",
                        "example": "Example name"
                    }
                }
            },
            "Ipv6networkMsAdUserData": {
                "type": "object",
                "properties": {
                    "active_users_count": {
                        "type": "integer",
                        "description": "The number of active users.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "Ipv6networkOptions": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the DHCP option.",
                        "example": "Example name"
                    },
                    "num": {
                        "type": "integer",
                        "description": "The code of the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "vendor_class": {
                        "type": "string",
                        "description": "The name of the space this DHCP option is associated to.",
                        "example": "Example vendor_class"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the DHCP option",
                        "example": "Example value"
                    },
                    "use_option": {
                        "type": "boolean",
                        "description": "Only applies to special options that are displayed separately from other options and have a use flag. These options are: * routers * router-templates * domain-name-servers * domain-name * broadcast-address * broadcast-address-offset * dhcp-lease-time * dhcp6.name-servers",
                        "example": false
                    }
                }
            },
            "Ipv6networkPortControlBlackoutSetting": {
                "type": "object",
                "properties": {
                    "enable_blackout": {
                        "type": "boolean",
                        "description": "Determines whether a blackout is enabled or not.",
                        "example": false
                    },
                    "blackout_duration": {
                        "type": "integer",
                        "description": "The blackout duration in seconds; minimum value is 1 minute.",
                        "format": "int64",
                        "example": 1
                    },
                    "blackout_schedule": {
                        "description": "A Schedule Setting struct that determines blackout schedule.",
                        "enum": [
                            "setting:schedule"
                        ],
                        "$ref": "#/components/schemas/Ipv6networkportcontrolblackoutsettingBlackoutSchedule"
                    }
                }
            },
            "Ipv6networkportcontrolblackoutsettingBlackoutSchedule": {
                "type": "object",
                "properties": {
                    "weekdays": {
                        "type": "array",
                        "description": "Days of the week when scheduling is triggered.",
                        "enum": [
                            "SATURDAY",
                            "SUNDAY",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for the schedule.",
                        "example": "Example time_zone"
                    },
                    "recurring_time": {
                        "type": "integer",
                        "description": "The recurring time for the schedule in Epoch seconds format. This field is obsolete and is preserved only for backward compatibility purposes. Please use other applicable fields to define the recurring schedule. DO NOT use recurring_time together with these fields. If you use recurring_time with other fields to define the recurring schedule, recurring_time has priority over year, hour_of_day, and minutes_past_hour and will override the values of these fields, although it does not override month and day_of_month. In this case, the recurring time value might be different than the intended value that you define.",
                        "format": "int64",
                        "example": 1
                    },
                    "frequency": {
                        "type": "string",
                        "description": "The frequency for the scheduled task.",
                        "enum": [
                            "DAILY",
                            "HOURLY",
                            "MONTHLY",
                            "WEEKLY"
                        ],
                        "example": "Example frequency"
                    },
                    "every": {
                        "type": "integer",
                        "description": "The number of frequency to wait before repeating the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "minutes_past_hour": {
                        "type": "integer",
                        "description": "The minutes past the hour for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "hour_of_day": {
                        "type": "integer",
                        "description": "The hour of day for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "year": {
                        "type": "integer",
                        "description": "The year for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "month": {
                        "type": "integer",
                        "description": "The month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "day_of_month": {
                        "type": "integer",
                        "description": "The day of the month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "repeat": {
                        "type": "string",
                        "description": "Indicates if the scheduled task will be repeated or run only once.",
                        "enum": [
                            "ONCE",
                            "RECUR"
                        ],
                        "example": "Example repeat"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "If set to True, the scheduled task is disabled.",
                        "example": false
                    }
                }
            },
            "Ipv6networkSubscribeSettings": {
                "type": "object",
                "properties": {
                    "enabled_attributes": {
                        "type": "array",
                        "description": "The list of Cisco ISE attributes allowed for subscription.",
                        "enum": [
                            "DOMAINNAME",
                            "ENDPOINT_PROFILE",
                            "SECURITY_GROUP",
                            "SESSION_STATE",
                            "SSID",
                            "USERNAME",
                            "VLAN"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "mapped_ea_attributes": {
                        "description": "The list of NIOS extensible attributes to Cisco ISE attributes mappings.",
                        "enum": [
                            "ciscoise:eaassociation"
                        ],
                        "$ref": "#/components/schemas/Ipv6networksubscribesettingsMappedEaAttributes"
                    }
                }
            },
            "Ipv6networksubscribesettingsMappedEaAttributes": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The Cisco ISE attribute name that is enabled for publishsing from a Cisco ISE endpoint.",
                        "enum": [
                            "ACCOUNT_SESSION_ID",
                            "AUDIT_SESSION_ID",
                            "EPS_STATUS",
                            "IP_ADDRESS",
                            "MAC",
                            "NAS_IP_ADDRESS",
                            "NAS_PORT_ID",
                            "POSTURE_STATUS",
                            "POSTURE_TIMESTAMP"
                        ],
                        "example": "Example name"
                    },
                    "mapped_ea": {
                        "type": "string",
                        "description": "The name of the extensible attribute definition object the Cisco ISE attribute that is enabled for subscription is mapped on.",
                        "example": "Example mapped_ea"
                    }
                }
            },
            "Ipv6networkVlans": {
                "type": "object",
                "properties": {
                    "vlan": {
                        "type": "object",
                        "description": "Reference to the underlying StaticVlan object vlan.",
                        "enum": [
                            "subobj"
                        ]
                    },
                    "id": {
                        "type": "integer",
                        "description": "VLAN ID value.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the VLAN.",
                        "readOnly": true,
                        "example": "Example name"
                    }
                }
            },
            "Ipv6networkZoneAssociations": {
                "type": "object",
                "properties": {
                    "fqdn": {
                        "type": "string",
                        "description": "The FQDN of the authoritative forward zone.",
                        "example": "Example fqdn"
                    },
                    "is_default": {
                        "type": "boolean",
                        "description": "True if this is the default zone.",
                        "example": false
                    },
                    "view": {
                        "type": "string",
                        "description": "The view to which the zone belongs. If a view is not specified, the default view is used.",
                        "example": "Example view"
                    }
                }
            },
            "ListIpv6networkResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Ipv6network__ objects.",
                        "type": "array",
                        "title": "ListIpv6networkResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Ipv6network"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Ipv6network__ objects.",
                        "type": "object",
                        "title": "ListIpv6networkResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Ipv6network"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateIpv6networkResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Ipv6network__ in object format.",
                        "type": "object",
                        "title": "CreateIpv6networkResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6network"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Ipv6network__.",
                        "type": "string",
                        "title": "CreateIpv6networkResponse"
                    }
                ]
            },
            "GetIpv6networkResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Ipv6network"
                    },
                    {
                        "description": "The response format to retrieve __Ipv6network__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetIpv6networkResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6network"
                            }
                        }
                    }
                ]
            },
            "UpdateIpv6networkResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Ipv6network__ in object format.",
                        "type": "object",
                        "title": "UpdateIpv6networkResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6network"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Ipv6network__ .",
                        "type": "string",
                        "title": "UpdateIpv6networkResponse"
                    }
                ]
            },
            "Ipv6networkcontainer": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "auto_create_reversezone": {
                        "type": "boolean",
                        "description": "This flag controls whether reverse zones are automatically created when the network is added.",
                        "writeOnly": true,
                        "example": false
                    },
                    "cloud_info": {
                        "$ref": "#/components/schemas/Ipv6networkcontainerCloudInfo"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the network; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "ddns_domainname": {
                        "type": "string",
                        "description": "The dynamic DNS domain name the appliance uses specifically for DDNS updates for this network container.",
                        "example": "Example ddns_domainname"
                    },
                    "ddns_enable_option_fqdn": {
                        "type": "boolean",
                        "description": "Use this method to set or retrieve the ddns_enable_option_fqdn flag of a DHCP IPv6 Network Container object. This method controls whether the FQDN option sent by the client is to be used, or if the server can automatically generate the FQDN. This setting overrides the upper-level settings.",
                        "example": false
                    },
                    "ddns_generate_hostname": {
                        "type": "boolean",
                        "description": "If this field is set to True, the DHCP server generates a hostname and updates DNS with it when the DHCP client request does not contain a hostname.",
                        "example": false
                    },
                    "ddns_server_always_updates": {
                        "type": "boolean",
                        "description": "This field controls whether the DHCP server is allowed to update DNS, regardless of the DHCP client requests. Note that changes for this field take effect only if ddns_enable_option_fqdn is True.",
                        "example": false
                    },
                    "ddns_ttl": {
                        "type": "integer",
                        "description": "The DNS update Time to Live (TTL) value of a DHCP network container object. The TTL is a 32-bit unsigned integer that represents the duration, in seconds, for which the update is cached. Zero indicates that the update is not cached.",
                        "format": "int64",
                        "example": 1
                    },
                    "delete_reason": {
                        "type": "string",
                        "description": "The reason for deleting the RIR registration request.",
                        "writeOnly": true,
                        "example": "Example delete_reason"
                    },
                    "discover_now_status": {
                        "type": "string",
                        "description": "Discover now status for this network container.",
                        "enum": [
                            "NONE",
                            "PENDING",
                            "RUNNING",
                            "COMPLETE",
                            "FAILED"
                        ],
                        "readOnly": true,
                        "example": "Example discover_now_status"
                    },
                    "discovery_basic_poll_settings": {
                        "$ref": "#/components/schemas/Ipv6networkcontainerDiscoveryBasicPollSettings"
                    },
                    "discovery_blackout_setting": {
                        "$ref": "#/components/schemas/Ipv6networkcontainerDiscoveryBlackoutSetting"
                    },
                    "discovery_engine_type": {
                        "type": "string",
                        "description": "The network discovery engine type.",
                        "enum": [
                            "NETMRI",
                            "VDISCOVERY",
                            "NETWORK_INSIGHT",
                            "UNKNOWN",
                            "NONE"
                        ],
                        "readOnly": true,
                        "example": "Example discovery_engine_type"
                    },
                    "discovery_member": {
                        "type": "string",
                        "description": "The member that will run discovery for this network container.",
                        "example": "Example discovery_member"
                    },
                    "domain_name_servers": {
                        "type": "array",
                        "description": "Use this method to set or retrieve the dynamic DNS updates flag of a DHCP IPv6 Network Container object. The DHCP server can send DDNS updates to DNS servers in the same Grid and to external DNS servers. This setting overrides the member level settings.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "enable_ddns": {
                        "type": "boolean",
                        "description": "The dynamic DNS updates flag of a DHCP IPv6 network container object. If set to True, the DHCP server sends DDNS updates to DNS servers in the same Grid, and to external DNS servers.",
                        "example": false
                    },
                    "enable_discovery": {
                        "type": "boolean",
                        "description": "Determines whether a discovery is enabled or not for this network container. When this is set to False, the network container discovery is disabled.",
                        "example": false
                    },
                    "enable_immediate_discovery": {
                        "type": "boolean",
                        "description": "Determines if the discovery for the network container should be immediately enabled.",
                        "writeOnly": true,
                        "example": false
                    },
                    "endpoint_sources": {
                        "type": "array",
                        "description": "The endpoints that provides data for the DHCP IPv6 Network Container.",
                        "enum": [
                            "pxgrid:endpoint"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "pxgrid:endpoint"
                            ]
                        }
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "federated_realms": {
                        "type": "array",
                        "description": "This field contains the federated realms associated to this network container.",
                        "enum": [
                            "federatedrealm"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Ipv6networkcontainerFederatedRealms"
                        }
                    },
                    "last_rir_registration_update_sent": {
                        "type": "integer",
                        "description": "The timestamp when the last RIR registration update was sent.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "last_rir_registration_update_status": {
                        "type": "string",
                        "description": "Last RIR registration update status.",
                        "readOnly": true,
                        "example": "Example last_rir_registration_update_status"
                    },
                    "logic_filter_rules": {
                        "type": "array",
                        "description": "This field contains the logic filters to be applied on the this network container. This list corresponds to the match rules that are written to the dhcpd configuration file.",
                        "enum": [
                            "logicfilterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Ipv6networkcontainerLogicFilterRules"
                        }
                    },
                    "mgm_private": {
                        "type": "boolean",
                        "description": "This field controls whether this object is synchronized with the Multi-Grid Master. If this field is set to True, objects are not synchronized.",
                        "example": false
                    },
                    "mgm_private_overridable": {
                        "type": "boolean",
                        "description": "This field is assumed to be True unless filled by any conforming objects, such as Network, IPv6 Network, Network Container, IPv6 Network Container, and Network View. This value is set to False if mgm_private is set to True in the parent object.",
                        "readOnly": true,
                        "example": false
                    },
                    "ms_ad_user_data": {
                        "$ref": "#/components/schemas/Ipv6networkcontainerMsAdUserData"
                    },
                    "network": {
                        "type": "string",
                        "description": "The network address in IPv6 Address/CIDR format. For regular expression searches, only the IPv6 Address portion is supported. Searches for the CIDR portion is always an exact match. For example, both network containers 16::0/28 and 26::0/24 are matched by expression '.6' and only 26::0/24 is matched by '.6/24'.",
                        "example": "Example network"
                    },
                    "network_container": {
                        "type": "string",
                        "description": "The network container to which this network belongs, if any.",
                        "readOnly": true,
                        "example": "Example network_container"
                    },
                    "network_view": {
                        "type": "string",
                        "description": "The name of the network view in which this network resides.",
                        "example": "Example network_view"
                    },
                    "options": {
                        "type": "array",
                        "description": "An array of DHCP option dhcpoption structs that lists the DHCP options associated with the object.",
                        "enum": [
                            "dhcpoption"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Ipv6networkcontainerOptions"
                        }
                    },
                    "port_control_blackout_setting": {
                        "$ref": "#/components/schemas/Ipv6networkcontainerPortControlBlackoutSetting"
                    },
                    "preferred_lifetime": {
                        "type": "integer",
                        "description": "Use this method to set or retrieve the preferred lifetime value of a DHCP IPv6 Network Container object.",
                        "format": "int64",
                        "example": 1
                    },
                    "remove_subnets": {
                        "type": "boolean",
                        "description": "Remove subnets delete option. Determines whether all child objects should be removed alongside with the IPv6 network container or child objects should be assigned to another parental container. By default child objects are deleted with this network container.",
                        "example": false
                    },
                    "restart_if_needed": {
                        "type": "boolean",
                        "description": "Restarts the member service.",
                        "writeOnly": true,
                        "example": false
                    },
                    "rir": {
                        "type": "string",
                        "description": "The registry (RIR) that allocated the IPv6 network container address space.",
                        "enum": [
                            "RIPE",
                            "NONE"
                        ],
                        "readOnly": true,
                        "example": "Example rir"
                    },
                    "rir_organization": {
                        "type": "string",
                        "description": "The RIR organization associated with the IPv6 network container.",
                        "example": "Example rir_organization"
                    },
                    "rir_registration_action": {
                        "type": "string",
                        "description": "The RIR registration action.",
                        "enum": [
                            "NONE",
                            "CREATE",
                            "MODIFY",
                            "DELETE"
                        ],
                        "writeOnly": true,
                        "example": "Example rir_registration_action"
                    },
                    "rir_registration_status": {
                        "type": "string",
                        "description": "The registration status of the IPv6 network container in RIR.",
                        "enum": [
                            "REGISTERED",
                            "NOT_REGISTERED"
                        ],
                        "example": "Example rir_registration_status"
                    },
                    "same_port_control_discovery_blackout": {
                        "type": "boolean",
                        "description": "If the field is set to True, the discovery blackout setting will be used for port control blackout setting.",
                        "example": false
                    },
                    "send_rir_request": {
                        "type": "boolean",
                        "description": "Determines whether to send the RIR registration request.",
                        "writeOnly": true,
                        "example": false
                    },
                    "subscribe_settings": {
                        "$ref": "#/components/schemas/Ipv6networkcontainerSubscribeSettings"
                    },
                    "unmanaged": {
                        "type": "boolean",
                        "description": "Determines whether the network container is unmanaged or not.",
                        "example": false
                    },
                    "update_dns_on_lease_renewal": {
                        "type": "boolean",
                        "description": "This field controls whether the DHCP server updates DNS when a DHCP lease is renewed.",
                        "example": false
                    },
                    "use_blackout_setting": {
                        "type": "boolean",
                        "description": "Use flag for: discovery_blackout_setting , port_control_blackout_setting, same_port_control_discovery_blackout",
                        "example": false
                    },
                    "use_ddns_domainname": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_domainname",
                        "example": false
                    },
                    "use_ddns_enable_option_fqdn": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_enable_option_fqdn",
                        "example": false
                    },
                    "use_ddns_generate_hostname": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_generate_hostname",
                        "example": false
                    },
                    "use_ddns_ttl": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_ttl",
                        "example": false
                    },
                    "use_discovery_basic_polling_settings": {
                        "type": "boolean",
                        "description": "Use flag for: discovery_basic_poll_settings",
                        "example": false
                    },
                    "use_domain_name_servers": {
                        "type": "boolean",
                        "description": "Use flag for: domain_name_servers",
                        "example": false
                    },
                    "use_enable_ddns": {
                        "type": "boolean",
                        "description": "Use flag for: enable_ddns",
                        "example": false
                    },
                    "use_enable_discovery": {
                        "type": "boolean",
                        "description": "Use flag for: discovery_member , enable_discovery",
                        "example": false
                    },
                    "use_logic_filter_rules": {
                        "type": "boolean",
                        "description": "Use flag for: logic_filter_rules",
                        "example": false
                    },
                    "use_mgm_private": {
                        "type": "boolean",
                        "description": "Use flag for: mgm_private",
                        "example": false
                    },
                    "use_options": {
                        "type": "boolean",
                        "description": "Use flag for: options",
                        "example": false
                    },
                    "use_preferred_lifetime": {
                        "type": "boolean",
                        "description": "Use flag for: preferred_lifetime",
                        "example": false
                    },
                    "use_subscribe_settings": {
                        "type": "boolean",
                        "description": "Use flag for: subscribe_settings",
                        "example": false
                    },
                    "use_update_dns_on_lease_renewal": {
                        "type": "boolean",
                        "description": "Use flag for: update_dns_on_lease_renewal",
                        "example": false
                    },
                    "use_valid_lifetime": {
                        "type": "boolean",
                        "description": "Use flag for: valid_lifetime",
                        "example": false
                    },
                    "use_zone_associations": {
                        "type": "boolean",
                        "description": "Use flag for: zone_associations",
                        "example": false
                    },
                    "utilization": {
                        "type": "integer",
                        "description": "The network container utilization in percentage.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "valid_lifetime": {
                        "type": "integer",
                        "description": "Use this method to set or retrieve the valid lifetime value of a DHCP IPv6 Network Container object.",
                        "format": "int64",
                        "example": 1
                    },
                    "zone_associations": {
                        "type": "array",
                        "description": "The list of zones associated with this network container.",
                        "enum": [
                            "zoneassociation"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Ipv6networkcontainerZoneAssociations"
                        }
                    }
                }
            },
            "Ipv6networkcontainerCloudInfo": {
                "type": "object",
                "properties": {
                    "delegated_member": {
                        "description": "The Cloud Platform Appliance to which authority of the object is delegated.",
                        "enum": [
                            "dhcpmember"
                        ],
                        "$ref": "#/components/schemas/Ipv6networkcontainercloudinfoDelegatedMember"
                    },
                    "delegated_scope": {
                        "type": "string",
                        "description": "Indicates the scope of delegation for the object. This can be one of the following: NONE (outside any delegation), ROOT (the delegation point), SUBTREE (within the scope of a delegation), RECLAIMING (within the scope of a delegation being reclaimed, either as the delegation point or in the subtree).",
                        "enum": [
                            "NONE",
                            "ROOT",
                            "SUBTREE",
                            "RECLAIMING"
                        ],
                        "readOnly": true,
                        "example": "Example delegated_scope"
                    },
                    "delegated_root": {
                        "type": "string",
                        "description": "Indicates the root of the delegation if delegated_scope is SUBTREE or RECLAIMING. This is not set otherwise.",
                        "readOnly": true,
                        "example": "Example delegated_root"
                    },
                    "owned_by_adaptor": {
                        "type": "boolean",
                        "description": "Determines whether the object was created by the cloud adapter or not.",
                        "readOnly": true,
                        "example": false
                    },
                    "usage": {
                        "type": "string",
                        "description": "Indicates the cloud origin of the object.",
                        "enum": [
                            "NONE",
                            "ADAPTER",
                            "USED_BY",
                            "DELEGATED"
                        ],
                        "readOnly": true,
                        "example": "Example usage"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "Reference to the tenant object associated with the object, if any.",
                        "readOnly": true,
                        "example": "Example tenant"
                    },
                    "mgmt_platform": {
                        "type": "string",
                        "description": "Indicates the specified cloud management platform.",
                        "readOnly": true,
                        "example": "Example mgmt_platform"
                    },
                    "authority_type": {
                        "type": "string",
                        "description": "Type of authority over the object.",
                        "enum": [
                            "NONE",
                            "GM",
                            "CP"
                        ],
                        "readOnly": true,
                        "example": "Example authority_type"
                    }
                }
            },
            "Ipv6networkcontainercloudinfoDelegatedMember": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example ipv4addr"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid Member.",
                        "example": "Example ipv6addr"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid member name",
                        "example": "Example name"
                    }
                }
            },
            "Ipv6networkcontainerDiscoveryBasicPollSettings": {
                "type": "object",
                "properties": {
                    "port_scanning": {
                        "type": "boolean",
                        "description": "Determines whether port scanning is enabled or not.",
                        "example": false
                    },
                    "device_profile": {
                        "type": "boolean",
                        "description": "Determines whether device profile is enabled or not.",
                        "example": false
                    },
                    "snmp_collection": {
                        "type": "boolean",
                        "description": "Determines whether SNMP collection is enabled or not.",
                        "example": false
                    },
                    "cli_collection": {
                        "type": "boolean",
                        "description": "Determines whether CLI collection is enabled or not.",
                        "example": false
                    },
                    "netbios_scanning": {
                        "type": "boolean",
                        "description": "Determines whether netbios scanning is enabled or not.",
                        "example": false
                    },
                    "complete_ping_sweep": {
                        "type": "boolean",
                        "description": "Determines whether complete ping sweep is enabled or not.",
                        "example": false
                    },
                    "smart_subnet_ping_sweep": {
                        "type": "boolean",
                        "description": "Determines whether smart subnet ping sweep is enabled or not.",
                        "example": false
                    },
                    "auto_arp_refresh_before_switch_port_polling": {
                        "type": "boolean",
                        "description": "Determines whether auto ARP refresh before switch port polling is enabled or not.",
                        "example": false
                    },
                    "switch_port_data_collection_polling": {
                        "type": "string",
                        "description": "A switch port data collection polling mode.",
                        "enum": [
                            "DISABLED",
                            "PERIODIC",
                            "SCHEDULED"
                        ],
                        "example": "Example switch_port_data_collection_polling"
                    },
                    "switch_port_data_collection_polling_schedule": {
                        "description": "A Schedule Setting struct that determines switch port data collection polling schedule.",
                        "enum": [
                            "setting:schedule"
                        ],
                        "$ref": "#/components/schemas/Ipv6networkcontainerdiscoverybasicpollsettingsSwitchPortDataCollectionPollingSchedule"
                    },
                    "switch_port_data_collection_polling_interval": {
                        "type": "integer",
                        "description": "Indicates the interval for switch port data collection polling.",
                        "format": "int64",
                        "example": 1
                    },
                    "credential_group": {
                        "type": "string",
                        "description": "Credential group.",
                        "example": "Example credential_group"
                    },
                    "polling_frequency_modifier": {
                        "type": "string",
                        "description": "Polling Frequency Modifier.",
                        "example": "Example polling_frequency_modifier"
                    },
                    "use_global_polling_frequency_modifier": {
                        "type": "boolean",
                        "description": "Use Global Polling Frequency Modifier.",
                        "example": false
                    }
                }
            },
            "Ipv6networkcontainerdiscoverybasicpollsettingsSwitchPortDataCollectionPollingSchedule": {
                "type": "object",
                "properties": {
                    "weekdays": {
                        "type": "array",
                        "description": "Days of the week when scheduling is triggered.",
                        "enum": [
                            "SATURDAY",
                            "SUNDAY",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for the schedule.",
                        "example": "Example time_zone"
                    },
                    "recurring_time": {
                        "type": "integer",
                        "description": "The recurring time for the schedule in Epoch seconds format. This field is obsolete and is preserved only for backward compatibility purposes. Please use other applicable fields to define the recurring schedule. DO NOT use recurring_time together with these fields. If you use recurring_time with other fields to define the recurring schedule, recurring_time has priority over year, hour_of_day, and minutes_past_hour and will override the values of these fields, although it does not override month and day_of_month. In this case, the recurring time value might be different than the intended value that you define.",
                        "format": "int64",
                        "example": 1
                    },
                    "frequency": {
                        "type": "string",
                        "description": "The frequency for the scheduled task.",
                        "enum": [
                            "DAILY",
                            "HOURLY",
                            "MONTHLY",
                            "WEEKLY"
                        ],
                        "example": "Example frequency"
                    },
                    "every": {
                        "type": "integer",
                        "description": "The number of frequency to wait before repeating the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "minutes_past_hour": {
                        "type": "integer",
                        "description": "The minutes past the hour for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "hour_of_day": {
                        "type": "integer",
                        "description": "The hour of day for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "year": {
                        "type": "integer",
                        "description": "The year for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "month": {
                        "type": "integer",
                        "description": "The month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "day_of_month": {
                        "type": "integer",
                        "description": "The day of the month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "repeat": {
                        "type": "string",
                        "description": "Indicates if the scheduled task will be repeated or run only once.",
                        "enum": [
                            "ONCE",
                            "RECUR"
                        ],
                        "example": "Example repeat"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "If set to True, the scheduled task is disabled.",
                        "example": false
                    }
                }
            },
            "Ipv6networkcontainerDiscoveryBlackoutSetting": {
                "type": "object",
                "properties": {
                    "enable_blackout": {
                        "type": "boolean",
                        "description": "Determines whether a blackout is enabled or not.",
                        "example": false
                    },
                    "blackout_duration": {
                        "type": "integer",
                        "description": "The blackout duration in seconds; minimum value is 1 minute.",
                        "format": "int64",
                        "example": 1
                    },
                    "blackout_schedule": {
                        "description": "A Schedule Setting struct that determines blackout schedule.",
                        "enum": [
                            "setting:schedule"
                        ],
                        "$ref": "#/components/schemas/Ipv6networkcontainerdiscoveryblackoutsettingBlackoutSchedule"
                    }
                }
            },
            "Ipv6networkcontainerdiscoveryblackoutsettingBlackoutSchedule": {
                "type": "object",
                "properties": {
                    "weekdays": {
                        "type": "array",
                        "description": "Days of the week when scheduling is triggered.",
                        "enum": [
                            "SATURDAY",
                            "SUNDAY",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for the schedule.",
                        "example": "Example time_zone"
                    },
                    "recurring_time": {
                        "type": "integer",
                        "description": "The recurring time for the schedule in Epoch seconds format. This field is obsolete and is preserved only for backward compatibility purposes. Please use other applicable fields to define the recurring schedule. DO NOT use recurring_time together with these fields. If you use recurring_time with other fields to define the recurring schedule, recurring_time has priority over year, hour_of_day, and minutes_past_hour and will override the values of these fields, although it does not override month and day_of_month. In this case, the recurring time value might be different than the intended value that you define.",
                        "format": "int64",
                        "example": 1
                    },
                    "frequency": {
                        "type": "string",
                        "description": "The frequency for the scheduled task.",
                        "enum": [
                            "DAILY",
                            "HOURLY",
                            "MONTHLY",
                            "WEEKLY"
                        ],
                        "example": "Example frequency"
                    },
                    "every": {
                        "type": "integer",
                        "description": "The number of frequency to wait before repeating the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "minutes_past_hour": {
                        "type": "integer",
                        "description": "The minutes past the hour for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "hour_of_day": {
                        "type": "integer",
                        "description": "The hour of day for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "year": {
                        "type": "integer",
                        "description": "The year for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "month": {
                        "type": "integer",
                        "description": "The month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "day_of_month": {
                        "type": "integer",
                        "description": "The day of the month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "repeat": {
                        "type": "string",
                        "description": "Indicates if the scheduled task will be repeated or run only once.",
                        "enum": [
                            "ONCE",
                            "RECUR"
                        ],
                        "example": "Example repeat"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "If set to True, the scheduled task is disabled.",
                        "example": false
                    }
                }
            },
            "Ipv6networkcontainerFederatedRealms": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The federated realm name",
                        "example": "Example name"
                    },
                    "id": {
                        "type": "string",
                        "description": "The federated realm id",
                        "example": "Example id"
                    }
                }
            },
            "Ipv6networkcontainerLogicFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The filter name.",
                        "example": "Example filter"
                    },
                    "type": {
                        "type": "string",
                        "description": "The filter type. Valid values are: * MAC * NAC * Option",
                        "example": "Example type"
                    }
                }
            },
            "Ipv6networkcontainerMsAdUserData": {
                "type": "object",
                "properties": {
                    "active_users_count": {
                        "type": "integer",
                        "description": "The number of active users.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "Ipv6networkcontainerOptions": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the DHCP option.",
                        "example": "Example name"
                    },
                    "num": {
                        "type": "integer",
                        "description": "The code of the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "vendor_class": {
                        "type": "string",
                        "description": "The name of the space this DHCP option is associated to.",
                        "example": "Example vendor_class"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the DHCP option",
                        "example": "Example value"
                    },
                    "use_option": {
                        "type": "boolean",
                        "description": "Only applies to special options that are displayed separately from other options and have a use flag. These options are: * routers * router-templates * domain-name-servers * domain-name * broadcast-address * broadcast-address-offset * dhcp-lease-time * dhcp6.name-servers",
                        "example": false
                    }
                }
            },
            "Ipv6networkcontainerPortControlBlackoutSetting": {
                "type": "object",
                "properties": {
                    "enable_blackout": {
                        "type": "boolean",
                        "description": "Determines whether a blackout is enabled or not.",
                        "example": false
                    },
                    "blackout_duration": {
                        "type": "integer",
                        "description": "The blackout duration in seconds; minimum value is 1 minute.",
                        "format": "int64",
                        "example": 1
                    },
                    "blackout_schedule": {
                        "description": "A Schedule Setting struct that determines blackout schedule.",
                        "enum": [
                            "setting:schedule"
                        ],
                        "$ref": "#/components/schemas/Ipv6networkcontainerportcontrolblackoutsettingBlackoutSchedule"
                    }
                }
            },
            "Ipv6networkcontainerportcontrolblackoutsettingBlackoutSchedule": {
                "type": "object",
                "properties": {
                    "weekdays": {
                        "type": "array",
                        "description": "Days of the week when scheduling is triggered.",
                        "enum": [
                            "SATURDAY",
                            "SUNDAY",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for the schedule.",
                        "example": "Example time_zone"
                    },
                    "recurring_time": {
                        "type": "integer",
                        "description": "The recurring time for the schedule in Epoch seconds format. This field is obsolete and is preserved only for backward compatibility purposes. Please use other applicable fields to define the recurring schedule. DO NOT use recurring_time together with these fields. If you use recurring_time with other fields to define the recurring schedule, recurring_time has priority over year, hour_of_day, and minutes_past_hour and will override the values of these fields, although it does not override month and day_of_month. In this case, the recurring time value might be different than the intended value that you define.",
                        "format": "int64",
                        "example": 1
                    },
                    "frequency": {
                        "type": "string",
                        "description": "The frequency for the scheduled task.",
                        "enum": [
                            "DAILY",
                            "HOURLY",
                            "MONTHLY",
                            "WEEKLY"
                        ],
                        "example": "Example frequency"
                    },
                    "every": {
                        "type": "integer",
                        "description": "The number of frequency to wait before repeating the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "minutes_past_hour": {
                        "type": "integer",
                        "description": "The minutes past the hour for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "hour_of_day": {
                        "type": "integer",
                        "description": "The hour of day for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "year": {
                        "type": "integer",
                        "description": "The year for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "month": {
                        "type": "integer",
                        "description": "The month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "day_of_month": {
                        "type": "integer",
                        "description": "The day of the month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "repeat": {
                        "type": "string",
                        "description": "Indicates if the scheduled task will be repeated or run only once.",
                        "enum": [
                            "ONCE",
                            "RECUR"
                        ],
                        "example": "Example repeat"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "If set to True, the scheduled task is disabled.",
                        "example": false
                    }
                }
            },
            "Ipv6networkcontainerSubscribeSettings": {
                "type": "object",
                "properties": {
                    "enabled_attributes": {
                        "type": "array",
                        "description": "The list of Cisco ISE attributes allowed for subscription.",
                        "enum": [
                            "DOMAINNAME",
                            "ENDPOINT_PROFILE",
                            "SECURITY_GROUP",
                            "SESSION_STATE",
                            "SSID",
                            "USERNAME",
                            "VLAN"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "mapped_ea_attributes": {
                        "description": "The list of NIOS extensible attributes to Cisco ISE attributes mappings.",
                        "enum": [
                            "ciscoise:eaassociation"
                        ],
                        "$ref": "#/components/schemas/Ipv6networkcontainersubscribesettingsMappedEaAttributes"
                    }
                }
            },
            "Ipv6networkcontainersubscribesettingsMappedEaAttributes": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The Cisco ISE attribute name that is enabled for publishsing from a Cisco ISE endpoint.",
                        "enum": [
                            "ACCOUNT_SESSION_ID",
                            "AUDIT_SESSION_ID",
                            "EPS_STATUS",
                            "IP_ADDRESS",
                            "MAC",
                            "NAS_IP_ADDRESS",
                            "NAS_PORT_ID",
                            "POSTURE_STATUS",
                            "POSTURE_TIMESTAMP"
                        ],
                        "example": "Example name"
                    },
                    "mapped_ea": {
                        "type": "string",
                        "description": "The name of the extensible attribute definition object the Cisco ISE attribute that is enabled for subscription is mapped on.",
                        "example": "Example mapped_ea"
                    }
                }
            },
            "Ipv6networkcontainerZoneAssociations": {
                "type": "object",
                "properties": {
                    "fqdn": {
                        "type": "string",
                        "description": "The FQDN of the authoritative forward zone.",
                        "example": "Example fqdn"
                    },
                    "is_default": {
                        "type": "boolean",
                        "description": "True if this is the default zone.",
                        "example": false
                    },
                    "view": {
                        "type": "string",
                        "description": "The view to which the zone belongs. If a view is not specified, the default view is used.",
                        "example": "Example view"
                    }
                }
            },
            "ListIpv6networkcontainerResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Ipv6networkcontainer__ objects.",
                        "type": "array",
                        "title": "ListIpv6networkcontainerResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Ipv6networkcontainer"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Ipv6networkcontainer__ objects.",
                        "type": "object",
                        "title": "ListIpv6networkcontainerResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Ipv6networkcontainer"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateIpv6networkcontainerResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Ipv6networkcontainer__ in object format.",
                        "type": "object",
                        "title": "CreateIpv6networkcontainerResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6networkcontainer"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Ipv6networkcontainer__.",
                        "type": "string",
                        "title": "CreateIpv6networkcontainerResponse"
                    }
                ]
            },
            "GetIpv6networkcontainerResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Ipv6networkcontainer"
                    },
                    {
                        "description": "The response format to retrieve __Ipv6networkcontainer__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetIpv6networkcontainerResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6networkcontainer"
                            }
                        }
                    }
                ]
            },
            "UpdateIpv6networkcontainerResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Ipv6networkcontainer__ in object format.",
                        "type": "object",
                        "title": "UpdateIpv6networkcontainerResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6networkcontainer"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Ipv6networkcontainer__ .",
                        "type": "string",
                        "title": "UpdateIpv6networkcontainerResponse"
                    }
                ]
            },
            "Ipv6networktemplate": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "allow_any_netmask": {
                        "type": "boolean",
                        "description": "This flag controls whether the template allows any netmask. You must specify a netmask when creating a network using this template. If you set this parameter to False, you must specify the \"cidr\" field for the network template object.",
                        "example": false
                    },
                    "auto_create_reversezone": {
                        "type": "boolean",
                        "description": "This flag controls whether reverse zones are automatically created when the network is added.",
                        "example": false
                    },
                    "cidr": {
                        "type": "integer",
                        "description": "The CIDR of the network in CIDR format.",
                        "format": "int64",
                        "example": 1
                    },
                    "cloud_api_compatible": {
                        "type": "boolean",
                        "description": "This flag controls whether this template can be used to create network objects in a cloud-computing deployment.",
                        "example": false
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the network; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "ddns_domainname": {
                        "type": "string",
                        "description": "The dynamic DNS domain name the appliance uses specifically for DDNS updates for this network.",
                        "example": "Example ddns_domainname"
                    },
                    "ddns_enable_option_fqdn": {
                        "type": "boolean",
                        "description": "Use this method to set or retrieve the ddns_enable_option_fqdn flag of a DHCP IPv6 Network object. This method controls whether the FQDN option sent by the client is to be used, or if the server can automatically generate the FQDN. This setting overrides the upper-level settings.",
                        "example": false
                    },
                    "ddns_generate_hostname": {
                        "type": "boolean",
                        "description": "If this field is set to True, the DHCP server generates a hostname and updates DNS with it when the DHCP client request does not contain a hostname.",
                        "example": false
                    },
                    "ddns_server_always_updates": {
                        "type": "boolean",
                        "description": "This field controls whether the DHCP server is allowed to update DNS, regardless of the DHCP client requests. Note that changes for this field take effect only if ddns_enable_option_fqdn is True.",
                        "example": false
                    },
                    "ddns_ttl": {
                        "type": "integer",
                        "description": "The DNS update Time to Live (TTL) value of a DHCP network object. The TTL is a 32-bit unsigned integer that represents the duration, in seconds, for which the update is cached. Zero indicates that the update is not cached.",
                        "format": "int64",
                        "example": 1
                    },
                    "delegated_member": {
                        "$ref": "#/components/schemas/Ipv6networktemplateDelegatedMember"
                    },
                    "domain_name": {
                        "type": "string",
                        "description": "Use this method to set or retrieve the domain_name value of a DHCP IPv6 Network object.",
                        "example": "Example domain_name"
                    },
                    "domain_name_servers": {
                        "type": "array",
                        "description": "Use this method to set or retrieve the dynamic DNS updates flag of a DHCP IPv6 Network object. The DHCP server can send DDNS updates to DNS servers in the same Grid and to external DNS servers. This setting overrides the member level settings.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "enable_ddns": {
                        "type": "boolean",
                        "description": "The dynamic DNS updates flag of a DHCP IPv6 network object. If set to True, the DHCP server sends DDNS updates to DNS servers in the same Grid, and to external DNS servers.",
                        "example": false
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "fixed_address_templates": {
                        "type": "array",
                        "description": "The list of IPv6 fixed address templates assigned to this IPv6 network template object. When you create an IPv6 network based on an IPv6 network template object that contains IPv6 fixed address templates, the IPv6 fixed addresses are created based on the associated IPv6 fixed address templates.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "ipv6prefix": {
                        "type": "string",
                        "description": "The IPv6 Address prefix of the DHCP IPv6 network.",
                        "example": "Example ipv6prefix"
                    },
                    "logic_filter_rules": {
                        "type": "array",
                        "description": "This field contains the logic filters to be applied on this IPv6 network template. This list corresponds to the match rules that are written to the DHCPv6 configuration file.",
                        "enum": [
                            "logicfilterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Ipv6networktemplateLogicFilterRules"
                        }
                    },
                    "members": {
                        "type": "array",
                        "description": "A list of members that serve DHCP for the network. All members in the array must be of the same type. The struct type must be indicated in each element, by setting the \"_struct\" member to the struct type.",
                        "enum": [
                            "dhcpmember"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Ipv6networktemplateMembers"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this IPv6 network template.",
                        "example": "Example name"
                    },
                    "options": {
                        "type": "array",
                        "description": "An array of DHCP option dhcpoption structs that lists the DHCP options associated with the object.",
                        "enum": [
                            "dhcpoption"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Ipv6networktemplateOptions"
                        }
                    },
                    "preferred_lifetime": {
                        "type": "integer",
                        "description": "Use this method to set or retrieve the preferred lifetime value of a DHCP IPv6 Network object.",
                        "format": "int64",
                        "example": 1
                    },
                    "range_templates": {
                        "type": "array",
                        "description": "The list of IPv6 address range templates assigned to this IPv6 network template object. When you create an IPv6 network based on an IPv6 network template object that contains IPv6 range templates, the IPv6 address ranges are created based on the associated IPv6 address range templates.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "recycle_leases": {
                        "type": "boolean",
                        "description": "If the field is set to True, the leases are kept in the Recycle Bin until one week after expiration. Otherwise, the leases are permanently deleted.",
                        "example": false
                    },
                    "rir": {
                        "type": "string",
                        "description": "The registry (RIR) that allocated the IPv6 network address space.",
                        "enum": [
                            "RIPE",
                            "NONE"
                        ],
                        "readOnly": true,
                        "example": "Example rir"
                    },
                    "rir_organization": {
                        "type": "string",
                        "description": "The RIR organization associated with the IPv6 network.",
                        "example": "Example rir_organization"
                    },
                    "rir_registration_action": {
                        "type": "string",
                        "description": "The action for the RIR registration.",
                        "enum": [
                            "NONE",
                            "CREATE"
                        ],
                        "example": "Example rir_registration_action"
                    },
                    "rir_registration_status": {
                        "type": "string",
                        "description": "The registration status of the IPv6 network in RIR.",
                        "enum": [
                            "REGISTERED",
                            "NOT_REGISTERED"
                        ],
                        "example": "Example rir_registration_status"
                    },
                    "send_rir_request": {
                        "type": "boolean",
                        "description": "Determines whether to send the RIR registration request.",
                        "example": false
                    },
                    "update_dns_on_lease_renewal": {
                        "type": "boolean",
                        "description": "This field controls whether the DHCP server updates DNS when a DHCP lease is renewed.",
                        "example": false
                    },
                    "use_ddns_domainname": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_domainname",
                        "example": false
                    },
                    "use_ddns_enable_option_fqdn": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_enable_option_fqdn",
                        "example": false
                    },
                    "use_ddns_generate_hostname": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_generate_hostname",
                        "example": false
                    },
                    "use_ddns_ttl": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_ttl",
                        "example": false
                    },
                    "use_domain_name": {
                        "type": "boolean",
                        "description": "Use flag for: domain_name",
                        "example": false
                    },
                    "use_domain_name_servers": {
                        "type": "boolean",
                        "description": "Use flag for: domain_name_servers",
                        "example": false
                    },
                    "use_enable_ddns": {
                        "type": "boolean",
                        "description": "Use flag for: enable_ddns",
                        "example": false
                    },
                    "use_logic_filter_rules": {
                        "type": "boolean",
                        "description": "Use flag for: logic_filter_rules",
                        "example": false
                    },
                    "use_options": {
                        "type": "boolean",
                        "description": "Use flag for: options",
                        "example": false
                    },
                    "use_preferred_lifetime": {
                        "type": "boolean",
                        "description": "Use flag for: preferred_lifetime",
                        "example": false
                    },
                    "use_recycle_leases": {
                        "type": "boolean",
                        "description": "Use flag for: recycle_leases",
                        "example": false
                    },
                    "use_update_dns_on_lease_renewal": {
                        "type": "boolean",
                        "description": "Use flag for: update_dns_on_lease_renewal",
                        "example": false
                    },
                    "use_valid_lifetime": {
                        "type": "boolean",
                        "description": "Use flag for: valid_lifetime",
                        "example": false
                    },
                    "valid_lifetime": {
                        "type": "integer",
                        "description": "Use this method to set or retrieve the valid lifetime value of a DHCP IPv6 Network object.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "Ipv6networktemplateDelegatedMember": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example ipv4addr"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid Member.",
                        "example": "Example ipv6addr"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid member name",
                        "example": "Example name"
                    }
                }
            },
            "Ipv6networktemplateLogicFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The filter name.",
                        "example": "Example filter"
                    },
                    "type": {
                        "type": "string",
                        "description": "The filter type. Valid values are: * MAC * NAC * Option",
                        "example": "Example type"
                    }
                }
            },
            "Ipv6networktemplateMembers": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example ipv4addr"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid Member.",
                        "example": "Example ipv6addr"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid member name",
                        "example": "Example name"
                    }
                }
            },
            "Ipv6networktemplateOptions": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the DHCP option.",
                        "example": "Example name"
                    },
                    "num": {
                        "type": "integer",
                        "description": "The code of the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "vendor_class": {
                        "type": "string",
                        "description": "The name of the space this DHCP option is associated to.",
                        "example": "Example vendor_class"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the DHCP option",
                        "example": "Example value"
                    },
                    "use_option": {
                        "type": "boolean",
                        "description": "Only applies to special options that are displayed separately from other options and have a use flag. These options are: * routers * router-templates * domain-name-servers * domain-name * broadcast-address * broadcast-address-offset * dhcp-lease-time * dhcp6.name-servers",
                        "example": false
                    }
                }
            },
            "ListIpv6networktemplateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Ipv6networktemplate__ objects.",
                        "type": "array",
                        "title": "ListIpv6networktemplateResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Ipv6networktemplate"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Ipv6networktemplate__ objects.",
                        "type": "object",
                        "title": "ListIpv6networktemplateResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Ipv6networktemplate"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateIpv6networktemplateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Ipv6networktemplate__ in object format.",
                        "type": "object",
                        "title": "CreateIpv6networktemplateResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6networktemplate"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Ipv6networktemplate__.",
                        "type": "string",
                        "title": "CreateIpv6networktemplateResponse"
                    }
                ]
            },
            "GetIpv6networktemplateResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Ipv6networktemplate"
                    },
                    {
                        "description": "The response format to retrieve __Ipv6networktemplate__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetIpv6networktemplateResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6networktemplate"
                            }
                        }
                    }
                ]
            },
            "UpdateIpv6networktemplateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Ipv6networktemplate__ in object format.",
                        "type": "object",
                        "title": "UpdateIpv6networktemplateResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6networktemplate"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Ipv6networktemplate__ .",
                        "type": "string",
                        "title": "UpdateIpv6networktemplateResponse"
                    }
                ]
            },
            "IpamStatistics": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "cidr": {
                        "type": "integer",
                        "description": "The network CIDR.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "conflict_count": {
                        "type": "integer",
                        "description": "The number of conflicts discovered via network discovery. This attribute is only valid for a Network object.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "ms_ad_user_data": {
                        "$ref": "#/components/schemas/IpamStatisticsMsAdUserData"
                    },
                    "network": {
                        "type": "string",
                        "description": "The network address.",
                        "readOnly": true,
                        "example": "Example network"
                    },
                    "network_view": {
                        "type": "string",
                        "description": "The network view.",
                        "readOnly": true,
                        "example": "Example network_view"
                    },
                    "unmanaged_count": {
                        "type": "integer",
                        "description": "The number of unmanaged IP addresses as discovered by network discovery. This attribute is only valid for a Network object.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "utilization": {
                        "type": "integer",
                        "description": "The network utilization in percentage.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "utilization_update": {
                        "type": "integer",
                        "description": "The time that the utilization statistics were updated last. This attribute is only valid for a Network object. For a Network Container object, the return value is undefined.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "IpamStatisticsMsAdUserData": {
                "type": "object",
                "properties": {
                    "active_users_count": {
                        "type": "integer",
                        "description": "The number of active users.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "ListIpamStatisticsResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __IpamStatistics__ objects.",
                        "type": "array",
                        "title": "ListIpamStatisticsResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/IpamStatistics"
                        }
                    },
                    {
                        "description": "The response format to retrieve __IpamStatistics__ objects.",
                        "type": "object",
                        "title": "ListIpamStatisticsResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/IpamStatistics"
                                }
                            }
                        }
                    }
                ]
            },
            "GetIpamStatisticsResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/IpamStatistics"
                    },
                    {
                        "description": "The response format to retrieve __IpamStatistics__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetIpamStatisticsResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/IpamStatistics"
                            }
                        }
                    }
                ]
            },
            "UpdateIpamStatisticsResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __IpamStatistics__ in object format.",
                        "type": "object",
                        "title": "UpdateIpamStatisticsResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/IpamStatistics"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __IpamStatistics__ .",
                        "type": "string",
                        "title": "UpdateIpamStatisticsResponse"
                    }
                ]
            },
            "Vlan": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "assigned_to": {
                        "type": "array",
                        "description": "List of objects VLAN is assigned to.",
                        "enum": [
                            "network"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "network"
                            ]
                        }
                    },
                    "comment": {
                        "type": "string",
                        "description": "A descriptive comment for this VLAN.",
                        "example": "Example comment"
                    },
                    "contact": {
                        "type": "string",
                        "description": "Contact information for person/team managing or using VLAN.",
                        "example": "Example contact"
                    },
                    "department": {
                        "type": "string",
                        "description": "Department where VLAN is used.",
                        "example": "Example department"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description for the VLAN object, may be potentially used for longer VLAN names.",
                        "example": "Example description"
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "id": {
                        "type": "integer",
                        "description": "VLAN ID value.",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the VLAN.",
                        "example": "Example name"
                    },
                    "parent": {
                        "type": "string",
                        "description": "The VLAN View or VLAN Range to which this VLAN belongs.",
                        "example": "Example parent"
                    },
                    "reserved": {
                        "type": "boolean",
                        "description": "When set VLAN can only be assigned to IPAM object manually.",
                        "example": false
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of VLAN object. Can be Assigned, Unassigned, Reserved.",
                        "enum": [
                            "UNASSIGNED",
                            "ASSIGNED",
                            "RESERVED"
                        ],
                        "readOnly": true,
                        "example": "Example status"
                    }
                }
            },
            "ListVlanResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Vlan__ objects.",
                        "type": "array",
                        "title": "ListVlanResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Vlan"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Vlan__ objects.",
                        "type": "object",
                        "title": "ListVlanResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Vlan"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateVlanResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Vlan__ in object format.",
                        "type": "object",
                        "title": "CreateVlanResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Vlan"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Vlan__.",
                        "type": "string",
                        "title": "CreateVlanResponse"
                    }
                ]
            },
            "GetVlanResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Vlan"
                    },
                    {
                        "description": "The response format to retrieve __Vlan__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetVlanResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Vlan"
                            }
                        }
                    }
                ]
            },
            "UpdateVlanResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Vlan__ in object format.",
                        "type": "object",
                        "title": "UpdateVlanResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Vlan"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Vlan__ .",
                        "type": "string",
                        "title": "UpdateVlanResponse"
                    }
                ]
            },
            "Vlanview": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "allow_range_overlapping": {
                        "type": "boolean",
                        "description": "When set to true VLAN Ranges under VLAN View can have overlapping ID.",
                        "example": false
                    },
                    "comment": {
                        "type": "string",
                        "description": "A descriptive comment for this VLAN View.",
                        "example": "Example comment"
                    },
                    "end_vlan_id": {
                        "type": "integer",
                        "description": "End ID for VLAN View.",
                        "format": "int64",
                        "example": 1
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the VLAN View.",
                        "example": "Example name"
                    },
                    "pre_create_vlan": {
                        "type": "boolean",
                        "description": "If set on creation VLAN objects will be created once VLAN View created.",
                        "example": false
                    },
                    "start_vlan_id": {
                        "type": "integer",
                        "description": "Start ID for VLAN View.",
                        "format": "int64",
                        "example": 1
                    },
                    "vlan_name_prefix": {
                        "type": "string",
                        "description": "If set on creation prefix string will be used for VLAN name.",
                        "example": "Example vlan_name_prefix"
                    }
                }
            },
            "ListVlanviewResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Vlanview__ objects.",
                        "type": "array",
                        "title": "ListVlanviewResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Vlanview"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Vlanview__ objects.",
                        "type": "object",
                        "title": "ListVlanviewResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Vlanview"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateVlanviewResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Vlanview__ in object format.",
                        "type": "object",
                        "title": "CreateVlanviewResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Vlanview"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Vlanview__.",
                        "type": "string",
                        "title": "CreateVlanviewResponse"
                    }
                ]
            },
            "GetVlanviewResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Vlanview"
                    },
                    {
                        "description": "The response format to retrieve __Vlanview__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetVlanviewResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Vlanview"
                            }
                        }
                    }
                ]
            },
            "UpdateVlanviewResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Vlanview__ in object format.",
                        "type": "object",
                        "title": "UpdateVlanviewResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Vlanview"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Vlanview__ .",
                        "type": "string",
                        "title": "UpdateVlanviewResponse"
                    }
                ]
            },
            "Vlanrange": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "A descriptive comment for this VLAN Range.",
                        "example": "Example comment"
                    },
                    "delete_vlans": {
                        "type": "boolean",
                        "description": "Vlans delete option. Determines whether all child objects should be removed alongside with the VLAN Range or child objects should be assigned to another parental VLAN Range/View. By default child objects are re-parented.",
                        "example": false
                    },
                    "end_vlan_id": {
                        "type": "integer",
                        "description": "End ID for VLAN Range.",
                        "format": "int64",
                        "example": 1
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the VLAN Range.",
                        "example": "Example name"
                    },
                    "pre_create_vlan": {
                        "type": "boolean",
                        "description": "If set on creation VLAN objects will be created once VLAN Range created.",
                        "example": false
                    },
                    "start_vlan_id": {
                        "type": "integer",
                        "description": "Start ID for VLAN Range.",
                        "format": "int64",
                        "example": 1
                    },
                    "vlan_name_prefix": {
                        "type": "string",
                        "description": "If set on creation prefix string will be used for VLAN name.",
                        "example": "Example vlan_name_prefix"
                    },
                    "vlan_view": {
                        "type": "string",
                        "description": "The VLAN View to which this VLAN Range belongs.",
                        "example": "Example vlan_view"
                    }
                }
            },
            "ListVlanrangeResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Vlanrange__ objects.",
                        "type": "array",
                        "title": "ListVlanrangeResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Vlanrange"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Vlanrange__ objects.",
                        "type": "object",
                        "title": "ListVlanrangeResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Vlanrange"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateVlanrangeResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Vlanrange__ in object format.",
                        "type": "object",
                        "title": "CreateVlanrangeResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Vlanrange"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Vlanrange__.",
                        "type": "string",
                        "title": "CreateVlanrangeResponse"
                    }
                ]
            },
            "GetVlanrangeResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Vlanrange"
                    },
                    {
                        "description": "The response format to retrieve __Vlanrange__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetVlanrangeResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Vlanrange"
                            }
                        }
                    }
                ]
            },
            "UpdateVlanrangeResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Vlanrange__ in object format.",
                        "type": "object",
                        "title": "UpdateVlanrangeResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Vlanrange"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Vlanrange__ .",
                        "type": "string",
                        "title": "UpdateVlanrangeResponse"
                    }
                ]
            },
            "Bulkhost": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "cloud_info": {
                        "$ref": "#/components/schemas/BulkhostCloudInfo"
                    },
                    "comment": {
                        "type": "string",
                        "description": "The descriptive comment.",
                        "example": "Example comment"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "The disable flag of a DNS BulkHost record.",
                        "example": false
                    },
                    "dns_prefix": {
                        "type": "string",
                        "description": "The prefix, in punycode format, for the bulk host.",
                        "readOnly": true,
                        "example": "Example dns_prefix"
                    },
                    "end_addr": {
                        "type": "string",
                        "description": "The last IP address in the address range for the bulk host.",
                        "example": "Example end_addr"
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "last_queried": {
                        "type": "integer",
                        "description": "The time of the last DNS query in Epoch seconds format.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "name_template": {
                        "type": "string",
                        "description": "The bulk host name template.",
                        "example": "Example name_template"
                    },
                    "network_view": {
                        "type": "string",
                        "description": "The network view associated with the bulk host view.",
                        "readOnly": true,
                        "example": "Example network_view"
                    },
                    "policy": {
                        "type": "string",
                        "description": "The hostname policy for records under the bulk host parent zone.",
                        "readOnly": true,
                        "example": "Example policy"
                    },
                    "prefix": {
                        "type": "string",
                        "description": "The prefix for the bulk host. The prefix is the name (or a series of characters) inserted at the beginning of each host name.",
                        "example": "Example prefix"
                    },
                    "reverse": {
                        "type": "boolean",
                        "description": "The reverse flag of the BulkHost record.",
                        "example": false
                    },
                    "start_addr": {
                        "type": "string",
                        "description": "The first IP address in the address range for the bulk host.",
                        "example": "Example start_addr"
                    },
                    "template_format": {
                        "type": "string",
                        "description": "The bulk host name template format.",
                        "readOnly": true,
                        "example": "Example template_format"
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "The Time to Live (TTL) value.",
                        "format": "int64",
                        "example": 1
                    },
                    "use_name_template": {
                        "type": "boolean",
                        "description": "Use flag for: name_template",
                        "example": false
                    },
                    "use_ttl": {
                        "type": "boolean",
                        "description": "Use flag for: ttl",
                        "example": false
                    },
                    "view": {
                        "type": "string",
                        "description": "The view for the bulk host.",
                        "example": "Example view"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The zone name.",
                        "example": "Example zone"
                    }
                }
            },
            "BulkhostCloudInfo": {
                "type": "object",
                "properties": {
                    "delegated_member": {
                        "description": "The Cloud Platform Appliance to which authority of the object is delegated.",
                        "enum": [
                            "dhcpmember"
                        ],
                        "$ref": "#/components/schemas/BulkhostcloudinfoDelegatedMember"
                    },
                    "delegated_scope": {
                        "type": "string",
                        "description": "Indicates the scope of delegation for the object. This can be one of the following: NONE (outside any delegation), ROOT (the delegation point), SUBTREE (within the scope of a delegation), RECLAIMING (within the scope of a delegation being reclaimed, either as the delegation point or in the subtree).",
                        "enum": [
                            "NONE",
                            "ROOT",
                            "SUBTREE",
                            "RECLAIMING"
                        ],
                        "readOnly": true,
                        "example": "Example delegated_scope"
                    },
                    "delegated_root": {
                        "type": "string",
                        "description": "Indicates the root of the delegation if delegated_scope is SUBTREE or RECLAIMING. This is not set otherwise.",
                        "readOnly": true,
                        "example": "Example delegated_root"
                    },
                    "owned_by_adaptor": {
                        "type": "boolean",
                        "description": "Determines whether the object was created by the cloud adapter or not.",
                        "readOnly": true,
                        "example": false
                    },
                    "usage": {
                        "type": "string",
                        "description": "Indicates the cloud origin of the object.",
                        "enum": [
                            "NONE",
                            "ADAPTER",
                            "USED_BY",
                            "DELEGATED"
                        ],
                        "readOnly": true,
                        "example": "Example usage"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "Reference to the tenant object associated with the object, if any.",
                        "readOnly": true,
                        "example": "Example tenant"
                    },
                    "mgmt_platform": {
                        "type": "string",
                        "description": "Indicates the specified cloud management platform.",
                        "readOnly": true,
                        "example": "Example mgmt_platform"
                    },
                    "authority_type": {
                        "type": "string",
                        "description": "Type of authority over the object.",
                        "enum": [
                            "NONE",
                            "GM",
                            "CP"
                        ],
                        "readOnly": true,
                        "example": "Example authority_type"
                    }
                }
            },
            "BulkhostcloudinfoDelegatedMember": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example ipv4addr"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid Member.",
                        "example": "Example ipv6addr"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid member name",
                        "example": "Example name"
                    }
                }
            },
            "ListBulkhostResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Bulkhost__ objects.",
                        "type": "array",
                        "title": "ListBulkhostResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Bulkhost"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Bulkhost__ objects.",
                        "type": "object",
                        "title": "ListBulkhostResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Bulkhost"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateBulkhostResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Bulkhost__ in object format.",
                        "type": "object",
                        "title": "CreateBulkhostResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Bulkhost"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Bulkhost__.",
                        "type": "string",
                        "title": "CreateBulkhostResponse"
                    }
                ]
            },
            "GetBulkhostResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Bulkhost"
                    },
                    {
                        "description": "The response format to retrieve __Bulkhost__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetBulkhostResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Bulkhost"
                            }
                        }
                    }
                ]
            },
            "UpdateBulkhostResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Bulkhost__ in object format.",
                        "type": "object",
                        "title": "UpdateBulkhostResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Bulkhost"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Bulkhost__ .",
                        "type": "string",
                        "title": "UpdateBulkhostResponse"
                    }
                ]
            },
            "Bulkhostnametemplate": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "is_grid_default": {
                        "type": "boolean",
                        "description": "True if this template is Grid default.",
                        "readOnly": true,
                        "example": false
                    },
                    "pre_defined": {
                        "type": "boolean",
                        "description": "True if this is a pre-defined template, False otherwise.",
                        "readOnly": true,
                        "example": false
                    },
                    "template_format": {
                        "type": "string",
                        "description": "The format of bulk host name template. It should follow certain rules (please use Administration Guide as reference).",
                        "example": "Example template_format"
                    },
                    "template_name": {
                        "type": "string",
                        "description": "The name of bulk host name template.",
                        "example": "Example template_name"
                    }
                }
            },
            "ListBulkhostnametemplateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Bulkhostnametemplate__ objects.",
                        "type": "array",
                        "title": "ListBulkhostnametemplateResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Bulkhostnametemplate"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Bulkhostnametemplate__ objects.",
                        "type": "object",
                        "title": "ListBulkhostnametemplateResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Bulkhostnametemplate"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateBulkhostnametemplateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Bulkhostnametemplate__ in object format.",
                        "type": "object",
                        "title": "CreateBulkhostnametemplateResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Bulkhostnametemplate"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Bulkhostnametemplate__.",
                        "type": "string",
                        "title": "CreateBulkhostnametemplateResponse"
                    }
                ]
            },
            "GetBulkhostnametemplateResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Bulkhostnametemplate"
                    },
                    {
                        "description": "The response format to retrieve __Bulkhostnametemplate__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetBulkhostnametemplateResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Bulkhostnametemplate"
                            }
                        }
                    }
                ]
            },
            "UpdateBulkhostnametemplateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Bulkhostnametemplate__ in object format.",
                        "type": "object",
                        "title": "UpdateBulkhostnametemplateResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Bulkhostnametemplate"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Bulkhostnametemplate__ .",
                        "type": "string",
                        "title": "UpdateBulkhostnametemplateResponse"
                    }
                ]
            },
            "Discoverytask": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "csv_file_name": {
                        "type": "string",
                        "description": "The network discovery CSV file name.",
                        "readOnly": true,
                        "example": "Example csv_file_name"
                    },
                    "disable_ip_scanning": {
                        "type": "boolean",
                        "description": "Determines whether IP scanning is disabled.",
                        "example": false
                    },
                    "disable_vmware_scanning": {
                        "type": "boolean",
                        "description": "Determines whether VMWare scanning is disabled.",
                        "example": false
                    },
                    "discovery_task_oid": {
                        "type": "string",
                        "description": "The discovery task identifier.",
                        "readOnly": true,
                        "example": "Example discovery_task_oid"
                    },
                    "member_name": {
                        "type": "string",
                        "description": "The Grid member that runs the discovery.",
                        "example": "Example member_name"
                    },
                    "merge_data": {
                        "type": "boolean",
                        "description": "Determines whether to replace or merge new data with existing data.",
                        "example": false
                    },
                    "mode": {
                        "type": "string",
                        "description": "Network discovery scanning mode.",
                        "enum": [
                            "FULL",
                            "ICMP",
                            "NETBIOS",
                            "TCP",
                            "CSV"
                        ],
                        "example": "Example mode"
                    },
                    "network_view": {
                        "type": "string",
                        "description": "Name of the network view in which target networks for network discovery reside.",
                        "example": "Example network_view"
                    },
                    "networks": {
                        "type": "array",
                        "description": "The list of the networks on which the network discovery will be invoked.",
                        "enum": [
                            "network"
                        ],
                        "items": {
                            "type": "string",
                            "enum": [
                                "network"
                            ]
                        }
                    },
                    "ping_retries": {
                        "type": "integer",
                        "description": "The number of times to perfrom ping for ICMP and FULL modes.",
                        "format": "int64",
                        "example": 1
                    },
                    "ping_timeout": {
                        "type": "integer",
                        "description": "The ping timeout for ICMP and FULL modes.",
                        "format": "int64",
                        "example": 1
                    },
                    "scheduled_run": {
                        "$ref": "#/components/schemas/DiscoverytaskScheduledRun"
                    },
                    "state": {
                        "type": "string",
                        "description": "The network discovery process state.",
                        "enum": [
                            "RUNNING",
                            "PAUSED",
                            "COMPLETE",
                            "ERROR",
                            "PAUSE_PENDING",
                            "END_PENDING"
                        ],
                        "readOnly": true,
                        "example": "Example state"
                    },
                    "state_time": {
                        "type": "integer",
                        "description": "Time when the network discovery process state was last updated.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "status": {
                        "type": "string",
                        "description": "The network discovery process descriptive status.",
                        "readOnly": true,
                        "example": "Example status"
                    },
                    "status_time": {
                        "type": "integer",
                        "description": "The time when the network discovery process status was last updated.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "tcp_ports": {
                        "type": "array",
                        "description": "The ports to scan for FULL and TCP modes.",
                        "enum": [
                            "discoverytaskport"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/DiscoverytaskTcpPorts"
                        }
                    },
                    "tcp_scan_technique": {
                        "type": "string",
                        "description": "The TCP scan techinque for FULL and TCP modes.",
                        "enum": [
                            "SYN",
                            "CONNECT"
                        ],
                        "example": "Example tcp_scan_technique"
                    },
                    "v_network_view": {
                        "type": "string",
                        "description": "Name of the network view in which target networks for VMWare scanning reside.",
                        "example": "Example v_network_view"
                    },
                    "vservers": {
                        "type": "array",
                        "description": "The list of VMware vSphere servers for VM discovery.",
                        "enum": [
                            "discoverytaskvserver"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/DiscoverytaskVservers"
                        }
                    },
                    "warning": {
                        "type": "string",
                        "description": "The network discovery process warning.",
                        "readOnly": true,
                        "example": "Example warning"
                    }
                }
            },
            "DiscoverytaskScheduledRun": {
                "type": "object",
                "properties": {
                    "weekdays": {
                        "type": "array",
                        "description": "Days of the week when scheduling is triggered.",
                        "enum": [
                            "SATURDAY",
                            "SUNDAY",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for the schedule.",
                        "example": "Example time_zone"
                    },
                    "recurring_time": {
                        "type": "integer",
                        "description": "The recurring time for the schedule in Epoch seconds format. This field is obsolete and is preserved only for backward compatibility purposes. Please use other applicable fields to define the recurring schedule. DO NOT use recurring_time together with these fields. If you use recurring_time with other fields to define the recurring schedule, recurring_time has priority over year, hour_of_day, and minutes_past_hour and will override the values of these fields, although it does not override month and day_of_month. In this case, the recurring time value might be different than the intended value that you define.",
                        "format": "int64",
                        "example": 1
                    },
                    "frequency": {
                        "type": "string",
                        "description": "The frequency for the scheduled task.",
                        "enum": [
                            "DAILY",
                            "HOURLY",
                            "MONTHLY",
                            "WEEKLY"
                        ],
                        "example": "Example frequency"
                    },
                    "every": {
                        "type": "integer",
                        "description": "The number of frequency to wait before repeating the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "minutes_past_hour": {
                        "type": "integer",
                        "description": "The minutes past the hour for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "hour_of_day": {
                        "type": "integer",
                        "description": "The hour of day for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "year": {
                        "type": "integer",
                        "description": "The year for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "month": {
                        "type": "integer",
                        "description": "The month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "day_of_month": {
                        "type": "integer",
                        "description": "The day of the month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "repeat": {
                        "type": "string",
                        "description": "Indicates if the scheduled task will be repeated or run only once.",
                        "enum": [
                            "ONCE",
                            "RECUR"
                        ],
                        "example": "Example repeat"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "If set to True, the scheduled task is disabled.",
                        "example": false
                    }
                }
            },
            "DiscoverytaskTcpPorts": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "integer",
                        "description": "The TCP port number.",
                        "format": "int64",
                        "example": 1
                    },
                    "comment": {
                        "type": "string",
                        "description": "The TCP port descriptive comment.",
                        "example": "Example comment"
                    }
                }
            },
            "DiscoverytaskVservers": {
                "type": "object",
                "properties": {
                    "disable": {
                        "type": "boolean",
                        "description": "The disable flag of a vSphere server.",
                        "example": false
                    },
                    "connection_protocol": {
                        "type": "string",
                        "description": "The connection protocol of a vSphere server.",
                        "enum": [
                            "HTTPS",
                            "HTTP"
                        ],
                        "example": "Example connection_protocol"
                    },
                    "fqdn_or_ip": {
                        "type": "string",
                        "description": "The FQDN (Fully Qualified Domain Name) or IP address of the vShpere server.",
                        "example": "Example fqdn_or_ip"
                    },
                    "password": {
                        "type": "string",
                        "description": "The user password on the vSphere server.",
                        "writeOnly": true,
                        "example": "Example password"
                    },
                    "port": {
                        "type": "integer",
                        "description": "The connection port that the vSphere server uses.",
                        "format": "int64",
                        "example": 1
                    },
                    "username": {
                        "type": "string",
                        "description": "The user name on the vSphere server.",
                        "example": "Example username"
                    }
                }
            },
            "ListDiscoverytaskResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Discoverytask__ objects.",
                        "type": "array",
                        "title": "ListDiscoverytaskResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Discoverytask"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Discoverytask__ objects.",
                        "type": "object",
                        "title": "ListDiscoverytaskResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Discoverytask"
                                }
                            }
                        }
                    }
                ]
            },
            "GetDiscoverytaskResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Discoverytask"
                    },
                    {
                        "description": "The response format to retrieve __Discoverytask__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDiscoverytaskResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Discoverytask"
                            }
                        }
                    }
                ]
            },
            "UpdateDiscoverytaskResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Discoverytask__ in object format.",
                        "type": "object",
                        "title": "UpdateDiscoverytaskResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Discoverytask"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Discoverytask__ .",
                        "type": "string",
                        "title": "UpdateDiscoverytaskResponse"
                    }
                ]
            },
            "NetworkDiscovery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    }
                }
            },
            "ListNetworkDiscoveryResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __NetworkDiscovery__ objects.",
                        "type": "array",
                        "title": "ListNetworkDiscoveryResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/NetworkDiscovery"
                        }
                    },
                    {
                        "description": "The response format to retrieve __NetworkDiscovery__ objects.",
                        "type": "object",
                        "title": "ListNetworkDiscoveryResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/NetworkDiscovery"
                                }
                            }
                        }
                    }
                ]
            },
            "GetNetworkDiscoveryResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/NetworkDiscovery"
                    },
                    {
                        "description": "The response format to retrieve __NetworkDiscovery__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetNetworkDiscoveryResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/NetworkDiscovery"
                            }
                        }
                    }
                ]
            },
            "UpdateNetworkDiscoveryResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __NetworkDiscovery__ in object format.",
                        "type": "object",
                        "title": "UpdateNetworkDiscoveryResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/NetworkDiscovery"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __NetworkDiscovery__ .",
                        "type": "string",
                        "title": "UpdateNetworkDiscoveryResponse"
                    }
                ]
            },
            "Superhost": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "The comment for Super Host.",
                        "example": "Example comment"
                    },
                    "delete_associated_objects": {
                        "type": "boolean",
                        "description": "True if we have to delete all DNS/DHCP associated objects with Super Host, false by default.",
                        "writeOnly": true,
                        "example": false
                    },
                    "dhcp_associated_objects": {
                        "type": "array",
                        "description": "A list of DHCP objects refs which are associated with Super Host.",
                        "enum": [
                            "fixedaddress"
                        ],
                        "items": {
                            "type": "string",
                            "enum": [
                                "fixedaddress"
                            ]
                        }
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "Disable all DNS/DHCP associated objects with Super Host if True, False by default.",
                        "example": false
                    },
                    "dns_associated_objects": {
                        "type": "array",
                        "description": "A list of object refs of the DNS resource records which are associated with Super Host.",
                        "enum": [
                            "record:a"
                        ],
                        "items": {
                            "type": "string",
                            "enum": [
                                "record:a"
                            ]
                        }
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Superhost.",
                        "example": "Example name"
                    }
                }
            },
            "ListSuperhostResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Superhost__ objects.",
                        "type": "array",
                        "title": "ListSuperhostResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Superhost"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Superhost__ objects.",
                        "type": "object",
                        "title": "ListSuperhostResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Superhost"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateSuperhostResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Superhost__ in object format.",
                        "type": "object",
                        "title": "CreateSuperhostResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Superhost"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Superhost__.",
                        "type": "string",
                        "title": "CreateSuperhostResponse"
                    }
                ]
            },
            "GetSuperhostResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Superhost"
                    },
                    {
                        "description": "The response format to retrieve __Superhost__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetSuperhostResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Superhost"
                            }
                        }
                    }
                ]
            },
            "UpdateSuperhostResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Superhost__ in object format.",
                        "type": "object",
                        "title": "UpdateSuperhostResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Superhost"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Superhost__ .",
                        "type": "string",
                        "title": "UpdateSuperhostResponse"
                    }
                ]
            },
            "Superhostchild": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "associated_object": {
                        "type": "string",
                        "description": "The record object, if supported by the WAPI. Otherwise, the value is \"None\".",
                        "readOnly": true,
                        "example": "Example associated_object"
                    },
                    "comment": {
                        "type": "string",
                        "description": "The record comment.",
                        "readOnly": true,
                        "example": "Example comment"
                    },
                    "creation_timestamp": {
                        "type": "integer",
                        "description": "Time at which DNS RR was created.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "data": {
                        "type": "string",
                        "description": "Specific data of DNS/DHCP records.",
                        "readOnly": true,
                        "example": "Example data"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "True if the child DNS/DHCP object is disabled.",
                        "readOnly": true,
                        "example": false
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the associated DNS/DHCP object.",
                        "readOnly": true,
                        "example": "Example name"
                    },
                    "network_view": {
                        "type": "string",
                        "description": "The name of the network view in which this network record resides.",
                        "readOnly": true,
                        "example": "Example network_view"
                    },
                    "parent": {
                        "type": "string",
                        "description": "Name of the Super Host object in which record resides.",
                        "readOnly": true,
                        "example": "Example parent"
                    },
                    "record_parent": {
                        "type": "string",
                        "description": "Name of a parent zone/network.",
                        "readOnly": true,
                        "example": "Example record_parent"
                    },
                    "type": {
                        "type": "string",
                        "description": "The record type. When searching for an unspecified record type, the search is performed for all records.",
                        "enum": [
                            "ARecord",
                            "AaaaRecord",
                            "FixedAddress",
                            "HostRecord",
                            "IPv6FixedAddress",
                            "PtrRecord"
                        ],
                        "readOnly": true,
                        "example": "Example type"
                    },
                    "view": {
                        "type": "string",
                        "description": "Name of the DNS View in which the record resides.",
                        "readOnly": true,
                        "example": "Example view"
                    }
                }
            },
            "ListSuperhostchildResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Superhostchild__ objects.",
                        "type": "array",
                        "title": "ListSuperhostchildResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Superhostchild"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Superhostchild__ objects.",
                        "type": "object",
                        "title": "ListSuperhostchildResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Superhostchild"
                                }
                            }
                        }
                    }
                ]
            },
            "GetSuperhostchildResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Superhostchild"
                    },
                    {
                        "description": "The response format to retrieve __Superhostchild__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetSuperhostchildResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Superhostchild"
                            }
                        }
                    }
                ]
            },
            "UpdateSuperhostchildResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Superhostchild__ in object format.",
                        "type": "object",
                        "title": "UpdateSuperhostchildResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Superhostchild"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Superhostchild__ .",
                        "type": "string",
                        "title": "UpdateSuperhostchildResponse"
                    }
                ]
            },
            "Hostnamerewritepolicy": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "is_default": {
                        "type": "boolean",
                        "description": "True if the policy is the Grid default.",
                        "readOnly": true,
                        "example": false
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of a hostname rewrite policy object.",
                        "example": "Example name"
                    },
                    "pre_defined": {
                        "type": "boolean",
                        "description": "Determines whether the policy is a predefined one.",
                        "readOnly": true,
                        "example": false
                    },
                    "replacement_character": {
                        "type": "string",
                        "description": "The replacement character for symbols in hostnames that do not conform to the hostname policy.",
                        "example": "Example replacement_character"
                    },
                    "valid_characters": {
                        "type": "string",
                        "description": "The set of valid characters represented in string format.",
                        "example": "Example valid_characters"
                    }
                }
            },
            "ListHostnamerewritepolicyResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Hostnamerewritepolicy__ objects.",
                        "type": "array",
                        "title": "ListHostnamerewritepolicyResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Hostnamerewritepolicy"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Hostnamerewritepolicy__ objects.",
                        "type": "object",
                        "title": "ListHostnamerewritepolicyResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Hostnamerewritepolicy"
                                }
                            }
                        }
                    }
                ]
            },
            "GetHostnamerewritepolicyResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Hostnamerewritepolicy"
                    },
                    {
                        "description": "The response format to retrieve __Hostnamerewritepolicy__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetHostnamerewritepolicyResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Hostnamerewritepolicy"
                            }
                        }
                    }
                ]
            },
            "UpdateHostnamerewritepolicyResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Hostnamerewritepolicy__ in object format.",
                        "type": "object",
                        "title": "UpdateHostnamerewritepolicyResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Hostnamerewritepolicy"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Hostnamerewritepolicy__ .",
                        "type": "string",
                        "title": "UpdateHostnamerewritepolicyResponse"
                    }
                ]
            }
        }
    }
}