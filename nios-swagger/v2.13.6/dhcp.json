{
    "openapi": "3.0.0",
    "info": {
        "title": "Infoblox DHCP API",
        "description": "OpenAPI specification for Infoblox NIOS WAPI DHCP objects",
        "version": "2.13.6",
        "termsOfService": "https://www.infoblox.com",
        "contact": {
            "name": "Infoblox",
            "url": "https://www.infoblox.com"
        },
        "license": {
            "name": "Infoblox License",
            "url": "https://www.infoblox.com"
        }
    },
    "servers": [
        {
            "url": "/wapi/v2.13.6",
            "description": "NIOS WAPI server"
        }
    ],
    "tags": [
        {
            "name": "DhcpStatistics",
            "description": "Operations for dhcp:statistics objects"
        },
        {
            "name": "Dhcpfailover",
            "description": "Operations for dhcpfailover objects"
        },
        {
            "name": "Dhcpoptiondefinition",
            "description": "Operations for dhcpoptiondefinition objects"
        },
        {
            "name": "Dhcpoptionspace",
            "description": "Operations for dhcpoptionspace objects"
        },
        {
            "name": "Filterfingerprint",
            "description": "Operations for filterfingerprint objects"
        },
        {
            "name": "Filtermac",
            "description": "Operations for filtermac objects"
        },
        {
            "name": "Filternac",
            "description": "Operations for filternac objects"
        },
        {
            "name": "Filteroption",
            "description": "Operations for filteroption objects"
        },
        {
            "name": "Filterrelayagent",
            "description": "Operations for filterrelayagent objects"
        },
        {
            "name": "Fingerprint",
            "description": "Operations for fingerprint objects"
        },
        {
            "name": "Fixedaddress",
            "description": "Operations for fixedaddress objects"
        },
        {
            "name": "Fixedaddresstemplate",
            "description": "Operations for fixedaddresstemplate objects"
        },
        {
            "name": "Ipv6dhcpoptiondefinition",
            "description": "Operations for ipv6dhcpoptiondefinition objects"
        },
        {
            "name": "Ipv6dhcpoptionspace",
            "description": "Operations for ipv6dhcpoptionspace objects"
        },
        {
            "name": "Ipv6filteroption",
            "description": "Operations for ipv6filteroption objects"
        },
        {
            "name": "Ipv6fixedaddress",
            "description": "Operations for ipv6fixedaddress objects"
        },
        {
            "name": "Ipv6fixedaddresstemplate",
            "description": "Operations for ipv6fixedaddresstemplate objects"
        },
        {
            "name": "Ipv6range",
            "description": "Operations for ipv6range objects"
        },
        {
            "name": "Ipv6rangetemplate",
            "description": "Operations for ipv6rangetemplate objects"
        },
        {
            "name": "Ipv6sharednetwork",
            "description": "Operations for ipv6sharednetwork objects"
        },
        {
            "name": "Lease",
            "description": "Operations for lease objects"
        },
        {
            "name": "Macfilteraddress",
            "description": "Operations for macfilteraddress objects"
        },
        {
            "name": "Range",
            "description": "Operations for range objects"
        },
        {
            "name": "Rangetemplate",
            "description": "Operations for rangetemplate objects"
        },
        {
            "name": "Roaminghost",
            "description": "Operations for roaminghost objects"
        },
        {
            "name": "Sharednetwork",
            "description": "Operations for sharednetwork objects"
        },
        {
            "name": "Orderedranges",
            "description": "Operations for orderedranges objects"
        }
    ],
    "paths": {
        "/dhcp:statistics": {
            "get": {
                "tags": [
                    "DhcpStatistics"
                ],
                "operationId": "DhcpStatisticsList",
                "summary": "Retrieve dhcp:statistics objects",
                "description": "Returns a list of dhcp:statistics objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDhcpStatisticsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dhcp:statistics/{reference}": {
            "get": {
                "tags": [
                    "DhcpStatistics"
                ],
                "operationId": "DhcpStatisticsRead",
                "summary": "Get a specific dhcp:statistics object",
                "description": "Returns a specific dhcp:statistics object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dhcp:statistics object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDhcpStatisticsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dhcpfailover": {
            "get": {
                "tags": [
                    "Dhcpfailover"
                ],
                "operationId": "DhcpfailoverList",
                "summary": "Retrieve dhcpfailover objects",
                "description": "Returns a list of dhcpfailover objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDhcpfailoverResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Dhcpfailover"
                ],
                "operationId": "DhcpfailoverCreate",
                "summary": "Create a dhcpfailover object",
                "description": "Creates a new dhcpfailover object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Dhcpfailover"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDhcpfailoverResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dhcp_dhcpfailover",
                "x-tf-datasource": "nios_dhcp_dhcpfailover",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/dhcpfailover/{reference}": {
            "get": {
                "tags": [
                    "Dhcpfailover"
                ],
                "operationId": "DhcpfailoverRead",
                "summary": "Get a specific dhcpfailover object",
                "description": "Returns a specific dhcpfailover object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dhcpfailover object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDhcpfailoverResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Dhcpfailover"
                ],
                "operationId": "DhcpfailoverUpdate",
                "summary": "Update a dhcpfailover object",
                "description": "Updates a specific dhcpfailover object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dhcpfailover object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Dhcpfailover"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDhcpfailoverResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Dhcpfailover"
                ],
                "operationId": "DhcpfailoverDelete",
                "summary": "Delete a dhcpfailover object",
                "description": "Deletes a specific dhcpfailover object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dhcpfailover object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dhcpoptiondefinition": {
            "get": {
                "tags": [
                    "Dhcpoptiondefinition"
                ],
                "operationId": "DhcpoptiondefinitionList",
                "summary": "Retrieve dhcpoptiondefinition objects",
                "description": "Returns a list of dhcpoptiondefinition objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDhcpoptiondefinitionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Dhcpoptiondefinition"
                ],
                "operationId": "DhcpoptiondefinitionCreate",
                "summary": "Create a dhcpoptiondefinition object",
                "description": "Creates a new dhcpoptiondefinition object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Dhcpoptiondefinition"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDhcpoptiondefinitionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dhcp_dhcpoptiondefinition",
                "x-tf-datasource": "nios_dhcp_dhcpoptiondefinition"
            }
        },
        "/dhcpoptiondefinition/{reference}": {
            "get": {
                "tags": [
                    "Dhcpoptiondefinition"
                ],
                "operationId": "DhcpoptiondefinitionRead",
                "summary": "Get a specific dhcpoptiondefinition object",
                "description": "Returns a specific dhcpoptiondefinition object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dhcpoptiondefinition object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDhcpoptiondefinitionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Dhcpoptiondefinition"
                ],
                "operationId": "DhcpoptiondefinitionUpdate",
                "summary": "Update a dhcpoptiondefinition object",
                "description": "Updates a specific dhcpoptiondefinition object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dhcpoptiondefinition object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Dhcpoptiondefinition"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDhcpoptiondefinitionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Dhcpoptiondefinition"
                ],
                "operationId": "DhcpoptiondefinitionDelete",
                "summary": "Delete a dhcpoptiondefinition object",
                "description": "Deletes a specific dhcpoptiondefinition object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dhcpoptiondefinition object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dhcpoptionspace": {
            "get": {
                "tags": [
                    "Dhcpoptionspace"
                ],
                "operationId": "DhcpoptionspaceList",
                "summary": "Retrieve dhcpoptionspace objects",
                "description": "Returns a list of dhcpoptionspace objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDhcpoptionspaceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Dhcpoptionspace"
                ],
                "operationId": "DhcpoptionspaceCreate",
                "summary": "Create a dhcpoptionspace object",
                "description": "Creates a new dhcpoptionspace object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Dhcpoptionspace"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDhcpoptionspaceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dhcp_dhcpoptionspace",
                "x-tf-datasource": "nios_dhcp_dhcpoptionspace"
            }
        },
        "/dhcpoptionspace/{reference}": {
            "get": {
                "tags": [
                    "Dhcpoptionspace"
                ],
                "operationId": "DhcpoptionspaceRead",
                "summary": "Get a specific dhcpoptionspace object",
                "description": "Returns a specific dhcpoptionspace object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dhcpoptionspace object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDhcpoptionspaceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Dhcpoptionspace"
                ],
                "operationId": "DhcpoptionspaceUpdate",
                "summary": "Update a dhcpoptionspace object",
                "description": "Updates a specific dhcpoptionspace object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dhcpoptionspace object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Dhcpoptionspace"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDhcpoptionspaceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Dhcpoptionspace"
                ],
                "operationId": "DhcpoptionspaceDelete",
                "summary": "Delete a dhcpoptionspace object",
                "description": "Deletes a specific dhcpoptionspace object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dhcpoptionspace object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/filterfingerprint": {
            "get": {
                "tags": [
                    "Filterfingerprint"
                ],
                "operationId": "FilterfingerprintList",
                "summary": "Retrieve filterfingerprint objects",
                "description": "Returns a list of filterfingerprint objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListFilterfingerprintResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Filterfingerprint"
                ],
                "operationId": "FilterfingerprintCreate",
                "summary": "Create a filterfingerprint object",
                "description": "Creates a new filterfingerprint object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Filterfingerprint"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateFilterfingerprintResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dhcp_filterfingerprint",
                "x-tf-datasource": "nios_dhcp_filterfingerprint",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/filterfingerprint/{reference}": {
            "get": {
                "tags": [
                    "Filterfingerprint"
                ],
                "operationId": "FilterfingerprintRead",
                "summary": "Get a specific filterfingerprint object",
                "description": "Returns a specific filterfingerprint object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the filterfingerprint object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetFilterfingerprintResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Filterfingerprint"
                ],
                "operationId": "FilterfingerprintUpdate",
                "summary": "Update a filterfingerprint object",
                "description": "Updates a specific filterfingerprint object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the filterfingerprint object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Filterfingerprint"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateFilterfingerprintResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Filterfingerprint"
                ],
                "operationId": "FilterfingerprintDelete",
                "summary": "Delete a filterfingerprint object",
                "description": "Deletes a specific filterfingerprint object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the filterfingerprint object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/filtermac": {
            "get": {
                "tags": [
                    "Filtermac"
                ],
                "operationId": "FiltermacList",
                "summary": "Retrieve filtermac objects",
                "description": "Returns a list of filtermac objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListFiltermacResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Filtermac"
                ],
                "operationId": "FiltermacCreate",
                "summary": "Create a filtermac object",
                "description": "Creates a new filtermac object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Filtermac"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateFiltermacResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dhcp_filtermac",
                "x-tf-datasource": "nios_dhcp_filtermac",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/filtermac/{reference}": {
            "get": {
                "tags": [
                    "Filtermac"
                ],
                "operationId": "FiltermacRead",
                "summary": "Get a specific filtermac object",
                "description": "Returns a specific filtermac object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the filtermac object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetFiltermacResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Filtermac"
                ],
                "operationId": "FiltermacUpdate",
                "summary": "Update a filtermac object",
                "description": "Updates a specific filtermac object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the filtermac object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Filtermac"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateFiltermacResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Filtermac"
                ],
                "operationId": "FiltermacDelete",
                "summary": "Delete a filtermac object",
                "description": "Deletes a specific filtermac object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the filtermac object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/filternac": {
            "get": {
                "tags": [
                    "Filternac"
                ],
                "operationId": "FilternacList",
                "summary": "Retrieve filternac objects",
                "description": "Returns a list of filternac objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListFilternacResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Filternac"
                ],
                "operationId": "FilternacCreate",
                "summary": "Create a filternac object",
                "description": "Creates a new filternac object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Filternac"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateFilternacResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dhcp_filternac",
                "x-tf-datasource": "nios_dhcp_filternac",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/filternac/{reference}": {
            "get": {
                "tags": [
                    "Filternac"
                ],
                "operationId": "FilternacRead",
                "summary": "Get a specific filternac object",
                "description": "Returns a specific filternac object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the filternac object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetFilternacResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Filternac"
                ],
                "operationId": "FilternacUpdate",
                "summary": "Update a filternac object",
                "description": "Updates a specific filternac object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the filternac object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Filternac"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateFilternacResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Filternac"
                ],
                "operationId": "FilternacDelete",
                "summary": "Delete a filternac object",
                "description": "Deletes a specific filternac object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the filternac object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/filteroption": {
            "get": {
                "tags": [
                    "Filteroption"
                ],
                "operationId": "FilteroptionList",
                "summary": "Retrieve filteroption objects",
                "description": "Returns a list of filteroption objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListFilteroptionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Filteroption"
                ],
                "operationId": "FilteroptionCreate",
                "summary": "Create a filteroption object",
                "description": "Creates a new filteroption object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Filteroption"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateFilteroptionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dhcp_filteroption",
                "x-tf-datasource": "nios_dhcp_filteroption",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/filteroption/{reference}": {
            "get": {
                "tags": [
                    "Filteroption"
                ],
                "operationId": "FilteroptionRead",
                "summary": "Get a specific filteroption object",
                "description": "Returns a specific filteroption object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the filteroption object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetFilteroptionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Filteroption"
                ],
                "operationId": "FilteroptionUpdate",
                "summary": "Update a filteroption object",
                "description": "Updates a specific filteroption object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the filteroption object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Filteroption"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateFilteroptionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Filteroption"
                ],
                "operationId": "FilteroptionDelete",
                "summary": "Delete a filteroption object",
                "description": "Deletes a specific filteroption object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the filteroption object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/filterrelayagent": {
            "get": {
                "tags": [
                    "Filterrelayagent"
                ],
                "operationId": "FilterrelayagentList",
                "summary": "Retrieve filterrelayagent objects",
                "description": "Returns a list of filterrelayagent objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListFilterrelayagentResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Filterrelayagent"
                ],
                "operationId": "FilterrelayagentCreate",
                "summary": "Create a filterrelayagent object",
                "description": "Creates a new filterrelayagent object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Filterrelayagent"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateFilterrelayagentResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dhcp_filterrelayagent",
                "x-tf-datasource": "nios_dhcp_filterrelayagent",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/filterrelayagent/{reference}": {
            "get": {
                "tags": [
                    "Filterrelayagent"
                ],
                "operationId": "FilterrelayagentRead",
                "summary": "Get a specific filterrelayagent object",
                "description": "Returns a specific filterrelayagent object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the filterrelayagent object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetFilterrelayagentResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Filterrelayagent"
                ],
                "operationId": "FilterrelayagentUpdate",
                "summary": "Update a filterrelayagent object",
                "description": "Updates a specific filterrelayagent object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the filterrelayagent object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Filterrelayagent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateFilterrelayagentResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Filterrelayagent"
                ],
                "operationId": "FilterrelayagentDelete",
                "summary": "Delete a filterrelayagent object",
                "description": "Deletes a specific filterrelayagent object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the filterrelayagent object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/fingerprint": {
            "get": {
                "tags": [
                    "Fingerprint"
                ],
                "operationId": "FingerprintList",
                "summary": "Retrieve fingerprint objects",
                "description": "Returns a list of fingerprint objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListFingerprintResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Fingerprint"
                ],
                "operationId": "FingerprintCreate",
                "summary": "Create a fingerprint object",
                "description": "Creates a new fingerprint object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fingerprint"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateFingerprintResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dhcp_fingerprint",
                "x-tf-datasource": "nios_dhcp_fingerprint",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/fingerprint/{reference}": {
            "get": {
                "tags": [
                    "Fingerprint"
                ],
                "operationId": "FingerprintRead",
                "summary": "Get a specific fingerprint object",
                "description": "Returns a specific fingerprint object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the fingerprint object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetFingerprintResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Fingerprint"
                ],
                "operationId": "FingerprintUpdate",
                "summary": "Update a fingerprint object",
                "description": "Updates a specific fingerprint object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the fingerprint object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fingerprint"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateFingerprintResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Fingerprint"
                ],
                "operationId": "FingerprintDelete",
                "summary": "Delete a fingerprint object",
                "description": "Deletes a specific fingerprint object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the fingerprint object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/fixedaddress": {
            "get": {
                "tags": [
                    "Fixedaddress"
                ],
                "operationId": "FixedaddressList",
                "summary": "Retrieve fixedaddress objects",
                "description": "Returns a list of fixedaddress objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListFixedaddressResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Fixedaddress"
                ],
                "operationId": "FixedaddressCreate",
                "summary": "Create a fixedaddress object",
                "description": "Creates a new fixedaddress object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fixedaddress"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateFixedaddressResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dhcp_fixedaddress",
                "x-tf-datasource": "nios_dhcp_fixedaddress",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/fixedaddress/{reference}": {
            "get": {
                "tags": [
                    "Fixedaddress"
                ],
                "operationId": "FixedaddressRead",
                "summary": "Get a specific fixedaddress object",
                "description": "Returns a specific fixedaddress object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the fixedaddress object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetFixedaddressResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Fixedaddress"
                ],
                "operationId": "FixedaddressUpdate",
                "summary": "Update a fixedaddress object",
                "description": "Updates a specific fixedaddress object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the fixedaddress object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fixedaddress"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateFixedaddressResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Fixedaddress"
                ],
                "operationId": "FixedaddressDelete",
                "summary": "Delete a fixedaddress object",
                "description": "Deletes a specific fixedaddress object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the fixedaddress object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/fixedaddresstemplate": {
            "get": {
                "tags": [
                    "Fixedaddresstemplate"
                ],
                "operationId": "FixedaddresstemplateList",
                "summary": "Retrieve fixedaddresstemplate objects",
                "description": "Returns a list of fixedaddresstemplate objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListFixedaddresstemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Fixedaddresstemplate"
                ],
                "operationId": "FixedaddresstemplateCreate",
                "summary": "Create a fixedaddresstemplate object",
                "description": "Creates a new fixedaddresstemplate object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fixedaddresstemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateFixedaddresstemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dhcp_fixedaddresstemplate",
                "x-tf-datasource": "nios_dhcp_fixedaddresstemplate",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/fixedaddresstemplate/{reference}": {
            "get": {
                "tags": [
                    "Fixedaddresstemplate"
                ],
                "operationId": "FixedaddresstemplateRead",
                "summary": "Get a specific fixedaddresstemplate object",
                "description": "Returns a specific fixedaddresstemplate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the fixedaddresstemplate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetFixedaddresstemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Fixedaddresstemplate"
                ],
                "operationId": "FixedaddresstemplateUpdate",
                "summary": "Update a fixedaddresstemplate object",
                "description": "Updates a specific fixedaddresstemplate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the fixedaddresstemplate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fixedaddresstemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateFixedaddresstemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Fixedaddresstemplate"
                ],
                "operationId": "FixedaddresstemplateDelete",
                "summary": "Delete a fixedaddresstemplate object",
                "description": "Deletes a specific fixedaddresstemplate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the fixedaddresstemplate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/ipv6dhcpoptiondefinition": {
            "get": {
                "tags": [
                    "Ipv6dhcpoptiondefinition"
                ],
                "operationId": "Ipv6dhcpoptiondefinitionList",
                "summary": "Retrieve ipv6dhcpoptiondefinition objects",
                "description": "Returns a list of ipv6dhcpoptiondefinition objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListIpv6dhcpoptiondefinitionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ipv6dhcpoptiondefinition"
                ],
                "operationId": "Ipv6dhcpoptiondefinitionCreate",
                "summary": "Create a ipv6dhcpoptiondefinition object",
                "description": "Creates a new ipv6dhcpoptiondefinition object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ipv6dhcpoptiondefinition"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateIpv6dhcpoptiondefinitionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dhcp_ipv6dhcpoptiondefinition",
                "x-tf-datasource": "nios_dhcp_ipv6dhcpoptiondefinition"
            }
        },
        "/ipv6dhcpoptiondefinition/{reference}": {
            "get": {
                "tags": [
                    "Ipv6dhcpoptiondefinition"
                ],
                "operationId": "Ipv6dhcpoptiondefinitionRead",
                "summary": "Get a specific ipv6dhcpoptiondefinition object",
                "description": "Returns a specific ipv6dhcpoptiondefinition object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6dhcpoptiondefinition object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetIpv6dhcpoptiondefinitionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Ipv6dhcpoptiondefinition"
                ],
                "operationId": "Ipv6dhcpoptiondefinitionUpdate",
                "summary": "Update a ipv6dhcpoptiondefinition object",
                "description": "Updates a specific ipv6dhcpoptiondefinition object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6dhcpoptiondefinition object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ipv6dhcpoptiondefinition"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateIpv6dhcpoptiondefinitionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Ipv6dhcpoptiondefinition"
                ],
                "operationId": "Ipv6dhcpoptiondefinitionDelete",
                "summary": "Delete a ipv6dhcpoptiondefinition object",
                "description": "Deletes a specific ipv6dhcpoptiondefinition object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6dhcpoptiondefinition object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/ipv6dhcpoptionspace": {
            "get": {
                "tags": [
                    "Ipv6dhcpoptionspace"
                ],
                "operationId": "Ipv6dhcpoptionspaceList",
                "summary": "Retrieve ipv6dhcpoptionspace objects",
                "description": "Returns a list of ipv6dhcpoptionspace objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListIpv6dhcpoptionspaceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ipv6dhcpoptionspace"
                ],
                "operationId": "Ipv6dhcpoptionspaceCreate",
                "summary": "Create a ipv6dhcpoptionspace object",
                "description": "Creates a new ipv6dhcpoptionspace object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ipv6dhcpoptionspace"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateIpv6dhcpoptionspaceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dhcp_ipv6dhcpoptionspace",
                "x-tf-datasource": "nios_dhcp_ipv6dhcpoptionspace"
            }
        },
        "/ipv6dhcpoptionspace/{reference}": {
            "get": {
                "tags": [
                    "Ipv6dhcpoptionspace"
                ],
                "operationId": "Ipv6dhcpoptionspaceRead",
                "summary": "Get a specific ipv6dhcpoptionspace object",
                "description": "Returns a specific ipv6dhcpoptionspace object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6dhcpoptionspace object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetIpv6dhcpoptionspaceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Ipv6dhcpoptionspace"
                ],
                "operationId": "Ipv6dhcpoptionspaceUpdate",
                "summary": "Update a ipv6dhcpoptionspace object",
                "description": "Updates a specific ipv6dhcpoptionspace object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6dhcpoptionspace object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ipv6dhcpoptionspace"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateIpv6dhcpoptionspaceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Ipv6dhcpoptionspace"
                ],
                "operationId": "Ipv6dhcpoptionspaceDelete",
                "summary": "Delete a ipv6dhcpoptionspace object",
                "description": "Deletes a specific ipv6dhcpoptionspace object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6dhcpoptionspace object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/ipv6filteroption": {
            "get": {
                "tags": [
                    "Ipv6filteroption"
                ],
                "operationId": "Ipv6filteroptionList",
                "summary": "Retrieve ipv6filteroption objects",
                "description": "Returns a list of ipv6filteroption objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListIpv6filteroptionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ipv6filteroption"
                ],
                "operationId": "Ipv6filteroptionCreate",
                "summary": "Create a ipv6filteroption object",
                "description": "Creates a new ipv6filteroption object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ipv6filteroption"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateIpv6filteroptionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dhcp_ipv6filteroption",
                "x-tf-datasource": "nios_dhcp_ipv6filteroption",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/ipv6filteroption/{reference}": {
            "get": {
                "tags": [
                    "Ipv6filteroption"
                ],
                "operationId": "Ipv6filteroptionRead",
                "summary": "Get a specific ipv6filteroption object",
                "description": "Returns a specific ipv6filteroption object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6filteroption object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetIpv6filteroptionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Ipv6filteroption"
                ],
                "operationId": "Ipv6filteroptionUpdate",
                "summary": "Update a ipv6filteroption object",
                "description": "Updates a specific ipv6filteroption object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6filteroption object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ipv6filteroption"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateIpv6filteroptionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Ipv6filteroption"
                ],
                "operationId": "Ipv6filteroptionDelete",
                "summary": "Delete a ipv6filteroption object",
                "description": "Deletes a specific ipv6filteroption object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6filteroption object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/ipv6fixedaddress": {
            "get": {
                "tags": [
                    "Ipv6fixedaddress"
                ],
                "operationId": "Ipv6fixedaddressList",
                "summary": "Retrieve ipv6fixedaddress objects",
                "description": "Returns a list of ipv6fixedaddress objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListIpv6fixedaddressResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ipv6fixedaddress"
                ],
                "operationId": "Ipv6fixedaddressCreate",
                "summary": "Create a ipv6fixedaddress object",
                "description": "Creates a new ipv6fixedaddress object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ipv6fixedaddress"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateIpv6fixedaddressResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dhcp_ipv6fixedaddress",
                "x-tf-datasource": "nios_dhcp_ipv6fixedaddress",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/ipv6fixedaddress/{reference}": {
            "get": {
                "tags": [
                    "Ipv6fixedaddress"
                ],
                "operationId": "Ipv6fixedaddressRead",
                "summary": "Get a specific ipv6fixedaddress object",
                "description": "Returns a specific ipv6fixedaddress object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6fixedaddress object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetIpv6fixedaddressResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Ipv6fixedaddress"
                ],
                "operationId": "Ipv6fixedaddressUpdate",
                "summary": "Update a ipv6fixedaddress object",
                "description": "Updates a specific ipv6fixedaddress object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6fixedaddress object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ipv6fixedaddress"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateIpv6fixedaddressResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Ipv6fixedaddress"
                ],
                "operationId": "Ipv6fixedaddressDelete",
                "summary": "Delete a ipv6fixedaddress object",
                "description": "Deletes a specific ipv6fixedaddress object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6fixedaddress object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/ipv6fixedaddresstemplate": {
            "get": {
                "tags": [
                    "Ipv6fixedaddresstemplate"
                ],
                "operationId": "Ipv6fixedaddresstemplateList",
                "summary": "Retrieve ipv6fixedaddresstemplate objects",
                "description": "Returns a list of ipv6fixedaddresstemplate objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListIpv6fixedaddresstemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ipv6fixedaddresstemplate"
                ],
                "operationId": "Ipv6fixedaddresstemplateCreate",
                "summary": "Create a ipv6fixedaddresstemplate object",
                "description": "Creates a new ipv6fixedaddresstemplate object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ipv6fixedaddresstemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateIpv6fixedaddresstemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dhcp_ipv6fixedaddresstemplate",
                "x-tf-datasource": "nios_dhcp_ipv6fixedaddresstemplate",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/ipv6fixedaddresstemplate/{reference}": {
            "get": {
                "tags": [
                    "Ipv6fixedaddresstemplate"
                ],
                "operationId": "Ipv6fixedaddresstemplateRead",
                "summary": "Get a specific ipv6fixedaddresstemplate object",
                "description": "Returns a specific ipv6fixedaddresstemplate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6fixedaddresstemplate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetIpv6fixedaddresstemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Ipv6fixedaddresstemplate"
                ],
                "operationId": "Ipv6fixedaddresstemplateUpdate",
                "summary": "Update a ipv6fixedaddresstemplate object",
                "description": "Updates a specific ipv6fixedaddresstemplate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6fixedaddresstemplate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ipv6fixedaddresstemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateIpv6fixedaddresstemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Ipv6fixedaddresstemplate"
                ],
                "operationId": "Ipv6fixedaddresstemplateDelete",
                "summary": "Delete a ipv6fixedaddresstemplate object",
                "description": "Deletes a specific ipv6fixedaddresstemplate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6fixedaddresstemplate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/ipv6range": {
            "get": {
                "tags": [
                    "Ipv6range"
                ],
                "operationId": "Ipv6rangeList",
                "summary": "Retrieve ipv6range objects",
                "description": "Returns a list of ipv6range objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListIpv6rangeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ipv6range"
                ],
                "operationId": "Ipv6rangeCreate",
                "summary": "Create a ipv6range object",
                "description": "Creates a new ipv6range object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ipv6range"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateIpv6rangeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dhcp_ipv6range",
                "x-tf-datasource": "nios_dhcp_ipv6range",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/ipv6range/{reference}": {
            "get": {
                "tags": [
                    "Ipv6range"
                ],
                "operationId": "Ipv6rangeRead",
                "summary": "Get a specific ipv6range object",
                "description": "Returns a specific ipv6range object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6range object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetIpv6rangeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Ipv6range"
                ],
                "operationId": "Ipv6rangeUpdate",
                "summary": "Update a ipv6range object",
                "description": "Updates a specific ipv6range object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6range object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ipv6range"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateIpv6rangeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Ipv6range"
                ],
                "operationId": "Ipv6rangeDelete",
                "summary": "Delete a ipv6range object",
                "description": "Deletes a specific ipv6range object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6range object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/ipv6rangetemplate": {
            "get": {
                "tags": [
                    "Ipv6rangetemplate"
                ],
                "operationId": "Ipv6rangetemplateList",
                "summary": "Retrieve ipv6rangetemplate objects",
                "description": "Returns a list of ipv6rangetemplate objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListIpv6rangetemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ipv6rangetemplate"
                ],
                "operationId": "Ipv6rangetemplateCreate",
                "summary": "Create a ipv6rangetemplate object",
                "description": "Creates a new ipv6rangetemplate object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ipv6rangetemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateIpv6rangetemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dhcp_ipv6rangetemplate",
                "x-tf-datasource": "nios_dhcp_ipv6rangetemplate"
            }
        },
        "/ipv6rangetemplate/{reference}": {
            "get": {
                "tags": [
                    "Ipv6rangetemplate"
                ],
                "operationId": "Ipv6rangetemplateRead",
                "summary": "Get a specific ipv6rangetemplate object",
                "description": "Returns a specific ipv6rangetemplate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6rangetemplate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetIpv6rangetemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Ipv6rangetemplate"
                ],
                "operationId": "Ipv6rangetemplateUpdate",
                "summary": "Update a ipv6rangetemplate object",
                "description": "Updates a specific ipv6rangetemplate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6rangetemplate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ipv6rangetemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateIpv6rangetemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Ipv6rangetemplate"
                ],
                "operationId": "Ipv6rangetemplateDelete",
                "summary": "Delete a ipv6rangetemplate object",
                "description": "Deletes a specific ipv6rangetemplate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6rangetemplate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/ipv6sharednetwork": {
            "get": {
                "tags": [
                    "Ipv6sharednetwork"
                ],
                "operationId": "Ipv6sharednetworkList",
                "summary": "Retrieve ipv6sharednetwork objects",
                "description": "Returns a list of ipv6sharednetwork objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListIpv6sharednetworkResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ipv6sharednetwork"
                ],
                "operationId": "Ipv6sharednetworkCreate",
                "summary": "Create a ipv6sharednetwork object",
                "description": "Creates a new ipv6sharednetwork object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ipv6sharednetwork"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateIpv6sharednetworkResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dhcp_ipv6sharednetwork",
                "x-tf-datasource": "nios_dhcp_ipv6sharednetwork",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/ipv6sharednetwork/{reference}": {
            "get": {
                "tags": [
                    "Ipv6sharednetwork"
                ],
                "operationId": "Ipv6sharednetworkRead",
                "summary": "Get a specific ipv6sharednetwork object",
                "description": "Returns a specific ipv6sharednetwork object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6sharednetwork object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetIpv6sharednetworkResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Ipv6sharednetwork"
                ],
                "operationId": "Ipv6sharednetworkUpdate",
                "summary": "Update a ipv6sharednetwork object",
                "description": "Updates a specific ipv6sharednetwork object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6sharednetwork object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ipv6sharednetwork"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateIpv6sharednetworkResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Ipv6sharednetwork"
                ],
                "operationId": "Ipv6sharednetworkDelete",
                "summary": "Delete a ipv6sharednetwork object",
                "description": "Deletes a specific ipv6sharednetwork object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the ipv6sharednetwork object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/lease": {
            "get": {
                "tags": [
                    "Lease"
                ],
                "operationId": "LeaseList",
                "summary": "Retrieve lease objects",
                "description": "Returns a list of lease objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListLeaseResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/lease/{reference}": {
            "get": {
                "tags": [
                    "Lease"
                ],
                "operationId": "LeaseRead",
                "summary": "Get a specific lease object",
                "description": "Returns a specific lease object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the lease object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetLeaseResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Lease"
                ],
                "operationId": "LeaseDelete",
                "summary": "Delete a lease object",
                "description": "Deletes a specific lease object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the lease object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/macfilteraddress": {
            "get": {
                "tags": [
                    "Macfilteraddress"
                ],
                "operationId": "MacfilteraddressList",
                "summary": "Retrieve macfilteraddress objects",
                "description": "Returns a list of macfilteraddress objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListMacfilteraddressResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Macfilteraddress"
                ],
                "operationId": "MacfilteraddressCreate",
                "summary": "Create a macfilteraddress object",
                "description": "Creates a new macfilteraddress object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Macfilteraddress"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateMacfilteraddressResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dhcp_macfilteraddress",
                "x-tf-datasource": "nios_dhcp_macfilteraddress",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/macfilteraddress/{reference}": {
            "get": {
                "tags": [
                    "Macfilteraddress"
                ],
                "operationId": "MacfilteraddressRead",
                "summary": "Get a specific macfilteraddress object",
                "description": "Returns a specific macfilteraddress object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the macfilteraddress object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMacfilteraddressResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Macfilteraddress"
                ],
                "operationId": "MacfilteraddressUpdate",
                "summary": "Update a macfilteraddress object",
                "description": "Updates a specific macfilteraddress object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the macfilteraddress object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Macfilteraddress"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateMacfilteraddressResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Macfilteraddress"
                ],
                "operationId": "MacfilteraddressDelete",
                "summary": "Delete a macfilteraddress object",
                "description": "Deletes a specific macfilteraddress object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the macfilteraddress object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/range": {
            "get": {
                "tags": [
                    "Range"
                ],
                "operationId": "RangeList",
                "summary": "Retrieve range objects",
                "description": "Returns a list of range objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListRangeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Range"
                ],
                "operationId": "RangeCreate",
                "summary": "Create a range object",
                "description": "Creates a new range object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Range"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateRangeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dhcp_range",
                "x-tf-datasource": "nios_dhcp_range",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/range/{reference}": {
            "get": {
                "tags": [
                    "Range"
                ],
                "operationId": "RangeRead",
                "summary": "Get a specific range object",
                "description": "Returns a specific range object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the range object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetRangeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Range"
                ],
                "operationId": "RangeUpdate",
                "summary": "Update a range object",
                "description": "Updates a specific range object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the range object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Range"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateRangeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Range"
                ],
                "operationId": "RangeDelete",
                "summary": "Delete a range object",
                "description": "Deletes a specific range object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the range object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/rangetemplate": {
            "get": {
                "tags": [
                    "Rangetemplate"
                ],
                "operationId": "RangetemplateList",
                "summary": "Retrieve rangetemplate objects",
                "description": "Returns a list of rangetemplate objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListRangetemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Rangetemplate"
                ],
                "operationId": "RangetemplateCreate",
                "summary": "Create a rangetemplate object",
                "description": "Creates a new rangetemplate object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Rangetemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateRangetemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dhcp_rangetemplate",
                "x-tf-datasource": "nios_dhcp_rangetemplate",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/rangetemplate/{reference}": {
            "get": {
                "tags": [
                    "Rangetemplate"
                ],
                "operationId": "RangetemplateRead",
                "summary": "Get a specific rangetemplate object",
                "description": "Returns a specific rangetemplate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the rangetemplate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetRangetemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Rangetemplate"
                ],
                "operationId": "RangetemplateUpdate",
                "summary": "Update a rangetemplate object",
                "description": "Updates a specific rangetemplate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the rangetemplate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Rangetemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateRangetemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Rangetemplate"
                ],
                "operationId": "RangetemplateDelete",
                "summary": "Delete a rangetemplate object",
                "description": "Deletes a specific rangetemplate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the rangetemplate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/roaminghost": {
            "get": {
                "tags": [
                    "Roaminghost"
                ],
                "operationId": "RoaminghostList",
                "summary": "Retrieve roaminghost objects",
                "description": "Returns a list of roaminghost objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListRoaminghostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Roaminghost"
                ],
                "operationId": "RoaminghostCreate",
                "summary": "Create a roaminghost object",
                "description": "Creates a new roaminghost object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Roaminghost"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateRoaminghostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dhcp_roaminghost",
                "x-tf-datasource": "nios_dhcp_roaminghost",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/roaminghost/{reference}": {
            "get": {
                "tags": [
                    "Roaminghost"
                ],
                "operationId": "RoaminghostRead",
                "summary": "Get a specific roaminghost object",
                "description": "Returns a specific roaminghost object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the roaminghost object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetRoaminghostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Roaminghost"
                ],
                "operationId": "RoaminghostUpdate",
                "summary": "Update a roaminghost object",
                "description": "Updates a specific roaminghost object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the roaminghost object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Roaminghost"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateRoaminghostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Roaminghost"
                ],
                "operationId": "RoaminghostDelete",
                "summary": "Delete a roaminghost object",
                "description": "Deletes a specific roaminghost object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the roaminghost object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/sharednetwork": {
            "get": {
                "tags": [
                    "Sharednetwork"
                ],
                "operationId": "SharednetworkList",
                "summary": "Retrieve sharednetwork objects",
                "description": "Returns a list of sharednetwork objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListSharednetworkResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Sharednetwork"
                ],
                "operationId": "SharednetworkCreate",
                "summary": "Create a sharednetwork object",
                "description": "Creates a new sharednetwork object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sharednetwork"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateSharednetworkResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dhcp_sharednetwork",
                "x-tf-datasource": "nios_dhcp_sharednetwork",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/sharednetwork/{reference}": {
            "get": {
                "tags": [
                    "Sharednetwork"
                ],
                "operationId": "SharednetworkRead",
                "summary": "Get a specific sharednetwork object",
                "description": "Returns a specific sharednetwork object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the sharednetwork object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetSharednetworkResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Sharednetwork"
                ],
                "operationId": "SharednetworkUpdate",
                "summary": "Update a sharednetwork object",
                "description": "Updates a specific sharednetwork object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the sharednetwork object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sharednetwork"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateSharednetworkResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "Sharednetwork"
                ],
                "operationId": "SharednetworkDelete",
                "summary": "Delete a sharednetwork object",
                "description": "Deletes a specific sharednetwork object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the sharednetwork object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/orderedranges": {
            "get": {
                "tags": [
                    "Orderedranges"
                ],
                "operationId": "OrderedrangesList",
                "summary": "Retrieve orderedranges objects",
                "description": "Returns a list of orderedranges objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListOrderedrangesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/orderedranges/{reference}": {
            "get": {
                "tags": [
                    "Orderedranges"
                ],
                "operationId": "OrderedrangesRead",
                "summary": "Get a specific orderedranges object",
                "description": "Returns a specific orderedranges object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the orderedranges object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetOrderedrangesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Orderedranges"
                ],
                "operationId": "OrderedrangesUpdate",
                "summary": "Update a orderedranges object",
                "description": "Updates a specific orderedranges object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the orderedranges object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Orderedranges"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateOrderedrangesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            }
        },
        "parameters": {
            "ReturnFields": {
                "name": "_return_fields",
                "in": "query",
                "description": "Enter the field names followed by comma",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "ReturnFieldsPlus": {
                "name": "_return_fields+",
                "in": "query",
                "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "MaxResults": {
                "name": "_max_results",
                "in": "query",
                "description": "Enter the number of results to be fetched",
                "required": false,
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1
                }
            },
            "ReturnAsObject": {
                "name": "_return_as_object",
                "in": "query",
                "description": "Select 1 if result is required as an object",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "Paging": {
                "name": "_paging",
                "in": "query",
                "description": "Control paging of results",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "PageId": {
                "name": "_page_id",
                "in": "query",
                "description": "Page id for retrieving next page of results",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "ProxySearch": {
                "name": "_proxy_search",
                "in": "query",
                "description": "Search Grid members for data",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "Schema": {
                "name": "_schema",
                "in": "query",
                "description": "Return schema for this object type",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "SchemaVersion": {
                "name": "_schema_version",
                "in": "query",
                "description": "Schema version to use",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        1,
                        2
                    ]
                }
            },
            "GetDoc": {
                "name": "_get_doc",
                "in": "query",
                "description": "Return documentation with schema",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "SchemaSearchable": {
                "name": "_schema_searchable",
                "in": "query",
                "description": "Return searchable fields with schema",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "Inheritance": {
                "name": "_inheritance",
                "in": "query",
                "description": "If this option is set to True, fields which support inheritance, will display data properly.",
                "required": false,
                "schema": {
                    "type": "boolean"
                }
            },
            "filters": {
                "name": "filters",
                "in": "query",
                "schema": {
                    "type": "object",
                    "additionalProperties": true
                },
                "style": "form",
                "explode": false
            },
            "ExtAttrFilters": {
                "name": "extattrfilter",
                "in": "query",
                "schema": {
                    "type": "object",
                    "additionalProperties": true
                },
                "style": "form",
                "explode": false
            },
            "Method": {
                "name": "_method",
                "in": "query",
                "description": "Enter the method type for the request",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "Body": {
                "name": "body",
                "in": "query",
                "schema": {
                    "type": "object"
                }
            }
        },
        "schemas": {
            "ExtAttrs": {
                "type": "object",
                "properties": {
                    "value": {
                        "description": "The value of the extensible attribute."
                    }
                },
                "required": [
                    "value"
                ],
                "description": "Extensible attributes associated with the object."
            },
            "DhcpStatistics": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "dhcp_utilization": {
                        "type": "integer",
                        "description": "The percentage of the total DHCP utilization of DHCP objects multiplied by 1000. This is the percentage of the total number of available IP addresses belonging to the object versus the total number of all IP addresses in object.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "dhcp_utilization_status": {
                        "type": "string",
                        "description": "A string describing the utilization level of the DHCP object.",
                        "enum": [
                            "FULL",
                            "HIGH",
                            "LOW",
                            "NORMAL"
                        ],
                        "readOnly": true,
                        "example": "Example dhcp_utilization_status"
                    },
                    "dynamic_hosts": {
                        "type": "integer",
                        "description": "The total number of DHCP leases issued for the DHCP object.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "static_hosts": {
                        "type": "integer",
                        "description": "The number of static DHCP addresses configured in the DHCP object.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "total_hosts": {
                        "type": "integer",
                        "description": "The total number of DHCP addresses configured in the DHCP object.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "ListDhcpStatisticsResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __DhcpStatistics__ objects.",
                        "type": "array",
                        "title": "ListDhcpStatisticsResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/DhcpStatistics"
                        }
                    },
                    {
                        "description": "The response format to retrieve __DhcpStatistics__ objects.",
                        "type": "object",
                        "title": "ListDhcpStatisticsResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DhcpStatistics"
                                }
                            }
                        }
                    }
                ]
            },
            "GetDhcpStatisticsResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DhcpStatistics"
                    },
                    {
                        "description": "The response format to retrieve __DhcpStatistics__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDhcpStatisticsResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DhcpStatistics"
                            }
                        }
                    }
                ]
            },
            "UpdateDhcpStatisticsResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __DhcpStatistics__ in object format.",
                        "type": "object",
                        "title": "UpdateDhcpStatisticsResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DhcpStatistics"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __DhcpStatistics__ .",
                        "type": "string",
                        "title": "UpdateDhcpStatisticsResponse"
                    }
                ]
            },
            "Dhcpfailover": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "association_type": {
                        "type": "string",
                        "description": "The value indicating whether the failover assoctaion is Microsoft or Grid based. This is a read-only attribute.",
                        "enum": [
                            "GRID",
                            "MS"
                        ],
                        "readOnly": true,
                        "example": "Example association_type"
                    },
                    "comment": {
                        "type": "string",
                        "description": "A descriptive comment about a DHCP failover object.",
                        "example": "Example comment"
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "failover_port": {
                        "type": "integer",
                        "description": "Determines the TCP port on which the server should listen for connections from its failover peer. Valid values are between 1 and 63999.",
                        "format": "int64",
                        "example": 1
                    },
                    "load_balance_split": {
                        "type": "integer",
                        "description": "A load balancing split value of a DHCP failover object. Specify the value of the maximum load balancing delay in a 8-bit integer format (range from 0 to 256).",
                        "format": "int64",
                        "example": 1
                    },
                    "max_client_lead_time": {
                        "type": "integer",
                        "description": "The maximum client lead time value of a DHCP failover object. Specify the value of the maximum client lead time in a 32-bit integer format (range from 0 to 4294967295) that represents the duration in seconds. Valid values are between 1 and 4294967295.",
                        "format": "int64",
                        "example": 1
                    },
                    "max_load_balance_delay": {
                        "type": "integer",
                        "description": "The maximum load balancing delay value of a DHCP failover object. Specify the value of the maximum load balancing delay in a 32-bit integer format (range from 0 to 4294967295) that represents the duration in seconds. Valid values are between 1 and 4294967295.",
                        "format": "int64",
                        "example": 1
                    },
                    "max_response_delay": {
                        "type": "integer",
                        "description": "The maximum response delay value of a DHCP failover object. Specify the value of the maximum response delay in a 32-bit integer format (range from 0 to 4294967295) that represents the duration in seconds. Valid values are between 1 and 4294967295.",
                        "format": "int64",
                        "example": 1
                    },
                    "max_unacked_updates": {
                        "type": "integer",
                        "description": "The maximum number of unacked updates value of a DHCP failover object. Specify the value of the maximum number of unacked updates in a 32-bit integer format (range from 0 to 4294967295) that represents the number of messages. Valid values are between 1 and 4294967295.",
                        "format": "int64",
                        "example": 1
                    },
                    "ms_association_mode": {
                        "type": "string",
                        "description": "The value that indicates whether the failover association is read-write or read-only. This is a read-only attribute.",
                        "enum": [
                            "RO",
                            "RW"
                        ],
                        "readOnly": true,
                        "example": "Example ms_association_mode"
                    },
                    "ms_enable_authentication": {
                        "type": "boolean",
                        "description": "Determines if the authentication for the failover association is enabled or not.",
                        "example": false
                    },
                    "ms_enable_switchover_interval": {
                        "type": "boolean",
                        "description": "Determines if the switchover interval is enabled or not.",
                        "example": false
                    },
                    "ms_failover_mode": {
                        "type": "string",
                        "description": "The mode for the failover association.",
                        "enum": [
                            "HOTSTANDBY",
                            "LOADBALANCE"
                        ],
                        "example": "Example ms_failover_mode"
                    },
                    "ms_failover_partner": {
                        "type": "string",
                        "description": "Failover partner defined in the association with the Microsoft Server.",
                        "example": "Example ms_failover_partner"
                    },
                    "ms_hotstandby_partner_role": {
                        "type": "string",
                        "description": "The partner role in the case of HotStandby.",
                        "enum": [
                            "ACTIVE",
                            "PASSIVE"
                        ],
                        "example": "Example ms_hotstandby_partner_role"
                    },
                    "ms_is_conflict": {
                        "type": "boolean",
                        "description": "Determines if the matching Microsfot failover association (if any) is in synchronization (False) or not (True). If there is no matching failover association the returned values is False. This is a read-only attribute.",
                        "readOnly": true,
                        "example": false
                    },
                    "ms_previous_state": {
                        "type": "string",
                        "description": "The previous failover association state. This is a read-only attribute.",
                        "enum": [
                            "INIT",
                            "STARTUP",
                            "RECOVER",
                            "POTENTIAL_CONFLICT",
                            "COMMUNICATION_INT",
                            "NO_STATE",
                            "NORMAL",
                            "PARTNER_DOWN",
                            "RESOLUTION_INIT",
                            "RECOVER_DONE",
                            "CONFLICT_DONE",
                            "RECOVER_WAIT"
                        ],
                        "readOnly": true,
                        "example": "Example ms_previous_state"
                    },
                    "ms_server": {
                        "type": "string",
                        "description": "The primary Microsoft Server.",
                        "example": "Example ms_server"
                    },
                    "ms_shared_secret": {
                        "type": "string",
                        "description": "The failover association authentication. This is a write-only attribute.",
                        "writeOnly": true,
                        "example": "Example ms_shared_secret"
                    },
                    "ms_state": {
                        "type": "string",
                        "description": "The failover association state. This is a read-only attribute.",
                        "enum": [
                            "INIT",
                            "STARTUP",
                            "RECOVER",
                            "POTENTIAL_CONFLICT",
                            "COMMUNICATION_INT",
                            "NO_STATE",
                            "NORMAL",
                            "PARTNER_DOWN",
                            "RESOLUTION_INIT",
                            "RECOVER_DONE",
                            "CONFLICT_DONE",
                            "RECOVER_WAIT"
                        ],
                        "readOnly": true,
                        "example": "Example ms_state"
                    },
                    "ms_switchover_interval": {
                        "type": "integer",
                        "description": "The time (in seconds) that DHCPv4 server will wait before transitioning the server from the COMMUNICATION-INT state to PARTNER-DOWN state.",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of a DHCP failover object.",
                        "example": "Example name"
                    },
                    "primary": {
                        "type": "string",
                        "description": "The primary server of a DHCP failover object.",
                        "example": "Example primary"
                    },
                    "primary_server_type": {
                        "type": "string",
                        "description": "The type of the primary server of DHCP Failover association object.",
                        "enum": [
                            "GRID",
                            "EXTERNAL"
                        ],
                        "example": "Example primary_server_type"
                    },
                    "primary_state": {
                        "type": "string",
                        "description": "The primary server status of a DHCP failover object.",
                        "enum": [
                            "COMMUNICATIONS_INTERRUPTED",
                            "RECOVER_WAIT",
                            "RECOVER",
                            "SHUTDOWN",
                            "UNKNOWN",
                            "POTENTIAL_CONFLICT",
                            "NORMAL",
                            "RESOLUTION_INTERRUPTED",
                            "PARTNER_DOWN",
                            "PAUSED",
                            "RECOVER_DONE",
                            "CONFLICT_DONE",
                            "START"
                        ],
                        "readOnly": true,
                        "example": "Example primary_state"
                    },
                    "recycle_leases": {
                        "type": "boolean",
                        "description": "Determines if the leases are kept in recycle bin until one week after expiration or not.",
                        "example": false
                    },
                    "secondary": {
                        "type": "string",
                        "description": "The secondary server of a DHCP failover object.",
                        "example": "Example secondary"
                    },
                    "secondary_server_type": {
                        "type": "string",
                        "description": "The type of the secondary server of DHCP Failover association object.",
                        "enum": [
                            "GRID",
                            "EXTERNAL"
                        ],
                        "example": "Example secondary_server_type"
                    },
                    "secondary_state": {
                        "type": "string",
                        "description": "The secondary server status of a DHCP failover object.",
                        "enum": [
                            "COMMUNICATIONS_INTERRUPTED",
                            "RECOVER_WAIT",
                            "RECOVER",
                            "SHUTDOWN",
                            "UNKNOWN",
                            "POTENTIAL_CONFLICT",
                            "NORMAL",
                            "RESOLUTION_INTERRUPTED",
                            "PARTNER_DOWN",
                            "PAUSED",
                            "RECOVER_DONE",
                            "CONFLICT_DONE",
                            "START"
                        ],
                        "readOnly": true,
                        "example": "Example secondary_state"
                    },
                    "use_failover_port": {
                        "type": "boolean",
                        "description": "Use flag for: failover_port",
                        "example": false
                    },
                    "use_ms_switchover_interval": {
                        "type": "boolean",
                        "description": "Use flag for: ms_switchover_interval",
                        "example": false
                    },
                    "use_recycle_leases": {
                        "type": "boolean",
                        "description": "Use flag for: recycle_leases",
                        "example": false
                    }
                }
            },
            "ListDhcpfailoverResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Dhcpfailover__ objects.",
                        "type": "array",
                        "title": "ListDhcpfailoverResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Dhcpfailover"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Dhcpfailover__ objects.",
                        "type": "object",
                        "title": "ListDhcpfailoverResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Dhcpfailover"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateDhcpfailoverResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Dhcpfailover__ in object format.",
                        "type": "object",
                        "title": "CreateDhcpfailoverResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Dhcpfailover"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Dhcpfailover__.",
                        "type": "string",
                        "title": "CreateDhcpfailoverResponse"
                    }
                ]
            },
            "GetDhcpfailoverResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Dhcpfailover"
                    },
                    {
                        "description": "The response format to retrieve __Dhcpfailover__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDhcpfailoverResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Dhcpfailover"
                            }
                        }
                    }
                ]
            },
            "UpdateDhcpfailoverResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Dhcpfailover__ in object format.",
                        "type": "object",
                        "title": "UpdateDhcpfailoverResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Dhcpfailover"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Dhcpfailover__ .",
                        "type": "string",
                        "title": "UpdateDhcpfailoverResponse"
                    }
                ]
            },
            "Dhcpoptiondefinition": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "code": {
                        "type": "integer",
                        "description": "The code of a DHCP option definition object. An option code number is used to identify the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of a DHCP option definition object.",
                        "example": "Example name"
                    },
                    "space": {
                        "type": "string",
                        "description": "The space of a DHCP option definition object.",
                        "example": "Example space"
                    },
                    "type": {
                        "type": "string",
                        "description": "The data type of the Grid DHCP option.",
                        "enum": [
                            "16-bit signed integer",
                            "16-bit unsigned integer",
                            "32-bit signed integer",
                            "32-bit unsigned integer",
                            "64-bit unsigned integer",
                            "8-bit signed integer",
                            "8-bit unsigned integer",
                            "8-bit unsigned integer (1,2,4,8)",
                            "array of 16-bit integer",
                            "array of 16-bit unsigned integer",
                            "array of 32-bit integer",
                            "array of 32-bit unsigned integer",
                            "array of 64-bit unsigned integer",
                            "array of 8-bit integer",
                            "array of 8-bit unsigned integer",
                            "array of ip-address",
                            "array of ip-address pair",
                            "array of string",
                            "binary",
                            "boolean",
                            "boolean array of ip-address",
                            "boolean-text",
                            "domain-list",
                            "domain-name",
                            "encapsulated",
                            "ip-address",
                            "string",
                            "text"
                        ],
                        "example": "Example type"
                    }
                }
            },
            "ListDhcpoptiondefinitionResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Dhcpoptiondefinition__ objects.",
                        "type": "array",
                        "title": "ListDhcpoptiondefinitionResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Dhcpoptiondefinition"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Dhcpoptiondefinition__ objects.",
                        "type": "object",
                        "title": "ListDhcpoptiondefinitionResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Dhcpoptiondefinition"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateDhcpoptiondefinitionResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Dhcpoptiondefinition__ in object format.",
                        "type": "object",
                        "title": "CreateDhcpoptiondefinitionResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Dhcpoptiondefinition"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Dhcpoptiondefinition__.",
                        "type": "string",
                        "title": "CreateDhcpoptiondefinitionResponse"
                    }
                ]
            },
            "GetDhcpoptiondefinitionResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Dhcpoptiondefinition"
                    },
                    {
                        "description": "The response format to retrieve __Dhcpoptiondefinition__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDhcpoptiondefinitionResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Dhcpoptiondefinition"
                            }
                        }
                    }
                ]
            },
            "UpdateDhcpoptiondefinitionResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Dhcpoptiondefinition__ in object format.",
                        "type": "object",
                        "title": "UpdateDhcpoptiondefinitionResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Dhcpoptiondefinition"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Dhcpoptiondefinition__ .",
                        "type": "string",
                        "title": "UpdateDhcpoptiondefinitionResponse"
                    }
                ]
            },
            "Dhcpoptionspace": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "A descriptive comment of a DHCP option space object.",
                        "example": "Example comment"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of a DHCP option space object.",
                        "example": "Example name"
                    },
                    "option_definitions": {
                        "type": "array",
                        "description": "The list of DHCP option definition objects.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "space_type": {
                        "type": "string",
                        "description": "The type of a DHCP option space object.",
                        "enum": [
                            "PREDEFINED_DHCP",
                            "VENDOR_SPACE"
                        ],
                        "readOnly": true,
                        "example": "Example space_type"
                    }
                }
            },
            "ListDhcpoptionspaceResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Dhcpoptionspace__ objects.",
                        "type": "array",
                        "title": "ListDhcpoptionspaceResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Dhcpoptionspace"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Dhcpoptionspace__ objects.",
                        "type": "object",
                        "title": "ListDhcpoptionspaceResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Dhcpoptionspace"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateDhcpoptionspaceResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Dhcpoptionspace__ in object format.",
                        "type": "object",
                        "title": "CreateDhcpoptionspaceResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Dhcpoptionspace"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Dhcpoptionspace__.",
                        "type": "string",
                        "title": "CreateDhcpoptionspaceResponse"
                    }
                ]
            },
            "GetDhcpoptionspaceResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Dhcpoptionspace"
                    },
                    {
                        "description": "The response format to retrieve __Dhcpoptionspace__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDhcpoptionspaceResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Dhcpoptionspace"
                            }
                        }
                    }
                ]
            },
            "UpdateDhcpoptionspaceResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Dhcpoptionspace__ in object format.",
                        "type": "object",
                        "title": "UpdateDhcpoptionspaceResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Dhcpoptionspace"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Dhcpoptionspace__ .",
                        "type": "string",
                        "title": "UpdateDhcpoptionspaceResponse"
                    }
                ]
            },
            "Filterfingerprint": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "The descriptive comment.",
                        "example": "Example comment"
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "fingerprint": {
                        "type": "array",
                        "description": "The list of DHCP Fingerprint objects.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of a DHCP Fingerprint Filter object.",
                        "example": "Example name"
                    }
                }
            },
            "ListFilterfingerprintResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Filterfingerprint__ objects.",
                        "type": "array",
                        "title": "ListFilterfingerprintResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Filterfingerprint"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Filterfingerprint__ objects.",
                        "type": "object",
                        "title": "ListFilterfingerprintResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Filterfingerprint"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateFilterfingerprintResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Filterfingerprint__ in object format.",
                        "type": "object",
                        "title": "CreateFilterfingerprintResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Filterfingerprint"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Filterfingerprint__.",
                        "type": "string",
                        "title": "CreateFilterfingerprintResponse"
                    }
                ]
            },
            "GetFilterfingerprintResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Filterfingerprint"
                    },
                    {
                        "description": "The response format to retrieve __Filterfingerprint__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetFilterfingerprintResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Filterfingerprint"
                            }
                        }
                    }
                ]
            },
            "UpdateFilterfingerprintResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Filterfingerprint__ in object format.",
                        "type": "object",
                        "title": "UpdateFilterfingerprintResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Filterfingerprint"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Filterfingerprint__ .",
                        "type": "string",
                        "title": "UpdateFilterfingerprintResponse"
                    }
                ]
            },
            "Filtermac": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "The descriptive comment of a DHCP MAC Filter object.",
                        "example": "Example comment"
                    },
                    "default_mac_address_expiration": {
                        "type": "integer",
                        "description": "The default MAC expiration time of the DHCP MAC Address Filter object. By default, the MAC address filter never expires; otherwise, it is the absolute interval when the MAC address filter expires. The maximum value can extend up to 4294967295 secs. The minimum value is 60 secs (1 min).",
                        "format": "int64",
                        "example": 1
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines if the DHCP Fingerprint object is disabled or not.",
                        "example": false
                    },
                    "enforce_expiration_times": {
                        "type": "boolean",
                        "description": "The flag to enforce MAC address expiration of the DHCP MAC Address Filter object.",
                        "example": false
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "lease_time": {
                        "type": "integer",
                        "description": "The length of time the DHCP server leases an IP address to a client. The lease time applies to hosts that meet the filter criteria.",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of a DHCP MAC Filter object.",
                        "example": "Example name"
                    },
                    "never_expires": {
                        "type": "boolean",
                        "description": "Determines if DHCP MAC Filter never expires or automatically expires.",
                        "example": false
                    },
                    "options": {
                        "type": "array",
                        "description": "An array of DHCP option dhcpoption structs that lists the DHCP options associated with the object.",
                        "enum": [
                            "dhcpoption"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/FiltermacOptions"
                        }
                    },
                    "reserved_for_infoblox": {
                        "type": "string",
                        "description": "This is reserved for writing comments related to the particular MAC address filter. The length of comment cannot exceed 1024 bytes.",
                        "example": "Example reserved_for_infoblox"
                    }
                }
            },
            "FiltermacOptions": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the DHCP option.",
                        "example": "Example name"
                    },
                    "num": {
                        "type": "integer",
                        "description": "The code of the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "vendor_class": {
                        "type": "string",
                        "description": "The name of the space this DHCP option is associated to.",
                        "example": "Example vendor_class"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the DHCP option",
                        "example": "Example value"
                    },
                    "use_option": {
                        "type": "boolean",
                        "description": "Only applies to special options that are displayed separately from other options and have a use flag. These options are: * routers * router-templates * domain-name-servers * domain-name * broadcast-address * broadcast-address-offset * dhcp-lease-time * dhcp6.name-servers",
                        "example": false
                    }
                }
            },
            "ListFiltermacResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Filtermac__ objects.",
                        "type": "array",
                        "title": "ListFiltermacResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Filtermac"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Filtermac__ objects.",
                        "type": "object",
                        "title": "ListFiltermacResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Filtermac"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateFiltermacResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Filtermac__ in object format.",
                        "type": "object",
                        "title": "CreateFiltermacResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Filtermac"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Filtermac__.",
                        "type": "string",
                        "title": "CreateFiltermacResponse"
                    }
                ]
            },
            "GetFiltermacResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Filtermac"
                    },
                    {
                        "description": "The response format to retrieve __Filtermac__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetFiltermacResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Filtermac"
                            }
                        }
                    }
                ]
            },
            "UpdateFiltermacResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Filtermac__ in object format.",
                        "type": "object",
                        "title": "UpdateFiltermacResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Filtermac"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Filtermac__ .",
                        "type": "string",
                        "title": "UpdateFiltermacResponse"
                    }
                ]
            },
            "Filternac": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "The descriptive comment of a DHCP NAC Filter object.",
                        "example": "Example comment"
                    },
                    "expression": {
                        "type": "string",
                        "description": "The conditional expression of a DHCP NAC Filter object.",
                        "example": "Example expression"
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "lease_time": {
                        "type": "integer",
                        "description": "The length of time the DHCP server leases an IP address to a client. The lease time applies to hosts that meet the filter criteria.",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of a DHCP NAC Filter object.",
                        "example": "Example name"
                    },
                    "options": {
                        "type": "array",
                        "description": "An array of DHCP option dhcpoption structs that lists the DHCP options associated with the object.",
                        "enum": [
                            "dhcpoption"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/FilternacOptions"
                        }
                    }
                }
            },
            "FilternacOptions": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the DHCP option.",
                        "example": "Example name"
                    },
                    "num": {
                        "type": "integer",
                        "description": "The code of the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "vendor_class": {
                        "type": "string",
                        "description": "The name of the space this DHCP option is associated to.",
                        "example": "Example vendor_class"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the DHCP option",
                        "example": "Example value"
                    },
                    "use_option": {
                        "type": "boolean",
                        "description": "Only applies to special options that are displayed separately from other options and have a use flag. These options are: * routers * router-templates * domain-name-servers * domain-name * broadcast-address * broadcast-address-offset * dhcp-lease-time * dhcp6.name-servers",
                        "example": false
                    }
                }
            },
            "ListFilternacResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Filternac__ objects.",
                        "type": "array",
                        "title": "ListFilternacResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Filternac"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Filternac__ objects.",
                        "type": "object",
                        "title": "ListFilternacResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Filternac"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateFilternacResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Filternac__ in object format.",
                        "type": "object",
                        "title": "CreateFilternacResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Filternac"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Filternac__.",
                        "type": "string",
                        "title": "CreateFilternacResponse"
                    }
                ]
            },
            "GetFilternacResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Filternac"
                    },
                    {
                        "description": "The response format to retrieve __Filternac__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetFilternacResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Filternac"
                            }
                        }
                    }
                ]
            },
            "UpdateFilternacResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Filternac__ in object format.",
                        "type": "object",
                        "title": "UpdateFilternacResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Filternac"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Filternac__ .",
                        "type": "string",
                        "title": "UpdateFilternacResponse"
                    }
                ]
            },
            "Filteroption": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "apply_as_class": {
                        "type": "boolean",
                        "description": "Determines if apply as class is enabled or not. If this flag is set to \"true\" the filter is treated as global DHCP class, e.g it is written to dhcpd config file even if it is not present in any DHCP range.",
                        "example": false
                    },
                    "bootfile": {
                        "type": "string",
                        "description": "A name of boot file of a DHCP filter option object.",
                        "example": "Example bootfile"
                    },
                    "bootserver": {
                        "type": "string",
                        "description": "Determines the boot server of a DHCP filter option object. You can specify the name and/or IP address of the boot server that host needs to boot.",
                        "example": "Example bootserver"
                    },
                    "comment": {
                        "type": "string",
                        "description": "The descriptive comment of a DHCP filter option object.",
                        "example": "Example comment"
                    },
                    "expression": {
                        "type": "string",
                        "description": "The conditional expression of a DHCP filter option object.",
                        "example": "Example expression"
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "lease_time": {
                        "type": "integer",
                        "description": "Determines the lease time of a DHCP filter option object.",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of a DHCP option filter object.",
                        "example": "Example name"
                    },
                    "next_server": {
                        "type": "string",
                        "description": "Determines the next server of a DHCP filter option object. You can specify the name and/or IP address of the next server that the host needs to boot.",
                        "example": "Example next_server"
                    },
                    "option_list": {
                        "type": "array",
                        "description": "An array of DHCP option dhcpoption structs that lists the DHCP options associated with the object.",
                        "enum": [
                            "dhcpoption"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/FilteroptionOptionList"
                        }
                    },
                    "option_space": {
                        "type": "string",
                        "description": "The option space of a DHCP filter option object.",
                        "example": "Example option_space"
                    },
                    "pxe_lease_time": {
                        "type": "integer",
                        "description": "Determines the PXE (Preboot Execution Environment) lease time of a DHCP filter option object. To specify the duration of time it takes a host to connect to a boot server, such as a TFTP server, and download the file it needs to boot.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "FilteroptionOptionList": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the DHCP option.",
                        "example": "Example name"
                    },
                    "num": {
                        "type": "integer",
                        "description": "The code of the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "vendor_class": {
                        "type": "string",
                        "description": "The name of the space this DHCP option is associated to.",
                        "example": "Example vendor_class"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the DHCP option",
                        "example": "Example value"
                    },
                    "use_option": {
                        "type": "boolean",
                        "description": "Only applies to special options that are displayed separately from other options and have a use flag. These options are: * routers * router-templates * domain-name-servers * domain-name * broadcast-address * broadcast-address-offset * dhcp-lease-time * dhcp6.name-servers",
                        "example": false
                    }
                }
            },
            "ListFilteroptionResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Filteroption__ objects.",
                        "type": "array",
                        "title": "ListFilteroptionResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Filteroption"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Filteroption__ objects.",
                        "type": "object",
                        "title": "ListFilteroptionResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Filteroption"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateFilteroptionResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Filteroption__ in object format.",
                        "type": "object",
                        "title": "CreateFilteroptionResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Filteroption"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Filteroption__.",
                        "type": "string",
                        "title": "CreateFilteroptionResponse"
                    }
                ]
            },
            "GetFilteroptionResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Filteroption"
                    },
                    {
                        "description": "The response format to retrieve __Filteroption__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetFilteroptionResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Filteroption"
                            }
                        }
                    }
                ]
            },
            "UpdateFilteroptionResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Filteroption__ in object format.",
                        "type": "object",
                        "title": "UpdateFilteroptionResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Filteroption"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Filteroption__ .",
                        "type": "string",
                        "title": "UpdateFilteroptionResponse"
                    }
                ]
            },
            "Filterrelayagent": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "circuit_id_name": {
                        "type": "string",
                        "description": "The circuit_id_name of a DHCP relay agent filter object. This filter identifies the circuit between the remote host and the relay agent. For example, the identifier can be the ingress interface number of the circuit access unit, perhaps concatenated with the unit ID number and slot number. Also, the circuit ID can be an ATM virtual circuit ID or cable data virtual circuit ID.",
                        "example": "Example circuit_id_name"
                    },
                    "circuit_id_substring_length": {
                        "type": "integer",
                        "description": "The circuit ID substring length.",
                        "format": "int64",
                        "example": 1
                    },
                    "circuit_id_substring_offset": {
                        "type": "integer",
                        "description": "The circuit ID substring offset.",
                        "format": "int64",
                        "example": 1
                    },
                    "comment": {
                        "type": "string",
                        "description": "A descriptive comment of a DHCP relay agent filter object.",
                        "example": "Example comment"
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "is_circuit_id": {
                        "type": "string",
                        "description": "The circuit ID matching rule of a DHCP relay agent filter object. The circuit_id value takes effect only if the value is \"MATCHES_VALUE\".",
                        "enum": [
                            "MATCHES_VALUE",
                            "NOT_SET",
                            "ANY"
                        ],
                        "example": "Example is_circuit_id"
                    },
                    "is_circuit_id_substring": {
                        "type": "boolean",
                        "description": "Determines if the substring of circuit ID, instead of the full circuit ID, is matched.",
                        "example": false
                    },
                    "is_remote_id": {
                        "type": "string",
                        "description": "The remote ID matching rule of a DHCP relay agent filter object. The remote_id value takes effect only if the value is Matches_Value.",
                        "enum": [
                            "MATCHES_VALUE",
                            "NOT_SET",
                            "ANY"
                        ],
                        "example": "Example is_remote_id"
                    },
                    "is_remote_id_substring": {
                        "type": "boolean",
                        "description": "Determines if the substring of remote ID, instead of the full remote ID, is matched.",
                        "example": false
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of a DHCP relay agent filter object.",
                        "example": "Example name"
                    },
                    "remote_id_name": {
                        "type": "string",
                        "description": "The remote ID name attribute of a relay agent filter object. This filter identifies the remote host. The remote ID name can represent many different things such as the caller ID telephone number for a dial-up connection, a user name for logging in to the ISP, a modem ID, etc. When the remote ID name is defined on the relay agent, the DHCP server will have a trusted relationship to identify the remote host. The remote ID name is considered as a trusted identifier.",
                        "example": "Example remote_id_name"
                    },
                    "remote_id_substring_length": {
                        "type": "integer",
                        "description": "The remote ID substring length.",
                        "format": "int64",
                        "example": 1
                    },
                    "remote_id_substring_offset": {
                        "type": "integer",
                        "description": "The remote ID substring offset.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "ListFilterrelayagentResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Filterrelayagent__ objects.",
                        "type": "array",
                        "title": "ListFilterrelayagentResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Filterrelayagent"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Filterrelayagent__ objects.",
                        "type": "object",
                        "title": "ListFilterrelayagentResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Filterrelayagent"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateFilterrelayagentResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Filterrelayagent__ in object format.",
                        "type": "object",
                        "title": "CreateFilterrelayagentResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Filterrelayagent"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Filterrelayagent__.",
                        "type": "string",
                        "title": "CreateFilterrelayagentResponse"
                    }
                ]
            },
            "GetFilterrelayagentResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Filterrelayagent"
                    },
                    {
                        "description": "The response format to retrieve __Filterrelayagent__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetFilterrelayagentResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Filterrelayagent"
                            }
                        }
                    }
                ]
            },
            "UpdateFilterrelayagentResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Filterrelayagent__ in object format.",
                        "type": "object",
                        "title": "UpdateFilterrelayagentResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Filterrelayagent"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Filterrelayagent__ .",
                        "type": "string",
                        "title": "UpdateFilterrelayagentResponse"
                    }
                ]
            },
            "Fingerprint": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the Fingerprint; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "device_class": {
                        "type": "string",
                        "description": "A class of DHCP Fingerprint object; maximum 256 characters.",
                        "example": "Example device_class"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines if the DHCP Fingerprint object is disabled or not.",
                        "example": false
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "ipv6_option_sequence": {
                        "type": "array",
                        "description": "A list (comma separated list) of IPv6 option number sequences of the device or operating system.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the DHCP Fingerprint object.",
                        "example": "Example name"
                    },
                    "option_sequence": {
                        "type": "array",
                        "description": "A list (comma separated list) of IPv4 option number sequences of the device or operating system.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the DHCP Fingerprint object.",
                        "enum": [
                            "STANDARD",
                            "CUSTOM"
                        ],
                        "example": "Example type"
                    },
                    "vendor_id": {
                        "type": "array",
                        "description": "A list of vendor IDs of the device or operating system.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ListFingerprintResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Fingerprint__ objects.",
                        "type": "array",
                        "title": "ListFingerprintResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Fingerprint"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Fingerprint__ objects.",
                        "type": "object",
                        "title": "ListFingerprintResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Fingerprint"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateFingerprintResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Fingerprint__ in object format.",
                        "type": "object",
                        "title": "CreateFingerprintResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Fingerprint"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Fingerprint__.",
                        "type": "string",
                        "title": "CreateFingerprintResponse"
                    }
                ]
            },
            "GetFingerprintResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Fingerprint"
                    },
                    {
                        "description": "The response format to retrieve __Fingerprint__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetFingerprintResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Fingerprint"
                            }
                        }
                    }
                ]
            },
            "UpdateFingerprintResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Fingerprint__ in object format.",
                        "type": "object",
                        "title": "UpdateFingerprintResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Fingerprint"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Fingerprint__ .",
                        "type": "string",
                        "title": "UpdateFingerprintResponse"
                    }
                ]
            },
            "Fixedaddress": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "agent_circuit_id": {
                        "type": "string",
                        "description": "The agent circuit ID for the fixed address.",
                        "example": "Example agent_circuit_id"
                    },
                    "agent_remote_id": {
                        "type": "string",
                        "description": "The agent remote ID for the fixed address.",
                        "example": "Example agent_remote_id"
                    },
                    "allow_telnet": {
                        "type": "boolean",
                        "description": "This field controls whether the credential is used for both the Telnet and SSH credentials. If set to False, the credential is used only for SSH.",
                        "example": false
                    },
                    "always_update_dns": {
                        "type": "boolean",
                        "description": "This field controls whether only the DHCP server is allowed to update DNS, regardless of the DHCP client requests.",
                        "example": false
                    },
                    "bootfile": {
                        "type": "string",
                        "description": "The bootfile name for the fixed address. You can configure the DHCP server to support clients that use the boot file name option in their DHCPREQUEST messages.",
                        "example": "Example bootfile"
                    },
                    "bootserver": {
                        "type": "string",
                        "description": "The bootserver address for the fixed address. You can specify the name and/or IP address of the boot server that the host needs to boot. The boot server IPv4 Address or name in FQDN format.",
                        "example": "Example bootserver"
                    },
                    "cli_credentials": {
                        "type": "array",
                        "description": "The CLI credentials for the fixed address.",
                        "enum": [
                            "discovery:clicredential"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/FixedaddressCliCredentials"
                        }
                    },
                    "client_identifier_prepend_zero": {
                        "type": "boolean",
                        "description": "This field controls whether there is a prepend for the dhcp-client-identifier of a fixed address.",
                        "example": false
                    },
                    "cloud_info": {
                        "$ref": "#/components/schemas/FixedaddressCloudInfo"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the fixed address; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "ddns_domainname": {
                        "type": "string",
                        "description": "The dynamic DNS domain name the appliance uses specifically for DDNS updates for this fixed address.",
                        "example": "Example ddns_domainname"
                    },
                    "ddns_hostname": {
                        "type": "string",
                        "description": "The DDNS host name for this fixed address.",
                        "example": "Example ddns_hostname"
                    },
                    "deny_bootp": {
                        "type": "boolean",
                        "description": "If set to true, BOOTP settings are disabled and BOOTP requests will be denied.",
                        "example": false
                    },
                    "device_description": {
                        "type": "string",
                        "description": "The description of the device.",
                        "example": "Example device_description"
                    },
                    "device_location": {
                        "type": "string",
                        "description": "The location of the device.",
                        "example": "Example device_location"
                    },
                    "device_type": {
                        "type": "string",
                        "description": "The type of the device.",
                        "example": "Example device_type"
                    },
                    "device_vendor": {
                        "type": "string",
                        "description": "The vendor of the device.",
                        "example": "Example device_vendor"
                    },
                    "dhcp_client_identifier": {
                        "type": "string",
                        "description": "The DHCP client ID for the fixed address.",
                        "example": "Example dhcp_client_identifier"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines whether a fixed address is disabled or not. When this is set to False, the fixed address is enabled.",
                        "example": false
                    },
                    "disable_discovery": {
                        "type": "boolean",
                        "description": "Determines if the discovery for this fixed address is disabled or not. False means that the discovery is enabled.",
                        "example": false
                    },
                    "discover_now_status": {
                        "type": "string",
                        "description": "The discovery status of this fixed address.",
                        "enum": [
                            "NONE",
                            "PENDING",
                            "RUNNING",
                            "COMPLETE",
                            "FAILED"
                        ],
                        "readOnly": true,
                        "example": "Example discover_now_status"
                    },
                    "discovered_data": {
                        "$ref": "#/components/schemas/FixedaddressDiscoveredData"
                    },
                    "enable_ddns": {
                        "type": "boolean",
                        "description": "The dynamic DNS updates flag of a DHCP Fixed Address object. If set to True, the DHCP server sends DDNS updates to DNS servers in the same Grid, and to external DNS servers.",
                        "example": false
                    },
                    "enable_immediate_discovery": {
                        "type": "boolean",
                        "description": "Determines if the discovery for the fixed address should be immediately enabled.",
                        "writeOnly": true,
                        "example": false
                    },
                    "enable_pxe_lease_time": {
                        "type": "boolean",
                        "description": "Set this to True if you want the DHCP server to use a different lease time for PXE clients.",
                        "example": false
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "ignore_dhcp_option_list_request": {
                        "type": "boolean",
                        "description": "If this field is set to False, the appliance returns all DHCP options the client is eligible to receive, rather than only the list of options the client has requested.",
                        "example": false
                    },
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the fixed address.",
                        "example": "Example ipv4addr"
                    },
                    "is_invalid_mac": {
                        "type": "boolean",
                        "description": "This flag reflects whether the MAC address for this fixed address is invalid.",
                        "readOnly": true,
                        "example": false
                    },
                    "logic_filter_rules": {
                        "type": "array",
                        "description": "This field contains the logic filters to be applied on the this fixed address. This list corresponds to the match rules that are written to the dhcpd configuration file.",
                        "enum": [
                            "logicfilterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/FixedaddressLogicFilterRules"
                        }
                    },
                    "mac": {
                        "type": "string",
                        "description": "The MAC address value for this fixed address.",
                        "example": "Example mac"
                    },
                    "match_client": {
                        "type": "string",
                        "description": "The match_client value for this fixed address. Valid values are: \"MAC_ADDRESS\": The fixed IP address is leased to the matching MAC address. \"CLIENT_ID\": The fixed IP address is leased to the matching DHCP client identifier. \"RESERVED\": The fixed IP address is reserved for later use with a MAC address that only has zeros. \"CIRCUIT_ID\": The fixed IP address is leased to the DHCP client with a matching circuit ID. Note that the \"agent_circuit_id\" field must be set in this case. \"REMOTE_ID\": The fixed IP address is leased to the DHCP client with a matching remote ID. Note that the \"agent_remote_id\" field must be set in this case.",
                        "enum": [
                            "MAC_ADDRESS",
                            "CLIENT_ID",
                            "RESERVED",
                            "CIRCUIT_ID",
                            "REMOTE_ID"
                        ],
                        "example": "Example match_client"
                    },
                    "ms_ad_user_data": {
                        "$ref": "#/components/schemas/FixedaddressMsAdUserData"
                    },
                    "ms_options": {
                        "type": "array",
                        "description": "This field contains the Microsoft DHCP options for this fixed address.",
                        "enum": [
                            "msdhcpoption"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/FixedaddressMsOptions"
                        }
                    },
                    "ms_server": {
                        "$ref": "#/components/schemas/FixedaddressMsServer"
                    },
                    "name": {
                        "type": "string",
                        "description": "This field contains the name of this fixed address.",
                        "example": "Example name"
                    },
                    "network": {
                        "type": "string",
                        "description": "The network to which this fixed address belongs, in IPv4 Address/CIDR format.",
                        "example": "Example network"
                    },
                    "network_view": {
                        "type": "string",
                        "description": "The name of the network view in which this fixed address resides.",
                        "example": "Example network_view"
                    },
                    "nextserver": {
                        "type": "string",
                        "description": "The name in FQDN and/or IPv4 Address format of the next server that the host needs to boot.",
                        "example": "Example nextserver"
                    },
                    "options": {
                        "type": "array",
                        "description": "An array of DHCP option dhcpoption structs that lists the DHCP options associated with the object.",
                        "enum": [
                            "dhcpoption"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/FixedaddressOptions"
                        }
                    },
                    "pxe_lease_time": {
                        "type": "integer",
                        "description": "The PXE lease time value for a DHCP Fixed Address object. Some hosts use PXE (Preboot Execution Environment) to boot remotely from a server. To better manage your IP resources, set a different lease time for PXE boot requests. You can configure the DHCP server to allocate an IP address with a shorter lease time to hosts that send PXE boot requests, so IP addresses are not leased longer than necessary. A 32-bit unsigned integer that represents the duration, in seconds, for which the update is cached. Zero indicates that the update is not cached.",
                        "format": "int64",
                        "example": 1
                    },
                    "reserved_interface": {
                        "type": "string",
                        "description": "The ref to the reserved interface to which the device belongs.",
                        "example": "Example reserved_interface"
                    },
                    "restart_if_needed": {
                        "type": "boolean",
                        "description": "Restarts the member service. The restart_if_needed flag can trigger a restart on DHCP services only when it is enabled on CP member.",
                        "writeOnly": true,
                        "example": false
                    },
                    "snmp3_credential": {
                        "$ref": "#/components/schemas/FixedaddressSnmp3Credential"
                    },
                    "snmp_credential": {
                        "$ref": "#/components/schemas/FixedaddressSnmpCredential"
                    },
                    "template": {
                        "type": "string",
                        "description": "If set on creation, the fixed address will be created according to the values specified in the named template.",
                        "writeOnly": true,
                        "example": "Example template"
                    },
                    "use_bootfile": {
                        "type": "boolean",
                        "description": "Use flag for: bootfile",
                        "example": false
                    },
                    "use_bootserver": {
                        "type": "boolean",
                        "description": "Use flag for: bootserver",
                        "example": false
                    },
                    "use_cli_credentials": {
                        "type": "boolean",
                        "description": "If set to true, the CLI credential will override member-level settings.",
                        "example": false
                    },
                    "use_ddns_domainname": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_domainname",
                        "example": false
                    },
                    "use_deny_bootp": {
                        "type": "boolean",
                        "description": "Use flag for: deny_bootp",
                        "example": false
                    },
                    "use_enable_ddns": {
                        "type": "boolean",
                        "description": "Use flag for: enable_ddns",
                        "example": false
                    },
                    "use_ignore_dhcp_option_list_request": {
                        "type": "boolean",
                        "description": "Use flag for: ignore_dhcp_option_list_request",
                        "example": false
                    },
                    "use_logic_filter_rules": {
                        "type": "boolean",
                        "description": "Use flag for: logic_filter_rules",
                        "example": false
                    },
                    "use_ms_options": {
                        "type": "boolean",
                        "description": "Use flag for: ms_options",
                        "example": false
                    },
                    "use_nextserver": {
                        "type": "boolean",
                        "description": "Use flag for: nextserver",
                        "example": false
                    },
                    "use_options": {
                        "type": "boolean",
                        "description": "Use flag for: options",
                        "example": false
                    },
                    "use_pxe_lease_time": {
                        "type": "boolean",
                        "description": "Use flag for: pxe_lease_time",
                        "example": false
                    },
                    "use_snmp3_credential": {
                        "type": "boolean",
                        "description": "Determines if the SNMPv3 credential should be used for the fixed address.",
                        "example": false
                    },
                    "use_snmp_credential": {
                        "type": "boolean",
                        "description": "If set to true, the SNMP credential will override member-level settings.",
                        "example": false
                    }
                }
            },
            "FixedaddressCliCredentials": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "string",
                        "description": "The CLI user name.",
                        "example": "Example user"
                    },
                    "password": {
                        "type": "string",
                        "description": "The CLI password.",
                        "writeOnly": true,
                        "example": "Example password"
                    },
                    "credential_type": {
                        "type": "string",
                        "description": "The type of the credential.",
                        "enum": [
                            "SSH",
                            "TELNET",
                            "ENABLE_SSH",
                            "ENABLE_TELNET"
                        ],
                        "example": "Example credential_type"
                    },
                    "comment": {
                        "type": "string",
                        "description": "The commment for the credential.",
                        "example": "Example comment"
                    },
                    "id": {
                        "type": "integer",
                        "description": "The Credentials ID.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "credential_group": {
                        "type": "string",
                        "description": "Group for the CLI credential.",
                        "example": "Example credential_group"
                    }
                }
            },
            "FixedaddressCloudInfo": {
                "type": "object",
                "properties": {
                    "delegated_member": {
                        "description": "The Cloud Platform Appliance to which authority of the object is delegated.",
                        "enum": [
                            "dhcpmember"
                        ],
                        "$ref": "#/components/schemas/FixedaddresscloudinfoDelegatedMember"
                    },
                    "delegated_scope": {
                        "type": "string",
                        "description": "Indicates the scope of delegation for the object. This can be one of the following: NONE (outside any delegation), ROOT (the delegation point), SUBTREE (within the scope of a delegation), RECLAIMING (within the scope of a delegation being reclaimed, either as the delegation point or in the subtree).",
                        "enum": [
                            "NONE",
                            "ROOT",
                            "SUBTREE",
                            "RECLAIMING"
                        ],
                        "readOnly": true,
                        "example": "Example delegated_scope"
                    },
                    "delegated_root": {
                        "type": "string",
                        "description": "Indicates the root of the delegation if delegated_scope is SUBTREE or RECLAIMING. This is not set otherwise.",
                        "readOnly": true,
                        "example": "Example delegated_root"
                    },
                    "owned_by_adaptor": {
                        "type": "boolean",
                        "description": "Determines whether the object was created by the cloud adapter or not.",
                        "readOnly": true,
                        "example": false
                    },
                    "usage": {
                        "type": "string",
                        "description": "Indicates the cloud origin of the object.",
                        "enum": [
                            "NONE",
                            "ADAPTER",
                            "USED_BY",
                            "DELEGATED"
                        ],
                        "readOnly": true,
                        "example": "Example usage"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "Reference to the tenant object associated with the object, if any.",
                        "readOnly": true,
                        "example": "Example tenant"
                    },
                    "mgmt_platform": {
                        "type": "string",
                        "description": "Indicates the specified cloud management platform.",
                        "readOnly": true,
                        "example": "Example mgmt_platform"
                    },
                    "authority_type": {
                        "type": "string",
                        "description": "Type of authority over the object.",
                        "enum": [
                            "NONE",
                            "GM",
                            "CP"
                        ],
                        "readOnly": true,
                        "example": "Example authority_type"
                    }
                }
            },
            "FixedaddresscloudinfoDelegatedMember": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example ipv4addr"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid Member.",
                        "example": "Example ipv6addr"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid member name",
                        "example": "Example name"
                    }
                }
            },
            "FixedaddressDiscoveredData": {
                "type": "object",
                "properties": {
                    "device_model": {
                        "type": "string",
                        "description": "The model name of the end device in the vendor terminology.",
                        "readOnly": true,
                        "example": "Example device_model"
                    },
                    "device_port_name": {
                        "type": "string",
                        "description": "The system name of the interface associated with the discovered IP address.",
                        "readOnly": true,
                        "example": "Example device_port_name"
                    },
                    "device_port_type": {
                        "type": "string",
                        "description": "The hardware type of the interface associated with the discovered IP address.",
                        "readOnly": true,
                        "example": "Example device_port_type"
                    },
                    "device_type": {
                        "type": "string",
                        "description": "The type of end host in vendor terminology.",
                        "readOnly": true,
                        "example": "Example device_type"
                    },
                    "device_vendor": {
                        "type": "string",
                        "description": "The vendor name of the end host.",
                        "readOnly": true,
                        "example": "Example device_vendor"
                    },
                    "discovered_name": {
                        "type": "string",
                        "description": "The name of the network device associated with the discovered IP address.",
                        "readOnly": true,
                        "example": "Example discovered_name"
                    },
                    "discoverer": {
                        "type": "string",
                        "description": "Specifies whether the IP address was discovered by a NetMRI or NIOS discovery process.",
                        "readOnly": true,
                        "example": "Example discoverer"
                    },
                    "duid": {
                        "type": "string",
                        "description": "For IPv6 address only. The DHCP unique identifier of the discovered host. This is an optional field, and data might not be included.",
                        "readOnly": true,
                        "example": "Example duid"
                    },
                    "first_discovered": {
                        "type": "integer",
                        "description": "The date and time the IP address was first discovered in Epoch seconds format.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "iprg_no": {
                        "type": "integer",
                        "description": "The port redundant group number.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "iprg_state": {
                        "type": "string",
                        "description": "The status for the IP address within port redundant group.",
                        "enum": [
                            "VIP",
                            "ACTIVE",
                            "STANDBY",
                            "NEGOTIATION"
                        ],
                        "readOnly": true,
                        "example": "Example iprg_state"
                    },
                    "iprg_type": {
                        "type": "string",
                        "description": "The port redundant group type.",
                        "enum": [
                            "HSRP",
                            "VRRP"
                        ],
                        "readOnly": true,
                        "example": "Example iprg_type"
                    },
                    "last_discovered": {
                        "type": "integer",
                        "description": "The date and time the IP address was last discovered in Epoch seconds format.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "mac_address": {
                        "type": "string",
                        "description": "The discovered MAC address for the host. This is the unique identifier of a network device. The discovery acquires the MAC address for hosts that are located on the same network as the Grid member that is running the discovery. This can also be the MAC address of a virtual entity on a specified vSphere server.",
                        "readOnly": true,
                        "example": "Example mac_address"
                    },
                    "mgmt_ip_address": {
                        "type": "string",
                        "description": "The management IP address of the end host that has more than one IP.",
                        "readOnly": true,
                        "example": "Example mgmt_ip_address"
                    },
                    "netbios_name": {
                        "type": "string",
                        "description": "The name returned in the NetBIOS reply or the name you manually register for the discovered host.",
                        "readOnly": true,
                        "example": "Example netbios_name"
                    },
                    "network_component_description": {
                        "type": "string",
                        "description": "A textual description of the switch that is connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_description"
                    },
                    "network_component_ip": {
                        "type": "string",
                        "description": "The IPv4 Address or IPv6 Address of the switch that is connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_ip"
                    },
                    "network_component_model": {
                        "type": "string",
                        "description": "Model name of the switch port connected to the end host in vendor terminology.",
                        "readOnly": true,
                        "example": "Example network_component_model"
                    },
                    "network_component_name": {
                        "type": "string",
                        "description": "If a reverse lookup was successful for the IP address associated with this switch, the host name is displayed in this field.",
                        "readOnly": true,
                        "example": "Example network_component_name"
                    },
                    "network_component_port_description": {
                        "type": "string",
                        "description": "A textual description of the switch port that is connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_port_description"
                    },
                    "network_component_port_name": {
                        "type": "string",
                        "description": "The name of the switch port connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_port_name"
                    },
                    "network_component_port_number": {
                        "type": "string",
                        "description": "The number of the switch port connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_port_number"
                    },
                    "network_component_type": {
                        "type": "string",
                        "description": "Identifies the switch that is connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_type"
                    },
                    "network_component_vendor": {
                        "type": "string",
                        "description": "The vendor name of the switch port connected to the end host.",
                        "readOnly": true,
                        "example": "Example network_component_vendor"
                    },
                    "open_ports": {
                        "type": "string",
                        "description": "The list of opened ports on the IP address, represented as: \"TCP: 21,22,23 UDP: 137,139\". Limited to max total 1000 ports.",
                        "readOnly": true,
                        "example": "Example open_ports"
                    },
                    "os": {
                        "type": "string",
                        "description": "The operating system of the detected host or virtual entity. The OS can be one of the following: * Microsoft for all discovered hosts that have a non-null value in the MAC addresses using the NetBIOS discovery method. * A value that a TCP discovery returns. * The OS of a virtual entity on a vSphere server.",
                        "readOnly": true,
                        "example": "Example os"
                    },
                    "port_duplex": {
                        "type": "string",
                        "description": "The negotiated or operational duplex setting of the switch port connected to the end device.",
                        "readOnly": true,
                        "example": "Example port_duplex"
                    },
                    "port_link_status": {
                        "type": "string",
                        "description": "The link status of the switch port connected to the end device. Indicates whether it is connected.",
                        "readOnly": true,
                        "example": "Example port_link_status"
                    },
                    "port_speed": {
                        "type": "string",
                        "description": "The interface speed, in Mbps, of the switch port.",
                        "readOnly": true,
                        "example": "Example port_speed"
                    },
                    "port_status": {
                        "type": "string",
                        "description": "The operational status of the switch port. Indicates whether the port is up or down.",
                        "readOnly": true,
                        "example": "Example port_status"
                    },
                    "port_type": {
                        "type": "string",
                        "description": "The type of switch port.",
                        "readOnly": true,
                        "example": "Example port_type"
                    },
                    "port_vlan_description": {
                        "type": "string",
                        "description": "The description of the VLAN of the switch port that is connected to the end device.",
                        "readOnly": true,
                        "example": "Example port_vlan_description"
                    },
                    "port_vlan_name": {
                        "type": "string",
                        "description": "The name of the VLAN of the switch port.",
                        "readOnly": true,
                        "example": "Example port_vlan_name"
                    },
                    "port_vlan_number": {
                        "type": "string",
                        "description": "The ID of the VLAN of the switch port.",
                        "readOnly": true,
                        "example": "Example port_vlan_number"
                    },
                    "v_adapter": {
                        "type": "string",
                        "description": "The name of the physical network adapter through which the virtual entity is connected to the appliance.",
                        "readOnly": true,
                        "example": "Example v_adapter"
                    },
                    "v_cluster": {
                        "type": "string",
                        "description": "The name of the VMware cluster to which the virtual entity belongs.",
                        "readOnly": true,
                        "example": "Example v_cluster"
                    },
                    "v_datacenter": {
                        "type": "string",
                        "description": "The name of the vSphere datacenter or container to which the virtual entity belongs.",
                        "readOnly": true,
                        "example": "Example v_datacenter"
                    },
                    "v_entity_name": {
                        "type": "string",
                        "description": "The name of the virtual entity.",
                        "readOnly": true,
                        "example": "Example v_entity_name"
                    },
                    "v_entity_type": {
                        "type": "string",
                        "description": "The virtual entity type. This can be blank or one of the following: Virtual Machine, Virtual Host, or Virtual Center. Virtual Center represents a VMware vCenter server.",
                        "readOnly": true,
                        "example": "Example v_entity_type"
                    },
                    "v_host": {
                        "type": "string",
                        "description": "The name of the VMware server on which the virtual entity was discovered.",
                        "readOnly": true,
                        "example": "Example v_host"
                    },
                    "v_switch": {
                        "type": "string",
                        "description": "The name of the switch to which the virtual entity is connected.",
                        "readOnly": true,
                        "example": "Example v_switch"
                    },
                    "vmi_name": {
                        "type": "string",
                        "description": "Name of the virtual machine.",
                        "readOnly": true,
                        "example": "Example vmi_name"
                    },
                    "vmi_id": {
                        "type": "string",
                        "description": "ID of the virtual machine.",
                        "readOnly": true,
                        "example": "Example vmi_id"
                    },
                    "vlan_port_group": {
                        "type": "string",
                        "description": "Port group which the virtual machine belongs to.",
                        "readOnly": true,
                        "example": "Example vlan_port_group"
                    },
                    "vswitch_name": {
                        "type": "string",
                        "description": "Name of the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_name"
                    },
                    "vswitch_id": {
                        "type": "string",
                        "description": "ID of the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_id"
                    },
                    "vswitch_type": {
                        "type": "string",
                        "description": "Type of the virtual switch: standard or distributed.",
                        "enum": [
                            "Unknown",
                            "Standard",
                            "Distributed"
                        ],
                        "readOnly": true,
                        "example": "Example vswitch_type"
                    },
                    "vswitch_ipv6_enabled": {
                        "type": "boolean",
                        "description": "Indicates the virtual switch has IPV6 enabled.",
                        "readOnly": true,
                        "example": false
                    },
                    "vport_name": {
                        "type": "string",
                        "description": "Name of the network adapter on the virtual switch connected with the virtual machine.",
                        "readOnly": true,
                        "example": "Example vport_name"
                    },
                    "vport_mac_address": {
                        "type": "string",
                        "description": "MAC address of the network adapter on the virtual switch where the virtual machine connected to.",
                        "readOnly": true,
                        "example": "Example vport_mac_address"
                    },
                    "vport_link_status": {
                        "type": "string",
                        "description": "Link status of the network adapter on the virtual switch where the virtual machine connected to.",
                        "readOnly": true,
                        "example": "Example vport_link_status"
                    },
                    "vport_conf_speed": {
                        "type": "string",
                        "description": "Configured speed of the network adapter on the virtual switch where the virtual machine connected to. Unit is kb.",
                        "readOnly": true,
                        "example": "Example vport_conf_speed"
                    },
                    "vport_conf_mode": {
                        "type": "string",
                        "description": "Configured mode of the network adapter on the virtual switch where the virtual machine connected to.",
                        "enum": [
                            "Unknown",
                            "Full-duplex",
                            "Half-duplex"
                        ],
                        "readOnly": true,
                        "example": "Example vport_conf_mode"
                    },
                    "vport_speed": {
                        "type": "string",
                        "description": "Actual speed of the network adapter on the virtual switch where the virtual machine connected to. Unit is kb.",
                        "readOnly": true,
                        "example": "Example vport_speed"
                    },
                    "vport_mode": {
                        "type": "string",
                        "description": "Actual mode of the network adapter on the virtual switch where the virtual machine connected to.",
                        "enum": [
                            "Unknown",
                            "Full-duplex",
                            "Half-duplex"
                        ],
                        "readOnly": true,
                        "example": "Example vport_mode"
                    },
                    "vswitch_segment_type": {
                        "type": "string",
                        "description": "Type of the network segment on which the current virtual machine/vport connected to.",
                        "readOnly": true,
                        "example": "Example vswitch_segment_type"
                    },
                    "vswitch_segment_name": {
                        "type": "string",
                        "description": "Name of the network segment on which the current virtual machine/vport connected to.",
                        "readOnly": true,
                        "example": "Example vswitch_segment_name"
                    },
                    "vswitch_segment_id": {
                        "type": "string",
                        "description": "ID of the network segment on which the current virtual machine/vport connected to.",
                        "readOnly": true,
                        "example": "Example vswitch_segment_id"
                    },
                    "vswitch_segment_port_group": {
                        "type": "string",
                        "description": "Port group of the network segment on which the current virtual machine/vport connected to.",
                        "readOnly": true,
                        "example": "Example vswitch_segment_port_group"
                    },
                    "vswitch_available_ports_count": {
                        "type": "integer",
                        "description": "Numer of available ports reported by the virtual switch on which the virtual machine/vport connected to.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "vswitch_tep_type": {
                        "type": "string",
                        "description": "Type of virtual tunnel endpoint (VTEP) in the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_type"
                    },
                    "vswitch_tep_ip": {
                        "type": "string",
                        "description": "IP address of the virtual tunnel endpoint (VTEP) in the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_ip"
                    },
                    "vswitch_tep_port_group": {
                        "type": "string",
                        "description": "Port group of the virtual tunnel endpoint (VTEP) in the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_port_group"
                    },
                    "vswitch_tep_vlan": {
                        "type": "string",
                        "description": "VLAN of the virtual tunnel endpoint (VTEP) in the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_vlan"
                    },
                    "vswitch_tep_dhcp_server": {
                        "type": "string",
                        "description": "DHCP server of the virtual tunnel endpoint (VTEP) in the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_dhcp_server"
                    },
                    "vswitch_tep_multicast": {
                        "type": "string",
                        "description": "Muticast address of the virtual tunnel endpoint (VTEP) in the virtual swtich.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_multicast"
                    },
                    "vmhost_ip_address": {
                        "type": "string",
                        "description": "IP address of the physical node on which the virtual machine is hosted.",
                        "readOnly": true,
                        "example": "Example vmhost_ip_address"
                    },
                    "vmhost_name": {
                        "type": "string",
                        "description": "Name of the physical node on which the virtual machine is hosted.",
                        "readOnly": true,
                        "example": "Example vmhost_name"
                    },
                    "vmhost_mac_address": {
                        "type": "string",
                        "description": "MAC address of the physical node on which the virtual machine is hosted.",
                        "readOnly": true,
                        "example": "Example vmhost_mac_address"
                    },
                    "vmhost_subnet_cidr": {
                        "type": "integer",
                        "description": "CIDR subnet of the physical node on which the virtual machine is hosted.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "vmhost_nic_names": {
                        "type": "string",
                        "description": "List of all physical port names used by the virtual switch on the physical node on which the virtual machine is hosted. Represented as: \"eth1,eth2,eth3\".",
                        "readOnly": true,
                        "example": "Example vmhost_nic_names"
                    },
                    "vmi_tenant_id": {
                        "type": "string",
                        "description": "ID of the tenant which virtual machine belongs to.",
                        "readOnly": true,
                        "example": "Example vmi_tenant_id"
                    },
                    "cmp_type": {
                        "type": "string",
                        "description": "If the IP is coming from a Cloud environment, the Cloud Management Platform type.",
                        "readOnly": true,
                        "example": "Example cmp_type"
                    },
                    "vmi_ip_type": {
                        "type": "string",
                        "description": "Discovered IP address type.",
                        "readOnly": true,
                        "example": "Example vmi_ip_type"
                    },
                    "vmi_private_address": {
                        "type": "string",
                        "description": "Private IP address of the virtual machine.",
                        "readOnly": true,
                        "example": "Example vmi_private_address"
                    },
                    "vmi_is_public_address": {
                        "type": "boolean",
                        "description": "Indicates whether the IP address is a public address.",
                        "readOnly": true,
                        "example": false
                    },
                    "cisco_ise_ssid": {
                        "type": "string",
                        "description": "The Cisco ISE SSID.",
                        "readOnly": true,
                        "example": "Example cisco_ise_ssid"
                    },
                    "cisco_ise_endpoint_profile": {
                        "type": "string",
                        "description": "The Endpoint Profile created in Cisco ISE.",
                        "readOnly": true,
                        "example": "Example cisco_ise_endpoint_profile"
                    },
                    "cisco_ise_session_state": {
                        "type": "string",
                        "description": "The Cisco ISE connection session state.",
                        "enum": [
                            "AUTHENTICATED",
                            "AUTHENTICATING",
                            "DISCONNECTED",
                            "POSTURED",
                            "STARTED"
                        ],
                        "readOnly": true,
                        "example": "Example cisco_ise_session_state"
                    },
                    "cisco_ise_security_group": {
                        "type": "string",
                        "description": "The Cisco ISE security group name.",
                        "readOnly": true,
                        "example": "Example cisco_ise_security_group"
                    },
                    "task_name": {
                        "type": "string",
                        "description": "The name of the discovery task.",
                        "readOnly": true,
                        "example": "Example task_name"
                    },
                    "network_component_location": {
                        "type": "string",
                        "description": "Location of the network component on which the IP address was discovered.",
                        "readOnly": true,
                        "example": "Example network_component_location"
                    },
                    "network_component_contact": {
                        "type": "string",
                        "description": "Contact information from the network component on which the IP address was discovered.",
                        "readOnly": true,
                        "example": "Example network_component_contact"
                    },
                    "device_location": {
                        "type": "string",
                        "description": "Location of device on which the IP address was discovered.",
                        "readOnly": true,
                        "example": "Example device_location"
                    },
                    "device_contact": {
                        "type": "string",
                        "description": "Contact information from device on which the IP address was discovered.",
                        "readOnly": true,
                        "example": "Example device_contact"
                    },
                    "ap_name": {
                        "type": "string",
                        "description": "Discovered name of Wireless Access Point.",
                        "readOnly": true,
                        "example": "Example ap_name"
                    },
                    "ap_ip_address": {
                        "type": "string",
                        "description": "Discovered IP address of Wireless Access Point.",
                        "readOnly": true,
                        "example": "Example ap_ip_address"
                    },
                    "ap_ssid": {
                        "type": "string",
                        "description": "Service set identifier (SSID) associated with Wireless Access Point.",
                        "readOnly": true,
                        "example": "Example ap_ssid"
                    },
                    "bridge_domain": {
                        "type": "string",
                        "description": "Discovered bridge domain.",
                        "readOnly": true,
                        "example": "Example bridge_domain"
                    },
                    "endpoint_groups": {
                        "type": "string",
                        "description": "A comma-separated list of the discovered endpoint groups.",
                        "readOnly": true,
                        "example": "Example endpoint_groups"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "Discovered tenant.",
                        "readOnly": true,
                        "example": "Example tenant"
                    },
                    "vrf_name": {
                        "type": "string",
                        "description": "The name of the VRF.",
                        "readOnly": true,
                        "example": "Example vrf_name"
                    },
                    "vrf_description": {
                        "type": "string",
                        "description": "Description of the VRF.",
                        "readOnly": true,
                        "example": "Example vrf_description"
                    },
                    "vrf_rd": {
                        "type": "string",
                        "description": "Route distinguisher of the VRF.",
                        "readOnly": true,
                        "example": "Example vrf_rd"
                    },
                    "bgp_as": {
                        "type": "integer",
                        "description": "The BGP autonomous system number.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "FixedaddressLogicFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The filter name.",
                        "example": "Example filter"
                    },
                    "type": {
                        "type": "string",
                        "description": "The filter type. Valid values are: * MAC * NAC * Option",
                        "example": "Example type"
                    }
                }
            },
            "FixedaddressMsAdUserData": {
                "type": "object",
                "properties": {
                    "active_users_count": {
                        "type": "integer",
                        "description": "The number of active users.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "FixedaddressMsOptions": {
                "type": "object",
                "properties": {
                    "num": {
                        "type": "integer",
                        "description": "The code of the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the DHCP option.",
                        "example": "Example value"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the DHCP option.",
                        "example": "Example name"
                    },
                    "vendor_class": {
                        "type": "string",
                        "description": "The name of the vendor class with which this DHCP option is associated.",
                        "example": "Example vendor_class"
                    },
                    "user_class": {
                        "type": "string",
                        "description": "The name of the user class with which this DHCP option is associated.",
                        "example": "Example user_class"
                    },
                    "type": {
                        "type": "string",
                        "description": "The DHCP option type. Valid values are: * \"16-bit signed integer\" * \"16-bit unsigned integer\" * \"32-bit signed integer\" * \"32-bit unsigned integer\" * \"64-bit unsigned integer\" * \"8-bit signed integer\" * \"8-bit unsigned integer (1,2,4,8)\" * \"8-bit unsigned integer\" * \"array of 16-bit integer\" * \"array of 16-bit unsigned integer\" * \"array of 32-bit integer\" * \"array of 32-bit unsigned integer\" * \"array of 64-bit unsigned integer\" * \"array of 8-bit integer\" * \"array of 8-bit unsigned integer\" * \"array of ip-address pair\" * \"array of ip-address\" * \"array of string\" * \"binary\" * \"boolean array of ip-address\" * \"boolean\" * \"boolean-text\" * \"domain-list\" * \"domain-name\" * \"encapsulated\" * \"ip-address\" * \"string\" * \"text\"",
                        "readOnly": true,
                        "example": "Example type"
                    }
                }
            },
            "FixedaddressMsServer": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address or FQDN of the Microsoft server.",
                        "example": "Example ipv4addr"
                    }
                }
            },
            "FixedaddressOptions": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the DHCP option.",
                        "example": "Example name"
                    },
                    "num": {
                        "type": "integer",
                        "description": "The code of the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "vendor_class": {
                        "type": "string",
                        "description": "The name of the space this DHCP option is associated to.",
                        "example": "Example vendor_class"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the DHCP option",
                        "example": "Example value"
                    },
                    "use_option": {
                        "type": "boolean",
                        "description": "Only applies to special options that are displayed separately from other options and have a use flag. These options are: * routers * router-templates * domain-name-servers * domain-name * broadcast-address * broadcast-address-offset * dhcp-lease-time * dhcp6.name-servers",
                        "example": false
                    }
                }
            },
            "FixedaddressSnmp3Credential": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "string",
                        "description": "The SNMPv3 user name.",
                        "example": "Example user"
                    },
                    "authentication_protocol": {
                        "type": "string",
                        "description": "Authentication protocol for the SNMPv3 user.",
                        "enum": [
                            "NONE",
                            "MD5",
                            "SHA",
                            "SHA-224",
                            "SHA-256",
                            "SHA-384",
                            "SHA-512"
                        ],
                        "example": "Example authentication_protocol"
                    },
                    "authentication_password": {
                        "type": "string",
                        "description": "Authentication password for the SNMPv3 user.",
                        "writeOnly": true,
                        "example": "Example authentication_password"
                    },
                    "privacy_protocol": {
                        "type": "string",
                        "description": "Privacy protocol for the SNMPv3 user.",
                        "enum": [
                            "NONE",
                            "DES",
                            "3DES",
                            "AES",
                            "AES-192",
                            "AES-192C",
                            "AES-256",
                            "AES-256C"
                        ],
                        "example": "Example privacy_protocol"
                    },
                    "privacy_password": {
                        "type": "string",
                        "description": "Privacy password for the SNMPv3 user.",
                        "writeOnly": true,
                        "example": "Example privacy_password"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comments for the SNMPv3 user.",
                        "example": "Example comment"
                    },
                    "credential_group": {
                        "type": "string",
                        "description": "Group for the SNMPv3 credential.",
                        "example": "Example credential_group"
                    }
                }
            },
            "FixedaddressSnmpCredential": {
                "type": "object",
                "properties": {
                    "community_string": {
                        "type": "string",
                        "description": "The public community string.",
                        "example": "Example community_string"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comments for the SNMPv1 and SNMPv2 users.",
                        "example": "Example comment"
                    },
                    "credential_group": {
                        "type": "string",
                        "description": "Group for the SNMPv1 and SNMPv2 credential.",
                        "example": "Example credential_group"
                    }
                }
            },
            "ListFixedaddressResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Fixedaddress__ objects.",
                        "type": "array",
                        "title": "ListFixedaddressResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Fixedaddress"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Fixedaddress__ objects.",
                        "type": "object",
                        "title": "ListFixedaddressResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Fixedaddress"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateFixedaddressResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Fixedaddress__ in object format.",
                        "type": "object",
                        "title": "CreateFixedaddressResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Fixedaddress"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Fixedaddress__.",
                        "type": "string",
                        "title": "CreateFixedaddressResponse"
                    }
                ]
            },
            "GetFixedaddressResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Fixedaddress"
                    },
                    {
                        "description": "The response format to retrieve __Fixedaddress__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetFixedaddressResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Fixedaddress"
                            }
                        }
                    }
                ]
            },
            "UpdateFixedaddressResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Fixedaddress__ in object format.",
                        "type": "object",
                        "title": "UpdateFixedaddressResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Fixedaddress"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Fixedaddress__ .",
                        "type": "string",
                        "title": "UpdateFixedaddressResponse"
                    }
                ]
            },
            "Fixedaddresstemplate": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "bootfile": {
                        "type": "string",
                        "description": "The boot file name for the fixed address. You can configure the DHCP server to support clients that use the boot file name option in their DHCPREQUEST messages.",
                        "example": "Example bootfile"
                    },
                    "bootserver": {
                        "type": "string",
                        "description": "The boot server address for the fixed address. You can specify the name and/or IP address of the boot server that the host needs to boot. The boot server IPv4 Address or name in FQDN format.",
                        "example": "Example bootserver"
                    },
                    "comment": {
                        "type": "string",
                        "description": "A descriptive comment of a fixed address template object.",
                        "example": "Example comment"
                    },
                    "ddns_domainname": {
                        "type": "string",
                        "description": "The dynamic DNS domain name the appliance uses specifically for DDNS updates for this fixed address.",
                        "example": "Example ddns_domainname"
                    },
                    "ddns_hostname": {
                        "type": "string",
                        "description": "The DDNS host name for this fixed address.",
                        "example": "Example ddns_hostname"
                    },
                    "deny_bootp": {
                        "type": "boolean",
                        "description": "Determines if BOOTP settings are disabled and BOOTP requests will be denied.",
                        "example": false
                    },
                    "enable_ddns": {
                        "type": "boolean",
                        "description": "Determines if the DHCP server sends DDNS updates to DNS servers in the same Grid, and to external DNS servers.",
                        "example": false
                    },
                    "enable_pxe_lease_time": {
                        "type": "boolean",
                        "description": "Set this to True if you want the DHCP server to use a different lease time for PXE clients.",
                        "example": false
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "ignore_dhcp_option_list_request": {
                        "type": "boolean",
                        "description": "If this field is set to False, the appliance returns all DHCP options the client is eligible to receive, rather than only the list of options the client has requested.",
                        "example": false
                    },
                    "logic_filter_rules": {
                        "type": "array",
                        "description": "This field contains the logic filters to be applied on this fixed address. This list corresponds to the match rules that are written to the dhcpd configuration file.",
                        "enum": [
                            "logicfilterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/FixedaddresstemplateLogicFilterRules"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of a fixed address template object.",
                        "example": "Example name"
                    },
                    "nextserver": {
                        "type": "string",
                        "description": "The name in FQDN and/or IPv4 Address format of the next server that the host needs to boot.",
                        "example": "Example nextserver"
                    },
                    "number_of_addresses": {
                        "type": "integer",
                        "description": "The number of addresses for this fixed address.",
                        "format": "int64",
                        "example": 1
                    },
                    "offset": {
                        "type": "integer",
                        "description": "The start address offset for this fixed address.",
                        "format": "int64",
                        "example": 1
                    },
                    "options": {
                        "type": "array",
                        "description": "An array of DHCP option dhcpoption structs that lists the DHCP options associated with the object.",
                        "enum": [
                            "dhcpoption"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/FixedaddresstemplateOptions"
                        }
                    },
                    "pxe_lease_time": {
                        "type": "integer",
                        "description": "The PXE lease time value for a DHCP Fixed Address object. Some hosts use PXE (Preboot Execution Environment) to boot remotely from a server. To better manage your IP resources, set a different lease time for PXE boot requests. You can configure the DHCP server to allocate an IP address with a shorter lease time to hosts that send PXE boot requests, so IP addresses are not leased longer than necessary. A 32-bit unsigned integer that represents the duration, in seconds, for which the update is cached. Zero indicates that the update is not cached.",
                        "format": "int64",
                        "example": 1
                    },
                    "use_bootfile": {
                        "type": "boolean",
                        "description": "Use flag for: bootfile",
                        "example": false
                    },
                    "use_bootserver": {
                        "type": "boolean",
                        "description": "Use flag for: bootserver",
                        "example": false
                    },
                    "use_ddns_domainname": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_domainname",
                        "example": false
                    },
                    "use_deny_bootp": {
                        "type": "boolean",
                        "description": "Use flag for: deny_bootp",
                        "example": false
                    },
                    "use_enable_ddns": {
                        "type": "boolean",
                        "description": "Use flag for: enable_ddns",
                        "example": false
                    },
                    "use_ignore_dhcp_option_list_request": {
                        "type": "boolean",
                        "description": "Use flag for: ignore_dhcp_option_list_request",
                        "example": false
                    },
                    "use_logic_filter_rules": {
                        "type": "boolean",
                        "description": "Use flag for: logic_filter_rules",
                        "example": false
                    },
                    "use_nextserver": {
                        "type": "boolean",
                        "description": "Use flag for: nextserver",
                        "example": false
                    },
                    "use_options": {
                        "type": "boolean",
                        "description": "Use flag for: options",
                        "example": false
                    },
                    "use_pxe_lease_time": {
                        "type": "boolean",
                        "description": "Use flag for: pxe_lease_time",
                        "example": false
                    }
                }
            },
            "FixedaddresstemplateLogicFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The filter name.",
                        "example": "Example filter"
                    },
                    "type": {
                        "type": "string",
                        "description": "The filter type. Valid values are: * MAC * NAC * Option",
                        "example": "Example type"
                    }
                }
            },
            "FixedaddresstemplateOptions": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the DHCP option.",
                        "example": "Example name"
                    },
                    "num": {
                        "type": "integer",
                        "description": "The code of the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "vendor_class": {
                        "type": "string",
                        "description": "The name of the space this DHCP option is associated to.",
                        "example": "Example vendor_class"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the DHCP option",
                        "example": "Example value"
                    },
                    "use_option": {
                        "type": "boolean",
                        "description": "Only applies to special options that are displayed separately from other options and have a use flag. These options are: * routers * router-templates * domain-name-servers * domain-name * broadcast-address * broadcast-address-offset * dhcp-lease-time * dhcp6.name-servers",
                        "example": false
                    }
                }
            },
            "ListFixedaddresstemplateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Fixedaddresstemplate__ objects.",
                        "type": "array",
                        "title": "ListFixedaddresstemplateResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Fixedaddresstemplate"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Fixedaddresstemplate__ objects.",
                        "type": "object",
                        "title": "ListFixedaddresstemplateResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Fixedaddresstemplate"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateFixedaddresstemplateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Fixedaddresstemplate__ in object format.",
                        "type": "object",
                        "title": "CreateFixedaddresstemplateResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Fixedaddresstemplate"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Fixedaddresstemplate__.",
                        "type": "string",
                        "title": "CreateFixedaddresstemplateResponse"
                    }
                ]
            },
            "GetFixedaddresstemplateResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Fixedaddresstemplate"
                    },
                    {
                        "description": "The response format to retrieve __Fixedaddresstemplate__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetFixedaddresstemplateResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Fixedaddresstemplate"
                            }
                        }
                    }
                ]
            },
            "UpdateFixedaddresstemplateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Fixedaddresstemplate__ in object format.",
                        "type": "object",
                        "title": "UpdateFixedaddresstemplateResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Fixedaddresstemplate"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Fixedaddresstemplate__ .",
                        "type": "string",
                        "title": "UpdateFixedaddresstemplateResponse"
                    }
                ]
            },
            "Ipv6dhcpoptiondefinition": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "code": {
                        "type": "integer",
                        "description": "The code of a DHCP IPv6 option definition object. An option code number is used to identify the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of a DHCP IPv6 option definition object.",
                        "example": "Example name"
                    },
                    "space": {
                        "type": "string",
                        "description": "The space of a DHCP option definition object.",
                        "example": "Example space"
                    },
                    "type": {
                        "type": "string",
                        "description": "The data type of the Grid DHCP IPv6 option.",
                        "enum": [
                            "16-bit signed integer",
                            "16-bit unsigned integer",
                            "32-bit signed integer",
                            "32-bit unsigned integer",
                            "8-bit signed integer",
                            "8-bit unsigned integer",
                            "8-bit unsigned integer (1,2,4,8)",
                            "array of 16-bit integer",
                            "array of 16-bit unsigned integer",
                            "array of 32-bit integer",
                            "array of 32-bit unsigned integer",
                            "array of 8-bit integer",
                            "array of 8-bit unsigned integer",
                            "array of ip-address",
                            "boolean",
                            "boolean array of ip-address",
                            "boolean-text",
                            "domain-list",
                            "domain-name",
                            "ip-address",
                            "string",
                            "text"
                        ],
                        "example": "Example type"
                    }
                }
            },
            "ListIpv6dhcpoptiondefinitionResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Ipv6dhcpoptiondefinition__ objects.",
                        "type": "array",
                        "title": "ListIpv6dhcpoptiondefinitionResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Ipv6dhcpoptiondefinition"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Ipv6dhcpoptiondefinition__ objects.",
                        "type": "object",
                        "title": "ListIpv6dhcpoptiondefinitionResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Ipv6dhcpoptiondefinition"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateIpv6dhcpoptiondefinitionResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Ipv6dhcpoptiondefinition__ in object format.",
                        "type": "object",
                        "title": "CreateIpv6dhcpoptiondefinitionResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6dhcpoptiondefinition"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Ipv6dhcpoptiondefinition__.",
                        "type": "string",
                        "title": "CreateIpv6dhcpoptiondefinitionResponse"
                    }
                ]
            },
            "GetIpv6dhcpoptiondefinitionResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Ipv6dhcpoptiondefinition"
                    },
                    {
                        "description": "The response format to retrieve __Ipv6dhcpoptiondefinition__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetIpv6dhcpoptiondefinitionResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6dhcpoptiondefinition"
                            }
                        }
                    }
                ]
            },
            "UpdateIpv6dhcpoptiondefinitionResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Ipv6dhcpoptiondefinition__ in object format.",
                        "type": "object",
                        "title": "UpdateIpv6dhcpoptiondefinitionResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6dhcpoptiondefinition"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Ipv6dhcpoptiondefinition__ .",
                        "type": "string",
                        "title": "UpdateIpv6dhcpoptiondefinitionResponse"
                    }
                ]
            },
            "Ipv6dhcpoptionspace": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "A descriptive comment of a DHCP IPv6 option space object.",
                        "example": "Example comment"
                    },
                    "enterprise_number": {
                        "type": "integer",
                        "description": "The enterprise number of a DHCP IPv6 option space object.",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of a DHCP IPv6 option space object.",
                        "example": "Example name"
                    },
                    "option_definitions": {
                        "type": "array",
                        "description": "The list of DHCP IPv6 option definition objects.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ListIpv6dhcpoptionspaceResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Ipv6dhcpoptionspace__ objects.",
                        "type": "array",
                        "title": "ListIpv6dhcpoptionspaceResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Ipv6dhcpoptionspace"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Ipv6dhcpoptionspace__ objects.",
                        "type": "object",
                        "title": "ListIpv6dhcpoptionspaceResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Ipv6dhcpoptionspace"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateIpv6dhcpoptionspaceResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Ipv6dhcpoptionspace__ in object format.",
                        "type": "object",
                        "title": "CreateIpv6dhcpoptionspaceResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6dhcpoptionspace"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Ipv6dhcpoptionspace__.",
                        "type": "string",
                        "title": "CreateIpv6dhcpoptionspaceResponse"
                    }
                ]
            },
            "GetIpv6dhcpoptionspaceResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Ipv6dhcpoptionspace"
                    },
                    {
                        "description": "The response format to retrieve __Ipv6dhcpoptionspace__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetIpv6dhcpoptionspaceResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6dhcpoptionspace"
                            }
                        }
                    }
                ]
            },
            "UpdateIpv6dhcpoptionspaceResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Ipv6dhcpoptionspace__ in object format.",
                        "type": "object",
                        "title": "UpdateIpv6dhcpoptionspaceResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6dhcpoptionspace"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Ipv6dhcpoptionspace__ .",
                        "type": "string",
                        "title": "UpdateIpv6dhcpoptionspaceResponse"
                    }
                ]
            },
            "Ipv6filteroption": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "apply_as_class": {
                        "type": "boolean",
                        "description": "Determines if apply as class is enabled or not. If this flag is set to \"true\" the filter is treated as global DHCP class, e.g it is written to DHCPv6 configuration file even if it is not present in any DHCP range.",
                        "example": false
                    },
                    "comment": {
                        "type": "string",
                        "description": "The descriptive comment of a DHCP IPv6 filter option object.",
                        "example": "Example comment"
                    },
                    "expression": {
                        "type": "string",
                        "description": "The conditional expression of a DHCP IPv6 filter option object.",
                        "example": "Example expression"
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "lease_time": {
                        "type": "integer",
                        "description": "Determines the lease time of a DHCP IPv6 filter option object.",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of a DHCP IPv6 option filter object.",
                        "example": "Example name"
                    },
                    "option_list": {
                        "type": "array",
                        "description": "An array of DHCP option dhcpoption structs that lists the DHCP options associated with the object.",
                        "enum": [
                            "dhcpoption"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Ipv6filteroptionOptionList"
                        }
                    },
                    "option_space": {
                        "type": "string",
                        "description": "The option space of a DHCP IPv6 filter option object.",
                        "example": "Example option_space"
                    }
                }
            },
            "Ipv6filteroptionOptionList": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the DHCP option.",
                        "example": "Example name"
                    },
                    "num": {
                        "type": "integer",
                        "description": "The code of the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "vendor_class": {
                        "type": "string",
                        "description": "The name of the space this DHCP option is associated to.",
                        "example": "Example vendor_class"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the DHCP option",
                        "example": "Example value"
                    },
                    "use_option": {
                        "type": "boolean",
                        "description": "Only applies to special options that are displayed separately from other options and have a use flag. These options are: * routers * router-templates * domain-name-servers * domain-name * broadcast-address * broadcast-address-offset * dhcp-lease-time * dhcp6.name-servers",
                        "example": false
                    }
                }
            },
            "ListIpv6filteroptionResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Ipv6filteroption__ objects.",
                        "type": "array",
                        "title": "ListIpv6filteroptionResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Ipv6filteroption"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Ipv6filteroption__ objects.",
                        "type": "object",
                        "title": "ListIpv6filteroptionResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Ipv6filteroption"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateIpv6filteroptionResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Ipv6filteroption__ in object format.",
                        "type": "object",
                        "title": "CreateIpv6filteroptionResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6filteroption"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Ipv6filteroption__.",
                        "type": "string",
                        "title": "CreateIpv6filteroptionResponse"
                    }
                ]
            },
            "GetIpv6filteroptionResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Ipv6filteroption"
                    },
                    {
                        "description": "The response format to retrieve __Ipv6filteroption__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetIpv6filteroptionResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6filteroption"
                            }
                        }
                    }
                ]
            },
            "UpdateIpv6filteroptionResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Ipv6filteroption__ in object format.",
                        "type": "object",
                        "title": "UpdateIpv6filteroptionResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6filteroption"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Ipv6filteroption__ .",
                        "type": "string",
                        "title": "UpdateIpv6filteroptionResponse"
                    }
                ]
            },
            "Ipv6fixedaddress": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "address_type": {
                        "type": "string",
                        "description": "The address type value for this IPv6 fixed address. When the address type is \"ADDRESS\", a value for the 'ipv6addr' member is required. When the address type is \"PREFIX\", values for 'ipv6prefix' and 'ipv6prefix_bits' are required. When the address type is \"BOTH\", values for 'ipv6addr', 'ipv6prefix', and 'ipv6prefix_bits' are all required.",
                        "enum": [
                            "ADDRESS",
                            "PREFIX",
                            "BOTH"
                        ],
                        "example": "Example address_type"
                    },
                    "allow_telnet": {
                        "type": "boolean",
                        "description": "This field controls whether the credential is used for both the Telnet and SSH credentials. If set to False, the credential is used only for SSH.",
                        "example": false
                    },
                    "cli_credentials": {
                        "type": "array",
                        "description": "The CLI credentials for the IPv6 fixed address.",
                        "enum": [
                            "discovery:clicredential"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Ipv6fixedaddressCliCredentials"
                        }
                    },
                    "cloud_info": {
                        "$ref": "#/components/schemas/Ipv6fixedaddressCloudInfo"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the fixed address; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "device_description": {
                        "type": "string",
                        "description": "The description of the device.",
                        "example": "Example device_description"
                    },
                    "device_location": {
                        "type": "string",
                        "description": "The location of the device.",
                        "example": "Example device_location"
                    },
                    "device_type": {
                        "type": "string",
                        "description": "The type of the device.",
                        "example": "Example device_type"
                    },
                    "device_vendor": {
                        "type": "string",
                        "description": "The vendor of the device.",
                        "example": "Example device_vendor"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines whether a fixed address is disabled or not. When this is set to False, the IPv6 fixed address is enabled.",
                        "example": false
                    },
                    "disable_discovery": {
                        "type": "boolean",
                        "description": "Determines if the discovery for this IPv6 fixed address is disabled or not. False means that the discovery is enabled.",
                        "example": false
                    },
                    "discover_now_status": {
                        "type": "string",
                        "description": "The discovery status of this IPv6 fixed address.",
                        "enum": [
                            "NONE",
                            "PENDING",
                            "RUNNING",
                            "COMPLETE",
                            "FAILED"
                        ],
                        "readOnly": true,
                        "example": "Example discover_now_status"
                    },
                    "discovered_data": {
                        "$ref": "#/components/schemas/Ipv6fixedaddressDiscoveredData"
                    },
                    "domain_name": {
                        "type": "string",
                        "description": "The domain name for this IPv6 fixed address.",
                        "example": "Example domain_name"
                    },
                    "domain_name_servers": {
                        "type": "array",
                        "description": "The IPv6 addresses of DNS recursive name servers to which the DHCP client can send name resolution requests. The DHCP server includes this information in the DNS Recursive Name Server option in Advertise, Rebind, Information-Request, and Reply messages.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "duid": {
                        "type": "string",
                        "description": "The DUID value for this IPv6 fixed address.",
                        "example": "Example duid"
                    },
                    "enable_immediate_discovery": {
                        "type": "boolean",
                        "description": "Determines if the discovery for the IPv6 fixed address should be immediately enabled.",
                        "writeOnly": true,
                        "example": false
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the DHCP IPv6 fixed address.",
                        "example": "Example ipv6addr"
                    },
                    "ipv6prefix": {
                        "type": "string",
                        "description": "The IPv6 Address prefix of the DHCP IPv6 fixed address.",
                        "example": "Example ipv6prefix"
                    },
                    "ipv6prefix_bits": {
                        "type": "integer",
                        "description": "Prefix bits of the DHCP IPv6 fixed address.",
                        "format": "int64",
                        "example": 1
                    },
                    "logic_filter_rules": {
                        "type": "array",
                        "description": "This field contains the logic filters to be applied to this IPv6 fixed address. This list corresponds to the match rules that are written to the DHCPv6 configuration file.",
                        "enum": [
                            "logicfilterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Ipv6fixedaddressLogicFilterRules"
                        }
                    },
                    "mac_address": {
                        "type": "string",
                        "description": "The MAC address for this IPv6 fixed address.",
                        "example": "Example mac_address"
                    },
                    "match_client": {
                        "type": "string",
                        "description": "The match_client value for this fixed address. Valid values are: \"DUID\": The fixed IP address is leased to the matching DUID. \"MAC_ADDRESS\": The fixed IP address is leased to the matching MAC address.",
                        "enum": [
                            "DUID",
                            "MAC_ADDRESS"
                        ],
                        "example": "Example match_client"
                    },
                    "ms_ad_user_data": {
                        "$ref": "#/components/schemas/Ipv6fixedaddressMsAdUserData"
                    },
                    "name": {
                        "type": "string",
                        "description": "This field contains the name of this IPv6 fixed address.",
                        "example": "Example name"
                    },
                    "network": {
                        "type": "string",
                        "description": "The network to which this IPv6 fixed address belongs, in IPv6 Address/CIDR format.",
                        "example": "Example network"
                    },
                    "network_view": {
                        "type": "string",
                        "description": "The name of the network view in which this IPv6 fixed address resides.",
                        "example": "Example network_view"
                    },
                    "options": {
                        "type": "array",
                        "description": "An array of DHCP option dhcpoption structs that lists the DHCP options associated with the object.",
                        "enum": [
                            "dhcpoption"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Ipv6fixedaddressOptions"
                        }
                    },
                    "preferred_lifetime": {
                        "type": "integer",
                        "description": "The preferred lifetime value for this DHCP IPv6 fixed address object.",
                        "format": "int64",
                        "example": 1
                    },
                    "reserved_interface": {
                        "type": "string",
                        "description": "The reference to the reserved interface to which the device belongs.",
                        "example": "Example reserved_interface"
                    },
                    "restart_if_needed": {
                        "type": "boolean",
                        "description": "Restarts the member service. The restart_if_needed flag can trigger a restart on DHCP services only when it is enabled on CP member.",
                        "writeOnly": true,
                        "example": false
                    },
                    "snmp3_credential": {
                        "$ref": "#/components/schemas/Ipv6fixedaddressSnmp3Credential"
                    },
                    "snmp_credential": {
                        "$ref": "#/components/schemas/Ipv6fixedaddressSnmpCredential"
                    },
                    "template": {
                        "type": "string",
                        "description": "If set on creation, the IPv6 fixed address will be created according to the values specified in the named template.",
                        "writeOnly": true,
                        "example": "Example template"
                    },
                    "use_cli_credentials": {
                        "type": "boolean",
                        "description": "If set to true, the CLI credential will override member-level settings.",
                        "example": false
                    },
                    "use_domain_name": {
                        "type": "boolean",
                        "description": "Use flag for: domain_name",
                        "example": false
                    },
                    "use_domain_name_servers": {
                        "type": "boolean",
                        "description": "Use flag for: domain_name_servers",
                        "example": false
                    },
                    "use_logic_filter_rules": {
                        "type": "boolean",
                        "description": "Use flag for: logic_filter_rules",
                        "example": false
                    },
                    "use_options": {
                        "type": "boolean",
                        "description": "Use flag for: options",
                        "example": false
                    },
                    "use_preferred_lifetime": {
                        "type": "boolean",
                        "description": "Use flag for: preferred_lifetime",
                        "example": false
                    },
                    "use_snmp3_credential": {
                        "type": "boolean",
                        "description": "Determines if the SNMPv3 credential should be used for the IPv6 fixed address.",
                        "example": false
                    },
                    "use_snmp_credential": {
                        "type": "boolean",
                        "description": "If set to true, SNMP credential will override member level settings.",
                        "example": false
                    },
                    "use_valid_lifetime": {
                        "type": "boolean",
                        "description": "Use flag for: valid_lifetime",
                        "example": false
                    },
                    "valid_lifetime": {
                        "type": "integer",
                        "description": "The valid lifetime value for this DHCP IPv6 Fixed Address object.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "Ipv6fixedaddressCliCredentials": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "string",
                        "description": "The CLI user name.",
                        "example": "Example user"
                    },
                    "password": {
                        "type": "string",
                        "description": "The CLI password.",
                        "writeOnly": true,
                        "example": "Example password"
                    },
                    "credential_type": {
                        "type": "string",
                        "description": "The type of the credential.",
                        "enum": [
                            "SSH",
                            "TELNET",
                            "ENABLE_SSH",
                            "ENABLE_TELNET"
                        ],
                        "example": "Example credential_type"
                    },
                    "comment": {
                        "type": "string",
                        "description": "The commment for the credential.",
                        "example": "Example comment"
                    },
                    "id": {
                        "type": "integer",
                        "description": "The Credentials ID.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "credential_group": {
                        "type": "string",
                        "description": "Group for the CLI credential.",
                        "example": "Example credential_group"
                    }
                }
            },
            "Ipv6fixedaddressCloudInfo": {
                "type": "object",
                "properties": {
                    "delegated_member": {
                        "description": "The Cloud Platform Appliance to which authority of the object is delegated.",
                        "enum": [
                            "dhcpmember"
                        ],
                        "$ref": "#/components/schemas/Ipv6fixedaddresscloudinfoDelegatedMember"
                    },
                    "delegated_scope": {
                        "type": "string",
                        "description": "Indicates the scope of delegation for the object. This can be one of the following: NONE (outside any delegation), ROOT (the delegation point), SUBTREE (within the scope of a delegation), RECLAIMING (within the scope of a delegation being reclaimed, either as the delegation point or in the subtree).",
                        "enum": [
                            "NONE",
                            "ROOT",
                            "SUBTREE",
                            "RECLAIMING"
                        ],
                        "readOnly": true,
                        "example": "Example delegated_scope"
                    },
                    "delegated_root": {
                        "type": "string",
                        "description": "Indicates the root of the delegation if delegated_scope is SUBTREE or RECLAIMING. This is not set otherwise.",
                        "readOnly": true,
                        "example": "Example delegated_root"
                    },
                    "owned_by_adaptor": {
                        "type": "boolean",
                        "description": "Determines whether the object was created by the cloud adapter or not.",
                        "readOnly": true,
                        "example": false
                    },
                    "usage": {
                        "type": "string",
                        "description": "Indicates the cloud origin of the object.",
                        "enum": [
                            "NONE",
                            "ADAPTER",
                            "USED_BY",
                            "DELEGATED"
                        ],
                        "readOnly": true,
                        "example": "Example usage"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "Reference to the tenant object associated with the object, if any.",
                        "readOnly": true,
                        "example": "Example tenant"
                    },
                    "mgmt_platform": {
                        "type": "string",
                        "description": "Indicates the specified cloud management platform.",
                        "readOnly": true,
                        "example": "Example mgmt_platform"
                    },
                    "authority_type": {
                        "type": "string",
                        "description": "Type of authority over the object.",
                        "enum": [
                            "NONE",
                            "GM",
                            "CP"
                        ],
                        "readOnly": true,
                        "example": "Example authority_type"
                    }
                }
            },
            "Ipv6fixedaddresscloudinfoDelegatedMember": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example ipv4addr"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid Member.",
                        "example": "Example ipv6addr"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid member name",
                        "example": "Example name"
                    }
                }
            },
            "Ipv6fixedaddressDiscoveredData": {
                "type": "object",
                "properties": {
                    "device_model": {
                        "type": "string",
                        "description": "The model name of the end device in the vendor terminology.",
                        "readOnly": true,
                        "example": "Example device_model"
                    },
                    "device_port_name": {
                        "type": "string",
                        "description": "The system name of the interface associated with the discovered IP address.",
                        "readOnly": true,
                        "example": "Example device_port_name"
                    },
                    "device_port_type": {
                        "type": "string",
                        "description": "The hardware type of the interface associated with the discovered IP address.",
                        "readOnly": true,
                        "example": "Example device_port_type"
                    },
                    "device_type": {
                        "type": "string",
                        "description": "The type of end host in vendor terminology.",
                        "readOnly": true,
                        "example": "Example device_type"
                    },
                    "device_vendor": {
                        "type": "string",
                        "description": "The vendor name of the end host.",
                        "readOnly": true,
                        "example": "Example device_vendor"
                    },
                    "discovered_name": {
                        "type": "string",
                        "description": "The name of the network device associated with the discovered IP address.",
                        "readOnly": true,
                        "example": "Example discovered_name"
                    },
                    "discoverer": {
                        "type": "string",
                        "description": "Specifies whether the IP address was discovered by a NetMRI or NIOS discovery process.",
                        "readOnly": true,
                        "example": "Example discoverer"
                    },
                    "duid": {
                        "type": "string",
                        "description": "For IPv6 address only. The DHCP unique identifier of the discovered host. This is an optional field, and data might not be included.",
                        "readOnly": true,
                        "example": "Example duid"
                    },
                    "first_discovered": {
                        "type": "integer",
                        "description": "The date and time the IP address was first discovered in Epoch seconds format.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "iprg_no": {
                        "type": "integer",
                        "description": "The port redundant group number.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "iprg_state": {
                        "type": "string",
                        "description": "The status for the IP address within port redundant group.",
                        "enum": [
                            "VIP",
                            "ACTIVE",
                            "STANDBY",
                            "NEGOTIATION"
                        ],
                        "readOnly": true,
                        "example": "Example iprg_state"
                    },
                    "iprg_type": {
                        "type": "string",
                        "description": "The port redundant group type.",
                        "enum": [
                            "HSRP",
                            "VRRP"
                        ],
                        "readOnly": true,
                        "example": "Example iprg_type"
                    },
                    "last_discovered": {
                        "type": "integer",
                        "description": "The date and time the IP address was last discovered in Epoch seconds format.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "mac_address": {
                        "type": "string",
                        "description": "The discovered MAC address for the host. This is the unique identifier of a network device. The discovery acquires the MAC address for hosts that are located on the same network as the Grid member that is running the discovery. This can also be the MAC address of a virtual entity on a specified vSphere server.",
                        "readOnly": true,
                        "example": "Example mac_address"
                    },
                    "mgmt_ip_address": {
                        "type": "string",
                        "description": "The management IP address of the end host that has more than one IP.",
                        "readOnly": true,
                        "example": "Example mgmt_ip_address"
                    },
                    "netbios_name": {
                        "type": "string",
                        "description": "The name returned in the NetBIOS reply or the name you manually register for the discovered host.",
                        "readOnly": true,
                        "example": "Example netbios_name"
                    },
                    "network_component_description": {
                        "type": "string",
                        "description": "A textual description of the switch that is connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_description"
                    },
                    "network_component_ip": {
                        "type": "string",
                        "description": "The IPv4 Address or IPv6 Address of the switch that is connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_ip"
                    },
                    "network_component_model": {
                        "type": "string",
                        "description": "Model name of the switch port connected to the end host in vendor terminology.",
                        "readOnly": true,
                        "example": "Example network_component_model"
                    },
                    "network_component_name": {
                        "type": "string",
                        "description": "If a reverse lookup was successful for the IP address associated with this switch, the host name is displayed in this field.",
                        "readOnly": true,
                        "example": "Example network_component_name"
                    },
                    "network_component_port_description": {
                        "type": "string",
                        "description": "A textual description of the switch port that is connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_port_description"
                    },
                    "network_component_port_name": {
                        "type": "string",
                        "description": "The name of the switch port connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_port_name"
                    },
                    "network_component_port_number": {
                        "type": "string",
                        "description": "The number of the switch port connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_port_number"
                    },
                    "network_component_type": {
                        "type": "string",
                        "description": "Identifies the switch that is connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_type"
                    },
                    "network_component_vendor": {
                        "type": "string",
                        "description": "The vendor name of the switch port connected to the end host.",
                        "readOnly": true,
                        "example": "Example network_component_vendor"
                    },
                    "open_ports": {
                        "type": "string",
                        "description": "The list of opened ports on the IP address, represented as: \"TCP: 21,22,23 UDP: 137,139\". Limited to max total 1000 ports.",
                        "readOnly": true,
                        "example": "Example open_ports"
                    },
                    "os": {
                        "type": "string",
                        "description": "The operating system of the detected host or virtual entity. The OS can be one of the following: * Microsoft for all discovered hosts that have a non-null value in the MAC addresses using the NetBIOS discovery method. * A value that a TCP discovery returns. * The OS of a virtual entity on a vSphere server.",
                        "readOnly": true,
                        "example": "Example os"
                    },
                    "port_duplex": {
                        "type": "string",
                        "description": "The negotiated or operational duplex setting of the switch port connected to the end device.",
                        "readOnly": true,
                        "example": "Example port_duplex"
                    },
                    "port_link_status": {
                        "type": "string",
                        "description": "The link status of the switch port connected to the end device. Indicates whether it is connected.",
                        "readOnly": true,
                        "example": "Example port_link_status"
                    },
                    "port_speed": {
                        "type": "string",
                        "description": "The interface speed, in Mbps, of the switch port.",
                        "readOnly": true,
                        "example": "Example port_speed"
                    },
                    "port_status": {
                        "type": "string",
                        "description": "The operational status of the switch port. Indicates whether the port is up or down.",
                        "readOnly": true,
                        "example": "Example port_status"
                    },
                    "port_type": {
                        "type": "string",
                        "description": "The type of switch port.",
                        "readOnly": true,
                        "example": "Example port_type"
                    },
                    "port_vlan_description": {
                        "type": "string",
                        "description": "The description of the VLAN of the switch port that is connected to the end device.",
                        "readOnly": true,
                        "example": "Example port_vlan_description"
                    },
                    "port_vlan_name": {
                        "type": "string",
                        "description": "The name of the VLAN of the switch port.",
                        "readOnly": true,
                        "example": "Example port_vlan_name"
                    },
                    "port_vlan_number": {
                        "type": "string",
                        "description": "The ID of the VLAN of the switch port.",
                        "readOnly": true,
                        "example": "Example port_vlan_number"
                    },
                    "v_adapter": {
                        "type": "string",
                        "description": "The name of the physical network adapter through which the virtual entity is connected to the appliance.",
                        "readOnly": true,
                        "example": "Example v_adapter"
                    },
                    "v_cluster": {
                        "type": "string",
                        "description": "The name of the VMware cluster to which the virtual entity belongs.",
                        "readOnly": true,
                        "example": "Example v_cluster"
                    },
                    "v_datacenter": {
                        "type": "string",
                        "description": "The name of the vSphere datacenter or container to which the virtual entity belongs.",
                        "readOnly": true,
                        "example": "Example v_datacenter"
                    },
                    "v_entity_name": {
                        "type": "string",
                        "description": "The name of the virtual entity.",
                        "readOnly": true,
                        "example": "Example v_entity_name"
                    },
                    "v_entity_type": {
                        "type": "string",
                        "description": "The virtual entity type. This can be blank or one of the following: Virtual Machine, Virtual Host, or Virtual Center. Virtual Center represents a VMware vCenter server.",
                        "readOnly": true,
                        "example": "Example v_entity_type"
                    },
                    "v_host": {
                        "type": "string",
                        "description": "The name of the VMware server on which the virtual entity was discovered.",
                        "readOnly": true,
                        "example": "Example v_host"
                    },
                    "v_switch": {
                        "type": "string",
                        "description": "The name of the switch to which the virtual entity is connected.",
                        "readOnly": true,
                        "example": "Example v_switch"
                    },
                    "vmi_name": {
                        "type": "string",
                        "description": "Name of the virtual machine.",
                        "readOnly": true,
                        "example": "Example vmi_name"
                    },
                    "vmi_id": {
                        "type": "string",
                        "description": "ID of the virtual machine.",
                        "readOnly": true,
                        "example": "Example vmi_id"
                    },
                    "vlan_port_group": {
                        "type": "string",
                        "description": "Port group which the virtual machine belongs to.",
                        "readOnly": true,
                        "example": "Example vlan_port_group"
                    },
                    "vswitch_name": {
                        "type": "string",
                        "description": "Name of the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_name"
                    },
                    "vswitch_id": {
                        "type": "string",
                        "description": "ID of the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_id"
                    },
                    "vswitch_type": {
                        "type": "string",
                        "description": "Type of the virtual switch: standard or distributed.",
                        "enum": [
                            "Unknown",
                            "Standard",
                            "Distributed"
                        ],
                        "readOnly": true,
                        "example": "Example vswitch_type"
                    },
                    "vswitch_ipv6_enabled": {
                        "type": "boolean",
                        "description": "Indicates the virtual switch has IPV6 enabled.",
                        "readOnly": true,
                        "example": false
                    },
                    "vport_name": {
                        "type": "string",
                        "description": "Name of the network adapter on the virtual switch connected with the virtual machine.",
                        "readOnly": true,
                        "example": "Example vport_name"
                    },
                    "vport_mac_address": {
                        "type": "string",
                        "description": "MAC address of the network adapter on the virtual switch where the virtual machine connected to.",
                        "readOnly": true,
                        "example": "Example vport_mac_address"
                    },
                    "vport_link_status": {
                        "type": "string",
                        "description": "Link status of the network adapter on the virtual switch where the virtual machine connected to.",
                        "readOnly": true,
                        "example": "Example vport_link_status"
                    },
                    "vport_conf_speed": {
                        "type": "string",
                        "description": "Configured speed of the network adapter on the virtual switch where the virtual machine connected to. Unit is kb.",
                        "readOnly": true,
                        "example": "Example vport_conf_speed"
                    },
                    "vport_conf_mode": {
                        "type": "string",
                        "description": "Configured mode of the network adapter on the virtual switch where the virtual machine connected to.",
                        "enum": [
                            "Unknown",
                            "Full-duplex",
                            "Half-duplex"
                        ],
                        "readOnly": true,
                        "example": "Example vport_conf_mode"
                    },
                    "vport_speed": {
                        "type": "string",
                        "description": "Actual speed of the network adapter on the virtual switch where the virtual machine connected to. Unit is kb.",
                        "readOnly": true,
                        "example": "Example vport_speed"
                    },
                    "vport_mode": {
                        "type": "string",
                        "description": "Actual mode of the network adapter on the virtual switch where the virtual machine connected to.",
                        "enum": [
                            "Unknown",
                            "Full-duplex",
                            "Half-duplex"
                        ],
                        "readOnly": true,
                        "example": "Example vport_mode"
                    },
                    "vswitch_segment_type": {
                        "type": "string",
                        "description": "Type of the network segment on which the current virtual machine/vport connected to.",
                        "readOnly": true,
                        "example": "Example vswitch_segment_type"
                    },
                    "vswitch_segment_name": {
                        "type": "string",
                        "description": "Name of the network segment on which the current virtual machine/vport connected to.",
                        "readOnly": true,
                        "example": "Example vswitch_segment_name"
                    },
                    "vswitch_segment_id": {
                        "type": "string",
                        "description": "ID of the network segment on which the current virtual machine/vport connected to.",
                        "readOnly": true,
                        "example": "Example vswitch_segment_id"
                    },
                    "vswitch_segment_port_group": {
                        "type": "string",
                        "description": "Port group of the network segment on which the current virtual machine/vport connected to.",
                        "readOnly": true,
                        "example": "Example vswitch_segment_port_group"
                    },
                    "vswitch_available_ports_count": {
                        "type": "integer",
                        "description": "Numer of available ports reported by the virtual switch on which the virtual machine/vport connected to.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "vswitch_tep_type": {
                        "type": "string",
                        "description": "Type of virtual tunnel endpoint (VTEP) in the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_type"
                    },
                    "vswitch_tep_ip": {
                        "type": "string",
                        "description": "IP address of the virtual tunnel endpoint (VTEP) in the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_ip"
                    },
                    "vswitch_tep_port_group": {
                        "type": "string",
                        "description": "Port group of the virtual tunnel endpoint (VTEP) in the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_port_group"
                    },
                    "vswitch_tep_vlan": {
                        "type": "string",
                        "description": "VLAN of the virtual tunnel endpoint (VTEP) in the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_vlan"
                    },
                    "vswitch_tep_dhcp_server": {
                        "type": "string",
                        "description": "DHCP server of the virtual tunnel endpoint (VTEP) in the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_dhcp_server"
                    },
                    "vswitch_tep_multicast": {
                        "type": "string",
                        "description": "Muticast address of the virtual tunnel endpoint (VTEP) in the virtual swtich.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_multicast"
                    },
                    "vmhost_ip_address": {
                        "type": "string",
                        "description": "IP address of the physical node on which the virtual machine is hosted.",
                        "readOnly": true,
                        "example": "Example vmhost_ip_address"
                    },
                    "vmhost_name": {
                        "type": "string",
                        "description": "Name of the physical node on which the virtual machine is hosted.",
                        "readOnly": true,
                        "example": "Example vmhost_name"
                    },
                    "vmhost_mac_address": {
                        "type": "string",
                        "description": "MAC address of the physical node on which the virtual machine is hosted.",
                        "readOnly": true,
                        "example": "Example vmhost_mac_address"
                    },
                    "vmhost_subnet_cidr": {
                        "type": "integer",
                        "description": "CIDR subnet of the physical node on which the virtual machine is hosted.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "vmhost_nic_names": {
                        "type": "string",
                        "description": "List of all physical port names used by the virtual switch on the physical node on which the virtual machine is hosted. Represented as: \"eth1,eth2,eth3\".",
                        "readOnly": true,
                        "example": "Example vmhost_nic_names"
                    },
                    "vmi_tenant_id": {
                        "type": "string",
                        "description": "ID of the tenant which virtual machine belongs to.",
                        "readOnly": true,
                        "example": "Example vmi_tenant_id"
                    },
                    "cmp_type": {
                        "type": "string",
                        "description": "If the IP is coming from a Cloud environment, the Cloud Management Platform type.",
                        "readOnly": true,
                        "example": "Example cmp_type"
                    },
                    "vmi_ip_type": {
                        "type": "string",
                        "description": "Discovered IP address type.",
                        "readOnly": true,
                        "example": "Example vmi_ip_type"
                    },
                    "vmi_private_address": {
                        "type": "string",
                        "description": "Private IP address of the virtual machine.",
                        "readOnly": true,
                        "example": "Example vmi_private_address"
                    },
                    "vmi_is_public_address": {
                        "type": "boolean",
                        "description": "Indicates whether the IP address is a public address.",
                        "readOnly": true,
                        "example": false
                    },
                    "cisco_ise_ssid": {
                        "type": "string",
                        "description": "The Cisco ISE SSID.",
                        "readOnly": true,
                        "example": "Example cisco_ise_ssid"
                    },
                    "cisco_ise_endpoint_profile": {
                        "type": "string",
                        "description": "The Endpoint Profile created in Cisco ISE.",
                        "readOnly": true,
                        "example": "Example cisco_ise_endpoint_profile"
                    },
                    "cisco_ise_session_state": {
                        "type": "string",
                        "description": "The Cisco ISE connection session state.",
                        "enum": [
                            "AUTHENTICATED",
                            "AUTHENTICATING",
                            "DISCONNECTED",
                            "POSTURED",
                            "STARTED"
                        ],
                        "readOnly": true,
                        "example": "Example cisco_ise_session_state"
                    },
                    "cisco_ise_security_group": {
                        "type": "string",
                        "description": "The Cisco ISE security group name.",
                        "readOnly": true,
                        "example": "Example cisco_ise_security_group"
                    },
                    "task_name": {
                        "type": "string",
                        "description": "The name of the discovery task.",
                        "readOnly": true,
                        "example": "Example task_name"
                    },
                    "network_component_location": {
                        "type": "string",
                        "description": "Location of the network component on which the IP address was discovered.",
                        "readOnly": true,
                        "example": "Example network_component_location"
                    },
                    "network_component_contact": {
                        "type": "string",
                        "description": "Contact information from the network component on which the IP address was discovered.",
                        "readOnly": true,
                        "example": "Example network_component_contact"
                    },
                    "device_location": {
                        "type": "string",
                        "description": "Location of device on which the IP address was discovered.",
                        "readOnly": true,
                        "example": "Example device_location"
                    },
                    "device_contact": {
                        "type": "string",
                        "description": "Contact information from device on which the IP address was discovered.",
                        "readOnly": true,
                        "example": "Example device_contact"
                    },
                    "ap_name": {
                        "type": "string",
                        "description": "Discovered name of Wireless Access Point.",
                        "readOnly": true,
                        "example": "Example ap_name"
                    },
                    "ap_ip_address": {
                        "type": "string",
                        "description": "Discovered IP address of Wireless Access Point.",
                        "readOnly": true,
                        "example": "Example ap_ip_address"
                    },
                    "ap_ssid": {
                        "type": "string",
                        "description": "Service set identifier (SSID) associated with Wireless Access Point.",
                        "readOnly": true,
                        "example": "Example ap_ssid"
                    },
                    "bridge_domain": {
                        "type": "string",
                        "description": "Discovered bridge domain.",
                        "readOnly": true,
                        "example": "Example bridge_domain"
                    },
                    "endpoint_groups": {
                        "type": "string",
                        "description": "A comma-separated list of the discovered endpoint groups.",
                        "readOnly": true,
                        "example": "Example endpoint_groups"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "Discovered tenant.",
                        "readOnly": true,
                        "example": "Example tenant"
                    },
                    "vrf_name": {
                        "type": "string",
                        "description": "The name of the VRF.",
                        "readOnly": true,
                        "example": "Example vrf_name"
                    },
                    "vrf_description": {
                        "type": "string",
                        "description": "Description of the VRF.",
                        "readOnly": true,
                        "example": "Example vrf_description"
                    },
                    "vrf_rd": {
                        "type": "string",
                        "description": "Route distinguisher of the VRF.",
                        "readOnly": true,
                        "example": "Example vrf_rd"
                    },
                    "bgp_as": {
                        "type": "integer",
                        "description": "The BGP autonomous system number.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "Ipv6fixedaddressLogicFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The filter name.",
                        "example": "Example filter"
                    },
                    "type": {
                        "type": "string",
                        "description": "The filter type. Valid values are: * MAC * NAC * Option",
                        "example": "Example type"
                    }
                }
            },
            "Ipv6fixedaddressMsAdUserData": {
                "type": "object",
                "properties": {
                    "active_users_count": {
                        "type": "integer",
                        "description": "The number of active users.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "Ipv6fixedaddressOptions": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the DHCP option.",
                        "example": "Example name"
                    },
                    "num": {
                        "type": "integer",
                        "description": "The code of the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "vendor_class": {
                        "type": "string",
                        "description": "The name of the space this DHCP option is associated to.",
                        "example": "Example vendor_class"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the DHCP option",
                        "example": "Example value"
                    },
                    "use_option": {
                        "type": "boolean",
                        "description": "Only applies to special options that are displayed separately from other options and have a use flag. These options are: * routers * router-templates * domain-name-servers * domain-name * broadcast-address * broadcast-address-offset * dhcp-lease-time * dhcp6.name-servers",
                        "example": false
                    }
                }
            },
            "Ipv6fixedaddressSnmp3Credential": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "string",
                        "description": "The SNMPv3 user name.",
                        "example": "Example user"
                    },
                    "authentication_protocol": {
                        "type": "string",
                        "description": "Authentication protocol for the SNMPv3 user.",
                        "enum": [
                            "NONE",
                            "MD5",
                            "SHA",
                            "SHA-224",
                            "SHA-256",
                            "SHA-384",
                            "SHA-512"
                        ],
                        "example": "Example authentication_protocol"
                    },
                    "authentication_password": {
                        "type": "string",
                        "description": "Authentication password for the SNMPv3 user.",
                        "writeOnly": true,
                        "example": "Example authentication_password"
                    },
                    "privacy_protocol": {
                        "type": "string",
                        "description": "Privacy protocol for the SNMPv3 user.",
                        "enum": [
                            "NONE",
                            "DES",
                            "3DES",
                            "AES",
                            "AES-192",
                            "AES-192C",
                            "AES-256",
                            "AES-256C"
                        ],
                        "example": "Example privacy_protocol"
                    },
                    "privacy_password": {
                        "type": "string",
                        "description": "Privacy password for the SNMPv3 user.",
                        "writeOnly": true,
                        "example": "Example privacy_password"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comments for the SNMPv3 user.",
                        "example": "Example comment"
                    },
                    "credential_group": {
                        "type": "string",
                        "description": "Group for the SNMPv3 credential.",
                        "example": "Example credential_group"
                    }
                }
            },
            "Ipv6fixedaddressSnmpCredential": {
                "type": "object",
                "properties": {
                    "community_string": {
                        "type": "string",
                        "description": "The public community string.",
                        "example": "Example community_string"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comments for the SNMPv1 and SNMPv2 users.",
                        "example": "Example comment"
                    },
                    "credential_group": {
                        "type": "string",
                        "description": "Group for the SNMPv1 and SNMPv2 credential.",
                        "example": "Example credential_group"
                    }
                }
            },
            "ListIpv6fixedaddressResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Ipv6fixedaddress__ objects.",
                        "type": "array",
                        "title": "ListIpv6fixedaddressResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Ipv6fixedaddress"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Ipv6fixedaddress__ objects.",
                        "type": "object",
                        "title": "ListIpv6fixedaddressResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Ipv6fixedaddress"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateIpv6fixedaddressResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Ipv6fixedaddress__ in object format.",
                        "type": "object",
                        "title": "CreateIpv6fixedaddressResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6fixedaddress"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Ipv6fixedaddress__.",
                        "type": "string",
                        "title": "CreateIpv6fixedaddressResponse"
                    }
                ]
            },
            "GetIpv6fixedaddressResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Ipv6fixedaddress"
                    },
                    {
                        "description": "The response format to retrieve __Ipv6fixedaddress__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetIpv6fixedaddressResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6fixedaddress"
                            }
                        }
                    }
                ]
            },
            "UpdateIpv6fixedaddressResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Ipv6fixedaddress__ in object format.",
                        "type": "object",
                        "title": "UpdateIpv6fixedaddressResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6fixedaddress"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Ipv6fixedaddress__ .",
                        "type": "string",
                        "title": "UpdateIpv6fixedaddressResponse"
                    }
                ]
            },
            "Ipv6fixedaddresstemplate": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "A descriptive comment of an IPv6 fixed address template object.",
                        "example": "Example comment"
                    },
                    "domain_name": {
                        "type": "string",
                        "description": "Domain name of the IPv6 fixed address template object.",
                        "example": "Example domain_name"
                    },
                    "domain_name_servers": {
                        "type": "array",
                        "description": "The IPv6 addresses of DNS recursive name servers to which the DHCP client can send name resolution requests. The DHCP server includes this information in the DNS Recursive Name Server option in Advertise, Rebind, Information-Request, and Reply messages.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "logic_filter_rules": {
                        "type": "array",
                        "description": "This field contains the logic filters to be applied to this IPv6 fixed address. This list corresponds to the match rules that are written to the DHCPv6 configuration file.",
                        "enum": [
                            "logicfilterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Ipv6fixedaddresstemplateLogicFilterRules"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of an IPv6 fixed address template object.",
                        "example": "Example name"
                    },
                    "number_of_addresses": {
                        "type": "integer",
                        "description": "The number of IPv6 addresses for this fixed address.",
                        "format": "int64",
                        "example": 1
                    },
                    "offset": {
                        "type": "integer",
                        "description": "The start address offset for this IPv6 fixed address.",
                        "format": "int64",
                        "example": 1
                    },
                    "options": {
                        "type": "array",
                        "description": "An array of DHCP option dhcpoption structs that lists the DHCP options associated with the object.",
                        "enum": [
                            "dhcpoption"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Ipv6fixedaddresstemplateOptions"
                        }
                    },
                    "preferred_lifetime": {
                        "type": "integer",
                        "description": "The preferred lifetime value for this DHCP IPv6 fixed address template object.",
                        "format": "int64",
                        "example": 1
                    },
                    "use_domain_name": {
                        "type": "boolean",
                        "description": "Use flag for: domain_name",
                        "example": false
                    },
                    "use_domain_name_servers": {
                        "type": "boolean",
                        "description": "Use flag for: domain_name_servers",
                        "example": false
                    },
                    "use_logic_filter_rules": {
                        "type": "boolean",
                        "description": "Use flag for: logic_filter_rules",
                        "example": false
                    },
                    "use_options": {
                        "type": "boolean",
                        "description": "Use flag for: options",
                        "example": false
                    },
                    "use_preferred_lifetime": {
                        "type": "boolean",
                        "description": "Use flag for: preferred_lifetime",
                        "example": false
                    },
                    "use_valid_lifetime": {
                        "type": "boolean",
                        "description": "Use flag for: valid_lifetime",
                        "example": false
                    },
                    "valid_lifetime": {
                        "type": "integer",
                        "description": "The valid lifetime value for this DHCP IPv6 fixed address template object.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "Ipv6fixedaddresstemplateLogicFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The filter name.",
                        "example": "Example filter"
                    },
                    "type": {
                        "type": "string",
                        "description": "The filter type. Valid values are: * MAC * NAC * Option",
                        "example": "Example type"
                    }
                }
            },
            "Ipv6fixedaddresstemplateOptions": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the DHCP option.",
                        "example": "Example name"
                    },
                    "num": {
                        "type": "integer",
                        "description": "The code of the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "vendor_class": {
                        "type": "string",
                        "description": "The name of the space this DHCP option is associated to.",
                        "example": "Example vendor_class"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the DHCP option",
                        "example": "Example value"
                    },
                    "use_option": {
                        "type": "boolean",
                        "description": "Only applies to special options that are displayed separately from other options and have a use flag. These options are: * routers * router-templates * domain-name-servers * domain-name * broadcast-address * broadcast-address-offset * dhcp-lease-time * dhcp6.name-servers",
                        "example": false
                    }
                }
            },
            "ListIpv6fixedaddresstemplateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Ipv6fixedaddresstemplate__ objects.",
                        "type": "array",
                        "title": "ListIpv6fixedaddresstemplateResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Ipv6fixedaddresstemplate"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Ipv6fixedaddresstemplate__ objects.",
                        "type": "object",
                        "title": "ListIpv6fixedaddresstemplateResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Ipv6fixedaddresstemplate"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateIpv6fixedaddresstemplateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Ipv6fixedaddresstemplate__ in object format.",
                        "type": "object",
                        "title": "CreateIpv6fixedaddresstemplateResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6fixedaddresstemplate"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Ipv6fixedaddresstemplate__.",
                        "type": "string",
                        "title": "CreateIpv6fixedaddresstemplateResponse"
                    }
                ]
            },
            "GetIpv6fixedaddresstemplateResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Ipv6fixedaddresstemplate"
                    },
                    {
                        "description": "The response format to retrieve __Ipv6fixedaddresstemplate__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetIpv6fixedaddresstemplateResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6fixedaddresstemplate"
                            }
                        }
                    }
                ]
            },
            "UpdateIpv6fixedaddresstemplateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Ipv6fixedaddresstemplate__ in object format.",
                        "type": "object",
                        "title": "UpdateIpv6fixedaddresstemplateResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6fixedaddresstemplate"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Ipv6fixedaddresstemplate__ .",
                        "type": "string",
                        "title": "UpdateIpv6fixedaddresstemplateResponse"
                    }
                ]
            },
            "Ipv6range": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "address_type": {
                        "type": "string",
                        "description": "Type of a DHCP IPv6 Range object. Valid values are \"ADDRESS\", \"PREFIX\", or \"BOTH\". When the address type is \"ADDRESS\", values for the 'start_addr' and 'end_addr' members are required. When the address type is \"PREFIX\", values for 'ipv6_start_prefix', 'ipv6_end_prefix', and 'ipv6_prefix_bits' are required. When the address type is \"BOTH\", values for 'start_addr', 'end_addr', 'ipv6_start_prefix', 'ipv6_end_prefix', and 'ipv6_prefix_bits' are all required.",
                        "example": "Example address_type"
                    },
                    "cloud_info": {
                        "$ref": "#/components/schemas/Ipv6rangeCloudInfo"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the range; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines whether a range is disabled or not. When this is set to False, the range is enabled.",
                        "example": false
                    },
                    "discover_now_status": {
                        "type": "string",
                        "description": "Discover now status for this range.",
                        "enum": [
                            "NONE",
                            "PENDING",
                            "RUNNING",
                            "COMPLETE",
                            "FAILED"
                        ],
                        "readOnly": true,
                        "example": "Example discover_now_status"
                    },
                    "discovery_basic_poll_settings": {
                        "$ref": "#/components/schemas/Ipv6rangeDiscoveryBasicPollSettings"
                    },
                    "discovery_blackout_setting": {
                        "$ref": "#/components/schemas/Ipv6rangeDiscoveryBlackoutSetting"
                    },
                    "discovery_member": {
                        "type": "string",
                        "description": "The member that will run discovery for this range.",
                        "example": "Example discovery_member"
                    },
                    "enable_discovery": {
                        "type": "boolean",
                        "description": "Determines whether a discovery is enabled or not for this range. When this is set to False, the discovery for this range is disabled.",
                        "example": false
                    },
                    "enable_immediate_discovery": {
                        "type": "boolean",
                        "description": "Determines if the discovery for the range should be immediately enabled.",
                        "writeOnly": true,
                        "example": false
                    },
                    "end_addr": {
                        "type": "string",
                        "description": "The IPv6 Address end address of the DHCP IPv6 range.",
                        "example": "Example end_addr"
                    },
                    "endpoint_sources": {
                        "type": "array",
                        "description": "The endpoints that provides data for the DHCP IPv6 Range object.",
                        "enum": [
                            "pxgrid:endpoint"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "pxgrid:endpoint"
                            ]
                        }
                    },
                    "exclude": {
                        "type": "array",
                        "description": "These are ranges of IP addresses that the appliance does not use to assign to clients. You can use these exclusion addresses as static IP addresses. They contain the start and end addresses of the exclusion range, and optionally,information about this exclusion range.",
                        "enum": [
                            "exclusionrange"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Ipv6rangeExclude"
                        }
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "ipv6_end_prefix": {
                        "type": "string",
                        "description": "The IPv6 Address end prefix of the DHCP IPv6 range.",
                        "example": "Example ipv6_end_prefix"
                    },
                    "ipv6_prefix_bits": {
                        "type": "integer",
                        "description": "Prefix bits of the DHCP IPv6 range.",
                        "format": "int64",
                        "example": 1
                    },
                    "ipv6_start_prefix": {
                        "type": "string",
                        "description": "The IPv6 Address starting prefix of the DHCP IPv6 range.",
                        "example": "Example ipv6_start_prefix"
                    },
                    "logic_filter_rules": {
                        "type": "array",
                        "description": "This field contains the logic filters to be applied to this IPv6 range. This list corresponds to the match rules that are written to the DHCPv6 configuration file.",
                        "enum": [
                            "logicfilterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Ipv6rangeLogicFilterRules"
                        }
                    },
                    "member": {
                        "$ref": "#/components/schemas/Ipv6rangeMember"
                    },
                    "name": {
                        "type": "string",
                        "description": "This field contains the name of the Microsoft scope.",
                        "example": "Example name"
                    },
                    "network": {
                        "type": "string",
                        "description": "The network this range belongs to, in IPv6 Address/CIDR format.",
                        "example": "Example network"
                    },
                    "network_view": {
                        "type": "string",
                        "description": "The name of the network view in which this range resides.",
                        "example": "Example network_view"
                    },
                    "option_filter_rules": {
                        "type": "array",
                        "description": "This field contains the Option filters to be applied to this IPv6 range. The appliance uses the matching rules of these filters to select the address range from which it assigns a lease.",
                        "enum": [
                            "filterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Ipv6rangeOptionFilterRules"
                        }
                    },
                    "port_control_blackout_setting": {
                        "$ref": "#/components/schemas/Ipv6rangePortControlBlackoutSetting"
                    },
                    "recycle_leases": {
                        "type": "boolean",
                        "description": "If the field is set to True, the leases are kept in the Recycle Bin until one week after expiration. Otherwise, the leases are permanently deleted.",
                        "example": false
                    },
                    "restart_if_needed": {
                        "type": "boolean",
                        "description": "Restarts the member service.",
                        "writeOnly": true,
                        "example": false
                    },
                    "same_port_control_discovery_blackout": {
                        "type": "boolean",
                        "description": "If the field is set to True, the discovery blackout setting will be used for port control blackout setting.",
                        "example": false
                    },
                    "server_association_type": {
                        "type": "string",
                        "description": "The type of server that is going to serve the range. Valid values are: * MEMBER * NONE",
                        "example": "Example server_association_type"
                    },
                    "start_addr": {
                        "type": "string",
                        "description": "The IPv6 Address starting address of the DHCP IPv6 range.",
                        "example": "Example start_addr"
                    },
                    "subscribe_settings": {
                        "$ref": "#/components/schemas/Ipv6rangeSubscribeSettings"
                    },
                    "template": {
                        "type": "string",
                        "description": "If set on creation, the range will be created according to the values specified in the named template.",
                        "writeOnly": true,
                        "example": "Example template"
                    },
                    "use_blackout_setting": {
                        "type": "boolean",
                        "description": "Use flag for: discovery_blackout_setting , port_control_blackout_setting, same_port_control_discovery_blackout",
                        "example": false
                    },
                    "use_discovery_basic_polling_settings": {
                        "type": "boolean",
                        "description": "Use flag for: discovery_basic_poll_settings",
                        "example": false
                    },
                    "use_enable_discovery": {
                        "type": "boolean",
                        "description": "Use flag for: discovery_member , enable_discovery",
                        "example": false
                    },
                    "use_logic_filter_rules": {
                        "type": "boolean",
                        "description": "Use flag for: logic_filter_rules",
                        "example": false
                    },
                    "use_recycle_leases": {
                        "type": "boolean",
                        "description": "Use flag for: recycle_leases",
                        "example": false
                    },
                    "use_subscribe_settings": {
                        "type": "boolean",
                        "description": "Use flag for: subscribe_settings",
                        "example": false
                    }
                }
            },
            "Ipv6rangeCloudInfo": {
                "type": "object",
                "properties": {
                    "delegated_member": {
                        "description": "The Cloud Platform Appliance to which authority of the object is delegated.",
                        "enum": [
                            "dhcpmember"
                        ],
                        "$ref": "#/components/schemas/Ipv6rangecloudinfoDelegatedMember"
                    },
                    "delegated_scope": {
                        "type": "string",
                        "description": "Indicates the scope of delegation for the object. This can be one of the following: NONE (outside any delegation), ROOT (the delegation point), SUBTREE (within the scope of a delegation), RECLAIMING (within the scope of a delegation being reclaimed, either as the delegation point or in the subtree).",
                        "enum": [
                            "NONE",
                            "ROOT",
                            "SUBTREE",
                            "RECLAIMING"
                        ],
                        "readOnly": true,
                        "example": "Example delegated_scope"
                    },
                    "delegated_root": {
                        "type": "string",
                        "description": "Indicates the root of the delegation if delegated_scope is SUBTREE or RECLAIMING. This is not set otherwise.",
                        "readOnly": true,
                        "example": "Example delegated_root"
                    },
                    "owned_by_adaptor": {
                        "type": "boolean",
                        "description": "Determines whether the object was created by the cloud adapter or not.",
                        "readOnly": true,
                        "example": false
                    },
                    "usage": {
                        "type": "string",
                        "description": "Indicates the cloud origin of the object.",
                        "enum": [
                            "NONE",
                            "ADAPTER",
                            "USED_BY",
                            "DELEGATED"
                        ],
                        "readOnly": true,
                        "example": "Example usage"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "Reference to the tenant object associated with the object, if any.",
                        "readOnly": true,
                        "example": "Example tenant"
                    },
                    "mgmt_platform": {
                        "type": "string",
                        "description": "Indicates the specified cloud management platform.",
                        "readOnly": true,
                        "example": "Example mgmt_platform"
                    },
                    "authority_type": {
                        "type": "string",
                        "description": "Type of authority over the object.",
                        "enum": [
                            "NONE",
                            "GM",
                            "CP"
                        ],
                        "readOnly": true,
                        "example": "Example authority_type"
                    }
                }
            },
            "Ipv6rangecloudinfoDelegatedMember": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example ipv4addr"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid Member.",
                        "example": "Example ipv6addr"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid member name",
                        "example": "Example name"
                    }
                }
            },
            "Ipv6rangeDiscoveryBasicPollSettings": {
                "type": "object",
                "properties": {
                    "port_scanning": {
                        "type": "boolean",
                        "description": "Determines whether port scanning is enabled or not.",
                        "example": false
                    },
                    "device_profile": {
                        "type": "boolean",
                        "description": "Determines whether device profile is enabled or not.",
                        "example": false
                    },
                    "snmp_collection": {
                        "type": "boolean",
                        "description": "Determines whether SNMP collection is enabled or not.",
                        "example": false
                    },
                    "cli_collection": {
                        "type": "boolean",
                        "description": "Determines whether CLI collection is enabled or not.",
                        "example": false
                    },
                    "netbios_scanning": {
                        "type": "boolean",
                        "description": "Determines whether netbios scanning is enabled or not.",
                        "example": false
                    },
                    "complete_ping_sweep": {
                        "type": "boolean",
                        "description": "Determines whether complete ping sweep is enabled or not.",
                        "example": false
                    },
                    "smart_subnet_ping_sweep": {
                        "type": "boolean",
                        "description": "Determines whether smart subnet ping sweep is enabled or not.",
                        "example": false
                    },
                    "auto_arp_refresh_before_switch_port_polling": {
                        "type": "boolean",
                        "description": "Determines whether auto ARP refresh before switch port polling is enabled or not.",
                        "example": false
                    },
                    "switch_port_data_collection_polling": {
                        "type": "string",
                        "description": "A switch port data collection polling mode.",
                        "enum": [
                            "DISABLED",
                            "PERIODIC",
                            "SCHEDULED"
                        ],
                        "example": "Example switch_port_data_collection_polling"
                    },
                    "switch_port_data_collection_polling_schedule": {
                        "description": "A Schedule Setting struct that determines switch port data collection polling schedule.",
                        "enum": [
                            "setting:schedule"
                        ],
                        "$ref": "#/components/schemas/Ipv6rangediscoverybasicpollsettingsSwitchPortDataCollectionPollingSchedule"
                    },
                    "switch_port_data_collection_polling_interval": {
                        "type": "integer",
                        "description": "Indicates the interval for switch port data collection polling.",
                        "format": "int64",
                        "example": 1
                    },
                    "credential_group": {
                        "type": "string",
                        "description": "Credential group.",
                        "example": "Example credential_group"
                    },
                    "polling_frequency_modifier": {
                        "type": "string",
                        "description": "Polling Frequency Modifier.",
                        "example": "Example polling_frequency_modifier"
                    },
                    "use_global_polling_frequency_modifier": {
                        "type": "boolean",
                        "description": "Use Global Polling Frequency Modifier.",
                        "example": false
                    }
                }
            },
            "Ipv6rangediscoverybasicpollsettingsSwitchPortDataCollectionPollingSchedule": {
                "type": "object",
                "properties": {
                    "weekdays": {
                        "type": "array",
                        "description": "Days of the week when scheduling is triggered.",
                        "enum": [
                            "SATURDAY",
                            "SUNDAY",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for the schedule.",
                        "example": "Example time_zone"
                    },
                    "recurring_time": {
                        "type": "integer",
                        "description": "The recurring time for the schedule in Epoch seconds format. This field is obsolete and is preserved only for backward compatibility purposes. Please use other applicable fields to define the recurring schedule. DO NOT use recurring_time together with these fields. If you use recurring_time with other fields to define the recurring schedule, recurring_time has priority over year, hour_of_day, and minutes_past_hour and will override the values of these fields, although it does not override month and day_of_month. In this case, the recurring time value might be different than the intended value that you define.",
                        "format": "int64",
                        "example": 1
                    },
                    "frequency": {
                        "type": "string",
                        "description": "The frequency for the scheduled task.",
                        "enum": [
                            "DAILY",
                            "HOURLY",
                            "MONTHLY",
                            "WEEKLY"
                        ],
                        "example": "Example frequency"
                    },
                    "every": {
                        "type": "integer",
                        "description": "The number of frequency to wait before repeating the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "minutes_past_hour": {
                        "type": "integer",
                        "description": "The minutes past the hour for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "hour_of_day": {
                        "type": "integer",
                        "description": "The hour of day for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "year": {
                        "type": "integer",
                        "description": "The year for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "month": {
                        "type": "integer",
                        "description": "The month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "day_of_month": {
                        "type": "integer",
                        "description": "The day of the month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "repeat": {
                        "type": "string",
                        "description": "Indicates if the scheduled task will be repeated or run only once.",
                        "enum": [
                            "ONCE",
                            "RECUR"
                        ],
                        "example": "Example repeat"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "If set to True, the scheduled task is disabled.",
                        "example": false
                    }
                }
            },
            "Ipv6rangeDiscoveryBlackoutSetting": {
                "type": "object",
                "properties": {
                    "enable_blackout": {
                        "type": "boolean",
                        "description": "Determines whether a blackout is enabled or not.",
                        "example": false
                    },
                    "blackout_duration": {
                        "type": "integer",
                        "description": "The blackout duration in seconds; minimum value is 1 minute.",
                        "format": "int64",
                        "example": 1
                    },
                    "blackout_schedule": {
                        "description": "A Schedule Setting struct that determines blackout schedule.",
                        "enum": [
                            "setting:schedule"
                        ],
                        "$ref": "#/components/schemas/Ipv6rangediscoveryblackoutsettingBlackoutSchedule"
                    }
                }
            },
            "Ipv6rangediscoveryblackoutsettingBlackoutSchedule": {
                "type": "object",
                "properties": {
                    "weekdays": {
                        "type": "array",
                        "description": "Days of the week when scheduling is triggered.",
                        "enum": [
                            "SATURDAY",
                            "SUNDAY",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for the schedule.",
                        "example": "Example time_zone"
                    },
                    "recurring_time": {
                        "type": "integer",
                        "description": "The recurring time for the schedule in Epoch seconds format. This field is obsolete and is preserved only for backward compatibility purposes. Please use other applicable fields to define the recurring schedule. DO NOT use recurring_time together with these fields. If you use recurring_time with other fields to define the recurring schedule, recurring_time has priority over year, hour_of_day, and minutes_past_hour and will override the values of these fields, although it does not override month and day_of_month. In this case, the recurring time value might be different than the intended value that you define.",
                        "format": "int64",
                        "example": 1
                    },
                    "frequency": {
                        "type": "string",
                        "description": "The frequency for the scheduled task.",
                        "enum": [
                            "DAILY",
                            "HOURLY",
                            "MONTHLY",
                            "WEEKLY"
                        ],
                        "example": "Example frequency"
                    },
                    "every": {
                        "type": "integer",
                        "description": "The number of frequency to wait before repeating the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "minutes_past_hour": {
                        "type": "integer",
                        "description": "The minutes past the hour for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "hour_of_day": {
                        "type": "integer",
                        "description": "The hour of day for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "year": {
                        "type": "integer",
                        "description": "The year for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "month": {
                        "type": "integer",
                        "description": "The month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "day_of_month": {
                        "type": "integer",
                        "description": "The day of the month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "repeat": {
                        "type": "string",
                        "description": "Indicates if the scheduled task will be repeated or run only once.",
                        "enum": [
                            "ONCE",
                            "RECUR"
                        ],
                        "example": "Example repeat"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "If set to True, the scheduled task is disabled.",
                        "example": false
                    }
                }
            },
            "Ipv6rangeExclude": {
                "type": "object",
                "properties": {
                    "start_address": {
                        "type": "string",
                        "description": "The IPv4 Address starting address of the exclusion range.",
                        "example": "Example start_address"
                    },
                    "end_address": {
                        "type": "string",
                        "description": "The IPv4 Address ending address of the exclusion range.",
                        "example": "Example end_address"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the exclusion range; maximum 256 characters.",
                        "example": "Example comment"
                    }
                }
            },
            "Ipv6rangeLogicFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The filter name.",
                        "example": "Example filter"
                    },
                    "type": {
                        "type": "string",
                        "description": "The filter type. Valid values are: * MAC * NAC * Option",
                        "example": "Example type"
                    }
                }
            },
            "Ipv6rangeMember": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example ipv4addr"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid Member.",
                        "example": "Example ipv6addr"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid member name",
                        "example": "Example name"
                    }
                }
            },
            "Ipv6rangeOptionFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The name of the DHCP filter.",
                        "example": "Example filter"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to be applied.",
                        "enum": [
                            "Allow",
                            "Deny"
                        ],
                        "example": "Example permission"
                    }
                }
            },
            "Ipv6rangePortControlBlackoutSetting": {
                "type": "object",
                "properties": {
                    "enable_blackout": {
                        "type": "boolean",
                        "description": "Determines whether a blackout is enabled or not.",
                        "example": false
                    },
                    "blackout_duration": {
                        "type": "integer",
                        "description": "The blackout duration in seconds; minimum value is 1 minute.",
                        "format": "int64",
                        "example": 1
                    },
                    "blackout_schedule": {
                        "description": "A Schedule Setting struct that determines blackout schedule.",
                        "enum": [
                            "setting:schedule"
                        ],
                        "$ref": "#/components/schemas/Ipv6rangeportcontrolblackoutsettingBlackoutSchedule"
                    }
                }
            },
            "Ipv6rangeportcontrolblackoutsettingBlackoutSchedule": {
                "type": "object",
                "properties": {
                    "weekdays": {
                        "type": "array",
                        "description": "Days of the week when scheduling is triggered.",
                        "enum": [
                            "SATURDAY",
                            "SUNDAY",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for the schedule.",
                        "example": "Example time_zone"
                    },
                    "recurring_time": {
                        "type": "integer",
                        "description": "The recurring time for the schedule in Epoch seconds format. This field is obsolete and is preserved only for backward compatibility purposes. Please use other applicable fields to define the recurring schedule. DO NOT use recurring_time together with these fields. If you use recurring_time with other fields to define the recurring schedule, recurring_time has priority over year, hour_of_day, and minutes_past_hour and will override the values of these fields, although it does not override month and day_of_month. In this case, the recurring time value might be different than the intended value that you define.",
                        "format": "int64",
                        "example": 1
                    },
                    "frequency": {
                        "type": "string",
                        "description": "The frequency for the scheduled task.",
                        "enum": [
                            "DAILY",
                            "HOURLY",
                            "MONTHLY",
                            "WEEKLY"
                        ],
                        "example": "Example frequency"
                    },
                    "every": {
                        "type": "integer",
                        "description": "The number of frequency to wait before repeating the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "minutes_past_hour": {
                        "type": "integer",
                        "description": "The minutes past the hour for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "hour_of_day": {
                        "type": "integer",
                        "description": "The hour of day for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "year": {
                        "type": "integer",
                        "description": "The year for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "month": {
                        "type": "integer",
                        "description": "The month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "day_of_month": {
                        "type": "integer",
                        "description": "The day of the month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "repeat": {
                        "type": "string",
                        "description": "Indicates if the scheduled task will be repeated or run only once.",
                        "enum": [
                            "ONCE",
                            "RECUR"
                        ],
                        "example": "Example repeat"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "If set to True, the scheduled task is disabled.",
                        "example": false
                    }
                }
            },
            "Ipv6rangeSubscribeSettings": {
                "type": "object",
                "properties": {
                    "enabled_attributes": {
                        "type": "array",
                        "description": "The list of Cisco ISE attributes allowed for subscription.",
                        "enum": [
                            "DOMAINNAME",
                            "ENDPOINT_PROFILE",
                            "SECURITY_GROUP",
                            "SESSION_STATE",
                            "SSID",
                            "USERNAME",
                            "VLAN"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "mapped_ea_attributes": {
                        "description": "The list of NIOS extensible attributes to Cisco ISE attributes mappings.",
                        "enum": [
                            "ciscoise:eaassociation"
                        ],
                        "$ref": "#/components/schemas/Ipv6rangesubscribesettingsMappedEaAttributes"
                    }
                }
            },
            "Ipv6rangesubscribesettingsMappedEaAttributes": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The Cisco ISE attribute name that is enabled for publishsing from a Cisco ISE endpoint.",
                        "enum": [
                            "ACCOUNT_SESSION_ID",
                            "AUDIT_SESSION_ID",
                            "EPS_STATUS",
                            "IP_ADDRESS",
                            "MAC",
                            "NAS_IP_ADDRESS",
                            "NAS_PORT_ID",
                            "POSTURE_STATUS",
                            "POSTURE_TIMESTAMP"
                        ],
                        "example": "Example name"
                    },
                    "mapped_ea": {
                        "type": "string",
                        "description": "The name of the extensible attribute definition object the Cisco ISE attribute that is enabled for subscription is mapped on.",
                        "example": "Example mapped_ea"
                    }
                }
            },
            "ListIpv6rangeResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Ipv6range__ objects.",
                        "type": "array",
                        "title": "ListIpv6rangeResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Ipv6range"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Ipv6range__ objects.",
                        "type": "object",
                        "title": "ListIpv6rangeResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Ipv6range"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateIpv6rangeResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Ipv6range__ in object format.",
                        "type": "object",
                        "title": "CreateIpv6rangeResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6range"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Ipv6range__.",
                        "type": "string",
                        "title": "CreateIpv6rangeResponse"
                    }
                ]
            },
            "GetIpv6rangeResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Ipv6range"
                    },
                    {
                        "description": "The response format to retrieve __Ipv6range__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetIpv6rangeResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6range"
                            }
                        }
                    }
                ]
            },
            "UpdateIpv6rangeResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Ipv6range__ in object format.",
                        "type": "object",
                        "title": "UpdateIpv6rangeResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6range"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Ipv6range__ .",
                        "type": "string",
                        "title": "UpdateIpv6rangeResponse"
                    }
                ]
            },
            "Ipv6rangetemplate": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "cloud_api_compatible": {
                        "type": "boolean",
                        "description": "Determines whether the IPv6 DHCP range template can be used to create network objects in a cloud-computing deployment.",
                        "example": false
                    },
                    "comment": {
                        "type": "string",
                        "description": "The IPv6 DHCP range template descriptive comment.",
                        "example": "Example comment"
                    },
                    "delegated_member": {
                        "$ref": "#/components/schemas/Ipv6rangetemplateDelegatedMember"
                    },
                    "exclude": {
                        "type": "array",
                        "description": "These are ranges of IPv6 addresses that the appliance does not use to assign to clients. You can use these excluded addresses as static IPv6 addresses. They contain the start and end addresses of the excluded range, and optionally, information about this excluded range.",
                        "enum": [
                            "exclusionrangetemplate"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Ipv6rangetemplateExclude"
                        }
                    },
                    "logic_filter_rules": {
                        "type": "array",
                        "description": "This field contains the logic filters to be applied on this IPv6 range. This list corresponds to the match rules that are written to the DHCPv6 configuration file.",
                        "enum": [
                            "logicfilterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Ipv6rangetemplateLogicFilterRules"
                        }
                    },
                    "member": {
                        "$ref": "#/components/schemas/Ipv6rangetemplateMember"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the IPv6 DHCP range template.",
                        "example": "Example name"
                    },
                    "number_of_addresses": {
                        "type": "integer",
                        "description": "The number of addresses for the IPv6 DHCP range.",
                        "format": "int64",
                        "example": 1
                    },
                    "offset": {
                        "type": "integer",
                        "description": "The start address offset for the IPv6 DHCP range.",
                        "format": "int64",
                        "example": 1
                    },
                    "option_filter_rules": {
                        "type": "array",
                        "description": "This field contains the Option filters to be applied to this IPv6 range. The appliance uses the matching rules of these filters to select the address range from which it assigns a lease.",
                        "enum": [
                            "filterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Ipv6rangetemplateOptionFilterRules"
                        }
                    },
                    "recycle_leases": {
                        "type": "boolean",
                        "description": "Determines whether the leases are kept in Recycle Bin until one week after expiry. If this is set to False, the leases are permanently deleted.",
                        "example": false
                    },
                    "server_association_type": {
                        "type": "string",
                        "description": "The type of server that is going to serve the IPv6 DHCP range.",
                        "enum": [
                            "NONE",
                            "MEMBER",
                            "FAILOVER",
                            "MS_SERVER",
                            "MS_FAILOVER"
                        ],
                        "example": "Example server_association_type"
                    },
                    "use_logic_filter_rules": {
                        "type": "boolean",
                        "description": "Use flag for: logic_filter_rules",
                        "example": false
                    },
                    "use_recycle_leases": {
                        "type": "boolean",
                        "description": "Use flag for: recycle_leases",
                        "example": false
                    }
                }
            },
            "Ipv6rangetemplateDelegatedMember": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example ipv4addr"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid Member.",
                        "example": "Example ipv6addr"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid member name",
                        "example": "Example name"
                    }
                }
            },
            "Ipv6rangetemplateExclude": {
                "type": "object",
                "properties": {
                    "offset": {
                        "type": "integer",
                        "description": "The address offset of the DHCP exclusion range template.",
                        "format": "int64",
                        "example": 1
                    },
                    "number_of_addresses": {
                        "type": "integer",
                        "description": "The number of addresses in the DHCP exclusion range template.",
                        "format": "int64",
                        "example": 1
                    },
                    "comment": {
                        "type": "string",
                        "description": "A descriptive comment of a DHCP exclusion range template.",
                        "example": "Example comment"
                    }
                }
            },
            "Ipv6rangetemplateLogicFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The filter name.",
                        "example": "Example filter"
                    },
                    "type": {
                        "type": "string",
                        "description": "The filter type. Valid values are: * MAC * NAC * Option",
                        "example": "Example type"
                    }
                }
            },
            "Ipv6rangetemplateMember": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example ipv4addr"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid Member.",
                        "example": "Example ipv6addr"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid member name",
                        "example": "Example name"
                    }
                }
            },
            "Ipv6rangetemplateOptionFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The name of the DHCP filter.",
                        "example": "Example filter"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to be applied.",
                        "enum": [
                            "Allow",
                            "Deny"
                        ],
                        "example": "Example permission"
                    }
                }
            },
            "ListIpv6rangetemplateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Ipv6rangetemplate__ objects.",
                        "type": "array",
                        "title": "ListIpv6rangetemplateResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Ipv6rangetemplate"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Ipv6rangetemplate__ objects.",
                        "type": "object",
                        "title": "ListIpv6rangetemplateResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Ipv6rangetemplate"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateIpv6rangetemplateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Ipv6rangetemplate__ in object format.",
                        "type": "object",
                        "title": "CreateIpv6rangetemplateResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6rangetemplate"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Ipv6rangetemplate__.",
                        "type": "string",
                        "title": "CreateIpv6rangetemplateResponse"
                    }
                ]
            },
            "GetIpv6rangetemplateResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Ipv6rangetemplate"
                    },
                    {
                        "description": "The response format to retrieve __Ipv6rangetemplate__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetIpv6rangetemplateResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6rangetemplate"
                            }
                        }
                    }
                ]
            },
            "UpdateIpv6rangetemplateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Ipv6rangetemplate__ in object format.",
                        "type": "object",
                        "title": "UpdateIpv6rangetemplateResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6rangetemplate"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Ipv6rangetemplate__ .",
                        "type": "string",
                        "title": "UpdateIpv6rangetemplateResponse"
                    }
                ]
            },
            "Ipv6sharednetwork": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the IPv6 shared network, maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "ddns_domainname": {
                        "type": "string",
                        "description": "The dynamic DNS domain name the appliance uses specifically for DDNS updates for this network.",
                        "example": "Example ddns_domainname"
                    },
                    "ddns_generate_hostname": {
                        "type": "boolean",
                        "description": "If this field is set to True, the DHCP server generates a hostname and updates DNS with it when the DHCP client request does not contain a hostname.",
                        "example": false
                    },
                    "ddns_server_always_updates": {
                        "type": "boolean",
                        "description": "This field controls whether only the DHCP server is allowed to update DNS, regardless of the DHCP clients requests. Note that changes for this field take effect only if ddns_use_option81 is True.",
                        "example": false
                    },
                    "ddns_ttl": {
                        "type": "integer",
                        "description": "The DNS update Time to Live (TTL) value of an IPv6 shared network object. The TTL is a 32-bit unsigned integer that represents the duration, in seconds, for which the update is cached. Zero indicates that the update is not cached.",
                        "format": "int64",
                        "example": 1
                    },
                    "ddns_use_option81": {
                        "type": "boolean",
                        "description": "The support for DHCP Option 81 at the IPv6 shared network level.",
                        "example": false
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines whether an IPv6 shared network is disabled or not. When this is set to False, the IPv6 shared network is enabled.",
                        "example": false
                    },
                    "domain_name": {
                        "type": "string",
                        "description": "Use this method to set or retrieve the domain_name value of a DHCP IPv6 Shared Network object.",
                        "example": "Example domain_name"
                    },
                    "domain_name_servers": {
                        "type": "array",
                        "description": "Use this method to set or retrieve the dynamic DNS updates flag of a DHCP IPv6 Shared Network object. The DHCP server can send DDNS updates to DNS servers in the same Grid and to external DNS servers. This setting overrides the member level settings.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "enable_ddns": {
                        "type": "boolean",
                        "description": "The dynamic DNS updates flag of an IPv6 shared network object. If set to True, the DHCP server sends DDNS updates to DNS servers in the same Grid, and to external DNS servers.",
                        "example": false
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "logic_filter_rules": {
                        "type": "array",
                        "description": "This field contains the logic filters to be applied on the this IPv6 shared network. This list corresponds to the match rules that are written to the DHCPv6 configuration file.",
                        "enum": [
                            "logicfilterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Ipv6sharednetworkLogicFilterRules"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the IPv6 Shared Network.",
                        "example": "Example name"
                    },
                    "network_view": {
                        "type": "string",
                        "description": "The name of the network view in which this IPv6 shared network resides.",
                        "example": "Example network_view"
                    },
                    "networks": {
                        "type": "array",
                        "description": "A list of IPv6 networks belonging to the shared network Each individual list item must be specified as an object containing a '_ref' parameter to a network reference, for example:: [{ \"_ref\": \"ipv6network/ZG5zdHdvcmskMTAuAvMTYvMA\", }] if the reference of the wanted network is not known, it is possible to specify search parameters for the network instead in the following way:: [{ \"_ref\": { 'network': 'aabb::/64', } }] note that in this case the search must match exactly one network for the assignment to be successful.",
                        "enum": [
                            "ipv6network"
                        ],
                        "items": {
                            "type": "string",
                            "enum": [
                                "ipv6network"
                            ]
                        }
                    },
                    "options": {
                        "type": "array",
                        "description": "An array of DHCP option dhcpoption structs that lists the DHCP options associated with the object.",
                        "enum": [
                            "dhcpoption"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Ipv6sharednetworkOptions"
                        }
                    },
                    "preferred_lifetime": {
                        "type": "integer",
                        "description": "Use this method to set or retrieve the preferred lifetime value of a DHCP IPv6 Shared Network object.",
                        "format": "int64",
                        "example": 1
                    },
                    "update_dns_on_lease_renewal": {
                        "type": "boolean",
                        "description": "This field controls whether the DHCP server updates DNS when a DHCP lease is renewed.",
                        "example": false
                    },
                    "use_ddns_domainname": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_domainname",
                        "example": false
                    },
                    "use_ddns_generate_hostname": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_generate_hostname",
                        "example": false
                    },
                    "use_ddns_ttl": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_ttl",
                        "example": false
                    },
                    "use_ddns_use_option81": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_use_option81",
                        "example": false
                    },
                    "use_domain_name": {
                        "type": "boolean",
                        "description": "Use flag for: domain_name",
                        "example": false
                    },
                    "use_domain_name_servers": {
                        "type": "boolean",
                        "description": "Use flag for: domain_name_servers",
                        "example": false
                    },
                    "use_enable_ddns": {
                        "type": "boolean",
                        "description": "Use flag for: enable_ddns",
                        "example": false
                    },
                    "use_logic_filter_rules": {
                        "type": "boolean",
                        "description": "Use flag for: logic_filter_rules",
                        "example": false
                    },
                    "use_options": {
                        "type": "boolean",
                        "description": "Use flag for: options",
                        "example": false
                    },
                    "use_preferred_lifetime": {
                        "type": "boolean",
                        "description": "Use flag for: preferred_lifetime",
                        "example": false
                    },
                    "use_update_dns_on_lease_renewal": {
                        "type": "boolean",
                        "description": "Use flag for: update_dns_on_lease_renewal",
                        "example": false
                    },
                    "use_valid_lifetime": {
                        "type": "boolean",
                        "description": "Use flag for: valid_lifetime",
                        "example": false
                    },
                    "valid_lifetime": {
                        "type": "integer",
                        "description": "Use this method to set or retrieve the valid lifetime value of a DHCP IPv6 Shared Network object.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "Ipv6sharednetworkLogicFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The filter name.",
                        "example": "Example filter"
                    },
                    "type": {
                        "type": "string",
                        "description": "The filter type. Valid values are: * MAC * NAC * Option",
                        "example": "Example type"
                    }
                }
            },
            "Ipv6sharednetworkOptions": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the DHCP option.",
                        "example": "Example name"
                    },
                    "num": {
                        "type": "integer",
                        "description": "The code of the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "vendor_class": {
                        "type": "string",
                        "description": "The name of the space this DHCP option is associated to.",
                        "example": "Example vendor_class"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the DHCP option",
                        "example": "Example value"
                    },
                    "use_option": {
                        "type": "boolean",
                        "description": "Only applies to special options that are displayed separately from other options and have a use flag. These options are: * routers * router-templates * domain-name-servers * domain-name * broadcast-address * broadcast-address-offset * dhcp-lease-time * dhcp6.name-servers",
                        "example": false
                    }
                }
            },
            "ListIpv6sharednetworkResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Ipv6sharednetwork__ objects.",
                        "type": "array",
                        "title": "ListIpv6sharednetworkResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Ipv6sharednetwork"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Ipv6sharednetwork__ objects.",
                        "type": "object",
                        "title": "ListIpv6sharednetworkResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Ipv6sharednetwork"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateIpv6sharednetworkResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Ipv6sharednetwork__ in object format.",
                        "type": "object",
                        "title": "CreateIpv6sharednetworkResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6sharednetwork"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Ipv6sharednetwork__.",
                        "type": "string",
                        "title": "CreateIpv6sharednetworkResponse"
                    }
                ]
            },
            "GetIpv6sharednetworkResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Ipv6sharednetwork"
                    },
                    {
                        "description": "The response format to retrieve __Ipv6sharednetwork__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetIpv6sharednetworkResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6sharednetwork"
                            }
                        }
                    }
                ]
            },
            "UpdateIpv6sharednetworkResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Ipv6sharednetwork__ in object format.",
                        "type": "object",
                        "title": "UpdateIpv6sharednetworkResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Ipv6sharednetwork"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Ipv6sharednetwork__ .",
                        "type": "string",
                        "title": "UpdateIpv6sharednetworkResponse"
                    }
                ]
            },
            "Lease": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "address": {
                        "type": "string",
                        "description": "The IPv4 Address or IPv6 Address of the lease.",
                        "readOnly": true,
                        "example": "Example address"
                    },
                    "billing_class": {
                        "type": "string",
                        "description": "The billing_class value of a DHCP Lease object. This field specifies the class to which this lease is currently billed. This field is for IPv4 leases only.",
                        "readOnly": true,
                        "example": "Example billing_class"
                    },
                    "binding_state": {
                        "type": "string",
                        "description": "The binding state for the current lease. Following are some of the values this field can be set to: * ABANDONED: The Infoblox appliance cannot lease this IP address because the appliance received a response when it pinged the address. * ACTIVE: The lease is currently in use by a DHCP client. * EXPIRED: The lease was in use, but the DHCP client never renewed it, so it is no longer valid. * FREE: The lease is available for clients to use. * RELEASED: The DHCP client returned the lease to the appliance.",
                        "enum": [
                            "ABANDONED",
                            "ACTIVE",
                            "BACKUP",
                            "DECLINED",
                            "EXPIRED",
                            "FREE",
                            "OFFERED",
                            "RELEASED",
                            "RESET",
                            "STATIC"
                        ],
                        "readOnly": true,
                        "example": "Example binding_state"
                    },
                    "client_hostname": {
                        "type": "string",
                        "description": "The client_hostname of a DHCP Lease object. This field specifies the host name that the DHCP client sends to the Infoblox appliance using DHCP option 12.",
                        "readOnly": true,
                        "example": "Example client_hostname"
                    },
                    "cltt": {
                        "type": "integer",
                        "description": "The CLTT (Client Last Transaction Time) value of a DHCP Lease object. This field specifies the time of the last transaction with the DHCP client for this lease.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "discovered_data": {
                        "$ref": "#/components/schemas/LeaseDiscoveredData"
                    },
                    "ends": {
                        "type": "integer",
                        "description": "The end time value of a DHCP Lease object. This field specifies the time when a lease ended.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "fingerprint": {
                        "type": "string",
                        "description": "DHCP fingerprint for the lease.",
                        "readOnly": true,
                        "example": "Example fingerprint"
                    },
                    "hardware": {
                        "type": "string",
                        "description": "The hardware type of a DHCP Lease object. This field specifies the MAC address of the network interface on which the lease will be used. This field is supported for IPv4 leases, and from NIOS-9.0.6 onwards, also supported for IPv6 leases.",
                        "readOnly": true,
                        "example": "Example hardware"
                    },
                    "ipv6_duid": {
                        "type": "string",
                        "description": "The DUID value for this lease. This field is only applicable for IPv6 leases.",
                        "readOnly": true,
                        "example": "Example ipv6_duid"
                    },
                    "ipv6_iaid": {
                        "type": "string",
                        "description": "The interface ID of an IPv6 address that the Infoblox appliance leased to the DHCP client. This field is for IPv6 leases only.",
                        "readOnly": true,
                        "example": "Example ipv6_iaid"
                    },
                    "ipv6_preferred_lifetime": {
                        "type": "integer",
                        "description": "The preferred lifetime value of an IPv6 address that the Infoblox appliance leased to the DHCP client. This field is for IPv6 leases only.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "ipv6_prefix_bits": {
                        "type": "integer",
                        "description": "Prefix bits for this lease. This field is for IPv6 leases only.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "is_invalid_mac": {
                        "type": "boolean",
                        "description": "This flag reflects whether the MAC address for this lease is invalid.",
                        "readOnly": true,
                        "example": false
                    },
                    "ms_ad_user_data": {
                        "$ref": "#/components/schemas/LeaseMsAdUserData"
                    },
                    "network": {
                        "type": "string",
                        "description": "The network, in \"network/netmask\" format, with which this lease is associated.",
                        "readOnly": true,
                        "example": "Example network"
                    },
                    "network_view": {
                        "type": "string",
                        "description": "The name of the network view in which this lease resides.",
                        "readOnly": true,
                        "example": "Example network_view"
                    },
                    "never_ends": {
                        "type": "boolean",
                        "description": "If this field is set to True, the lease does not have an end time.",
                        "readOnly": true,
                        "example": false
                    },
                    "never_starts": {
                        "type": "boolean",
                        "description": "If this field is set to True, the lease does not have a start time.",
                        "readOnly": true,
                        "example": false
                    },
                    "next_binding_state": {
                        "type": "string",
                        "description": "The subsequent binding state when the current lease expires. This field is for IPv4 leases only. Following are some of the values this field can be set to: * ABANDONED: The Infoblox appliance cannot lease this IP address because the appliance received a response when it pinged the address. * ACTIVE: The lease is currently in use by a DHCP client. * EXPIRED: The lease was in use, but the DHCP client never renewed it, so it is no longer valid. * FREE: The lease is available for clients to use. * RELEASED: The DHCP client returned the lease to the appliance.",
                        "enum": [
                            "ABANDONED",
                            "ACTIVE",
                            "BACKUP",
                            "DECLINED",
                            "EXPIRED",
                            "FREE",
                            "OFFERED",
                            "RELEASED",
                            "RESET",
                            "STATIC"
                        ],
                        "readOnly": true,
                        "example": "Example next_binding_state"
                    },
                    "on_commit": {
                        "type": "string",
                        "description": "The list of commands to be executed when the lease is granted.",
                        "readOnly": true,
                        "example": "Example on_commit"
                    },
                    "on_expiry": {
                        "type": "string",
                        "description": "The list of commands to be executed when the lease expires.",
                        "readOnly": true,
                        "example": "Example on_expiry"
                    },
                    "on_release": {
                        "type": "string",
                        "description": "The list of commands to be executed when the lease is released.",
                        "readOnly": true,
                        "example": "Example on_release"
                    },
                    "option": {
                        "type": "string",
                        "description": "The option value of a DHCP Lease object. This field specifies the agent circuit ID and remote ID sent by a DHCP relay agent in DHCP option 82. This field is for IPv4 leases only.",
                        "readOnly": true,
                        "example": "Example option"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "This field determines whether the lease is an IPv4 or IPv6 address.",
                        "enum": [
                            "BOTH",
                            "IPV4",
                            "IPV6"
                        ],
                        "readOnly": true,
                        "example": "Example protocol"
                    },
                    "remote_id": {
                        "type": "string",
                        "description": "This field represents the \"Remote ID\" sub-option of DHCP option 82. Remote ID can be in ASCII form (e.g. ``\"abcd\"``) or in colon-separated HEX form (e.g. ``1:2:ab:cd``). HEX representation is used only when the sub-option value contains unprintable characters. If a remote ID sub-option value is in ASCII form, it is always enclosed in quotes to prevent ambiguous values (e.g. ``\"10:20\"`` - ASCII 5-byte string; ``10:20`` - HEX 2-byte value). * ASCII representation is used if the remote ID sub-option contains only printable ASCII characters (ASCII characters in range ``x20-0x7E``). * The backslash symbol (``\\``) is used as an escape symbol to escape the quote symbol (``\"``) in an ASCII string. * Double backslashes (``\\\\``) are used to represent the backslash symbol (``\\``) in an ASCII string. * HEX representation is used only when the remote ID sub-option value contains unprintable characters and is normalized as follows: * starting zero is removed from digits: ``1``, ``a`` - Valid; ``01``, ``0a`` - Invalid; * lowercase characters are used for symbols: ``fa`` - Valid; ``FA`` - Invalid. NIOS does not support the convertion between HEX and ASCII formats. Searches are performed using the exact same format and value as the sub-option is represented. Query examples assume the following leases are stored in the database: .. tabularcolumns:: |p{1in}|p{3in}|p{2in}| ========= ========================== ============================ Number Option field Extracted remote ID field ========= ========================== ============================ Lease01 agent.remote-id= \"00152654358700\" \"00152654358700\" agent.circuit-id= \"BX1-PORT-003\" Lease02 agent.remote-id=\"Dhcp \"Dhcp Relay 10\" Relay 10\" agent.circuit-id=\"Port008\" Lease03 agent.remote-id=\"00:01:02\" \"00:01:02\" Lease04 agent.remote-id=0:1:2 0:1:2 Lease05 agent.remote-id=02:03 2:3 Lease06 agent.remote-id=10:20 10:20 Lease07 agent.circuit-id= \"no-remote-id\" ========= ========================== ============================ Expected results: .. tabularcolumns:: |p{1.5in}|p{1.5in}|p{3in}| ========================= ==================== ============================= Query Returned leases Comments ========================= ==================== ============================= remote_id=01:02 None EXACT query. No results are expected. remote_id=\"Dhcp Relay 10\" Lease02 EXACT query for an ASCII value. remote_id=0:1:2 Lease04 EXACT query for a HEX value. remote_id=00:01:02 None EXACT query for a HEX value. No results are expected as the search value is not normalized to the same format used in the database. remote_id~=10 Lease02, Lease06 REGEX query. remote_id~=^\".*1 Lease01, Lease02, REGEX query. Only ASCII Lease03 values are expected due to the starting quote (``\"``) in the search value. remote_id~=^[^\"]*2 Lease04, Lease05, REGEX query. Only HEX values Lease06 are expected as the starting quote (``\"``) is excluded from the search value. remote_id=\"\" None EXACT query. No results are expected as no leases that contain an empty remote ID value exist in the database. ID value in the database. remote_id~=\"\" Lease01, Lease02, REGEX query. This query is Lease03, Lease04, expected to match any Lease05, Lease06 lease that contain remote ID set to any value. ========================= ==================== ============================= **NOTE:** Lease07 is not expected to be returned when searching for the remote ID sub-option.",
                        "readOnly": true,
                        "example": "Example remote_id"
                    },
                    "requested_options": {
                        "type": "string",
                        "description": "This field contains the option request list received from the client. For DHCPv4, it includes \"Parameter Request List\" data and for DHCPv6, it includes \"Option Request Option\" data.",
                        "readOnly": true,
                        "example": "Example requested_options"
                    },
                    "served_by": {
                        "type": "string",
                        "description": "The IP address of the server that sends an active lease to a client.",
                        "readOnly": true,
                        "example": "Example served_by"
                    },
                    "server_host_name": {
                        "type": "string",
                        "description": "The host name of the Grid member or Microsoft DHCP server that issues the lease.",
                        "readOnly": true,
                        "example": "Example server_host_name"
                    },
                    "starts": {
                        "type": "integer",
                        "description": "The start time of a DHCP Lease object. This field specifies the time when the lease starts.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "tsfp": {
                        "type": "integer",
                        "description": "The TSFP (Time Sent From Partner) value of a DHCP Lease object. This field specifies the time that the current lease state ends, from the point of view of a remote DHCP failover peer. This field is for IPv4 leases only.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "tstp": {
                        "type": "integer",
                        "description": "The TSTP (Time Sent To Partner) value of a DHCP Lease object. This field specifies the time that the current lease state ends, from the point of view of a local DHCP failover peer. This field is for IPv4 leases only.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "uid": {
                        "type": "string",
                        "description": "The UID (User ID) value of a DHCP Lease object. This field specifies the client identifier that the DHCP client sends the Infoblox appliance (in DHCP option 61) when it acquires the lease. Not all DHCP clients send a UID. This field is for IPv4 leases only.",
                        "readOnly": true,
                        "example": "Example uid"
                    },
                    "username": {
                        "type": "string",
                        "description": "The user name that the server has associated with a DHCP Lease object.",
                        "readOnly": true,
                        "example": "Example username"
                    },
                    "variable": {
                        "type": "string",
                        "description": "The variable value of a DHCP Lease object. This field keeps all variables related to the DDNS update of the DHCP lease. The variables related to the DDNS updates of the DHCP lease. The variables can be one of the following: ddns-text: The ddns-text variable is used to record the value of the client's TXT identification record when the interim DDNS update style has been used to update the DNS service for a particular lease. ddns-fwd-name: When a DDNS update was successfully completed, the ddns-fwd-name variable records the value of the name used when the client's A record was updated. The server may have used this name when it updated the client's PTR record. ddns-client-fqdn: If the server is configured to use the interim DDNS update style and is also configured to allow clients to update their own FQDNs, the ddns-client-fqdn variable records the name that the client used when it updated its own FQDN. This is also the name that the server used to update the client's PTR record. ddns-rev-name: If the server successfully updates the client's PTR record, this variable will record the name that the DHCP server used for the PTR record. The name to which the PTR record points will be either the ddns-fwd-name or the ddns-client-fqdn.",
                        "readOnly": true,
                        "example": "Example variable"
                    }
                }
            },
            "LeaseDiscoveredData": {
                "type": "object",
                "properties": {
                    "device_model": {
                        "type": "string",
                        "description": "The model name of the end device in the vendor terminology.",
                        "readOnly": true,
                        "example": "Example device_model"
                    },
                    "device_port_name": {
                        "type": "string",
                        "description": "The system name of the interface associated with the discovered IP address.",
                        "readOnly": true,
                        "example": "Example device_port_name"
                    },
                    "device_port_type": {
                        "type": "string",
                        "description": "The hardware type of the interface associated with the discovered IP address.",
                        "readOnly": true,
                        "example": "Example device_port_type"
                    },
                    "device_type": {
                        "type": "string",
                        "description": "The type of end host in vendor terminology.",
                        "readOnly": true,
                        "example": "Example device_type"
                    },
                    "device_vendor": {
                        "type": "string",
                        "description": "The vendor name of the end host.",
                        "readOnly": true,
                        "example": "Example device_vendor"
                    },
                    "discovered_name": {
                        "type": "string",
                        "description": "The name of the network device associated with the discovered IP address.",
                        "readOnly": true,
                        "example": "Example discovered_name"
                    },
                    "discoverer": {
                        "type": "string",
                        "description": "Specifies whether the IP address was discovered by a NetMRI or NIOS discovery process.",
                        "readOnly": true,
                        "example": "Example discoverer"
                    },
                    "duid": {
                        "type": "string",
                        "description": "For IPv6 address only. The DHCP unique identifier of the discovered host. This is an optional field, and data might not be included.",
                        "readOnly": true,
                        "example": "Example duid"
                    },
                    "first_discovered": {
                        "type": "integer",
                        "description": "The date and time the IP address was first discovered in Epoch seconds format.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "iprg_no": {
                        "type": "integer",
                        "description": "The port redundant group number.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "iprg_state": {
                        "type": "string",
                        "description": "The status for the IP address within port redundant group.",
                        "enum": [
                            "VIP",
                            "ACTIVE",
                            "STANDBY",
                            "NEGOTIATION"
                        ],
                        "readOnly": true,
                        "example": "Example iprg_state"
                    },
                    "iprg_type": {
                        "type": "string",
                        "description": "The port redundant group type.",
                        "enum": [
                            "HSRP",
                            "VRRP"
                        ],
                        "readOnly": true,
                        "example": "Example iprg_type"
                    },
                    "last_discovered": {
                        "type": "integer",
                        "description": "The date and time the IP address was last discovered in Epoch seconds format.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "mac_address": {
                        "type": "string",
                        "description": "The discovered MAC address for the host. This is the unique identifier of a network device. The discovery acquires the MAC address for hosts that are located on the same network as the Grid member that is running the discovery. This can also be the MAC address of a virtual entity on a specified vSphere server.",
                        "readOnly": true,
                        "example": "Example mac_address"
                    },
                    "mgmt_ip_address": {
                        "type": "string",
                        "description": "The management IP address of the end host that has more than one IP.",
                        "readOnly": true,
                        "example": "Example mgmt_ip_address"
                    },
                    "netbios_name": {
                        "type": "string",
                        "description": "The name returned in the NetBIOS reply or the name you manually register for the discovered host.",
                        "readOnly": true,
                        "example": "Example netbios_name"
                    },
                    "network_component_description": {
                        "type": "string",
                        "description": "A textual description of the switch that is connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_description"
                    },
                    "network_component_ip": {
                        "type": "string",
                        "description": "The IPv4 Address or IPv6 Address of the switch that is connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_ip"
                    },
                    "network_component_model": {
                        "type": "string",
                        "description": "Model name of the switch port connected to the end host in vendor terminology.",
                        "readOnly": true,
                        "example": "Example network_component_model"
                    },
                    "network_component_name": {
                        "type": "string",
                        "description": "If a reverse lookup was successful for the IP address associated with this switch, the host name is displayed in this field.",
                        "readOnly": true,
                        "example": "Example network_component_name"
                    },
                    "network_component_port_description": {
                        "type": "string",
                        "description": "A textual description of the switch port that is connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_port_description"
                    },
                    "network_component_port_name": {
                        "type": "string",
                        "description": "The name of the switch port connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_port_name"
                    },
                    "network_component_port_number": {
                        "type": "string",
                        "description": "The number of the switch port connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_port_number"
                    },
                    "network_component_type": {
                        "type": "string",
                        "description": "Identifies the switch that is connected to the end device.",
                        "readOnly": true,
                        "example": "Example network_component_type"
                    },
                    "network_component_vendor": {
                        "type": "string",
                        "description": "The vendor name of the switch port connected to the end host.",
                        "readOnly": true,
                        "example": "Example network_component_vendor"
                    },
                    "open_ports": {
                        "type": "string",
                        "description": "The list of opened ports on the IP address, represented as: \"TCP: 21,22,23 UDP: 137,139\". Limited to max total 1000 ports.",
                        "readOnly": true,
                        "example": "Example open_ports"
                    },
                    "os": {
                        "type": "string",
                        "description": "The operating system of the detected host or virtual entity. The OS can be one of the following: * Microsoft for all discovered hosts that have a non-null value in the MAC addresses using the NetBIOS discovery method. * A value that a TCP discovery returns. * The OS of a virtual entity on a vSphere server.",
                        "readOnly": true,
                        "example": "Example os"
                    },
                    "port_duplex": {
                        "type": "string",
                        "description": "The negotiated or operational duplex setting of the switch port connected to the end device.",
                        "readOnly": true,
                        "example": "Example port_duplex"
                    },
                    "port_link_status": {
                        "type": "string",
                        "description": "The link status of the switch port connected to the end device. Indicates whether it is connected.",
                        "readOnly": true,
                        "example": "Example port_link_status"
                    },
                    "port_speed": {
                        "type": "string",
                        "description": "The interface speed, in Mbps, of the switch port.",
                        "readOnly": true,
                        "example": "Example port_speed"
                    },
                    "port_status": {
                        "type": "string",
                        "description": "The operational status of the switch port. Indicates whether the port is up or down.",
                        "readOnly": true,
                        "example": "Example port_status"
                    },
                    "port_type": {
                        "type": "string",
                        "description": "The type of switch port.",
                        "readOnly": true,
                        "example": "Example port_type"
                    },
                    "port_vlan_description": {
                        "type": "string",
                        "description": "The description of the VLAN of the switch port that is connected to the end device.",
                        "readOnly": true,
                        "example": "Example port_vlan_description"
                    },
                    "port_vlan_name": {
                        "type": "string",
                        "description": "The name of the VLAN of the switch port.",
                        "readOnly": true,
                        "example": "Example port_vlan_name"
                    },
                    "port_vlan_number": {
                        "type": "string",
                        "description": "The ID of the VLAN of the switch port.",
                        "readOnly": true,
                        "example": "Example port_vlan_number"
                    },
                    "v_adapter": {
                        "type": "string",
                        "description": "The name of the physical network adapter through which the virtual entity is connected to the appliance.",
                        "readOnly": true,
                        "example": "Example v_adapter"
                    },
                    "v_cluster": {
                        "type": "string",
                        "description": "The name of the VMware cluster to which the virtual entity belongs.",
                        "readOnly": true,
                        "example": "Example v_cluster"
                    },
                    "v_datacenter": {
                        "type": "string",
                        "description": "The name of the vSphere datacenter or container to which the virtual entity belongs.",
                        "readOnly": true,
                        "example": "Example v_datacenter"
                    },
                    "v_entity_name": {
                        "type": "string",
                        "description": "The name of the virtual entity.",
                        "readOnly": true,
                        "example": "Example v_entity_name"
                    },
                    "v_entity_type": {
                        "type": "string",
                        "description": "The virtual entity type. This can be blank or one of the following: Virtual Machine, Virtual Host, or Virtual Center. Virtual Center represents a VMware vCenter server.",
                        "readOnly": true,
                        "example": "Example v_entity_type"
                    },
                    "v_host": {
                        "type": "string",
                        "description": "The name of the VMware server on which the virtual entity was discovered.",
                        "readOnly": true,
                        "example": "Example v_host"
                    },
                    "v_switch": {
                        "type": "string",
                        "description": "The name of the switch to which the virtual entity is connected.",
                        "readOnly": true,
                        "example": "Example v_switch"
                    },
                    "vmi_name": {
                        "type": "string",
                        "description": "Name of the virtual machine.",
                        "readOnly": true,
                        "example": "Example vmi_name"
                    },
                    "vmi_id": {
                        "type": "string",
                        "description": "ID of the virtual machine.",
                        "readOnly": true,
                        "example": "Example vmi_id"
                    },
                    "vlan_port_group": {
                        "type": "string",
                        "description": "Port group which the virtual machine belongs to.",
                        "readOnly": true,
                        "example": "Example vlan_port_group"
                    },
                    "vswitch_name": {
                        "type": "string",
                        "description": "Name of the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_name"
                    },
                    "vswitch_id": {
                        "type": "string",
                        "description": "ID of the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_id"
                    },
                    "vswitch_type": {
                        "type": "string",
                        "description": "Type of the virtual switch: standard or distributed.",
                        "enum": [
                            "Unknown",
                            "Standard",
                            "Distributed"
                        ],
                        "readOnly": true,
                        "example": "Example vswitch_type"
                    },
                    "vswitch_ipv6_enabled": {
                        "type": "boolean",
                        "description": "Indicates the virtual switch has IPV6 enabled.",
                        "readOnly": true,
                        "example": false
                    },
                    "vport_name": {
                        "type": "string",
                        "description": "Name of the network adapter on the virtual switch connected with the virtual machine.",
                        "readOnly": true,
                        "example": "Example vport_name"
                    },
                    "vport_mac_address": {
                        "type": "string",
                        "description": "MAC address of the network adapter on the virtual switch where the virtual machine connected to.",
                        "readOnly": true,
                        "example": "Example vport_mac_address"
                    },
                    "vport_link_status": {
                        "type": "string",
                        "description": "Link status of the network adapter on the virtual switch where the virtual machine connected to.",
                        "readOnly": true,
                        "example": "Example vport_link_status"
                    },
                    "vport_conf_speed": {
                        "type": "string",
                        "description": "Configured speed of the network adapter on the virtual switch where the virtual machine connected to. Unit is kb.",
                        "readOnly": true,
                        "example": "Example vport_conf_speed"
                    },
                    "vport_conf_mode": {
                        "type": "string",
                        "description": "Configured mode of the network adapter on the virtual switch where the virtual machine connected to.",
                        "enum": [
                            "Unknown",
                            "Full-duplex",
                            "Half-duplex"
                        ],
                        "readOnly": true,
                        "example": "Example vport_conf_mode"
                    },
                    "vport_speed": {
                        "type": "string",
                        "description": "Actual speed of the network adapter on the virtual switch where the virtual machine connected to. Unit is kb.",
                        "readOnly": true,
                        "example": "Example vport_speed"
                    },
                    "vport_mode": {
                        "type": "string",
                        "description": "Actual mode of the network adapter on the virtual switch where the virtual machine connected to.",
                        "enum": [
                            "Unknown",
                            "Full-duplex",
                            "Half-duplex"
                        ],
                        "readOnly": true,
                        "example": "Example vport_mode"
                    },
                    "vswitch_segment_type": {
                        "type": "string",
                        "description": "Type of the network segment on which the current virtual machine/vport connected to.",
                        "readOnly": true,
                        "example": "Example vswitch_segment_type"
                    },
                    "vswitch_segment_name": {
                        "type": "string",
                        "description": "Name of the network segment on which the current virtual machine/vport connected to.",
                        "readOnly": true,
                        "example": "Example vswitch_segment_name"
                    },
                    "vswitch_segment_id": {
                        "type": "string",
                        "description": "ID of the network segment on which the current virtual machine/vport connected to.",
                        "readOnly": true,
                        "example": "Example vswitch_segment_id"
                    },
                    "vswitch_segment_port_group": {
                        "type": "string",
                        "description": "Port group of the network segment on which the current virtual machine/vport connected to.",
                        "readOnly": true,
                        "example": "Example vswitch_segment_port_group"
                    },
                    "vswitch_available_ports_count": {
                        "type": "integer",
                        "description": "Numer of available ports reported by the virtual switch on which the virtual machine/vport connected to.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "vswitch_tep_type": {
                        "type": "string",
                        "description": "Type of virtual tunnel endpoint (VTEP) in the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_type"
                    },
                    "vswitch_tep_ip": {
                        "type": "string",
                        "description": "IP address of the virtual tunnel endpoint (VTEP) in the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_ip"
                    },
                    "vswitch_tep_port_group": {
                        "type": "string",
                        "description": "Port group of the virtual tunnel endpoint (VTEP) in the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_port_group"
                    },
                    "vswitch_tep_vlan": {
                        "type": "string",
                        "description": "VLAN of the virtual tunnel endpoint (VTEP) in the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_vlan"
                    },
                    "vswitch_tep_dhcp_server": {
                        "type": "string",
                        "description": "DHCP server of the virtual tunnel endpoint (VTEP) in the virtual switch.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_dhcp_server"
                    },
                    "vswitch_tep_multicast": {
                        "type": "string",
                        "description": "Muticast address of the virtual tunnel endpoint (VTEP) in the virtual swtich.",
                        "readOnly": true,
                        "example": "Example vswitch_tep_multicast"
                    },
                    "vmhost_ip_address": {
                        "type": "string",
                        "description": "IP address of the physical node on which the virtual machine is hosted.",
                        "readOnly": true,
                        "example": "Example vmhost_ip_address"
                    },
                    "vmhost_name": {
                        "type": "string",
                        "description": "Name of the physical node on which the virtual machine is hosted.",
                        "readOnly": true,
                        "example": "Example vmhost_name"
                    },
                    "vmhost_mac_address": {
                        "type": "string",
                        "description": "MAC address of the physical node on which the virtual machine is hosted.",
                        "readOnly": true,
                        "example": "Example vmhost_mac_address"
                    },
                    "vmhost_subnet_cidr": {
                        "type": "integer",
                        "description": "CIDR subnet of the physical node on which the virtual machine is hosted.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "vmhost_nic_names": {
                        "type": "string",
                        "description": "List of all physical port names used by the virtual switch on the physical node on which the virtual machine is hosted. Represented as: \"eth1,eth2,eth3\".",
                        "readOnly": true,
                        "example": "Example vmhost_nic_names"
                    },
                    "vmi_tenant_id": {
                        "type": "string",
                        "description": "ID of the tenant which virtual machine belongs to.",
                        "readOnly": true,
                        "example": "Example vmi_tenant_id"
                    },
                    "cmp_type": {
                        "type": "string",
                        "description": "If the IP is coming from a Cloud environment, the Cloud Management Platform type.",
                        "readOnly": true,
                        "example": "Example cmp_type"
                    },
                    "vmi_ip_type": {
                        "type": "string",
                        "description": "Discovered IP address type.",
                        "readOnly": true,
                        "example": "Example vmi_ip_type"
                    },
                    "vmi_private_address": {
                        "type": "string",
                        "description": "Private IP address of the virtual machine.",
                        "readOnly": true,
                        "example": "Example vmi_private_address"
                    },
                    "vmi_is_public_address": {
                        "type": "boolean",
                        "description": "Indicates whether the IP address is a public address.",
                        "readOnly": true,
                        "example": false
                    },
                    "cisco_ise_ssid": {
                        "type": "string",
                        "description": "The Cisco ISE SSID.",
                        "readOnly": true,
                        "example": "Example cisco_ise_ssid"
                    },
                    "cisco_ise_endpoint_profile": {
                        "type": "string",
                        "description": "The Endpoint Profile created in Cisco ISE.",
                        "readOnly": true,
                        "example": "Example cisco_ise_endpoint_profile"
                    },
                    "cisco_ise_session_state": {
                        "type": "string",
                        "description": "The Cisco ISE connection session state.",
                        "enum": [
                            "AUTHENTICATED",
                            "AUTHENTICATING",
                            "DISCONNECTED",
                            "POSTURED",
                            "STARTED"
                        ],
                        "readOnly": true,
                        "example": "Example cisco_ise_session_state"
                    },
                    "cisco_ise_security_group": {
                        "type": "string",
                        "description": "The Cisco ISE security group name.",
                        "readOnly": true,
                        "example": "Example cisco_ise_security_group"
                    },
                    "task_name": {
                        "type": "string",
                        "description": "The name of the discovery task.",
                        "readOnly": true,
                        "example": "Example task_name"
                    },
                    "network_component_location": {
                        "type": "string",
                        "description": "Location of the network component on which the IP address was discovered.",
                        "readOnly": true,
                        "example": "Example network_component_location"
                    },
                    "network_component_contact": {
                        "type": "string",
                        "description": "Contact information from the network component on which the IP address was discovered.",
                        "readOnly": true,
                        "example": "Example network_component_contact"
                    },
                    "device_location": {
                        "type": "string",
                        "description": "Location of device on which the IP address was discovered.",
                        "readOnly": true,
                        "example": "Example device_location"
                    },
                    "device_contact": {
                        "type": "string",
                        "description": "Contact information from device on which the IP address was discovered.",
                        "readOnly": true,
                        "example": "Example device_contact"
                    },
                    "ap_name": {
                        "type": "string",
                        "description": "Discovered name of Wireless Access Point.",
                        "readOnly": true,
                        "example": "Example ap_name"
                    },
                    "ap_ip_address": {
                        "type": "string",
                        "description": "Discovered IP address of Wireless Access Point.",
                        "readOnly": true,
                        "example": "Example ap_ip_address"
                    },
                    "ap_ssid": {
                        "type": "string",
                        "description": "Service set identifier (SSID) associated with Wireless Access Point.",
                        "readOnly": true,
                        "example": "Example ap_ssid"
                    },
                    "bridge_domain": {
                        "type": "string",
                        "description": "Discovered bridge domain.",
                        "readOnly": true,
                        "example": "Example bridge_domain"
                    },
                    "endpoint_groups": {
                        "type": "string",
                        "description": "A comma-separated list of the discovered endpoint groups.",
                        "readOnly": true,
                        "example": "Example endpoint_groups"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "Discovered tenant.",
                        "readOnly": true,
                        "example": "Example tenant"
                    },
                    "vrf_name": {
                        "type": "string",
                        "description": "The name of the VRF.",
                        "readOnly": true,
                        "example": "Example vrf_name"
                    },
                    "vrf_description": {
                        "type": "string",
                        "description": "Description of the VRF.",
                        "readOnly": true,
                        "example": "Example vrf_description"
                    },
                    "vrf_rd": {
                        "type": "string",
                        "description": "Route distinguisher of the VRF.",
                        "readOnly": true,
                        "example": "Example vrf_rd"
                    },
                    "bgp_as": {
                        "type": "integer",
                        "description": "The BGP autonomous system number.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "LeaseMsAdUserData": {
                "type": "object",
                "properties": {
                    "active_users_count": {
                        "type": "integer",
                        "description": "The number of active users.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "ListLeaseResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Lease__ objects.",
                        "type": "array",
                        "title": "ListLeaseResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Lease"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Lease__ objects.",
                        "type": "object",
                        "title": "ListLeaseResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Lease"
                                }
                            }
                        }
                    }
                ]
            },
            "GetLeaseResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Lease"
                    },
                    {
                        "description": "The response format to retrieve __Lease__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetLeaseResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Lease"
                            }
                        }
                    }
                ]
            },
            "UpdateLeaseResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Lease__ in object format.",
                        "type": "object",
                        "title": "UpdateLeaseResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Lease"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Lease__ .",
                        "type": "string",
                        "title": "UpdateLeaseResponse"
                    }
                ]
            },
            "Macfilteraddress": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "authentication_time": {
                        "type": "integer",
                        "description": "The absolute UNIX time (in seconds) since the address was last authenticated.",
                        "format": "int64",
                        "example": 1
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the MAC filter address; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "expiration_time": {
                        "type": "integer",
                        "description": "The absolute UNIX time (in seconds) until the address expires.",
                        "format": "int64",
                        "example": 1
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "filter": {
                        "type": "string",
                        "description": "Name of the MAC filter to which this address belongs.",
                        "example": "Example filter"
                    },
                    "fingerprint": {
                        "type": "string",
                        "description": "DHCP fingerprint for the address.",
                        "readOnly": true,
                        "example": "Example fingerprint"
                    },
                    "guest_custom_field1": {
                        "type": "string",
                        "description": "Guest custom field 1.",
                        "example": "Example guest_custom_field1"
                    },
                    "guest_custom_field2": {
                        "type": "string",
                        "description": "Guest custom field 2.",
                        "example": "Example guest_custom_field2"
                    },
                    "guest_custom_field3": {
                        "type": "string",
                        "description": "Guest custom field 3.",
                        "example": "Example guest_custom_field3"
                    },
                    "guest_custom_field4": {
                        "type": "string",
                        "description": "Guest custom field 4.",
                        "example": "Example guest_custom_field4"
                    },
                    "guest_email": {
                        "type": "string",
                        "description": "Guest e-mail.",
                        "example": "Example guest_email"
                    },
                    "guest_first_name": {
                        "type": "string",
                        "description": "Guest first name.",
                        "example": "Example guest_first_name"
                    },
                    "guest_last_name": {
                        "type": "string",
                        "description": "Guest last name.",
                        "example": "Example guest_last_name"
                    },
                    "guest_middle_name": {
                        "type": "string",
                        "description": "Guest middle name.",
                        "example": "Example guest_middle_name"
                    },
                    "guest_phone": {
                        "type": "string",
                        "description": "Guest phone number.",
                        "example": "Example guest_phone"
                    },
                    "is_registered_user": {
                        "type": "boolean",
                        "description": "Determines if the user has been authenticated or not.",
                        "readOnly": true,
                        "example": false
                    },
                    "mac": {
                        "type": "string",
                        "description": "MAC Address.",
                        "example": "Example mac"
                    },
                    "never_expires": {
                        "type": "boolean",
                        "description": "Determines if MAC address expiration is enabled or disabled.",
                        "example": false
                    },
                    "reserved_for_infoblox": {
                        "type": "string",
                        "description": "Reserved for future use.",
                        "example": "Example reserved_for_infoblox"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username for authenticated DHCP purposes.",
                        "example": "Example username"
                    }
                }
            },
            "ListMacfilteraddressResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Macfilteraddress__ objects.",
                        "type": "array",
                        "title": "ListMacfilteraddressResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Macfilteraddress"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Macfilteraddress__ objects.",
                        "type": "object",
                        "title": "ListMacfilteraddressResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Macfilteraddress"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateMacfilteraddressResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Macfilteraddress__ in object format.",
                        "type": "object",
                        "title": "CreateMacfilteraddressResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Macfilteraddress"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Macfilteraddress__.",
                        "type": "string",
                        "title": "CreateMacfilteraddressResponse"
                    }
                ]
            },
            "GetMacfilteraddressResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Macfilteraddress"
                    },
                    {
                        "description": "The response format to retrieve __Macfilteraddress__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetMacfilteraddressResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Macfilteraddress"
                            }
                        }
                    }
                ]
            },
            "UpdateMacfilteraddressResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Macfilteraddress__ in object format.",
                        "type": "object",
                        "title": "UpdateMacfilteraddressResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Macfilteraddress"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Macfilteraddress__ .",
                        "type": "string",
                        "title": "UpdateMacfilteraddressResponse"
                    }
                ]
            },
            "Range": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "always_update_dns": {
                        "type": "boolean",
                        "description": "This field controls whether only the DHCP server is allowed to update DNS, regardless of the DHCP clients requests.",
                        "example": false
                    },
                    "bootfile": {
                        "type": "string",
                        "description": "The bootfile name for the range. You can configure the DHCP server to support clients that use the boot file name option in their DHCPREQUEST messages.",
                        "example": "Example bootfile"
                    },
                    "bootserver": {
                        "type": "string",
                        "description": "The bootserver address for the range. You can specify the name and/or IP address of the boot server that the host needs to boot. The boot server IPv4 Address or name in FQDN format.",
                        "example": "Example bootserver"
                    },
                    "cloud_info": {
                        "$ref": "#/components/schemas/RangeCloudInfo"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the range; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "ddns_domainname": {
                        "type": "string",
                        "description": "The dynamic DNS domain name the appliance uses specifically for DDNS updates for this range.",
                        "example": "Example ddns_domainname"
                    },
                    "ddns_generate_hostname": {
                        "type": "boolean",
                        "description": "If this field is set to True, the DHCP server generates a hostname and updates DNS with it when the DHCP client request does not contain a hostname.",
                        "example": false
                    },
                    "deny_all_clients": {
                        "type": "boolean",
                        "description": "If True, send NAK forcing the client to take the new address.",
                        "example": false
                    },
                    "deny_bootp": {
                        "type": "boolean",
                        "description": "If set to true, BOOTP settings are disabled and BOOTP requests will be denied.",
                        "example": false
                    },
                    "dhcp_utilization": {
                        "type": "integer",
                        "description": "The percentage of the total DHCP utilization of the range multiplied by 1000. This is the percentage of the total number of available IP addresses belonging to the range versus the total number of all IP addresses in the range.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "dhcp_utilization_status": {
                        "type": "string",
                        "description": "A string describing the utilization level of the range.",
                        "enum": [
                            "FULL",
                            "HIGH",
                            "LOW",
                            "NORMAL"
                        ],
                        "readOnly": true,
                        "example": "Example dhcp_utilization_status"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines whether a range is disabled or not. When this is set to False, the range is enabled.",
                        "example": false
                    },
                    "discover_now_status": {
                        "type": "string",
                        "description": "Discover now status for this range.",
                        "enum": [
                            "NONE",
                            "PENDING",
                            "RUNNING",
                            "COMPLETE",
                            "FAILED"
                        ],
                        "readOnly": true,
                        "example": "Example discover_now_status"
                    },
                    "discovery_basic_poll_settings": {
                        "$ref": "#/components/schemas/RangeDiscoveryBasicPollSettings"
                    },
                    "discovery_blackout_setting": {
                        "$ref": "#/components/schemas/RangeDiscoveryBlackoutSetting"
                    },
                    "discovery_member": {
                        "type": "string",
                        "description": "The member that will run discovery for this range.",
                        "example": "Example discovery_member"
                    },
                    "dynamic_hosts": {
                        "type": "integer",
                        "description": "The total number of DHCP leases issued for the range.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "email_list": {
                        "type": "array",
                        "description": "The e-mail lists to which the appliance sends DHCP threshold alarm e-mail messages.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "enable_ddns": {
                        "type": "boolean",
                        "description": "The dynamic DNS updates flag of a DHCP range object. If set to True, the DHCP server sends DDNS updates to DNS servers in the same Grid, and to external DNS servers.",
                        "example": false
                    },
                    "enable_dhcp_thresholds": {
                        "type": "boolean",
                        "description": "Determines if DHCP thresholds are enabled for the range.",
                        "example": false
                    },
                    "enable_discovery": {
                        "type": "boolean",
                        "description": "Determines whether a discovery is enabled or not for this range. When this is set to False, the discovery for this range is disabled.",
                        "example": false
                    },
                    "enable_email_warnings": {
                        "type": "boolean",
                        "description": "Determines if DHCP threshold warnings are sent through email.",
                        "example": false
                    },
                    "enable_ifmap_publishing": {
                        "type": "boolean",
                        "description": "Determines if IFMAP publishing is enabled for the range.",
                        "example": false
                    },
                    "enable_immediate_discovery": {
                        "type": "boolean",
                        "description": "Determines if the discovery for the range should be immediately enabled.",
                        "writeOnly": true,
                        "example": false
                    },
                    "enable_pxe_lease_time": {
                        "type": "boolean",
                        "description": "Set this to True if you want the DHCP server to use a different lease time for PXE clients.",
                        "example": false
                    },
                    "enable_snmp_warnings": {
                        "type": "boolean",
                        "description": "Determines if DHCP threshold warnings are send through SNMP.",
                        "example": false
                    },
                    "end_addr": {
                        "type": "string",
                        "description": "The IPv4 Address end address of the range.",
                        "example": "Example end_addr"
                    },
                    "endpoint_sources": {
                        "type": "array",
                        "description": "The endpoints that provides data for the DHCP Range object.",
                        "enum": [
                            "pxgrid:endpoint"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "pxgrid:endpoint"
                            ]
                        }
                    },
                    "exclude": {
                        "type": "array",
                        "description": "These are ranges of IP addresses that the appliance does not use to assign to clients. You can use these exclusion addresses as static IP addresses. They contain the start and end addresses of the exclusion range, and optionally, information about this exclusion range.",
                        "enum": [
                            "exclusionrange"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/RangeExclude"
                        }
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "failover_association": {
                        "type": "string",
                        "description": "The name of the failover association: the server in this failover association will serve the IPv4 range in case the main server is out of service. {range:range} must be set to 'FAILOVER' or 'FAILOVER_MS' if you want the failover association specified here to serve the range.",
                        "example": "Example failover_association"
                    },
                    "fingerprint_filter_rules": {
                        "type": "array",
                        "description": "This field contains the fingerprint filters for this DHCP range. The appliance uses matching rules in these filters to select the address range from which it assigns a lease.",
                        "enum": [
                            "filterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/RangeFingerprintFilterRules"
                        }
                    },
                    "high_water_mark": {
                        "type": "integer",
                        "description": "The percentage of DHCP range usage threshold above which range usage is not expected and may warrant your attention. When the high watermark is reached, the Infoblox appliance generates a syslog message and sends a warning (if enabled). A number that specifies the percentage of allocated addresses. The range is from 1 to 100.",
                        "format": "int64",
                        "example": 1
                    },
                    "high_water_mark_reset": {
                        "type": "integer",
                        "description": "The percentage of DHCP range usage below which the corresponding SNMP trap is reset. A number that specifies the percentage of allocated addresses. The range is from 1 to 100. The high watermark reset value must be lower than the high watermark value.",
                        "format": "int64",
                        "example": 1
                    },
                    "ignore_dhcp_option_list_request": {
                        "type": "boolean",
                        "description": "If this field is set to False, the appliance returns all DHCP options the client is eligible to receive, rather than only the list of options the client has requested.",
                        "example": false
                    },
                    "ignore_id": {
                        "type": "string",
                        "description": "Indicates whether the appliance will ignore DHCP client IDs or MAC addresses. Valid values are \"NONE\", \"CLIENT\", or \"MACADDR\". The default is \"NONE\".",
                        "enum": [
                            "NONE",
                            "CLIENT",
                            "MACADDR"
                        ],
                        "example": "Example ignore_id"
                    },
                    "ignore_mac_addresses": {
                        "type": "array",
                        "description": "A list of MAC addresses the appliance will ignore.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "is_split_scope": {
                        "type": "boolean",
                        "description": "This field will be 'true' if this particular range is part of a split scope.",
                        "readOnly": true,
                        "example": false
                    },
                    "known_clients": {
                        "type": "string",
                        "description": "Permission for known clients. This can be 'Allow' or 'Deny'. If set to 'Deny' known clients will be denied IP addresses. Known clients include roaming hosts and clients with fixed addresses or DHCP host entries. Unknown clients include clients that are not roaming hosts and clients that do not have fixed addresses or DHCP host entries.",
                        "example": "Example known_clients"
                    },
                    "lease_scavenge_time": {
                        "type": "integer",
                        "description": "An integer that specifies the period of time (in seconds) that frees and backs up leases remained in the database before they are automatically deleted. To disable lease scavenging, set the parameter to -1. The minimum positive value must be greater than 86400 seconds (1 day).",
                        "format": "int64",
                        "example": 1
                    },
                    "logic_filter_rules": {
                        "type": "array",
                        "description": "This field contains the logic filters to be applied to this range. This list corresponds to the match rules that are written to the dhcpd configuration file.",
                        "enum": [
                            "logicfilterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/RangeLogicFilterRules"
                        }
                    },
                    "low_water_mark": {
                        "type": "integer",
                        "description": "The percentage of DHCP range usage below which the Infoblox appliance generates a syslog message and sends a warning (if enabled). A number that specifies the percentage of allocated addresses. The range is from 1 to 100.",
                        "format": "int64",
                        "example": 1
                    },
                    "low_water_mark_reset": {
                        "type": "integer",
                        "description": "The percentage of DHCP range usage threshold below which range usage is not expected and may warrant your attention. When the low watermark is crossed, the Infoblox appliance generates a syslog message and sends a warning (if enabled). A number that specifies the percentage of allocated addresses. The range is from 1 to 100. The low watermark reset value must be higher than the low watermark value.",
                        "format": "int64",
                        "example": 1
                    },
                    "mac_filter_rules": {
                        "type": "array",
                        "description": "This field contains the MAC filters to be applied to this range. The appliance uses the matching rules of these filters to select the address range from which it assigns a lease.",
                        "enum": [
                            "filterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/RangeMacFilterRules"
                        }
                    },
                    "member": {
                        "$ref": "#/components/schemas/RangeMember"
                    },
                    "ms_ad_user_data": {
                        "$ref": "#/components/schemas/RangeMsAdUserData"
                    },
                    "ms_options": {
                        "type": "array",
                        "description": "This field contains the Microsoft DHCP options for this range.",
                        "enum": [
                            "msdhcpoption"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/RangeMsOptions"
                        }
                    },
                    "ms_server": {
                        "$ref": "#/components/schemas/RangeMsServer"
                    },
                    "nac_filter_rules": {
                        "type": "array",
                        "description": "This field contains the NAC filters to be applied to this range. The appliance uses the matching rules of these filters to select the address range from which it assigns a lease.",
                        "enum": [
                            "filterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/RangeNacFilterRules"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "This field contains the name of the Microsoft scope.",
                        "example": "Example name"
                    },
                    "network": {
                        "type": "string",
                        "description": "The network to which this range belongs, in IPv4 Address/CIDR format.",
                        "example": "Example network"
                    },
                    "network_view": {
                        "type": "string",
                        "description": "The name of the network view in which this range resides.",
                        "example": "Example network_view"
                    },
                    "nextserver": {
                        "type": "string",
                        "description": "The name in FQDN and/or IPv4 Address of the next server that the host needs to boot.",
                        "example": "Example nextserver"
                    },
                    "option_filter_rules": {
                        "type": "array",
                        "description": "This field contains the Option filters to be applied to this range. The appliance uses the matching rules of these filters to select the address range from which it assigns a lease.",
                        "enum": [
                            "filterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/RangeOptionFilterRules"
                        }
                    },
                    "options": {
                        "type": "array",
                        "description": "An array of DHCP option dhcpoption structs that lists the DHCP options associated with the object.",
                        "enum": [
                            "dhcpoption"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/RangeOptions"
                        }
                    },
                    "port_control_blackout_setting": {
                        "$ref": "#/components/schemas/RangePortControlBlackoutSetting"
                    },
                    "pxe_lease_time": {
                        "type": "integer",
                        "description": "The PXE lease time value of a DHCP Range object. Some hosts use PXE (Preboot Execution Environment) to boot remotely from a server. To better manage your IP resources, set a different lease time for PXE boot requests. You can configure the DHCP server to allocate an IP address with a shorter lease time to hosts that send PXE boot requests, so IP addresses are not leased longer than necessary. A 32-bit unsigned integer that represents the duration, in seconds, for which the update is cached. Zero indicates that the update is not cached.",
                        "format": "int64",
                        "example": 1
                    },
                    "recycle_leases": {
                        "type": "boolean",
                        "description": "If the field is set to True, the leases are kept in the Recycle Bin until one week after expiration. Otherwise, the leases are permanently deleted.",
                        "example": false
                    },
                    "relay_agent_filter_rules": {
                        "type": "array",
                        "description": "This field contains the Relay Agent filters to be applied to this range. The appliance uses the matching rules of these filters to select the address range from which it assigns a lease.",
                        "enum": [
                            "filterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/RangeRelayAgentFilterRules"
                        }
                    },
                    "restart_if_needed": {
                        "type": "boolean",
                        "description": "Restarts the member service.",
                        "writeOnly": true,
                        "example": false
                    },
                    "same_port_control_discovery_blackout": {
                        "type": "boolean",
                        "description": "If the field is set to True, the discovery blackout setting will be used for port control blackout setting.",
                        "example": false
                    },
                    "server_association_type": {
                        "type": "string",
                        "description": "The type of server that is going to serve the range.",
                        "enum": [
                            "NONE",
                            "MEMBER",
                            "FAILOVER",
                            "MS_SERVER",
                            "MS_FAILOVER"
                        ],
                        "example": "Example server_association_type"
                    },
                    "split_member": {
                        "$ref": "#/components/schemas/RangeSplitMember"
                    },
                    "split_scope_exclusion_percent": {
                        "type": "integer",
                        "description": "This field controls the percentage used when creating a split scope. Valid values are numbers between 1 and 99. If the value is 40, it means that the top 40% of the exclusion will be created on the DHCP range assigned to {next_available_ip:next_available_ip} and the lower 60% of the range will be assigned to DHCP range assigned to {next_available_ip:next_available_ip}",
                        "format": "int64",
                        "writeOnly": true,
                        "example": 1
                    },
                    "start_addr": {
                        "type": "string",
                        "description": "The IPv4 Address starting address of the range.",
                        "example": "Example start_addr"
                    },
                    "static_hosts": {
                        "type": "integer",
                        "description": "The number of static DHCP addresses configured in the range.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "subscribe_settings": {
                        "$ref": "#/components/schemas/RangeSubscribeSettings"
                    },
                    "template": {
                        "type": "string",
                        "description": "If set on creation, the range will be created according to the values specified in the named template.",
                        "writeOnly": true,
                        "example": "Example template"
                    },
                    "total_hosts": {
                        "type": "integer",
                        "description": "The total number of DHCP addresses configured in the range.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "unknown_clients": {
                        "type": "string",
                        "description": "Permission for unknown clients. This can be 'Allow' or 'Deny'. If set to 'Deny', unknown clients will be denied IP addresses. Known clients include roaming hosts and clients with fixed addresses or DHCP host entries. Unknown clients include clients that are not roaming hosts and clients that do not have fixed addresses or DHCP host entries.",
                        "example": "Example unknown_clients"
                    },
                    "update_dns_on_lease_renewal": {
                        "type": "boolean",
                        "description": "This field controls whether the DHCP server updates DNS when a DHCP lease is renewed.",
                        "example": false
                    },
                    "use_blackout_setting": {
                        "type": "boolean",
                        "description": "Use flag for: discovery_blackout_setting , port_control_blackout_setting, same_port_control_discovery_blackout",
                        "example": false
                    },
                    "use_bootfile": {
                        "type": "boolean",
                        "description": "Use flag for: bootfile",
                        "example": false
                    },
                    "use_bootserver": {
                        "type": "boolean",
                        "description": "Use flag for: bootserver",
                        "example": false
                    },
                    "use_ddns_domainname": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_domainname",
                        "example": false
                    },
                    "use_ddns_generate_hostname": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_generate_hostname",
                        "example": false
                    },
                    "use_deny_bootp": {
                        "type": "boolean",
                        "description": "Use flag for: deny_bootp",
                        "example": false
                    },
                    "use_discovery_basic_polling_settings": {
                        "type": "boolean",
                        "description": "Use flag for: discovery_basic_poll_settings",
                        "example": false
                    },
                    "use_email_list": {
                        "type": "boolean",
                        "description": "Use flag for: email_list",
                        "example": false
                    },
                    "use_enable_ddns": {
                        "type": "boolean",
                        "description": "Use flag for: enable_ddns",
                        "example": false
                    },
                    "use_enable_dhcp_thresholds": {
                        "type": "boolean",
                        "description": "Use flag for: enable_dhcp_thresholds",
                        "example": false
                    },
                    "use_enable_discovery": {
                        "type": "boolean",
                        "description": "Use flag for: discovery_member , enable_discovery",
                        "example": false
                    },
                    "use_enable_ifmap_publishing": {
                        "type": "boolean",
                        "description": "Use flag for: enable_ifmap_publishing",
                        "example": false
                    },
                    "use_ignore_dhcp_option_list_request": {
                        "type": "boolean",
                        "description": "Use flag for: ignore_dhcp_option_list_request",
                        "example": false
                    },
                    "use_ignore_id": {
                        "type": "boolean",
                        "description": "Use flag for: ignore_id",
                        "example": false
                    },
                    "use_known_clients": {
                        "type": "boolean",
                        "description": "Use flag for: known_clients",
                        "example": false
                    },
                    "use_lease_scavenge_time": {
                        "type": "boolean",
                        "description": "Use flag for: lease_scavenge_time",
                        "example": false
                    },
                    "use_logic_filter_rules": {
                        "type": "boolean",
                        "description": "Use flag for: logic_filter_rules",
                        "example": false
                    },
                    "use_ms_options": {
                        "type": "boolean",
                        "description": "Use flag for: ms_options",
                        "example": false
                    },
                    "use_nextserver": {
                        "type": "boolean",
                        "description": "Use flag for: nextserver",
                        "example": false
                    },
                    "use_options": {
                        "type": "boolean",
                        "description": "Use flag for: options",
                        "example": false
                    },
                    "use_pxe_lease_time": {
                        "type": "boolean",
                        "description": "Use flag for: pxe_lease_time",
                        "example": false
                    },
                    "use_recycle_leases": {
                        "type": "boolean",
                        "description": "Use flag for: recycle_leases",
                        "example": false
                    },
                    "use_subscribe_settings": {
                        "type": "boolean",
                        "description": "Use flag for: subscribe_settings",
                        "example": false
                    },
                    "use_unknown_clients": {
                        "type": "boolean",
                        "description": "Use flag for: unknown_clients",
                        "example": false
                    },
                    "use_update_dns_on_lease_renewal": {
                        "type": "boolean",
                        "description": "Use flag for: update_dns_on_lease_renewal",
                        "example": false
                    }
                }
            },
            "RangeCloudInfo": {
                "type": "object",
                "properties": {
                    "delegated_member": {
                        "description": "The Cloud Platform Appliance to which authority of the object is delegated.",
                        "enum": [
                            "dhcpmember"
                        ],
                        "$ref": "#/components/schemas/RangecloudinfoDelegatedMember"
                    },
                    "delegated_scope": {
                        "type": "string",
                        "description": "Indicates the scope of delegation for the object. This can be one of the following: NONE (outside any delegation), ROOT (the delegation point), SUBTREE (within the scope of a delegation), RECLAIMING (within the scope of a delegation being reclaimed, either as the delegation point or in the subtree).",
                        "enum": [
                            "NONE",
                            "ROOT",
                            "SUBTREE",
                            "RECLAIMING"
                        ],
                        "readOnly": true,
                        "example": "Example delegated_scope"
                    },
                    "delegated_root": {
                        "type": "string",
                        "description": "Indicates the root of the delegation if delegated_scope is SUBTREE or RECLAIMING. This is not set otherwise.",
                        "readOnly": true,
                        "example": "Example delegated_root"
                    },
                    "owned_by_adaptor": {
                        "type": "boolean",
                        "description": "Determines whether the object was created by the cloud adapter or not.",
                        "readOnly": true,
                        "example": false
                    },
                    "usage": {
                        "type": "string",
                        "description": "Indicates the cloud origin of the object.",
                        "enum": [
                            "NONE",
                            "ADAPTER",
                            "USED_BY",
                            "DELEGATED"
                        ],
                        "readOnly": true,
                        "example": "Example usage"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "Reference to the tenant object associated with the object, if any.",
                        "readOnly": true,
                        "example": "Example tenant"
                    },
                    "mgmt_platform": {
                        "type": "string",
                        "description": "Indicates the specified cloud management platform.",
                        "readOnly": true,
                        "example": "Example mgmt_platform"
                    },
                    "authority_type": {
                        "type": "string",
                        "description": "Type of authority over the object.",
                        "enum": [
                            "NONE",
                            "GM",
                            "CP"
                        ],
                        "readOnly": true,
                        "example": "Example authority_type"
                    }
                }
            },
            "RangecloudinfoDelegatedMember": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example ipv4addr"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid Member.",
                        "example": "Example ipv6addr"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid member name",
                        "example": "Example name"
                    }
                }
            },
            "RangeDiscoveryBasicPollSettings": {
                "type": "object",
                "properties": {
                    "port_scanning": {
                        "type": "boolean",
                        "description": "Determines whether port scanning is enabled or not.",
                        "example": false
                    },
                    "device_profile": {
                        "type": "boolean",
                        "description": "Determines whether device profile is enabled or not.",
                        "example": false
                    },
                    "snmp_collection": {
                        "type": "boolean",
                        "description": "Determines whether SNMP collection is enabled or not.",
                        "example": false
                    },
                    "cli_collection": {
                        "type": "boolean",
                        "description": "Determines whether CLI collection is enabled or not.",
                        "example": false
                    },
                    "netbios_scanning": {
                        "type": "boolean",
                        "description": "Determines whether netbios scanning is enabled or not.",
                        "example": false
                    },
                    "complete_ping_sweep": {
                        "type": "boolean",
                        "description": "Determines whether complete ping sweep is enabled or not.",
                        "example": false
                    },
                    "smart_subnet_ping_sweep": {
                        "type": "boolean",
                        "description": "Determines whether smart subnet ping sweep is enabled or not.",
                        "example": false
                    },
                    "auto_arp_refresh_before_switch_port_polling": {
                        "type": "boolean",
                        "description": "Determines whether auto ARP refresh before switch port polling is enabled or not.",
                        "example": false
                    },
                    "switch_port_data_collection_polling": {
                        "type": "string",
                        "description": "A switch port data collection polling mode.",
                        "enum": [
                            "DISABLED",
                            "PERIODIC",
                            "SCHEDULED"
                        ],
                        "example": "Example switch_port_data_collection_polling"
                    },
                    "switch_port_data_collection_polling_schedule": {
                        "description": "A Schedule Setting struct that determines switch port data collection polling schedule.",
                        "enum": [
                            "setting:schedule"
                        ],
                        "$ref": "#/components/schemas/RangediscoverybasicpollsettingsSwitchPortDataCollectionPollingSchedule"
                    },
                    "switch_port_data_collection_polling_interval": {
                        "type": "integer",
                        "description": "Indicates the interval for switch port data collection polling.",
                        "format": "int64",
                        "example": 1
                    },
                    "credential_group": {
                        "type": "string",
                        "description": "Credential group.",
                        "example": "Example credential_group"
                    },
                    "polling_frequency_modifier": {
                        "type": "string",
                        "description": "Polling Frequency Modifier.",
                        "example": "Example polling_frequency_modifier"
                    },
                    "use_global_polling_frequency_modifier": {
                        "type": "boolean",
                        "description": "Use Global Polling Frequency Modifier.",
                        "example": false
                    }
                }
            },
            "RangediscoverybasicpollsettingsSwitchPortDataCollectionPollingSchedule": {
                "type": "object",
                "properties": {
                    "weekdays": {
                        "type": "array",
                        "description": "Days of the week when scheduling is triggered.",
                        "enum": [
                            "SATURDAY",
                            "SUNDAY",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for the schedule.",
                        "example": "Example time_zone"
                    },
                    "recurring_time": {
                        "type": "integer",
                        "description": "The recurring time for the schedule in Epoch seconds format. This field is obsolete and is preserved only for backward compatibility purposes. Please use other applicable fields to define the recurring schedule. DO NOT use recurring_time together with these fields. If you use recurring_time with other fields to define the recurring schedule, recurring_time has priority over year, hour_of_day, and minutes_past_hour and will override the values of these fields, although it does not override month and day_of_month. In this case, the recurring time value might be different than the intended value that you define.",
                        "format": "int64",
                        "example": 1
                    },
                    "frequency": {
                        "type": "string",
                        "description": "The frequency for the scheduled task.",
                        "enum": [
                            "DAILY",
                            "HOURLY",
                            "MONTHLY",
                            "WEEKLY"
                        ],
                        "example": "Example frequency"
                    },
                    "every": {
                        "type": "integer",
                        "description": "The number of frequency to wait before repeating the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "minutes_past_hour": {
                        "type": "integer",
                        "description": "The minutes past the hour for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "hour_of_day": {
                        "type": "integer",
                        "description": "The hour of day for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "year": {
                        "type": "integer",
                        "description": "The year for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "month": {
                        "type": "integer",
                        "description": "The month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "day_of_month": {
                        "type": "integer",
                        "description": "The day of the month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "repeat": {
                        "type": "string",
                        "description": "Indicates if the scheduled task will be repeated or run only once.",
                        "enum": [
                            "ONCE",
                            "RECUR"
                        ],
                        "example": "Example repeat"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "If set to True, the scheduled task is disabled.",
                        "example": false
                    }
                }
            },
            "RangeDiscoveryBlackoutSetting": {
                "type": "object",
                "properties": {
                    "enable_blackout": {
                        "type": "boolean",
                        "description": "Determines whether a blackout is enabled or not.",
                        "example": false
                    },
                    "blackout_duration": {
                        "type": "integer",
                        "description": "The blackout duration in seconds; minimum value is 1 minute.",
                        "format": "int64",
                        "example": 1
                    },
                    "blackout_schedule": {
                        "description": "A Schedule Setting struct that determines blackout schedule.",
                        "enum": [
                            "setting:schedule"
                        ],
                        "$ref": "#/components/schemas/RangediscoveryblackoutsettingBlackoutSchedule"
                    }
                }
            },
            "RangediscoveryblackoutsettingBlackoutSchedule": {
                "type": "object",
                "properties": {
                    "weekdays": {
                        "type": "array",
                        "description": "Days of the week when scheduling is triggered.",
                        "enum": [
                            "SATURDAY",
                            "SUNDAY",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for the schedule.",
                        "example": "Example time_zone"
                    },
                    "recurring_time": {
                        "type": "integer",
                        "description": "The recurring time for the schedule in Epoch seconds format. This field is obsolete and is preserved only for backward compatibility purposes. Please use other applicable fields to define the recurring schedule. DO NOT use recurring_time together with these fields. If you use recurring_time with other fields to define the recurring schedule, recurring_time has priority over year, hour_of_day, and minutes_past_hour and will override the values of these fields, although it does not override month and day_of_month. In this case, the recurring time value might be different than the intended value that you define.",
                        "format": "int64",
                        "example": 1
                    },
                    "frequency": {
                        "type": "string",
                        "description": "The frequency for the scheduled task.",
                        "enum": [
                            "DAILY",
                            "HOURLY",
                            "MONTHLY",
                            "WEEKLY"
                        ],
                        "example": "Example frequency"
                    },
                    "every": {
                        "type": "integer",
                        "description": "The number of frequency to wait before repeating the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "minutes_past_hour": {
                        "type": "integer",
                        "description": "The minutes past the hour for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "hour_of_day": {
                        "type": "integer",
                        "description": "The hour of day for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "year": {
                        "type": "integer",
                        "description": "The year for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "month": {
                        "type": "integer",
                        "description": "The month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "day_of_month": {
                        "type": "integer",
                        "description": "The day of the month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "repeat": {
                        "type": "string",
                        "description": "Indicates if the scheduled task will be repeated or run only once.",
                        "enum": [
                            "ONCE",
                            "RECUR"
                        ],
                        "example": "Example repeat"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "If set to True, the scheduled task is disabled.",
                        "example": false
                    }
                }
            },
            "RangeExclude": {
                "type": "object",
                "properties": {
                    "start_address": {
                        "type": "string",
                        "description": "The IPv4 Address starting address of the exclusion range.",
                        "example": "Example start_address"
                    },
                    "end_address": {
                        "type": "string",
                        "description": "The IPv4 Address ending address of the exclusion range.",
                        "example": "Example end_address"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the exclusion range; maximum 256 characters.",
                        "example": "Example comment"
                    }
                }
            },
            "RangeFingerprintFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The name of the DHCP filter.",
                        "example": "Example filter"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to be applied.",
                        "enum": [
                            "Allow",
                            "Deny"
                        ],
                        "example": "Example permission"
                    }
                }
            },
            "RangeLogicFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The filter name.",
                        "example": "Example filter"
                    },
                    "type": {
                        "type": "string",
                        "description": "The filter type. Valid values are: * MAC * NAC * Option",
                        "example": "Example type"
                    }
                }
            },
            "RangeMacFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The name of the DHCP filter.",
                        "example": "Example filter"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to be applied.",
                        "enum": [
                            "Allow",
                            "Deny"
                        ],
                        "example": "Example permission"
                    }
                }
            },
            "RangeMember": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example ipv4addr"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid Member.",
                        "example": "Example ipv6addr"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid member name",
                        "example": "Example name"
                    }
                }
            },
            "RangeMsAdUserData": {
                "type": "object",
                "properties": {
                    "active_users_count": {
                        "type": "integer",
                        "description": "The number of active users.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "RangeMsOptions": {
                "type": "object",
                "properties": {
                    "num": {
                        "type": "integer",
                        "description": "The code of the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the DHCP option.",
                        "example": "Example value"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the DHCP option.",
                        "example": "Example name"
                    },
                    "vendor_class": {
                        "type": "string",
                        "description": "The name of the vendor class with which this DHCP option is associated.",
                        "example": "Example vendor_class"
                    },
                    "user_class": {
                        "type": "string",
                        "description": "The name of the user class with which this DHCP option is associated.",
                        "example": "Example user_class"
                    },
                    "type": {
                        "type": "string",
                        "description": "The DHCP option type. Valid values are: * \"16-bit signed integer\" * \"16-bit unsigned integer\" * \"32-bit signed integer\" * \"32-bit unsigned integer\" * \"64-bit unsigned integer\" * \"8-bit signed integer\" * \"8-bit unsigned integer (1,2,4,8)\" * \"8-bit unsigned integer\" * \"array of 16-bit integer\" * \"array of 16-bit unsigned integer\" * \"array of 32-bit integer\" * \"array of 32-bit unsigned integer\" * \"array of 64-bit unsigned integer\" * \"array of 8-bit integer\" * \"array of 8-bit unsigned integer\" * \"array of ip-address pair\" * \"array of ip-address\" * \"array of string\" * \"binary\" * \"boolean array of ip-address\" * \"boolean\" * \"boolean-text\" * \"domain-list\" * \"domain-name\" * \"encapsulated\" * \"ip-address\" * \"string\" * \"text\"",
                        "readOnly": true,
                        "example": "Example type"
                    }
                }
            },
            "RangeMsServer": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address or FQDN of the Microsoft server.",
                        "example": "Example ipv4addr"
                    }
                }
            },
            "RangeNacFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The name of the DHCP filter.",
                        "example": "Example filter"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to be applied.",
                        "enum": [
                            "Allow",
                            "Deny"
                        ],
                        "example": "Example permission"
                    }
                }
            },
            "RangeOptionFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The name of the DHCP filter.",
                        "example": "Example filter"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to be applied.",
                        "enum": [
                            "Allow",
                            "Deny"
                        ],
                        "example": "Example permission"
                    }
                }
            },
            "RangeOptions": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the DHCP option.",
                        "example": "Example name"
                    },
                    "num": {
                        "type": "integer",
                        "description": "The code of the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "vendor_class": {
                        "type": "string",
                        "description": "The name of the space this DHCP option is associated to.",
                        "example": "Example vendor_class"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the DHCP option",
                        "example": "Example value"
                    },
                    "use_option": {
                        "type": "boolean",
                        "description": "Only applies to special options that are displayed separately from other options and have a use flag. These options are: * routers * router-templates * domain-name-servers * domain-name * broadcast-address * broadcast-address-offset * dhcp-lease-time * dhcp6.name-servers",
                        "example": false
                    }
                }
            },
            "RangePortControlBlackoutSetting": {
                "type": "object",
                "properties": {
                    "enable_blackout": {
                        "type": "boolean",
                        "description": "Determines whether a blackout is enabled or not.",
                        "example": false
                    },
                    "blackout_duration": {
                        "type": "integer",
                        "description": "The blackout duration in seconds; minimum value is 1 minute.",
                        "format": "int64",
                        "example": 1
                    },
                    "blackout_schedule": {
                        "description": "A Schedule Setting struct that determines blackout schedule.",
                        "enum": [
                            "setting:schedule"
                        ],
                        "$ref": "#/components/schemas/RangeportcontrolblackoutsettingBlackoutSchedule"
                    }
                }
            },
            "RangeportcontrolblackoutsettingBlackoutSchedule": {
                "type": "object",
                "properties": {
                    "weekdays": {
                        "type": "array",
                        "description": "Days of the week when scheduling is triggered.",
                        "enum": [
                            "SATURDAY",
                            "SUNDAY",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for the schedule.",
                        "example": "Example time_zone"
                    },
                    "recurring_time": {
                        "type": "integer",
                        "description": "The recurring time for the schedule in Epoch seconds format. This field is obsolete and is preserved only for backward compatibility purposes. Please use other applicable fields to define the recurring schedule. DO NOT use recurring_time together with these fields. If you use recurring_time with other fields to define the recurring schedule, recurring_time has priority over year, hour_of_day, and minutes_past_hour and will override the values of these fields, although it does not override month and day_of_month. In this case, the recurring time value might be different than the intended value that you define.",
                        "format": "int64",
                        "example": 1
                    },
                    "frequency": {
                        "type": "string",
                        "description": "The frequency for the scheduled task.",
                        "enum": [
                            "DAILY",
                            "HOURLY",
                            "MONTHLY",
                            "WEEKLY"
                        ],
                        "example": "Example frequency"
                    },
                    "every": {
                        "type": "integer",
                        "description": "The number of frequency to wait before repeating the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "minutes_past_hour": {
                        "type": "integer",
                        "description": "The minutes past the hour for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "hour_of_day": {
                        "type": "integer",
                        "description": "The hour of day for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "year": {
                        "type": "integer",
                        "description": "The year for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "month": {
                        "type": "integer",
                        "description": "The month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "day_of_month": {
                        "type": "integer",
                        "description": "The day of the month for the scheduled task.",
                        "format": "int64",
                        "example": 1
                    },
                    "repeat": {
                        "type": "string",
                        "description": "Indicates if the scheduled task will be repeated or run only once.",
                        "enum": [
                            "ONCE",
                            "RECUR"
                        ],
                        "example": "Example repeat"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "If set to True, the scheduled task is disabled.",
                        "example": false
                    }
                }
            },
            "RangeRelayAgentFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The name of the DHCP filter.",
                        "example": "Example filter"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to be applied.",
                        "enum": [
                            "Allow",
                            "Deny"
                        ],
                        "example": "Example permission"
                    }
                }
            },
            "RangeSplitMember": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address or FQDN of the Microsoft server.",
                        "example": "Example ipv4addr"
                    }
                }
            },
            "RangeSubscribeSettings": {
                "type": "object",
                "properties": {
                    "enabled_attributes": {
                        "type": "array",
                        "description": "The list of Cisco ISE attributes allowed for subscription.",
                        "enum": [
                            "DOMAINNAME",
                            "ENDPOINT_PROFILE",
                            "SECURITY_GROUP",
                            "SESSION_STATE",
                            "SSID",
                            "USERNAME",
                            "VLAN"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "mapped_ea_attributes": {
                        "description": "The list of NIOS extensible attributes to Cisco ISE attributes mappings.",
                        "enum": [
                            "ciscoise:eaassociation"
                        ],
                        "$ref": "#/components/schemas/RangesubscribesettingsMappedEaAttributes"
                    }
                }
            },
            "RangesubscribesettingsMappedEaAttributes": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The Cisco ISE attribute name that is enabled for publishsing from a Cisco ISE endpoint.",
                        "enum": [
                            "ACCOUNT_SESSION_ID",
                            "AUDIT_SESSION_ID",
                            "EPS_STATUS",
                            "IP_ADDRESS",
                            "MAC",
                            "NAS_IP_ADDRESS",
                            "NAS_PORT_ID",
                            "POSTURE_STATUS",
                            "POSTURE_TIMESTAMP"
                        ],
                        "example": "Example name"
                    },
                    "mapped_ea": {
                        "type": "string",
                        "description": "The name of the extensible attribute definition object the Cisco ISE attribute that is enabled for subscription is mapped on.",
                        "example": "Example mapped_ea"
                    }
                }
            },
            "ListRangeResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Range__ objects.",
                        "type": "array",
                        "title": "ListRangeResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Range"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Range__ objects.",
                        "type": "object",
                        "title": "ListRangeResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Range"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateRangeResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Range__ in object format.",
                        "type": "object",
                        "title": "CreateRangeResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Range"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Range__.",
                        "type": "string",
                        "title": "CreateRangeResponse"
                    }
                ]
            },
            "GetRangeResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Range"
                    },
                    {
                        "description": "The response format to retrieve __Range__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetRangeResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Range"
                            }
                        }
                    }
                ]
            },
            "UpdateRangeResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Range__ in object format.",
                        "type": "object",
                        "title": "UpdateRangeResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Range"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Range__ .",
                        "type": "string",
                        "title": "UpdateRangeResponse"
                    }
                ]
            },
            "Rangetemplate": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "bootfile": {
                        "type": "string",
                        "description": "The bootfile name for the range. You can configure the DHCP server to support clients that use the boot file name option in their DHCPREQUEST messages.",
                        "example": "Example bootfile"
                    },
                    "bootserver": {
                        "type": "string",
                        "description": "The bootserver address for the range. You can specify the name and/or IP address of the boot server that the host needs to boot. The boot server IPv4 Address or name in FQDN format.",
                        "example": "Example bootserver"
                    },
                    "cloud_api_compatible": {
                        "type": "boolean",
                        "description": "This flag controls whether this template can be used to create network objects in a cloud-computing deployment.",
                        "example": false
                    },
                    "comment": {
                        "type": "string",
                        "description": "A descriptive comment of a range template object.",
                        "example": "Example comment"
                    },
                    "ddns_domainname": {
                        "type": "string",
                        "description": "The dynamic DNS domain name the appliance uses specifically for DDNS updates for this range.",
                        "example": "Example ddns_domainname"
                    },
                    "ddns_generate_hostname": {
                        "type": "boolean",
                        "description": "If this field is set to True, the DHCP server generates a hostname and updates DNS with it when the DHCP client request does not contain a hostname.",
                        "example": false
                    },
                    "delegated_member": {
                        "$ref": "#/components/schemas/RangetemplateDelegatedMember"
                    },
                    "deny_all_clients": {
                        "type": "boolean",
                        "description": "If True, send NAK forcing the client to take the new address.",
                        "example": false
                    },
                    "deny_bootp": {
                        "type": "boolean",
                        "description": "Determines if BOOTP settings are disabled and BOOTP requests will be denied.",
                        "example": false
                    },
                    "email_list": {
                        "type": "array",
                        "description": "The e-mail lists to which the appliance sends DHCP threshold alarm e-mail messages.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "enable_ddns": {
                        "type": "boolean",
                        "description": "Determines if the DHCP server sends DDNS updates to DNS servers in the same Grid, and to external DNS servers.",
                        "example": false
                    },
                    "enable_dhcp_thresholds": {
                        "type": "boolean",
                        "description": "Determines if DHCP thresholds are enabled for the range.",
                        "example": false
                    },
                    "enable_email_warnings": {
                        "type": "boolean",
                        "description": "Determines if DHCP threshold warnings are sent through email.",
                        "example": false
                    },
                    "enable_pxe_lease_time": {
                        "type": "boolean",
                        "description": "Set this to True if you want the DHCP server to use a different lease time for PXE clients.",
                        "example": false
                    },
                    "enable_snmp_warnings": {
                        "type": "boolean",
                        "description": "Determines if DHCP threshold warnings are sent through SNMP.",
                        "example": false
                    },
                    "exclude": {
                        "type": "array",
                        "description": "These are ranges of IP addresses that the appliance does not use to assign to clients. You can use these exclusion addresses as static IP addresses. They contain the start and end addresses of the exclusion range, and optionally, information about this exclusion range.",
                        "enum": [
                            "exclusionrangetemplate"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/RangetemplateExclude"
                        }
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "failover_association": {
                        "type": "string",
                        "description": "The name of the failover association: the server in this failover association will serve the IPv4 range in case the main server is out of service. {rangetemplate:rangetemplate} must be set to 'FAILOVER' or 'FAILOVER_MS' if you want the failover association specified here to serve the range.",
                        "example": "Example failover_association"
                    },
                    "fingerprint_filter_rules": {
                        "type": "array",
                        "description": "This field contains the fingerprint filters for this DHCP range. The appliance uses matching rules in these filters to select the address range from which it assigns a lease.",
                        "enum": [
                            "filterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/RangetemplateFingerprintFilterRules"
                        }
                    },
                    "high_water_mark": {
                        "type": "integer",
                        "description": "The percentage of DHCP range usage threshold above which range usage is not expected and may warrant your attention. When the high watermark is reached, the Infoblox appliance generates a syslog message and sends a warning (if enabled). A number that specifies the percentage of allocated addresses. The range is from 1 to 100.",
                        "format": "int64",
                        "example": 1
                    },
                    "high_water_mark_reset": {
                        "type": "integer",
                        "description": "The percentage of DHCP range usage below which the corresponding SNMP trap is reset. A number that specifies the percentage of allocated addresses. The range is from 1 to 100. The high watermark reset value must be lower than the high watermark value.",
                        "format": "int64",
                        "example": 1
                    },
                    "ignore_dhcp_option_list_request": {
                        "type": "boolean",
                        "description": "If this field is set to False, the appliance returns all DHCP options the client is eligible to receive, rather than only the list of options the client has requested.",
                        "example": false
                    },
                    "known_clients": {
                        "type": "string",
                        "description": "Permission for known clients. If set to 'Deny' known clients will be denied IP addresses. Known clients include roaming hosts and clients with fixed addresses or DHCP host entries. Unknown clients include clients that are not roaming hosts and clients that do not have fixed addresses or DHCP host entries.",
                        "enum": [
                            "Allow",
                            "Deny"
                        ],
                        "example": "Example known_clients"
                    },
                    "lease_scavenge_time": {
                        "type": "integer",
                        "description": "An integer that specifies the period of time (in seconds) that frees and backs up leases remained in the database before they are automatically deleted. To disable lease scavenging, set the parameter to -1. The minimum positive value must be greater than 86400 seconds (1 day).",
                        "format": "int64",
                        "example": 1
                    },
                    "logic_filter_rules": {
                        "type": "array",
                        "description": "This field contains the logic filters to be applied on this range. This list corresponds to the match rules that are written to the dhcpd configuration file.",
                        "enum": [
                            "logicfilterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/RangetemplateLogicFilterRules"
                        }
                    },
                    "low_water_mark": {
                        "type": "integer",
                        "description": "The percentage of DHCP range usage below which the Infoblox appliance generates a syslog message and sends a warning (if enabled). A number that specifies the percentage of allocated addresses. The range is from 1 to 100.",
                        "format": "int64",
                        "example": 1
                    },
                    "low_water_mark_reset": {
                        "type": "integer",
                        "description": "The percentage of DHCP range usage threshold below which range usage is not expected and may warrant your attention. When the low watermark is crossed, the Infoblox appliance generates a syslog message and sends a warning (if enabled). A number that specifies the percentage of allocated addresses. The range is from 1 to 100. The low watermark reset value must be higher than the low watermark value.",
                        "format": "int64",
                        "example": 1
                    },
                    "mac_filter_rules": {
                        "type": "array",
                        "description": "This field contains the MAC filters to be applied to this range. The appliance uses the matching rules of these filters to select the address range from which it assigns a lease.",
                        "enum": [
                            "filterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/RangetemplateMacFilterRules"
                        }
                    },
                    "member": {
                        "$ref": "#/components/schemas/RangetemplateMember"
                    },
                    "ms_options": {
                        "type": "array",
                        "description": "The Microsoft DHCP options for this range.",
                        "enum": [
                            "msdhcpoption"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/RangetemplateMsOptions"
                        }
                    },
                    "ms_server": {
                        "$ref": "#/components/schemas/RangetemplateMsServer"
                    },
                    "nac_filter_rules": {
                        "type": "array",
                        "description": "This field contains the NAC filters to be applied to this range. The appliance uses the matching rules of these filters to select the address range from which it assigns a lease.",
                        "enum": [
                            "filterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/RangetemplateNacFilterRules"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of a range template object.",
                        "example": "Example name"
                    },
                    "nextserver": {
                        "type": "string",
                        "description": "The name in FQDN and/or IPv4 Address format of the next server that the host needs to boot.",
                        "example": "Example nextserver"
                    },
                    "number_of_addresses": {
                        "type": "integer",
                        "description": "The number of addresses for this range.",
                        "format": "int64",
                        "example": 1
                    },
                    "offset": {
                        "type": "integer",
                        "description": "The start address offset for this range.",
                        "format": "int64",
                        "example": 1
                    },
                    "option_filter_rules": {
                        "type": "array",
                        "description": "This field contains the Option filters to be applied to this range. The appliance uses the matching rules of these filters to select the address range from which it assigns a lease.",
                        "enum": [
                            "filterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/RangetemplateOptionFilterRules"
                        }
                    },
                    "options": {
                        "type": "array",
                        "description": "An array of DHCP option dhcpoption structs that lists the DHCP options associated with the object.",
                        "enum": [
                            "dhcpoption"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/RangetemplateOptions"
                        }
                    },
                    "pxe_lease_time": {
                        "type": "integer",
                        "description": "The PXE lease time value for a range object. Some hosts use PXE (Preboot Execution Environment) to boot remotely from a server. To better manage your IP resources, set a different lease time for PXE boot requests. You can configure the DHCP server to allocate an IP address with a shorter lease time to hosts that send PXE boot requests, so IP addresses are not leased longer than necessary. A 32-bit unsigned integer that represents the duration, in seconds, for which the update is cached. Zero indicates that the update is not cached.",
                        "format": "int64",
                        "example": 1
                    },
                    "recycle_leases": {
                        "type": "boolean",
                        "description": "If the field is set to True, the leases are kept in the Recycle Bin until one week after expiration. Otherwise, the leases are permanently deleted.",
                        "example": false
                    },
                    "relay_agent_filter_rules": {
                        "type": "array",
                        "description": "This field contains the Relay Agent filters to be applied to this range. The appliance uses the matching rules of these filters to select the address range from which it assigns a lease.",
                        "enum": [
                            "filterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/RangetemplateRelayAgentFilterRules"
                        }
                    },
                    "server_association_type": {
                        "type": "string",
                        "description": "The type of server that is going to serve the range.",
                        "enum": [
                            "NONE",
                            "MEMBER",
                            "FAILOVER",
                            "MS_SERVER",
                            "MS_FAILOVER"
                        ],
                        "example": "Example server_association_type"
                    },
                    "unknown_clients": {
                        "type": "string",
                        "description": "Permission for unknown clients. If set to 'Deny' unknown clients will be denied IP addresses. Known clients include roaming hosts and clients with fixed addresses or DHCP host entries. Unknown clients include clients that are not roaming hosts and clients that do not have fixed addresses or DHCP host entries.",
                        "enum": [
                            "Allow",
                            "Deny"
                        ],
                        "example": "Example unknown_clients"
                    },
                    "update_dns_on_lease_renewal": {
                        "type": "boolean",
                        "description": "This field controls whether the DHCP server updates DNS when a DHCP lease is renewed.",
                        "example": false
                    },
                    "use_bootfile": {
                        "type": "boolean",
                        "description": "Use flag for: bootfile",
                        "example": false
                    },
                    "use_bootserver": {
                        "type": "boolean",
                        "description": "Use flag for: bootserver",
                        "example": false
                    },
                    "use_ddns_domainname": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_domainname",
                        "example": false
                    },
                    "use_ddns_generate_hostname": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_generate_hostname",
                        "example": false
                    },
                    "use_deny_bootp": {
                        "type": "boolean",
                        "description": "Use flag for: deny_bootp",
                        "example": false
                    },
                    "use_email_list": {
                        "type": "boolean",
                        "description": "Use flag for: email_list",
                        "example": false
                    },
                    "use_enable_ddns": {
                        "type": "boolean",
                        "description": "Use flag for: enable_ddns",
                        "example": false
                    },
                    "use_enable_dhcp_thresholds": {
                        "type": "boolean",
                        "description": "Use flag for: enable_dhcp_thresholds",
                        "example": false
                    },
                    "use_ignore_dhcp_option_list_request": {
                        "type": "boolean",
                        "description": "Use flag for: ignore_dhcp_option_list_request",
                        "example": false
                    },
                    "use_known_clients": {
                        "type": "boolean",
                        "description": "Use flag for: known_clients",
                        "example": false
                    },
                    "use_lease_scavenge_time": {
                        "type": "boolean",
                        "description": "Use flag for: lease_scavenge_time",
                        "example": false
                    },
                    "use_logic_filter_rules": {
                        "type": "boolean",
                        "description": "Use flag for: logic_filter_rules",
                        "example": false
                    },
                    "use_ms_options": {
                        "type": "boolean",
                        "description": "Use flag for: ms_options",
                        "example": false
                    },
                    "use_nextserver": {
                        "type": "boolean",
                        "description": "Use flag for: nextserver",
                        "example": false
                    },
                    "use_options": {
                        "type": "boolean",
                        "description": "Use flag for: options",
                        "example": false
                    },
                    "use_pxe_lease_time": {
                        "type": "boolean",
                        "description": "Use flag for: pxe_lease_time",
                        "example": false
                    },
                    "use_recycle_leases": {
                        "type": "boolean",
                        "description": "Use flag for: recycle_leases",
                        "example": false
                    },
                    "use_unknown_clients": {
                        "type": "boolean",
                        "description": "Use flag for: unknown_clients",
                        "example": false
                    },
                    "use_update_dns_on_lease_renewal": {
                        "type": "boolean",
                        "description": "Use flag for: update_dns_on_lease_renewal",
                        "example": false
                    }
                }
            },
            "RangetemplateDelegatedMember": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example ipv4addr"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid Member.",
                        "example": "Example ipv6addr"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid member name",
                        "example": "Example name"
                    }
                }
            },
            "RangetemplateExclude": {
                "type": "object",
                "properties": {
                    "offset": {
                        "type": "integer",
                        "description": "The address offset of the DHCP exclusion range template.",
                        "format": "int64",
                        "example": 1
                    },
                    "number_of_addresses": {
                        "type": "integer",
                        "description": "The number of addresses in the DHCP exclusion range template.",
                        "format": "int64",
                        "example": 1
                    },
                    "comment": {
                        "type": "string",
                        "description": "A descriptive comment of a DHCP exclusion range template.",
                        "example": "Example comment"
                    }
                }
            },
            "RangetemplateFingerprintFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The name of the DHCP filter.",
                        "example": "Example filter"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to be applied.",
                        "enum": [
                            "Allow",
                            "Deny"
                        ],
                        "example": "Example permission"
                    }
                }
            },
            "RangetemplateLogicFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The filter name.",
                        "example": "Example filter"
                    },
                    "type": {
                        "type": "string",
                        "description": "The filter type. Valid values are: * MAC * NAC * Option",
                        "example": "Example type"
                    }
                }
            },
            "RangetemplateMacFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The name of the DHCP filter.",
                        "example": "Example filter"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to be applied.",
                        "enum": [
                            "Allow",
                            "Deny"
                        ],
                        "example": "Example permission"
                    }
                }
            },
            "RangetemplateMember": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the Grid Member.",
                        "example": "Example ipv4addr"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the Grid Member.",
                        "example": "Example ipv6addr"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Grid member name",
                        "example": "Example name"
                    }
                }
            },
            "RangetemplateMsOptions": {
                "type": "object",
                "properties": {
                    "num": {
                        "type": "integer",
                        "description": "The code of the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the DHCP option.",
                        "example": "Example value"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the DHCP option.",
                        "example": "Example name"
                    },
                    "vendor_class": {
                        "type": "string",
                        "description": "The name of the vendor class with which this DHCP option is associated.",
                        "example": "Example vendor_class"
                    },
                    "user_class": {
                        "type": "string",
                        "description": "The name of the user class with which this DHCP option is associated.",
                        "example": "Example user_class"
                    },
                    "type": {
                        "type": "string",
                        "description": "The DHCP option type. Valid values are: * \"16-bit signed integer\" * \"16-bit unsigned integer\" * \"32-bit signed integer\" * \"32-bit unsigned integer\" * \"64-bit unsigned integer\" * \"8-bit signed integer\" * \"8-bit unsigned integer (1,2,4,8)\" * \"8-bit unsigned integer\" * \"array of 16-bit integer\" * \"array of 16-bit unsigned integer\" * \"array of 32-bit integer\" * \"array of 32-bit unsigned integer\" * \"array of 64-bit unsigned integer\" * \"array of 8-bit integer\" * \"array of 8-bit unsigned integer\" * \"array of ip-address pair\" * \"array of ip-address\" * \"array of string\" * \"binary\" * \"boolean array of ip-address\" * \"boolean\" * \"boolean-text\" * \"domain-list\" * \"domain-name\" * \"encapsulated\" * \"ip-address\" * \"string\" * \"text\"",
                        "readOnly": true,
                        "example": "Example type"
                    }
                }
            },
            "RangetemplateMsServer": {
                "type": "object",
                "properties": {
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address or FQDN of the Microsoft server.",
                        "example": "Example ipv4addr"
                    }
                }
            },
            "RangetemplateNacFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The name of the DHCP filter.",
                        "example": "Example filter"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to be applied.",
                        "enum": [
                            "Allow",
                            "Deny"
                        ],
                        "example": "Example permission"
                    }
                }
            },
            "RangetemplateOptionFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The name of the DHCP filter.",
                        "example": "Example filter"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to be applied.",
                        "enum": [
                            "Allow",
                            "Deny"
                        ],
                        "example": "Example permission"
                    }
                }
            },
            "RangetemplateOptions": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the DHCP option.",
                        "example": "Example name"
                    },
                    "num": {
                        "type": "integer",
                        "description": "The code of the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "vendor_class": {
                        "type": "string",
                        "description": "The name of the space this DHCP option is associated to.",
                        "example": "Example vendor_class"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the DHCP option",
                        "example": "Example value"
                    },
                    "use_option": {
                        "type": "boolean",
                        "description": "Only applies to special options that are displayed separately from other options and have a use flag. These options are: * routers * router-templates * domain-name-servers * domain-name * broadcast-address * broadcast-address-offset * dhcp-lease-time * dhcp6.name-servers",
                        "example": false
                    }
                }
            },
            "RangetemplateRelayAgentFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The name of the DHCP filter.",
                        "example": "Example filter"
                    },
                    "permission": {
                        "type": "string",
                        "description": "The permission to be applied.",
                        "enum": [
                            "Allow",
                            "Deny"
                        ],
                        "example": "Example permission"
                    }
                }
            },
            "ListRangetemplateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Rangetemplate__ objects.",
                        "type": "array",
                        "title": "ListRangetemplateResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Rangetemplate"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Rangetemplate__ objects.",
                        "type": "object",
                        "title": "ListRangetemplateResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Rangetemplate"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateRangetemplateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Rangetemplate__ in object format.",
                        "type": "object",
                        "title": "CreateRangetemplateResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Rangetemplate"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Rangetemplate__.",
                        "type": "string",
                        "title": "CreateRangetemplateResponse"
                    }
                ]
            },
            "GetRangetemplateResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Rangetemplate"
                    },
                    {
                        "description": "The response format to retrieve __Rangetemplate__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetRangetemplateResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Rangetemplate"
                            }
                        }
                    }
                ]
            },
            "UpdateRangetemplateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Rangetemplate__ in object format.",
                        "type": "object",
                        "title": "UpdateRangetemplateResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Rangetemplate"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Rangetemplate__ .",
                        "type": "string",
                        "title": "UpdateRangetemplateResponse"
                    }
                ]
            },
            "Roaminghost": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "address_type": {
                        "type": "string",
                        "description": "The address type for this roaming host.",
                        "enum": [
                            "IPV4",
                            "IPV6",
                            "BOTH"
                        ],
                        "example": "Example address_type"
                    },
                    "bootfile": {
                        "type": "string",
                        "description": "The bootfile name for the roaming host. You can configure the DHCP server to support clients that use the boot file name option in their DHCPREQUEST messages.",
                        "example": "Example bootfile"
                    },
                    "bootserver": {
                        "type": "string",
                        "description": "The boot server address for the roaming host. You can specify the name and/or IP address of the boot server that the host needs to boot. The boot server IPv4 Address or name in FQDN format.",
                        "example": "Example bootserver"
                    },
                    "client_identifier_prepend_zero": {
                        "type": "boolean",
                        "description": "This field controls whether there is a prepend for the dhcp-client-identifier of a roaming host.",
                        "example": false
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the roaming host; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "ddns_domainname": {
                        "type": "string",
                        "description": "The DDNS domain name for this roaming host.",
                        "example": "Example ddns_domainname"
                    },
                    "ddns_hostname": {
                        "type": "string",
                        "description": "The DDNS host name for this roaming host.",
                        "example": "Example ddns_hostname"
                    },
                    "deny_bootp": {
                        "type": "boolean",
                        "description": "If set to true, BOOTP settings are disabled and BOOTP requests will be denied.",
                        "example": false
                    },
                    "dhcp_client_identifier": {
                        "type": "string",
                        "description": "The DHCP client ID for the roaming host.",
                        "example": "Example dhcp_client_identifier"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines whether a roaming host is disabled or not. When this is set to False, the roaming host is enabled.",
                        "example": false
                    },
                    "enable_ddns": {
                        "type": "boolean",
                        "description": "The dynamic DNS updates flag of the roaming host object. If set to True, the DHCP server sends DDNS updates to DNS servers in the same Grid, and to external DNS servers.",
                        "example": false
                    },
                    "enable_pxe_lease_time": {
                        "type": "boolean",
                        "description": "Set this to True if you want the DHCP server to use a different lease time for PXE clients.",
                        "example": false
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "force_roaming_hostname": {
                        "type": "boolean",
                        "description": "Set this to True to use the roaming host name as its ddns_hostname.",
                        "example": false
                    },
                    "ignore_dhcp_option_list_request": {
                        "type": "boolean",
                        "description": "If this field is set to False, the appliance returns all the DHCP options the client is eligible to receive, rather than only the list of options the client has requested.",
                        "example": false
                    },
                    "ipv6_client_hostname": {
                        "type": "string",
                        "description": "The client hostname of a DHCP roaming host object. This field specifies the host name that the DHCP client sends to the Infoblox appliance using DHCP option 12.",
                        "readOnly": true,
                        "example": "Example ipv6_client_hostname"
                    },
                    "ipv6_ddns_domainname": {
                        "type": "string",
                        "description": "The IPv6 DDNS domain name for this roaming host.",
                        "example": "Example ipv6_ddns_domainname"
                    },
                    "ipv6_ddns_hostname": {
                        "type": "string",
                        "description": "The IPv6 DDNS host name for this roaming host.",
                        "example": "Example ipv6_ddns_hostname"
                    },
                    "ipv6_domain_name": {
                        "type": "string",
                        "description": "The IPv6 domain name for this roaming host.",
                        "example": "Example ipv6_domain_name"
                    },
                    "ipv6_domain_name_servers": {
                        "type": "array",
                        "description": "The IPv6 addresses of DNS recursive name servers to which the DHCP client can send name resolution requests. The DHCP server includes this information in the DNS Recursive Name Server option in Advertise, Rebind, Information-Request, and Reply messages.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "ipv6_duid": {
                        "type": "string",
                        "description": "The DUID value for this roaming host.",
                        "example": "Example ipv6_duid"
                    },
                    "ipv6_enable_ddns": {
                        "type": "boolean",
                        "description": "Set this to True to enable IPv6 DDNS.",
                        "example": false
                    },
                    "ipv6_force_roaming_hostname": {
                        "type": "boolean",
                        "description": "Set this to True to use the roaming host name as its ddns_hostname.",
                        "example": false
                    },
                    "ipv6_mac_address": {
                        "type": "string",
                        "description": "The MAC address for this roaming host.",
                        "example": "Example ipv6_mac_address"
                    },
                    "ipv6_match_option": {
                        "type": "string",
                        "description": "The identification method for an IPv6 or mixed IPv4/IPv6 roaming host. The supported values for this field are \"DUID\" or \"V6_MAC_ADDRESS\", which specify what option should be used to identify the specific DHCPv6 client.",
                        "enum": [
                            "DUID",
                            "V6_MAC_ADDRESS"
                        ],
                        "example": "Example ipv6_match_option"
                    },
                    "ipv6_options": {
                        "type": "array",
                        "description": "An array of DHCP option dhcpoption structs that lists the DHCP options associated with the object.",
                        "enum": [
                            "dhcpoption"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/RoaminghostIpv6Options"
                        }
                    },
                    "ipv6_template": {
                        "type": "string",
                        "description": "If set on creation, the roaming host will be created according to the values specified in the named IPv6 roaming host template.",
                        "writeOnly": true,
                        "example": "Example ipv6_template"
                    },
                    "mac": {
                        "type": "string",
                        "description": "The MAC address for this roaming host.",
                        "example": "Example mac"
                    },
                    "match_client": {
                        "type": "string",
                        "description": "The match-client value for this roaming host. Valid values are: \"MAC_ADDRESS\": The fixed IP address is leased to the matching MAC address. \"CLIENT_ID\": The fixed IP address is leased to the matching DHCP client identifier.",
                        "enum": [
                            "MAC_ADDRESS",
                            "CLIENT_ID"
                        ],
                        "example": "Example match_client"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this roaming host.",
                        "example": "Example name"
                    },
                    "network_view": {
                        "type": "string",
                        "description": "The name of the network view in which this roaming host resides.",
                        "example": "Example network_view"
                    },
                    "nextserver": {
                        "type": "string",
                        "description": "The name in FQDN and/or IPv4 Address format of the next server that the host needs to boot.",
                        "example": "Example nextserver"
                    },
                    "options": {
                        "type": "array",
                        "description": "An array of DHCP option dhcpoption structs that lists the DHCP options associated with the object.",
                        "enum": [
                            "dhcpoption"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/RoaminghostOptions"
                        }
                    },
                    "preferred_lifetime": {
                        "type": "integer",
                        "description": "The preferred lifetime value for this roaming host object.",
                        "format": "int64",
                        "example": 1
                    },
                    "pxe_lease_time": {
                        "type": "integer",
                        "description": "The PXE lease time value for this roaming host object. Some hosts use PXE (Preboot Execution Environment) to boot remotely from a server. To better manage your IP resources, set a different lease time for PXE boot requests. You can configure the DHCP server to allocate an IP address with a shorter lease time to hosts that send PXE boot requests, so IP addresses are not leased longer than necessary. A 32-bit unsigned integer that represents the duration, in seconds, for which the update is cached. Zero indicates that the update is not cached.",
                        "format": "int64",
                        "example": 1
                    },
                    "template": {
                        "type": "string",
                        "description": "If set on creation, the roaming host will be created according to the values specified in the named template.",
                        "writeOnly": true,
                        "example": "Example template"
                    },
                    "use_bootfile": {
                        "type": "boolean",
                        "description": "Use flag for: bootfile",
                        "example": false
                    },
                    "use_bootserver": {
                        "type": "boolean",
                        "description": "Use flag for: bootserver",
                        "example": false
                    },
                    "use_ddns_domainname": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_domainname",
                        "example": false
                    },
                    "use_deny_bootp": {
                        "type": "boolean",
                        "description": "Use flag for: deny_bootp",
                        "example": false
                    },
                    "use_enable_ddns": {
                        "type": "boolean",
                        "description": "Use flag for: enable_ddns",
                        "example": false
                    },
                    "use_ignore_dhcp_option_list_request": {
                        "type": "boolean",
                        "description": "Use flag for: ignore_dhcp_option_list_request",
                        "example": false
                    },
                    "use_ipv6_ddns_domainname": {
                        "type": "boolean",
                        "description": "Use flag for: ipv6_ddns_domainname",
                        "example": false
                    },
                    "use_ipv6_domain_name": {
                        "type": "boolean",
                        "description": "Use flag for: ipv6_domain_name",
                        "example": false
                    },
                    "use_ipv6_domain_name_servers": {
                        "type": "boolean",
                        "description": "Use flag for: ipv6_domain_name_servers",
                        "example": false
                    },
                    "use_ipv6_enable_ddns": {
                        "type": "boolean",
                        "description": "Use flag for: ipv6_enable_ddns",
                        "example": false
                    },
                    "use_ipv6_options": {
                        "type": "boolean",
                        "description": "Use flag for: ipv6_options",
                        "example": false
                    },
                    "use_nextserver": {
                        "type": "boolean",
                        "description": "Use flag for: nextserver",
                        "example": false
                    },
                    "use_options": {
                        "type": "boolean",
                        "description": "Use flag for: options",
                        "example": false
                    },
                    "use_preferred_lifetime": {
                        "type": "boolean",
                        "description": "Use flag for: preferred_lifetime",
                        "example": false
                    },
                    "use_pxe_lease_time": {
                        "type": "boolean",
                        "description": "Use flag for: pxe_lease_time",
                        "example": false
                    },
                    "use_valid_lifetime": {
                        "type": "boolean",
                        "description": "Use flag for: valid_lifetime",
                        "example": false
                    },
                    "valid_lifetime": {
                        "type": "integer",
                        "description": "The valid lifetime value for this roaming host object.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "RoaminghostIpv6Options": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the DHCP option.",
                        "example": "Example name"
                    },
                    "num": {
                        "type": "integer",
                        "description": "The code of the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "vendor_class": {
                        "type": "string",
                        "description": "The name of the space this DHCP option is associated to.",
                        "example": "Example vendor_class"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the DHCP option",
                        "example": "Example value"
                    },
                    "use_option": {
                        "type": "boolean",
                        "description": "Only applies to special options that are displayed separately from other options and have a use flag. These options are: * routers * router-templates * domain-name-servers * domain-name * broadcast-address * broadcast-address-offset * dhcp-lease-time * dhcp6.name-servers",
                        "example": false
                    }
                }
            },
            "RoaminghostOptions": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the DHCP option.",
                        "example": "Example name"
                    },
                    "num": {
                        "type": "integer",
                        "description": "The code of the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "vendor_class": {
                        "type": "string",
                        "description": "The name of the space this DHCP option is associated to.",
                        "example": "Example vendor_class"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the DHCP option",
                        "example": "Example value"
                    },
                    "use_option": {
                        "type": "boolean",
                        "description": "Only applies to special options that are displayed separately from other options and have a use flag. These options are: * routers * router-templates * domain-name-servers * domain-name * broadcast-address * broadcast-address-offset * dhcp-lease-time * dhcp6.name-servers",
                        "example": false
                    }
                }
            },
            "ListRoaminghostResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Roaminghost__ objects.",
                        "type": "array",
                        "title": "ListRoaminghostResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Roaminghost"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Roaminghost__ objects.",
                        "type": "object",
                        "title": "ListRoaminghostResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Roaminghost"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateRoaminghostResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Roaminghost__ in object format.",
                        "type": "object",
                        "title": "CreateRoaminghostResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Roaminghost"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Roaminghost__.",
                        "type": "string",
                        "title": "CreateRoaminghostResponse"
                    }
                ]
            },
            "GetRoaminghostResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Roaminghost"
                    },
                    {
                        "description": "The response format to retrieve __Roaminghost__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetRoaminghostResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Roaminghost"
                            }
                        }
                    }
                ]
            },
            "UpdateRoaminghostResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Roaminghost__ in object format.",
                        "type": "object",
                        "title": "UpdateRoaminghostResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Roaminghost"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Roaminghost__ .",
                        "type": "string",
                        "title": "UpdateRoaminghostResponse"
                    }
                ]
            },
            "Sharednetwork": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "authority": {
                        "type": "boolean",
                        "description": "Authority for the shared network.",
                        "example": false
                    },
                    "bootfile": {
                        "type": "string",
                        "description": "The bootfile name for the shared network. You can configure the DHCP server to support clients that use the boot file name option in their DHCPREQUEST messages.",
                        "example": "Example bootfile"
                    },
                    "bootserver": {
                        "type": "string",
                        "description": "The bootserver address for the shared network. You can specify the name and/or IP address of the boot server that the host needs to boot. The boot server IPv4 Address or name in FQDN format.",
                        "example": "Example bootserver"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the shared network, maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "ddns_generate_hostname": {
                        "type": "boolean",
                        "description": "If this field is set to True, the DHCP server generates a hostname and updates DNS with it when the DHCP client request does not contain a hostname.",
                        "example": false
                    },
                    "ddns_server_always_updates": {
                        "type": "boolean",
                        "description": "This field controls whether only the DHCP server is allowed to update DNS, regardless of the DHCP clients requests. Note that changes for this field take effect only if ddns_use_option81 is True.",
                        "example": false
                    },
                    "ddns_ttl": {
                        "type": "integer",
                        "description": "The DNS update Time to Live (TTL) value of a shared network object. The TTL is a 32-bit unsigned integer that represents the duration, in seconds, for which the update is cached. Zero indicates that the update is not cached.",
                        "format": "int64",
                        "example": 1
                    },
                    "ddns_update_fixed_addresses": {
                        "type": "boolean",
                        "description": "By default, the DHCP server does not update DNS when it allocates a fixed address to a client. You can configure the DHCP server to update the A and PTR records of a client with a fixed address. When this feature is enabled and the DHCP server adds A and PTR records for a fixed address, the DHCP server never discards the records.",
                        "example": false
                    },
                    "ddns_use_option81": {
                        "type": "boolean",
                        "description": "The support for DHCP Option 81 at the shared network level.",
                        "example": false
                    },
                    "deny_bootp": {
                        "type": "boolean",
                        "description": "If set to true, BOOTP settings are disabled and BOOTP requests will be denied.",
                        "example": false
                    },
                    "dhcp_utilization": {
                        "type": "integer",
                        "description": "The percentage of the total DHCP utilization of the networks belonging to the shared network multiplied by 1000. This is the percentage of the total number of available IP addresses from all the networks belonging to the shared network versus the total number of all IP addresses in all of the networks in the shared network.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "dhcp_utilization_status": {
                        "type": "string",
                        "description": "A string describing the utilization level of the shared network.",
                        "enum": [
                            "FULL",
                            "HIGH",
                            "LOW",
                            "NORMAL"
                        ],
                        "readOnly": true,
                        "example": "Example dhcp_utilization_status"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines whether a shared network is disabled or not. When this is set to False, the shared network is enabled.",
                        "example": false
                    },
                    "dynamic_hosts": {
                        "type": "integer",
                        "description": "The total number of DHCP leases issued for the shared network.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "enable_ddns": {
                        "type": "boolean",
                        "description": "The dynamic DNS updates flag of a shared network object. If set to True, the DHCP server sends DDNS updates to DNS servers in the same Grid, and to external DNS servers.",
                        "example": false
                    },
                    "enable_pxe_lease_time": {
                        "type": "boolean",
                        "description": "Set this to True if you want the DHCP server to use a different lease time for PXE clients.",
                        "example": false
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "ignore_client_identifier": {
                        "type": "boolean",
                        "description": "If set to true, the client identifier will be ignored.",
                        "example": false
                    },
                    "ignore_dhcp_option_list_request": {
                        "type": "boolean",
                        "description": "If this field is set to False, the appliance returns all DHCP options the client is eligible to receive, rather than only the list of options the client has requested.",
                        "example": false
                    },
                    "ignore_id": {
                        "type": "string",
                        "description": "Indicates whether the appliance will ignore DHCP client IDs or MAC addresses. Valid values are \"NONE\", \"CLIENT\", or \"MACADDR\". The default is \"NONE\".",
                        "enum": [
                            "NONE",
                            "CLIENT",
                            "MACADDR"
                        ],
                        "example": "Example ignore_id"
                    },
                    "ignore_mac_addresses": {
                        "type": "array",
                        "description": "A list of MAC addresses the appliance will ignore.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "lease_scavenge_time": {
                        "type": "integer",
                        "description": "An integer that specifies the period of time (in seconds) that frees and backs up leases remained in the database before they are automatically deleted. To disable lease scavenging, set the parameter to -1. The minimum positive value must be greater than 86400 seconds (1 day).",
                        "format": "int64",
                        "example": 1
                    },
                    "logic_filter_rules": {
                        "type": "array",
                        "description": "This field contains the logic filters to be applied on the this shared network. This list corresponds to the match rules that are written to the dhcpd configuration file.",
                        "enum": [
                            "logicfilterrule"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/SharednetworkLogicFilterRules"
                        }
                    },
                    "ms_ad_user_data": {
                        "$ref": "#/components/schemas/SharednetworkMsAdUserData"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the IPv6 Shared Network.",
                        "example": "Example name"
                    },
                    "network_view": {
                        "type": "string",
                        "description": "The name of the network view in which this shared network resides.",
                        "example": "Example network_view"
                    },
                    "networks": {
                        "type": "array",
                        "description": "A list of networks belonging to the shared network Each individual list item must be specified as an object containing a '_ref' parameter to a network reference, for example:: [{ \"_ref\": \"network/ZG5zLm5ldHdvcmskMTAuMwLvMTYvMA\", }] if the reference of the wanted network is not known, it is possible to specify search parameters for the network instead in the following way:: [{ \"_ref\": { 'network': '10.0.0.0/8', } }] note that in this case the search must match exactly one network for the assignment to be successful.",
                        "enum": [
                            "network"
                        ],
                        "items": {
                            "type": "string",
                            "enum": [
                                "network"
                            ]
                        }
                    },
                    "nextserver": {
                        "type": "string",
                        "description": "The name in FQDN and/or IPv4 Address of the next server that the host needs to boot.",
                        "example": "Example nextserver"
                    },
                    "options": {
                        "type": "array",
                        "description": "An array of DHCP option dhcpoption structs that lists the DHCP options associated with the object.",
                        "enum": [
                            "dhcpoption"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/SharednetworkOptions"
                        }
                    },
                    "pxe_lease_time": {
                        "type": "integer",
                        "description": "The PXE lease time value of a shared network object. Some hosts use PXE (Preboot Execution Environment) to boot remotely from a server. To better manage your IP resources, set a different lease time for PXE boot requests. You can configure the DHCP server to allocate an IP address with a shorter lease time to hosts that send PXE boot requests, so IP addresses are not leased longer than necessary. A 32-bit unsigned integer that represents the duration, in seconds, for which the update is cached. Zero indicates that the update is not cached.",
                        "format": "int64",
                        "example": 1
                    },
                    "static_hosts": {
                        "type": "integer",
                        "description": "The number of static DHCP addresses configured in the shared network.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "total_hosts": {
                        "type": "integer",
                        "description": "The total number of DHCP addresses configured in the shared network.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "update_dns_on_lease_renewal": {
                        "type": "boolean",
                        "description": "This field controls whether the DHCP server updates DNS when a DHCP lease is renewed.",
                        "example": false
                    },
                    "use_authority": {
                        "type": "boolean",
                        "description": "Use flag for: authority",
                        "example": false
                    },
                    "use_bootfile": {
                        "type": "boolean",
                        "description": "Use flag for: bootfile",
                        "example": false
                    },
                    "use_bootserver": {
                        "type": "boolean",
                        "description": "Use flag for: bootserver",
                        "example": false
                    },
                    "use_ddns_generate_hostname": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_generate_hostname",
                        "example": false
                    },
                    "use_ddns_ttl": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_ttl",
                        "example": false
                    },
                    "use_ddns_update_fixed_addresses": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_update_fixed_addresses",
                        "example": false
                    },
                    "use_ddns_use_option81": {
                        "type": "boolean",
                        "description": "Use flag for: ddns_use_option81",
                        "example": false
                    },
                    "use_deny_bootp": {
                        "type": "boolean",
                        "description": "Use flag for: deny_bootp",
                        "example": false
                    },
                    "use_enable_ddns": {
                        "type": "boolean",
                        "description": "Use flag for: enable_ddns",
                        "example": false
                    },
                    "use_ignore_client_identifier": {
                        "type": "boolean",
                        "description": "Use flag for: ignore_client_identifier",
                        "example": false
                    },
                    "use_ignore_dhcp_option_list_request": {
                        "type": "boolean",
                        "description": "Use flag for: ignore_dhcp_option_list_request",
                        "example": false
                    },
                    "use_ignore_id": {
                        "type": "boolean",
                        "description": "Use flag for: ignore_id",
                        "example": false
                    },
                    "use_lease_scavenge_time": {
                        "type": "boolean",
                        "description": "Use flag for: lease_scavenge_time",
                        "example": false
                    },
                    "use_logic_filter_rules": {
                        "type": "boolean",
                        "description": "Use flag for: logic_filter_rules",
                        "example": false
                    },
                    "use_nextserver": {
                        "type": "boolean",
                        "description": "Use flag for: nextserver",
                        "example": false
                    },
                    "use_options": {
                        "type": "boolean",
                        "description": "Use flag for: options",
                        "example": false
                    },
                    "use_pxe_lease_time": {
                        "type": "boolean",
                        "description": "Use flag for: pxe_lease_time",
                        "example": false
                    },
                    "use_update_dns_on_lease_renewal": {
                        "type": "boolean",
                        "description": "Use flag for: update_dns_on_lease_renewal",
                        "example": false
                    }
                }
            },
            "SharednetworkLogicFilterRules": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "The filter name.",
                        "example": "Example filter"
                    },
                    "type": {
                        "type": "string",
                        "description": "The filter type. Valid values are: * MAC * NAC * Option",
                        "example": "Example type"
                    }
                }
            },
            "SharednetworkMsAdUserData": {
                "type": "object",
                "properties": {
                    "active_users_count": {
                        "type": "integer",
                        "description": "The number of active users.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "SharednetworkOptions": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the DHCP option.",
                        "example": "Example name"
                    },
                    "num": {
                        "type": "integer",
                        "description": "The code of the DHCP option.",
                        "format": "int64",
                        "example": 1
                    },
                    "vendor_class": {
                        "type": "string",
                        "description": "The name of the space this DHCP option is associated to.",
                        "example": "Example vendor_class"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the DHCP option",
                        "example": "Example value"
                    },
                    "use_option": {
                        "type": "boolean",
                        "description": "Only applies to special options that are displayed separately from other options and have a use flag. These options are: * routers * router-templates * domain-name-servers * domain-name * broadcast-address * broadcast-address-offset * dhcp-lease-time * dhcp6.name-servers",
                        "example": false
                    }
                }
            },
            "ListSharednetworkResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Sharednetwork__ objects.",
                        "type": "array",
                        "title": "ListSharednetworkResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Sharednetwork"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Sharednetwork__ objects.",
                        "type": "object",
                        "title": "ListSharednetworkResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Sharednetwork"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateSharednetworkResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Sharednetwork__ in object format.",
                        "type": "object",
                        "title": "CreateSharednetworkResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Sharednetwork"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Sharednetwork__.",
                        "type": "string",
                        "title": "CreateSharednetworkResponse"
                    }
                ]
            },
            "GetSharednetworkResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Sharednetwork"
                    },
                    {
                        "description": "The response format to retrieve __Sharednetwork__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetSharednetworkResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Sharednetwork"
                            }
                        }
                    }
                ]
            },
            "UpdateSharednetworkResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Sharednetwork__ in object format.",
                        "type": "object",
                        "title": "UpdateSharednetworkResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Sharednetwork"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Sharednetwork__ .",
                        "type": "string",
                        "title": "UpdateSharednetworkResponse"
                    }
                ]
            },
            "Orderedranges": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "network": {
                        "type": "string",
                        "description": "The reference to the network that contains ranges.",
                        "readOnly": true,
                        "example": "Example network"
                    },
                    "ranges": {
                        "type": "array",
                        "description": "The ordered list of references to ranges.",
                        "enum": [
                            "range"
                        ],
                        "items": {
                            "type": "string",
                            "enum": [
                                "range"
                            ]
                        }
                    }
                }
            },
            "ListOrderedrangesResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Orderedranges__ objects.",
                        "type": "array",
                        "title": "ListOrderedrangesResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Orderedranges"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Orderedranges__ objects.",
                        "type": "object",
                        "title": "ListOrderedrangesResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Orderedranges"
                                }
                            }
                        }
                    }
                ]
            },
            "GetOrderedrangesResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Orderedranges"
                    },
                    {
                        "description": "The response format to retrieve __Orderedranges__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetOrderedrangesResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Orderedranges"
                            }
                        }
                    }
                ]
            },
            "UpdateOrderedrangesResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Orderedranges__ in object format.",
                        "type": "object",
                        "title": "UpdateOrderedrangesResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Orderedranges"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Orderedranges__ .",
                        "type": "string",
                        "title": "UpdateOrderedrangesResponse"
                    }
                ]
            }
        }
    }
}