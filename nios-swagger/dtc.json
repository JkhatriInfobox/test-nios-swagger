{
    "openapi": "3.0.0",
    "info": {
        "title": "Infoblox DTC API",
        "description": "OpenAPI specification for Infoblox NIOS WAPI DTC objects",
        "version": "2.13.6",
        "termsOfService": "https://www.infoblox.com",
        "contact": {
            "name": "Infoblox",
            "url": "https://www.infoblox.com"
        },
        "license": {
            "name": "Infoblox License",
            "url": "https://www.infoblox.com"
        }
    },
    "servers": [
        {
            "url": "/wapi/v2.13.6",
            "description": "NIOS WAPI server"
        }
    ],
    "tags": [
        {
            "name": "dtc",
            "description": "Operations for dtc objects"
        },
        {
            "name": "dtc_server",
            "description": "Operations for dtc:server objects"
        },
        {
            "name": "dtc_pool",
            "description": "Operations for dtc:pool objects"
        },
        {
            "name": "dtc_topology",
            "description": "Operations for dtc:topology objects"
        },
        {
            "name": "dtc_lbdn",
            "description": "Operations for dtc:lbdn objects"
        },
        {
            "name": "dtc_monitor",
            "description": "Operations for dtc:monitor objects"
        },
        {
            "name": "dtc_monitor_http",
            "description": "Operations for dtc:monitor:http objects"
        },
        {
            "name": "dtc_monitor_icmp",
            "description": "Operations for dtc:monitor:icmp objects"
        },
        {
            "name": "dtc_monitor_pdp",
            "description": "Operations for dtc:monitor:pdp objects"
        },
        {
            "name": "dtc_monitor_sip",
            "description": "Operations for dtc:monitor:sip objects"
        },
        {
            "name": "dtc_monitor_snmp",
            "description": "Operations for dtc:monitor:snmp objects"
        },
        {
            "name": "dtc_monitor_tcp",
            "description": "Operations for dtc:monitor:tcp objects"
        },
        {
            "name": "dtc_record_a",
            "description": "Operations for dtc:record:a objects"
        },
        {
            "name": "dtc_record_aaaa",
            "description": "Operations for dtc:record:aaaa objects"
        },
        {
            "name": "dtc_record_cname",
            "description": "Operations for dtc:record:cname objects"
        },
        {
            "name": "dtc_record_naptr",
            "description": "Operations for dtc:record:naptr objects"
        },
        {
            "name": "dtc_record_srv",
            "description": "Operations for dtc:record:srv objects"
        },
        {
            "name": "dtc_certificate",
            "description": "Operations for dtc:certificate objects"
        },
        {
            "name": "dtc_allrecords",
            "description": "Operations for dtc:allrecords objects"
        },
        {
            "name": "dtc_object",
            "description": "Operations for dtc:object objects"
        },
        {
            "name": "dtc_topology_rule",
            "description": "Operations for dtc:topology:rule objects"
        },
        {
            "name": "dtc_topology_label",
            "description": "Operations for dtc:topology:label objects"
        }
    ],
    "paths": {
        "/dtc": {
            "get": {
                "tags": [
                    "dtc"
                ],
                "summary": "Retrieve dtc objects",
                "description": "Returns a list of dtc objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDtcResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dtc/{reference}": {
            "get": {
                "tags": [
                    "dtc"
                ],
                "summary": "Get a specific dtc object",
                "description": "Returns a specific dtc object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDtcResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dtc:server": {
            "get": {
                "tags": [
                    "dtc_server"
                ],
                "summary": "Retrieve dtc:server objects",
                "description": "Returns a list of dtc:server objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDtcServerResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dtc_server"
                ],
                "summary": "Create a dtc:server object",
                "description": "Creates a new dtc:server object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcServer"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDtcServerResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dtc_dtc_server",
                "x-tf-datasource": "nios_dtc_dtc_server",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/dtc:server/{reference}": {
            "get": {
                "tags": [
                    "dtc_server"
                ],
                "summary": "Get a specific dtc:server object",
                "description": "Returns a specific dtc:server object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:server object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDtcServerResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "dtc_server"
                ],
                "summary": "Update a dtc:server object",
                "description": "Updates a specific dtc:server object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:server object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcServer"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDtcServerResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "dtc_server"
                ],
                "summary": "Delete a dtc:server object",
                "description": "Deletes a specific dtc:server object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:server object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dtc:pool": {
            "get": {
                "tags": [
                    "dtc_pool"
                ],
                "summary": "Retrieve dtc:pool objects",
                "description": "Returns a list of dtc:pool objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDtcPoolResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dtc_pool"
                ],
                "summary": "Create a dtc:pool object",
                "description": "Creates a new dtc:pool object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcPool"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDtcPoolResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dtc_dtc_pool",
                "x-tf-datasource": "nios_dtc_dtc_pool",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/dtc:pool/{reference}": {
            "get": {
                "tags": [
                    "dtc_pool"
                ],
                "summary": "Get a specific dtc:pool object",
                "description": "Returns a specific dtc:pool object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:pool object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDtcPoolResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "dtc_pool"
                ],
                "summary": "Update a dtc:pool object",
                "description": "Updates a specific dtc:pool object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:pool object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcPool"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDtcPoolResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "dtc_pool"
                ],
                "summary": "Delete a dtc:pool object",
                "description": "Deletes a specific dtc:pool object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:pool object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dtc:topology": {
            "get": {
                "tags": [
                    "dtc_topology"
                ],
                "summary": "Retrieve dtc:topology objects",
                "description": "Returns a list of dtc:topology objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDtcTopologyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dtc_topology"
                ],
                "summary": "Create a dtc:topology object",
                "description": "Creates a new dtc:topology object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcTopology"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDtcTopologyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dtc_dtc_topology",
                "x-tf-datasource": "nios_dtc_dtc_topology",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/dtc:topology/{reference}": {
            "get": {
                "tags": [
                    "dtc_topology"
                ],
                "summary": "Get a specific dtc:topology object",
                "description": "Returns a specific dtc:topology object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:topology object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDtcTopologyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "dtc_topology"
                ],
                "summary": "Update a dtc:topology object",
                "description": "Updates a specific dtc:topology object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:topology object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcTopology"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDtcTopologyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "dtc_topology"
                ],
                "summary": "Delete a dtc:topology object",
                "description": "Deletes a specific dtc:topology object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:topology object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dtc:lbdn": {
            "get": {
                "tags": [
                    "dtc_lbdn"
                ],
                "summary": "Retrieve dtc:lbdn objects",
                "description": "Returns a list of dtc:lbdn objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDtcLbdnResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dtc_lbdn"
                ],
                "summary": "Create a dtc:lbdn object",
                "description": "Creates a new dtc:lbdn object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcLbdn"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDtcLbdnResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dtc_dtc_lbdn",
                "x-tf-datasource": "nios_dtc_dtc_lbdn",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/dtc:lbdn/{reference}": {
            "get": {
                "tags": [
                    "dtc_lbdn"
                ],
                "summary": "Get a specific dtc:lbdn object",
                "description": "Returns a specific dtc:lbdn object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:lbdn object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDtcLbdnResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "dtc_lbdn"
                ],
                "summary": "Update a dtc:lbdn object",
                "description": "Updates a specific dtc:lbdn object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:lbdn object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcLbdn"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDtcLbdnResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "dtc_lbdn"
                ],
                "summary": "Delete a dtc:lbdn object",
                "description": "Deletes a specific dtc:lbdn object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:lbdn object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dtc:monitor": {
            "get": {
                "tags": [
                    "dtc_monitor"
                ],
                "summary": "Retrieve dtc:monitor objects",
                "description": "Returns a list of dtc:monitor objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDtcMonitorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dtc:monitor/{reference}": {
            "get": {
                "tags": [
                    "dtc_monitor"
                ],
                "summary": "Get a specific dtc:monitor object",
                "description": "Returns a specific dtc:monitor object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:monitor object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDtcMonitorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "dtc_monitor"
                ],
                "summary": "Update a dtc:monitor object",
                "description": "Updates a specific dtc:monitor object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:monitor object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcMonitor"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDtcMonitorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            }
        },
        "/dtc:monitor:http": {
            "get": {
                "tags": [
                    "dtc_monitor_http"
                ],
                "summary": "Retrieve dtc:monitor:http objects",
                "description": "Returns a list of dtc:monitor:http objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDtcMonitorHttpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dtc_monitor_http"
                ],
                "summary": "Create a dtc:monitor:http object",
                "description": "Creates a new dtc:monitor:http object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcMonitorHttp"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDtcMonitorHttpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dtc_dtc_monitor_http",
                "x-tf-datasource": "nios_dtc_dtc_monitor_http",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/dtc:monitor:http/{reference}": {
            "get": {
                "tags": [
                    "dtc_monitor_http"
                ],
                "summary": "Get a specific dtc:monitor:http object",
                "description": "Returns a specific dtc:monitor:http object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:monitor:http object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDtcMonitorHttpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "dtc_monitor_http"
                ],
                "summary": "Update a dtc:monitor:http object",
                "description": "Updates a specific dtc:monitor:http object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:monitor:http object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcMonitorHttp"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDtcMonitorHttpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "dtc_monitor_http"
                ],
                "summary": "Delete a dtc:monitor:http object",
                "description": "Deletes a specific dtc:monitor:http object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:monitor:http object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dtc:monitor:icmp": {
            "get": {
                "tags": [
                    "dtc_monitor_icmp"
                ],
                "summary": "Retrieve dtc:monitor:icmp objects",
                "description": "Returns a list of dtc:monitor:icmp objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDtcMonitorIcmpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dtc_monitor_icmp"
                ],
                "summary": "Create a dtc:monitor:icmp object",
                "description": "Creates a new dtc:monitor:icmp object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcMonitorIcmp"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDtcMonitorIcmpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dtc_dtc_monitor_icmp",
                "x-tf-datasource": "nios_dtc_dtc_monitor_icmp",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/dtc:monitor:icmp/{reference}": {
            "get": {
                "tags": [
                    "dtc_monitor_icmp"
                ],
                "summary": "Get a specific dtc:monitor:icmp object",
                "description": "Returns a specific dtc:monitor:icmp object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:monitor:icmp object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDtcMonitorIcmpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "dtc_monitor_icmp"
                ],
                "summary": "Update a dtc:monitor:icmp object",
                "description": "Updates a specific dtc:monitor:icmp object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:monitor:icmp object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcMonitorIcmp"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDtcMonitorIcmpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "dtc_monitor_icmp"
                ],
                "summary": "Delete a dtc:monitor:icmp object",
                "description": "Deletes a specific dtc:monitor:icmp object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:monitor:icmp object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dtc:monitor:pdp": {
            "get": {
                "tags": [
                    "dtc_monitor_pdp"
                ],
                "summary": "Retrieve dtc:monitor:pdp objects",
                "description": "Returns a list of dtc:monitor:pdp objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDtcMonitorPdpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dtc_monitor_pdp"
                ],
                "summary": "Create a dtc:monitor:pdp object",
                "description": "Creates a new dtc:monitor:pdp object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcMonitorPdp"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDtcMonitorPdpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dtc_dtc_monitor_pdp",
                "x-tf-datasource": "nios_dtc_dtc_monitor_pdp",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/dtc:monitor:pdp/{reference}": {
            "get": {
                "tags": [
                    "dtc_monitor_pdp"
                ],
                "summary": "Get a specific dtc:monitor:pdp object",
                "description": "Returns a specific dtc:monitor:pdp object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:monitor:pdp object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDtcMonitorPdpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "dtc_monitor_pdp"
                ],
                "summary": "Update a dtc:monitor:pdp object",
                "description": "Updates a specific dtc:monitor:pdp object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:monitor:pdp object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcMonitorPdp"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDtcMonitorPdpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "dtc_monitor_pdp"
                ],
                "summary": "Delete a dtc:monitor:pdp object",
                "description": "Deletes a specific dtc:monitor:pdp object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:monitor:pdp object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dtc:monitor:sip": {
            "get": {
                "tags": [
                    "dtc_monitor_sip"
                ],
                "summary": "Retrieve dtc:monitor:sip objects",
                "description": "Returns a list of dtc:monitor:sip objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDtcMonitorSipResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dtc_monitor_sip"
                ],
                "summary": "Create a dtc:monitor:sip object",
                "description": "Creates a new dtc:monitor:sip object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcMonitorSip"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDtcMonitorSipResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dtc_dtc_monitor_sip",
                "x-tf-datasource": "nios_dtc_dtc_monitor_sip",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/dtc:monitor:sip/{reference}": {
            "get": {
                "tags": [
                    "dtc_monitor_sip"
                ],
                "summary": "Get a specific dtc:monitor:sip object",
                "description": "Returns a specific dtc:monitor:sip object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:monitor:sip object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDtcMonitorSipResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "dtc_monitor_sip"
                ],
                "summary": "Update a dtc:monitor:sip object",
                "description": "Updates a specific dtc:monitor:sip object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:monitor:sip object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcMonitorSip"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDtcMonitorSipResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "dtc_monitor_sip"
                ],
                "summary": "Delete a dtc:monitor:sip object",
                "description": "Deletes a specific dtc:monitor:sip object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:monitor:sip object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dtc:monitor:snmp": {
            "get": {
                "tags": [
                    "dtc_monitor_snmp"
                ],
                "summary": "Retrieve dtc:monitor:snmp objects",
                "description": "Returns a list of dtc:monitor:snmp objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDtcMonitorSnmpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dtc_monitor_snmp"
                ],
                "summary": "Create a dtc:monitor:snmp object",
                "description": "Creates a new dtc:monitor:snmp object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcMonitorSnmp"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDtcMonitorSnmpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dtc_dtc_monitor_snmp",
                "x-tf-datasource": "nios_dtc_dtc_monitor_snmp",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/dtc:monitor:snmp/{reference}": {
            "get": {
                "tags": [
                    "dtc_monitor_snmp"
                ],
                "summary": "Get a specific dtc:monitor:snmp object",
                "description": "Returns a specific dtc:monitor:snmp object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:monitor:snmp object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDtcMonitorSnmpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "dtc_monitor_snmp"
                ],
                "summary": "Update a dtc:monitor:snmp object",
                "description": "Updates a specific dtc:monitor:snmp object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:monitor:snmp object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcMonitorSnmp"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDtcMonitorSnmpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "dtc_monitor_snmp"
                ],
                "summary": "Delete a dtc:monitor:snmp object",
                "description": "Deletes a specific dtc:monitor:snmp object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:monitor:snmp object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dtc:monitor:tcp": {
            "get": {
                "tags": [
                    "dtc_monitor_tcp"
                ],
                "summary": "Retrieve dtc:monitor:tcp objects",
                "description": "Returns a list of dtc:monitor:tcp objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDtcMonitorTcpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dtc_monitor_tcp"
                ],
                "summary": "Create a dtc:monitor:tcp object",
                "description": "Creates a new dtc:monitor:tcp object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcMonitorTcp"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDtcMonitorTcpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dtc_dtc_monitor_tcp",
                "x-tf-datasource": "nios_dtc_dtc_monitor_tcp",
                "x-sdk-default-ext-attrs": true
            }
        },
        "/dtc:monitor:tcp/{reference}": {
            "get": {
                "tags": [
                    "dtc_monitor_tcp"
                ],
                "summary": "Get a specific dtc:monitor:tcp object",
                "description": "Returns a specific dtc:monitor:tcp object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:monitor:tcp object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDtcMonitorTcpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "dtc_monitor_tcp"
                ],
                "summary": "Update a dtc:monitor:tcp object",
                "description": "Updates a specific dtc:monitor:tcp object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:monitor:tcp object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcMonitorTcp"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDtcMonitorTcpResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            },
            "delete": {
                "tags": [
                    "dtc_monitor_tcp"
                ],
                "summary": "Delete a dtc:monitor:tcp object",
                "description": "Deletes a specific dtc:monitor:tcp object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:monitor:tcp object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dtc:record:a": {
            "get": {
                "tags": [
                    "dtc_record_a"
                ],
                "summary": "Retrieve dtc:record:a objects",
                "description": "Returns a list of dtc:record:a objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDtcRecordAResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dtc_record_a"
                ],
                "summary": "Create a dtc:record:a object",
                "description": "Creates a new dtc:record:a object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcRecordA"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDtcRecordAResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dtc_dtc_record_a",
                "x-tf-datasource": "nios_dtc_dtc_record_a"
            }
        },
        "/dtc:record:a/{reference}": {
            "get": {
                "tags": [
                    "dtc_record_a"
                ],
                "summary": "Get a specific dtc:record:a object",
                "description": "Returns a specific dtc:record:a object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:record:a object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDtcRecordAResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "dtc_record_a"
                ],
                "summary": "Update a dtc:record:a object",
                "description": "Updates a specific dtc:record:a object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:record:a object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcRecordA"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDtcRecordAResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dtc_record_a"
                ],
                "summary": "Delete a dtc:record:a object",
                "description": "Deletes a specific dtc:record:a object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:record:a object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dtc:record:aaaa": {
            "get": {
                "tags": [
                    "dtc_record_aaaa"
                ],
                "summary": "Retrieve dtc:record:aaaa objects",
                "description": "Returns a list of dtc:record:aaaa objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDtcRecordAaaaResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dtc_record_aaaa"
                ],
                "summary": "Create a dtc:record:aaaa object",
                "description": "Creates a new dtc:record:aaaa object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcRecordAaaa"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDtcRecordAaaaResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dtc_dtc_record_aaaa",
                "x-tf-datasource": "nios_dtc_dtc_record_aaaa"
            }
        },
        "/dtc:record:aaaa/{reference}": {
            "get": {
                "tags": [
                    "dtc_record_aaaa"
                ],
                "summary": "Get a specific dtc:record:aaaa object",
                "description": "Returns a specific dtc:record:aaaa object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:record:aaaa object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDtcRecordAaaaResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "dtc_record_aaaa"
                ],
                "summary": "Update a dtc:record:aaaa object",
                "description": "Updates a specific dtc:record:aaaa object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:record:aaaa object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcRecordAaaa"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDtcRecordAaaaResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dtc_record_aaaa"
                ],
                "summary": "Delete a dtc:record:aaaa object",
                "description": "Deletes a specific dtc:record:aaaa object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:record:aaaa object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dtc:record:cname": {
            "get": {
                "tags": [
                    "dtc_record_cname"
                ],
                "summary": "Retrieve dtc:record:cname objects",
                "description": "Returns a list of dtc:record:cname objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDtcRecordCnameResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dtc_record_cname"
                ],
                "summary": "Create a dtc:record:cname object",
                "description": "Creates a new dtc:record:cname object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcRecordCname"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDtcRecordCnameResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dtc_dtc_record_cname",
                "x-tf-datasource": "nios_dtc_dtc_record_cname"
            }
        },
        "/dtc:record:cname/{reference}": {
            "get": {
                "tags": [
                    "dtc_record_cname"
                ],
                "summary": "Get a specific dtc:record:cname object",
                "description": "Returns a specific dtc:record:cname object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:record:cname object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDtcRecordCnameResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "dtc_record_cname"
                ],
                "summary": "Update a dtc:record:cname object",
                "description": "Updates a specific dtc:record:cname object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:record:cname object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcRecordCname"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDtcRecordCnameResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dtc_record_cname"
                ],
                "summary": "Delete a dtc:record:cname object",
                "description": "Deletes a specific dtc:record:cname object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:record:cname object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dtc:record:naptr": {
            "get": {
                "tags": [
                    "dtc_record_naptr"
                ],
                "summary": "Retrieve dtc:record:naptr objects",
                "description": "Returns a list of dtc:record:naptr objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDtcRecordNaptrResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dtc_record_naptr"
                ],
                "summary": "Create a dtc:record:naptr object",
                "description": "Creates a new dtc:record:naptr object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcRecordNaptr"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDtcRecordNaptrResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dtc_dtc_record_naptr",
                "x-tf-datasource": "nios_dtc_dtc_record_naptr"
            }
        },
        "/dtc:record:naptr/{reference}": {
            "get": {
                "tags": [
                    "dtc_record_naptr"
                ],
                "summary": "Get a specific dtc:record:naptr object",
                "description": "Returns a specific dtc:record:naptr object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:record:naptr object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDtcRecordNaptrResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "dtc_record_naptr"
                ],
                "summary": "Update a dtc:record:naptr object",
                "description": "Updates a specific dtc:record:naptr object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:record:naptr object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcRecordNaptr"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDtcRecordNaptrResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dtc_record_naptr"
                ],
                "summary": "Delete a dtc:record:naptr object",
                "description": "Deletes a specific dtc:record:naptr object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:record:naptr object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dtc:record:srv": {
            "get": {
                "tags": [
                    "dtc_record_srv"
                ],
                "summary": "Retrieve dtc:record:srv objects",
                "description": "Returns a list of dtc:record:srv objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDtcRecordSrvResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dtc_record_srv"
                ],
                "summary": "Create a dtc:record:srv object",
                "description": "Creates a new dtc:record:srv object",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcRecordSrv"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Object created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDtcRecordSrvResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-tf-resource": "nios_dtc_dtc_record_srv",
                "x-tf-datasource": "nios_dtc_dtc_record_srv"
            }
        },
        "/dtc:record:srv/{reference}": {
            "get": {
                "tags": [
                    "dtc_record_srv"
                ],
                "summary": "Get a specific dtc:record:srv object",
                "description": "Returns a specific dtc:record:srv object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:record:srv object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDtcRecordSrvResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "dtc_record_srv"
                ],
                "summary": "Update a dtc:record:srv object",
                "description": "Updates a specific dtc:record:srv object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:record:srv object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcRecordSrv"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDtcRecordSrvResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dtc_record_srv"
                ],
                "summary": "Delete a dtc:record:srv object",
                "description": "Deletes a specific dtc:record:srv object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:record:srv object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dtc:certificate": {
            "get": {
                "tags": [
                    "dtc_certificate"
                ],
                "summary": "Retrieve dtc:certificate objects",
                "description": "Returns a list of dtc:certificate objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDtcCertificateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dtc:certificate/{reference}": {
            "get": {
                "tags": [
                    "dtc_certificate"
                ],
                "summary": "Get a specific dtc:certificate object",
                "description": "Returns a specific dtc:certificate object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:certificate object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDtcCertificateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dtc:allrecords": {
            "get": {
                "tags": [
                    "dtc_allrecords"
                ],
                "summary": "Retrieve dtc:allrecords objects",
                "description": "Returns a list of dtc:allrecords objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDtcAllrecordsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dtc:allrecords/{reference}": {
            "get": {
                "tags": [
                    "dtc_allrecords"
                ],
                "summary": "Get a specific dtc:allrecords object",
                "description": "Returns a specific dtc:allrecords object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:allrecords object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDtcAllrecordsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "dtc_allrecords"
                ],
                "summary": "Update a dtc:allrecords object",
                "description": "Updates a specific dtc:allrecords object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:allrecords object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcAllrecords"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDtcAllrecordsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dtc:object": {
            "get": {
                "tags": [
                    "dtc_object"
                ],
                "summary": "Retrieve dtc:object objects",
                "description": "Returns a list of dtc:object objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDtcObjectResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dtc:object/{reference}": {
            "get": {
                "tags": [
                    "dtc_object"
                ],
                "summary": "Get a specific dtc:object object",
                "description": "Returns a specific dtc:object object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:object object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDtcObjectResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "dtc_object"
                ],
                "summary": "Update a dtc:object object",
                "description": "Updates a specific dtc:object object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:object object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcObject"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDtcObjectResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "x-sdk-default-ext-attrs": true
            }
        },
        "/dtc:topology:rule": {
            "get": {
                "tags": [
                    "dtc_topology_rule"
                ],
                "summary": "Retrieve dtc:topology:rule objects",
                "description": "Returns a list of dtc:topology:rule objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDtcTopologyRuleResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dtc:topology:rule/{reference}": {
            "get": {
                "tags": [
                    "dtc_topology_rule"
                ],
                "summary": "Get a specific dtc:topology:rule object",
                "description": "Returns a specific dtc:topology:rule object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:topology:rule object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDtcTopologyRuleResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "dtc_topology_rule"
                ],
                "summary": "Update a dtc:topology:rule object",
                "description": "Updates a specific dtc:topology:rule object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:topology:rule object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "requestBody": {
                    "description": "Object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DtcTopologyRule"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDtcTopologyRuleResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dtc:topology:label": {
            "get": {
                "tags": [
                    "dtc_topology_label"
                ],
                "summary": "Retrieve dtc:topology:label objects",
                "description": "Returns a list of dtc:topology:label objects matching the search criteria",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/MaxResults"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    },
                    {
                        "$ref": "#/components/parameters/Paging"
                    },
                    {
                        "$ref": "#/components/parameters/PageId"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    },
                    {
                        "$ref": "#/components/parameters/ExtAttrFilters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDtcTopologyLabelResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/dtc:topology:label/{reference}": {
            "get": {
                "tags": [
                    "dtc_topology_label"
                ],
                "summary": "Get a specific dtc:topology:label object",
                "description": "Returns a specific dtc:topology:label object by reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Reference of the dtc:topology:label object",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFields"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnFieldsPlus"
                    },
                    {
                        "$ref": "#/components/parameters/ReturnAsObject"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDtcTopologyLabelResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            }
        },
        "parameters": {
            "ReturnFields": {
                "name": "_return_fields",
                "in": "query",
                "description": "Enter the field names followed by comma",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "ReturnFieldsPlus": {
                "name": "_return_fields+",
                "in": "query",
                "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "MaxResults": {
                "name": "_max_results",
                "in": "query",
                "description": "Enter the number of results to be fetched",
                "required": false,
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1
                }
            },
            "ReturnAsObject": {
                "name": "_return_as_object",
                "in": "query",
                "description": "Select 1 if result is required as an object",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "Paging": {
                "name": "_paging",
                "in": "query",
                "description": "Control paging of results",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "PageId": {
                "name": "_page_id",
                "in": "query",
                "description": "Page id for retrieving next page of results",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "ProxySearch": {
                "name": "_proxy_search",
                "in": "query",
                "description": "Search Grid members for data",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "Schema": {
                "name": "_schema",
                "in": "query",
                "description": "Return schema for this object type",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "SchemaVersion": {
                "name": "_schema_version",
                "in": "query",
                "description": "Schema version to use",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        1,
                        2
                    ]
                }
            },
            "GetDoc": {
                "name": "_get_doc",
                "in": "query",
                "description": "Return documentation with schema",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "SchemaSearchable": {
                "name": "_schema_searchable",
                "in": "query",
                "description": "Return searchable fields with schema",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "Inheritance": {
                "name": "_inheritance",
                "in": "query",
                "description": "If this option is set to True, fields which support inheritance, will display data properly.",
                "required": false,
                "schema": {
                    "type": "boolean"
                }
            },
            "filters": {
                "name": "filters",
                "in": "query",
                "schema": {
                    "type": "object",
                    "additionalProperties": true
                },
                "style": "form",
                "explode": false
            },
            "ExtAttrFilters": {
                "name": "extattrfilter",
                "in": "query",
                "schema": {
                    "type": "object",
                    "additionalProperties": true
                },
                "style": "form",
                "explode": false
            },
            "Method": {
                "name": "_method",
                "in": "query",
                "description": "Enter the method type for the request",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "Body": {
                "name": "body",
                "in": "query",
                "schema": {
                    "type": "object"
                }
            }
        },
        "schemas": {
            "ExtAttrs": {
                "type": "object",
                "properties": {
                    "value": {
                        "description": "The value of the extensible attribute."
                    }
                },
                "required": [
                    "value"
                ],
                "description": "Extensible attributes associated with the object."
            },
            "Dtc": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    }
                }
            },
            "ListDtcResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __Dtc__ objects.",
                        "type": "array",
                        "title": "ListDtcResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/Dtc"
                        }
                    },
                    {
                        "description": "The response format to retrieve __Dtc__ objects.",
                        "type": "object",
                        "title": "ListDtcResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Dtc"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateDtcResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __Dtc__ in object format.",
                        "type": "object",
                        "title": "CreateDtcResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Dtc"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __Dtc__.",
                        "type": "string",
                        "title": "CreateDtcResponse"
                    }
                ]
            },
            "GetDtcResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Dtc"
                    },
                    {
                        "description": "The response format to retrieve __Dtc__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDtcResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Dtc"
                            }
                        }
                    }
                ]
            },
            "UpdateDtcResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __Dtc__ in object format.",
                        "type": "object",
                        "title": "UpdateDtcResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/Dtc"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __Dtc__ .",
                        "type": "string",
                        "title": "UpdateDtcResponse"
                    }
                ]
            },
            "DtcServer": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "auto_create_host_record": {
                        "type": "boolean",
                        "description": "Enabling this option will auto-create a single read-only A/AAAA/CNAME record corresponding to the configured hostname and update it if the hostname changes.",
                        "example": false
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the DTC Server; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines whether the DTC Server is disabled or not. When this is set to False, the fixed address is enabled.",
                        "example": false
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "health": {
                        "$ref": "#/components/schemas/DtcServerHealth"
                    },
                    "host": {
                        "type": "string",
                        "description": "The address or FQDN of the server.",
                        "example": "Example host"
                    },
                    "monitors": {
                        "type": "array",
                        "description": "List of IP/FQDN and monitor pairs to be used for additional monitoring.",
                        "enum": [
                            "dtc:server:monitor"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/DtcServerMonitors"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The DTC Server display name.",
                        "example": "Example name"
                    },
                    "sni_hostname": {
                        "type": "string",
                        "description": "The hostname for Server Name Indication (SNI) in FQDN format.",
                        "example": "Example sni_hostname"
                    },
                    "use_sni_hostname": {
                        "type": "boolean",
                        "description": "Use flag for: sni_hostname",
                        "example": false
                    }
                }
            },
            "DtcServerHealth": {
                "type": "object",
                "properties": {
                    "availability": {
                        "type": "string",
                        "description": "The availability color status.",
                        "enum": [
                            "NONE",
                            "GREEN",
                            "YELLOW",
                            "RED",
                            "BLUE",
                            "GRAY"
                        ],
                        "example": "Example availability"
                    },
                    "enabled_state": {
                        "type": "string",
                        "description": "The enabled state of the object.",
                        "enum": [
                            "NONE",
                            "ENABLED",
                            "DISABLED",
                            "DISABLED_BY_PARENT"
                        ],
                        "example": "Example enabled_state"
                    },
                    "description": {
                        "type": "string",
                        "description": "The textual description of the object's status.",
                        "example": "Example description"
                    }
                }
            },
            "DtcServerMonitors": {
                "type": "object",
                "properties": {
                    "monitor": {
                        "type": "string",
                        "description": "The monitor related to server.",
                        "example": "Example monitor"
                    },
                    "host": {
                        "type": "string",
                        "description": "IP address or FQDN of the server used for monitoring.",
                        "example": "Example host"
                    }
                }
            },
            "ListDtcServerResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __DtcServer__ objects.",
                        "type": "array",
                        "title": "ListDtcServerResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/DtcServer"
                        }
                    },
                    {
                        "description": "The response format to retrieve __DtcServer__ objects.",
                        "type": "object",
                        "title": "ListDtcServerResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DtcServer"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateDtcServerResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __DtcServer__ in object format.",
                        "type": "object",
                        "title": "CreateDtcServerResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcServer"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __DtcServer__.",
                        "type": "string",
                        "title": "CreateDtcServerResponse"
                    }
                ]
            },
            "GetDtcServerResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DtcServer"
                    },
                    {
                        "description": "The response format to retrieve __DtcServer__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDtcServerResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcServer"
                            }
                        }
                    }
                ]
            },
            "UpdateDtcServerResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __DtcServer__ in object format.",
                        "type": "object",
                        "title": "UpdateDtcServerResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcServer"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __DtcServer__ .",
                        "type": "string",
                        "title": "UpdateDtcServerResponse"
                    }
                ]
            },
            "DtcPool": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "auto_consolidated_monitors": {
                        "type": "boolean",
                        "description": "Flag for enabling auto managing DTC Consolidated Monitors in DTC Pool.",
                        "example": false
                    },
                    "availability": {
                        "type": "string",
                        "description": "A resource in the pool is available if ANY, at least QUORUM, or ALL monitors for the pool say that it is up.",
                        "enum": [
                            "ALL",
                            "ANY",
                            "QUORUM"
                        ],
                        "example": "Example availability"
                    },
                    "comment": {
                        "type": "string",
                        "description": "The comment for the DTC Pool; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "consolidated_monitors": {
                        "type": "array",
                        "description": "List of monitors and associated members statuses of which are shared across members and consolidated in server availability determination.",
                        "enum": [
                            "dtc:pool:consolidated_monitor_health"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/DtcPoolConsolidatedMonitors"
                        }
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines whether the DTC Pool is disabled or not. When this is set to False, the fixed address is enabled.",
                        "example": false
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "health": {
                        "$ref": "#/components/schemas/DtcPoolHealth"
                    },
                    "lb_alternate_method": {
                        "type": "string",
                        "description": "The alternate load balancing method. Use this to select a method type from the pool if the preferred method does not return any results.",
                        "enum": [
                            "ALL_AVAILABLE",
                            "DYNAMIC_RATIO",
                            "GLOBAL_AVAILABILITY",
                            "NONE",
                            "RATIO",
                            "ROUND_ROBIN",
                            "SOURCE_IP_HASH",
                            "TOPOLOGY"
                        ],
                        "example": "Example lb_alternate_method"
                    },
                    "lb_alternate_topology": {
                        "type": "string",
                        "description": "The alternate topology for load balancing.",
                        "example": "Example lb_alternate_topology"
                    },
                    "lb_dynamic_ratio_alternate": {
                        "$ref": "#/components/schemas/DtcPoolLbDynamicRatioAlternate"
                    },
                    "lb_dynamic_ratio_preferred": {
                        "$ref": "#/components/schemas/DtcPoolLbDynamicRatioPreferred"
                    },
                    "lb_preferred_method": {
                        "type": "string",
                        "description": "The preferred load balancing method. Use this to select a method type from the pool.",
                        "enum": [
                            "ALL_AVAILABLE",
                            "DYNAMIC_RATIO",
                            "GLOBAL_AVAILABILITY",
                            "RATIO",
                            "ROUND_ROBIN",
                            "SOURCE_IP_HASH",
                            "TOPOLOGY"
                        ],
                        "example": "Example lb_preferred_method"
                    },
                    "lb_preferred_topology": {
                        "type": "string",
                        "description": "The preferred topology for load balancing.",
                        "example": "Example lb_preferred_topology"
                    },
                    "monitors": {
                        "type": "array",
                        "description": "The monitors related to pool.",
                        "enum": [
                            "dtc:monitor:http"
                        ],
                        "items": {
                            "type": "string",
                            "enum": [
                                "dtc:monitor:http"
                            ]
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The DTC Pool display name.",
                        "example": "Example name"
                    },
                    "quorum": {
                        "type": "integer",
                        "description": "For availability mode QUORUM, at least this many monitors must report the resource as up for it to be available",
                        "format": "int64",
                        "example": 1
                    },
                    "servers": {
                        "type": "array",
                        "description": "The servers related to the pool.",
                        "enum": [
                            "dtc:server:link"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/DtcPoolServers"
                        }
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "The Time To Live (TTL) value for the DTC Pool. A 32-bit unsigned integer that represents the duration, in seconds, for which the record is valid (cached). Zero indicates that the record should not be cached.",
                        "format": "int64",
                        "example": 1
                    },
                    "use_ttl": {
                        "type": "boolean",
                        "description": "Use flag for: ttl",
                        "example": false
                    }
                }
            },
            "DtcPoolConsolidatedMonitors": {
                "type": "object",
                "properties": {
                    "members": {
                        "type": "array",
                        "description": "Members whose monitor statuses are shared across other members in a pool.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "monitor": {
                        "type": "string",
                        "description": "Monitor whose statuses are shared across other members in a pool.",
                        "example": "Example monitor"
                    },
                    "availability": {
                        "type": "string",
                        "description": "Servers assigned to a pool with monitor defined are healthy if ANY or ALL members report healthy status.",
                        "enum": [
                            "ALL",
                            "ANY"
                        ],
                        "example": "Example availability"
                    },
                    "full_health_communication": {
                        "type": "boolean",
                        "description": "Flag for switching health performing and sharing behavior to perform health checks on each DTC grid member that serves related LBDN(s) and send them across all DTC grid members from both selected and non-selected lists.",
                        "example": false
                    }
                }
            },
            "DtcPoolHealth": {
                "type": "object",
                "properties": {
                    "availability": {
                        "type": "string",
                        "description": "The availability color status.",
                        "enum": [
                            "NONE",
                            "GREEN",
                            "YELLOW",
                            "RED",
                            "BLUE",
                            "GRAY"
                        ],
                        "example": "Example availability"
                    },
                    "enabled_state": {
                        "type": "string",
                        "description": "The enabled state of the object.",
                        "enum": [
                            "NONE",
                            "ENABLED",
                            "DISABLED",
                            "DISABLED_BY_PARENT"
                        ],
                        "example": "Example enabled_state"
                    },
                    "description": {
                        "type": "string",
                        "description": "The textual description of the object's status.",
                        "example": "Example description"
                    }
                }
            },
            "DtcPoolLbDynamicRatioAlternate": {
                "type": "object",
                "properties": {
                    "method": {
                        "type": "string",
                        "description": "The method of the DTC dynamic ratio load balancing.",
                        "enum": [
                            "MONITOR",
                            "ROUND_TRIP_DELAY"
                        ],
                        "example": "Example method"
                    },
                    "monitor": {
                        "type": "string",
                        "description": "The DTC monitor output of which will be used for dynamic ratio load balancing.",
                        "example": "Example monitor"
                    },
                    "monitor_metric": {
                        "type": "string",
                        "description": "The metric of the DTC SNMP monitor that will be used for dynamic weighing.",
                        "example": "Example monitor_metric"
                    },
                    "monitor_weighing": {
                        "type": "string",
                        "description": "The DTC monitor weight. 'PRIORITY' means that all clients will be forwarded to the least loaded server. 'RATIO' means that distribution will be calculated based on dynamic weights.",
                        "enum": [
                            "PRIORITY",
                            "RATIO"
                        ],
                        "example": "Example monitor_weighing"
                    },
                    "invert_monitor_metric": {
                        "type": "boolean",
                        "description": "Determines whether the inverted values of the DTC SNMP monitor metric will be used.",
                        "example": false
                    }
                }
            },
            "DtcPoolLbDynamicRatioPreferred": {
                "type": "object",
                "properties": {
                    "method": {
                        "type": "string",
                        "description": "The method of the DTC dynamic ratio load balancing.",
                        "enum": [
                            "MONITOR",
                            "ROUND_TRIP_DELAY"
                        ],
                        "example": "Example method"
                    },
                    "monitor": {
                        "type": "string",
                        "description": "The DTC monitor output of which will be used for dynamic ratio load balancing.",
                        "example": "Example monitor"
                    },
                    "monitor_metric": {
                        "type": "string",
                        "description": "The metric of the DTC SNMP monitor that will be used for dynamic weighing.",
                        "example": "Example monitor_metric"
                    },
                    "monitor_weighing": {
                        "type": "string",
                        "description": "The DTC monitor weight. 'PRIORITY' means that all clients will be forwarded to the least loaded server. 'RATIO' means that distribution will be calculated based on dynamic weights.",
                        "enum": [
                            "PRIORITY",
                            "RATIO"
                        ],
                        "example": "Example monitor_weighing"
                    },
                    "invert_monitor_metric": {
                        "type": "boolean",
                        "description": "Determines whether the inverted values of the DTC SNMP monitor metric will be used.",
                        "example": false
                    }
                }
            },
            "DtcPoolServers": {
                "type": "object",
                "properties": {
                    "server": {
                        "type": "string",
                        "description": "The server to link with.",
                        "example": "Example server"
                    },
                    "ratio": {
                        "type": "integer",
                        "description": "The weight of server.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "ListDtcPoolResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __DtcPool__ objects.",
                        "type": "array",
                        "title": "ListDtcPoolResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/DtcPool"
                        }
                    },
                    {
                        "description": "The response format to retrieve __DtcPool__ objects.",
                        "type": "object",
                        "title": "ListDtcPoolResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DtcPool"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateDtcPoolResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __DtcPool__ in object format.",
                        "type": "object",
                        "title": "CreateDtcPoolResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcPool"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __DtcPool__.",
                        "type": "string",
                        "title": "CreateDtcPoolResponse"
                    }
                ]
            },
            "GetDtcPoolResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DtcPool"
                    },
                    {
                        "description": "The response format to retrieve __DtcPool__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDtcPoolResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcPool"
                            }
                        }
                    }
                ]
            },
            "UpdateDtcPoolResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __DtcPool__ in object format.",
                        "type": "object",
                        "title": "UpdateDtcPoolResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcPool"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __DtcPool__ .",
                        "type": "string",
                        "title": "UpdateDtcPoolResponse"
                    }
                ]
            },
            "DtcTopology": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "The comment for the DTC TOPOLOGY monitor object; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "Display name of the DTC Topology.",
                        "example": "Example name"
                    },
                    "rules": {
                        "type": "array",
                        "description": "Topology rules.",
                        "enum": [
                            "dtc:topology:rule"
                        ],
                        "items": {
                            "type": "string",
                            "enum": [
                                "dtc:topology:rule"
                            ]
                        }
                    }
                }
            },
            "ListDtcTopologyResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __DtcTopology__ objects.",
                        "type": "array",
                        "title": "ListDtcTopologyResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/DtcTopology"
                        }
                    },
                    {
                        "description": "The response format to retrieve __DtcTopology__ objects.",
                        "type": "object",
                        "title": "ListDtcTopologyResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DtcTopology"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateDtcTopologyResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __DtcTopology__ in object format.",
                        "type": "object",
                        "title": "CreateDtcTopologyResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcTopology"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __DtcTopology__.",
                        "type": "string",
                        "title": "CreateDtcTopologyResponse"
                    }
                ]
            },
            "GetDtcTopologyResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DtcTopology"
                    },
                    {
                        "description": "The response format to retrieve __DtcTopology__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDtcTopologyResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcTopology"
                            }
                        }
                    }
                ]
            },
            "UpdateDtcTopologyResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __DtcTopology__ in object format.",
                        "type": "object",
                        "title": "UpdateDtcTopologyResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcTopology"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __DtcTopology__ .",
                        "type": "string",
                        "title": "UpdateDtcTopologyResponse"
                    }
                ]
            },
            "DtcLbdn": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "auth_zones": {
                        "type": "array",
                        "description": "List of linked auth zones.",
                        "enum": [
                            "zone_auth"
                        ],
                        "items": {
                            "type": "string",
                            "enum": [
                                "zone_auth"
                            ]
                        }
                    },
                    "auto_consolidated_monitors": {
                        "type": "boolean",
                        "description": "Flag for enabling auto managing DTC Consolidated Monitors on related DTC Pools.",
                        "example": false
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the DTC LBDN; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines whether the DTC LBDN is disabled or not. When this is set to False, the fixed address is enabled.",
                        "example": false
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "health": {
                        "$ref": "#/components/schemas/DtcLbdnHealth"
                    },
                    "lb_method": {
                        "type": "string",
                        "description": "The load balancing method. Used to select pool.",
                        "enum": [
                            "GLOBAL_AVAILABILITY",
                            "RATIO",
                            "ROUND_ROBIN",
                            "SOURCE_IP_HASH",
                            "TOPOLOGY"
                        ],
                        "example": "Example lb_method"
                    },
                    "name": {
                        "type": "string",
                        "description": "The display name of the DTC LBDN, not DNS related.",
                        "example": "Example name"
                    },
                    "patterns": {
                        "type": "array",
                        "description": "LBDN wildcards for pattern match.",
                        "enum": [
                            "string"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "persistence": {
                        "type": "integer",
                        "description": "Maximum time, in seconds, for which client specific LBDN responses will be cached. Zero specifies no caching.",
                        "format": "int64",
                        "example": 1
                    },
                    "pools": {
                        "type": "array",
                        "description": "The maximum time, in seconds, for which client specific LBDN responses will be cached. Zero specifies no caching.",
                        "enum": [
                            "dtc:pool:link"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/DtcLbdnPools"
                        }
                    },
                    "priority": {
                        "type": "integer",
                        "description": "The LBDN pattern match priority for \"overlapping\" DTC LBDN objects. LBDNs are \"overlapping\" if they are simultaneously assigned to a zone and have patterns that can match the same FQDN. The matching LBDN with highest priority (lowest ordinal) will be used.",
                        "format": "int64",
                        "example": 1
                    },
                    "topology": {
                        "type": "string",
                        "description": "The topology rules for TOPOLOGY method.",
                        "example": "Example topology"
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "The Time To Live (TTL) value for the DTC LBDN. A 32-bit unsigned integer that represents the duration, in seconds, for which the record is valid (cached). Zero indicates that the record should not be cached.",
                        "format": "int64",
                        "example": 1
                    },
                    "types": {
                        "type": "array",
                        "description": "The list of resource record types supported by LBDN.",
                        "enum": [
                            "A",
                            "AAAA",
                            "NAPTR",
                            "CNAME",
                            "SRV"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "use_ttl": {
                        "type": "boolean",
                        "description": "Use flag for: ttl",
                        "example": false
                    }
                }
            },
            "DtcLbdnHealth": {
                "type": "object",
                "properties": {
                    "availability": {
                        "type": "string",
                        "description": "The availability color status.",
                        "enum": [
                            "NONE",
                            "GREEN",
                            "YELLOW",
                            "RED",
                            "BLUE",
                            "GRAY"
                        ],
                        "example": "Example availability"
                    },
                    "enabled_state": {
                        "type": "string",
                        "description": "The enabled state of the object.",
                        "enum": [
                            "NONE",
                            "ENABLED",
                            "DISABLED",
                            "DISABLED_BY_PARENT"
                        ],
                        "example": "Example enabled_state"
                    },
                    "description": {
                        "type": "string",
                        "description": "The textual description of the object's status.",
                        "example": "Example description"
                    }
                }
            },
            "DtcLbdnPools": {
                "type": "object",
                "properties": {
                    "pool": {
                        "type": "string",
                        "description": "The pool to link with.",
                        "example": "Example pool"
                    },
                    "ratio": {
                        "type": "integer",
                        "description": "The weight of pool.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "ListDtcLbdnResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __DtcLbdn__ objects.",
                        "type": "array",
                        "title": "ListDtcLbdnResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/DtcLbdn"
                        }
                    },
                    {
                        "description": "The response format to retrieve __DtcLbdn__ objects.",
                        "type": "object",
                        "title": "ListDtcLbdnResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DtcLbdn"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateDtcLbdnResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __DtcLbdn__ in object format.",
                        "type": "object",
                        "title": "CreateDtcLbdnResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcLbdn"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __DtcLbdn__.",
                        "type": "string",
                        "title": "CreateDtcLbdnResponse"
                    }
                ]
            },
            "GetDtcLbdnResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DtcLbdn"
                    },
                    {
                        "description": "The response format to retrieve __DtcLbdn__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDtcLbdnResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcLbdn"
                            }
                        }
                    }
                ]
            },
            "UpdateDtcLbdnResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __DtcLbdn__ in object format.",
                        "type": "object",
                        "title": "UpdateDtcLbdnResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcLbdn"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __DtcLbdn__ .",
                        "type": "string",
                        "title": "UpdateDtcLbdnResponse"
                    }
                ]
            },
            "DtcMonitor": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for this DTC monitor; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "interval": {
                        "type": "integer",
                        "description": "The interval for a health check.",
                        "format": "int64",
                        "example": 1
                    },
                    "monitor": {
                        "type": "string",
                        "description": "The actual monitor object.",
                        "example": "Example monitor"
                    },
                    "name": {
                        "type": "string",
                        "description": "The display name for this DTC monitor.",
                        "example": "Example name"
                    },
                    "port": {
                        "type": "integer",
                        "description": "The health monitor port value.",
                        "format": "int64",
                        "example": 1
                    },
                    "retry_down": {
                        "type": "integer",
                        "description": "The number of how many times the server should appear as \"DOWN\" to be treated as dead after it was alive.",
                        "format": "int64",
                        "example": 1
                    },
                    "retry_up": {
                        "type": "integer",
                        "description": "The number of many times the server should appear as \"UP\" to be treated as alive after it was dead.",
                        "format": "int64",
                        "example": 1
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "The timeout for a health check.",
                        "format": "int64",
                        "example": 1
                    },
                    "type": {
                        "type": "string",
                        "description": "The request transport type.",
                        "enum": [
                            "HTTP",
                            "ICMP",
                            "TCP",
                            "PDP",
                            "SIP",
                            "SNMP"
                        ],
                        "example": "Example type"
                    }
                }
            },
            "ListDtcMonitorResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __DtcMonitor__ objects.",
                        "type": "array",
                        "title": "ListDtcMonitorResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/DtcMonitor"
                        }
                    },
                    {
                        "description": "The response format to retrieve __DtcMonitor__ objects.",
                        "type": "object",
                        "title": "ListDtcMonitorResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DtcMonitor"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateDtcMonitorResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __DtcMonitor__ in object format.",
                        "type": "object",
                        "title": "CreateDtcMonitorResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcMonitor"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __DtcMonitor__.",
                        "type": "string",
                        "title": "CreateDtcMonitorResponse"
                    }
                ]
            },
            "GetDtcMonitorResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DtcMonitor"
                    },
                    {
                        "description": "The response format to retrieve __DtcMonitor__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDtcMonitorResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcMonitor"
                            }
                        }
                    }
                ]
            },
            "UpdateDtcMonitorResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __DtcMonitor__ in object format.",
                        "type": "object",
                        "title": "UpdateDtcMonitorResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcMonitor"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __DtcMonitor__ .",
                        "type": "string",
                        "title": "UpdateDtcMonitorResponse"
                    }
                ]
            },
            "DtcMonitorHttp": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "ciphers": {
                        "type": "string",
                        "description": "An optional cipher list for a secure HTTP/S connection.",
                        "example": "Example ciphers"
                    },
                    "client_cert": {
                        "type": "string",
                        "description": "An optional client certificate, supplied in a secure HTTP/S mode if present.",
                        "example": "Example client_cert"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for this DTC monitor; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "content_check": {
                        "type": "string",
                        "description": "The content check type.",
                        "enum": [
                            "NONE",
                            "MATCH",
                            "EXTRACT"
                        ],
                        "example": "Example content_check"
                    },
                    "content_check_input": {
                        "type": "string",
                        "description": "A portion of response to use as input for content check.",
                        "enum": [
                            "HEADERS",
                            "ALL",
                            "BODY"
                        ],
                        "example": "Example content_check_input"
                    },
                    "content_check_op": {
                        "type": "string",
                        "description": "A content check success criteria operator.",
                        "enum": [
                            "EQ",
                            "NEQ",
                            "LEQ",
                            "GEQ"
                        ],
                        "example": "Example content_check_op"
                    },
                    "content_check_regex": {
                        "type": "string",
                        "description": "A content check regular expression.",
                        "example": "Example content_check_regex"
                    },
                    "content_extract_group": {
                        "type": "integer",
                        "description": "A content extraction sub-expression to extract.",
                        "format": "int64",
                        "example": 1
                    },
                    "content_extract_type": {
                        "type": "string",
                        "description": "A content extraction expected type for the extracted data.",
                        "enum": [
                            "STRING",
                            "INTEGER"
                        ],
                        "example": "Example content_extract_type"
                    },
                    "content_extract_value": {
                        "type": "string",
                        "description": "A content extraction value to compare with extracted result.",
                        "example": "Example content_extract_value"
                    },
                    "enable_sni": {
                        "type": "boolean",
                        "description": "Determines whether the Server Name Indication (SNI) for HTTPS monitor is enabled.",
                        "example": false
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "interval": {
                        "type": "integer",
                        "description": "The interval for TCP health check.",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "The display name for this DTC monitor.",
                        "example": "Example name"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port for TCP requests.",
                        "format": "int64",
                        "example": 1
                    },
                    "request": {
                        "type": "string",
                        "description": "An HTTP request to send.",
                        "example": "Example request"
                    },
                    "result": {
                        "type": "string",
                        "description": "The type of an expected result.",
                        "enum": [
                            "ANY",
                            "CODE_IS",
                            "CODE_IS_NOT"
                        ],
                        "example": "Example result"
                    },
                    "result_code": {
                        "type": "integer",
                        "description": "The expected return code.",
                        "format": "int64",
                        "example": 1
                    },
                    "retry_down": {
                        "type": "integer",
                        "description": "The value of how many times the server should appear as down to be treated as dead after it was alive.",
                        "format": "int64",
                        "example": 1
                    },
                    "retry_up": {
                        "type": "integer",
                        "description": "The value of how many times the server should appear as up to be treated as alive after it was dead.",
                        "format": "int64",
                        "example": 1
                    },
                    "secure": {
                        "type": "boolean",
                        "description": "The connection security status.",
                        "example": false
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "The timeout for TCP health check in seconds.",
                        "format": "int64",
                        "example": 1
                    },
                    "validate_cert": {
                        "type": "boolean",
                        "description": "Determines whether the validation of the remote server's certificate is enabled.",
                        "example": false
                    }
                }
            },
            "ListDtcMonitorHttpResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __DtcMonitorHttp__ objects.",
                        "type": "array",
                        "title": "ListDtcMonitorHttpResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/DtcMonitorHttp"
                        }
                    },
                    {
                        "description": "The response format to retrieve __DtcMonitorHttp__ objects.",
                        "type": "object",
                        "title": "ListDtcMonitorHttpResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DtcMonitorHttp"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateDtcMonitorHttpResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __DtcMonitorHttp__ in object format.",
                        "type": "object",
                        "title": "CreateDtcMonitorHttpResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcMonitorHttp"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __DtcMonitorHttp__.",
                        "type": "string",
                        "title": "CreateDtcMonitorHttpResponse"
                    }
                ]
            },
            "GetDtcMonitorHttpResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DtcMonitorHttp"
                    },
                    {
                        "description": "The response format to retrieve __DtcMonitorHttp__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDtcMonitorHttpResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcMonitorHttp"
                            }
                        }
                    }
                ]
            },
            "UpdateDtcMonitorHttpResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __DtcMonitorHttp__ in object format.",
                        "type": "object",
                        "title": "UpdateDtcMonitorHttpResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcMonitorHttp"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __DtcMonitorHttp__ .",
                        "type": "string",
                        "title": "UpdateDtcMonitorHttpResponse"
                    }
                ]
            },
            "DtcMonitorIcmp": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for this DTC monitor; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "interval": {
                        "type": "integer",
                        "description": "The interval for TCP health check.",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "The display name for this DTC monitor.",
                        "example": "Example name"
                    },
                    "retry_down": {
                        "type": "integer",
                        "description": "The value of how many times the server should appear as down to be treated as dead after it was alive.",
                        "format": "int64",
                        "example": 1
                    },
                    "retry_up": {
                        "type": "integer",
                        "description": "The value of how many times the server should appear as up to be treated as alive after it was dead.",
                        "format": "int64",
                        "example": 1
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "The timeout for TCP health check in seconds.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "ListDtcMonitorIcmpResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __DtcMonitorIcmp__ objects.",
                        "type": "array",
                        "title": "ListDtcMonitorIcmpResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/DtcMonitorIcmp"
                        }
                    },
                    {
                        "description": "The response format to retrieve __DtcMonitorIcmp__ objects.",
                        "type": "object",
                        "title": "ListDtcMonitorIcmpResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DtcMonitorIcmp"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateDtcMonitorIcmpResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __DtcMonitorIcmp__ in object format.",
                        "type": "object",
                        "title": "CreateDtcMonitorIcmpResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcMonitorIcmp"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __DtcMonitorIcmp__.",
                        "type": "string",
                        "title": "CreateDtcMonitorIcmpResponse"
                    }
                ]
            },
            "GetDtcMonitorIcmpResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DtcMonitorIcmp"
                    },
                    {
                        "description": "The response format to retrieve __DtcMonitorIcmp__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDtcMonitorIcmpResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcMonitorIcmp"
                            }
                        }
                    }
                ]
            },
            "UpdateDtcMonitorIcmpResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __DtcMonitorIcmp__ in object format.",
                        "type": "object",
                        "title": "UpdateDtcMonitorIcmpResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcMonitorIcmp"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __DtcMonitorIcmp__ .",
                        "type": "string",
                        "title": "UpdateDtcMonitorIcmpResponse"
                    }
                ]
            },
            "DtcMonitorPdp": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for this DTC monitor; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "interval": {
                        "type": "integer",
                        "description": "The interval for TCP health check.",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "The display name for this DTC monitor.",
                        "example": "Example name"
                    },
                    "port": {
                        "type": "integer",
                        "description": "The port value for PDP requests.",
                        "format": "int64",
                        "example": 1
                    },
                    "retry_down": {
                        "type": "integer",
                        "description": "The value of how many times the server should appear as down to be treated as dead after it was alive.",
                        "format": "int64",
                        "example": 1
                    },
                    "retry_up": {
                        "type": "integer",
                        "description": "The value of how many times the server should appear as up to be treated as alive after it was dead.",
                        "format": "int64",
                        "example": 1
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "The timeout for TCP health check in seconds.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "ListDtcMonitorPdpResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __DtcMonitorPdp__ objects.",
                        "type": "array",
                        "title": "ListDtcMonitorPdpResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/DtcMonitorPdp"
                        }
                    },
                    {
                        "description": "The response format to retrieve __DtcMonitorPdp__ objects.",
                        "type": "object",
                        "title": "ListDtcMonitorPdpResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DtcMonitorPdp"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateDtcMonitorPdpResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __DtcMonitorPdp__ in object format.",
                        "type": "object",
                        "title": "CreateDtcMonitorPdpResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcMonitorPdp"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __DtcMonitorPdp__.",
                        "type": "string",
                        "title": "CreateDtcMonitorPdpResponse"
                    }
                ]
            },
            "GetDtcMonitorPdpResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DtcMonitorPdp"
                    },
                    {
                        "description": "The response format to retrieve __DtcMonitorPdp__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDtcMonitorPdpResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcMonitorPdp"
                            }
                        }
                    }
                ]
            },
            "UpdateDtcMonitorPdpResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __DtcMonitorPdp__ in object format.",
                        "type": "object",
                        "title": "UpdateDtcMonitorPdpResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcMonitorPdp"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __DtcMonitorPdp__ .",
                        "type": "string",
                        "title": "UpdateDtcMonitorPdpResponse"
                    }
                ]
            },
            "DtcMonitorSip": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "ciphers": {
                        "type": "string",
                        "description": "An optional cipher list for secure TLS/SIPS connection.",
                        "example": "Example ciphers"
                    },
                    "client_cert": {
                        "type": "string",
                        "description": "An optional client certificate, supplied in TLS and SIPS mode if present.",
                        "example": "Example client_cert"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for this DTC monitor; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "interval": {
                        "type": "integer",
                        "description": "The interval for TCP health check.",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "The display name for this DTC monitor.",
                        "example": "Example name"
                    },
                    "port": {
                        "type": "integer",
                        "description": "The port value for SIP requests.",
                        "format": "int64",
                        "example": 1
                    },
                    "request": {
                        "type": "string",
                        "description": "A SIP request to send",
                        "example": "Example request"
                    },
                    "result": {
                        "type": "string",
                        "description": "The type of an expected result.",
                        "enum": [
                            "ANY",
                            "CODE_IS",
                            "CODE_IS_NOT"
                        ],
                        "example": "Example result"
                    },
                    "result_code": {
                        "type": "integer",
                        "description": "The expected return code value.",
                        "format": "int64",
                        "example": 1
                    },
                    "retry_down": {
                        "type": "integer",
                        "description": "The value of how many times the server should appear as down to be treated as dead after it was alive.",
                        "format": "int64",
                        "example": 1
                    },
                    "retry_up": {
                        "type": "integer",
                        "description": "The value of how many times the server should appear as up to be treated as alive after it was dead.",
                        "format": "int64",
                        "example": 1
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "The timeout for TCP health check in seconds.",
                        "format": "int64",
                        "example": 1
                    },
                    "transport": {
                        "type": "string",
                        "description": "The transport layer protocol to use for SIP check.",
                        "enum": [
                            "TCP",
                            "SIPS",
                            "TLS",
                            "UDP"
                        ],
                        "example": "Example transport"
                    },
                    "validate_cert": {
                        "type": "boolean",
                        "description": "Determines whether the validation of the remote server's certificate is enabled.",
                        "example": false
                    }
                }
            },
            "ListDtcMonitorSipResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __DtcMonitorSip__ objects.",
                        "type": "array",
                        "title": "ListDtcMonitorSipResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/DtcMonitorSip"
                        }
                    },
                    {
                        "description": "The response format to retrieve __DtcMonitorSip__ objects.",
                        "type": "object",
                        "title": "ListDtcMonitorSipResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DtcMonitorSip"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateDtcMonitorSipResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __DtcMonitorSip__ in object format.",
                        "type": "object",
                        "title": "CreateDtcMonitorSipResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcMonitorSip"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __DtcMonitorSip__.",
                        "type": "string",
                        "title": "CreateDtcMonitorSipResponse"
                    }
                ]
            },
            "GetDtcMonitorSipResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DtcMonitorSip"
                    },
                    {
                        "description": "The response format to retrieve __DtcMonitorSip__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDtcMonitorSipResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcMonitorSip"
                            }
                        }
                    }
                ]
            },
            "UpdateDtcMonitorSipResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __DtcMonitorSip__ in object format.",
                        "type": "object",
                        "title": "UpdateDtcMonitorSipResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcMonitorSip"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __DtcMonitorSip__ .",
                        "type": "string",
                        "title": "UpdateDtcMonitorSipResponse"
                    }
                ]
            },
            "DtcMonitorSnmp": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for this DTC monitor; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "community": {
                        "type": "string",
                        "description": "The SNMP community string for SNMP authentication.",
                        "example": "Example community"
                    },
                    "context": {
                        "type": "string",
                        "description": "The SNMPv3 context.",
                        "example": "Example context"
                    },
                    "engine_id": {
                        "type": "string",
                        "description": "The SNMPv3 engine identifier.",
                        "example": "Example engine_id"
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "interval": {
                        "type": "integer",
                        "description": "The interval for TCP health check.",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "The display name for this DTC monitor.",
                        "example": "Example name"
                    },
                    "oids": {
                        "type": "array",
                        "description": "A list of OIDs for SNMP monitoring.",
                        "enum": [
                            "dtc:monitor:snmp:oid"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/DtcMonitorSnmpOids"
                        }
                    },
                    "port": {
                        "type": "integer",
                        "description": "The port value for SNMP requests.",
                        "format": "int64",
                        "example": 1
                    },
                    "retry_down": {
                        "type": "integer",
                        "description": "The value of how many times the server should appear as down to be treated as dead after it was alive.",
                        "format": "int64",
                        "example": 1
                    },
                    "retry_up": {
                        "type": "integer",
                        "description": "The value of how many times the server should appear as up to be treated as alive after it was dead.",
                        "format": "int64",
                        "example": 1
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "The timeout for TCP health check in seconds.",
                        "format": "int64",
                        "example": 1
                    },
                    "user": {
                        "type": "string",
                        "description": "The SNMPv3 user setting.",
                        "example": "Example user"
                    },
                    "version": {
                        "type": "string",
                        "description": "The SNMP protocol version for the SNMP health check.",
                        "enum": [
                            "V1",
                            "V2C",
                            "V3"
                        ],
                        "example": "Example version"
                    }
                }
            },
            "DtcMonitorSnmpOids": {
                "type": "object",
                "properties": {
                    "oid": {
                        "type": "string",
                        "description": "The SNMP OID value for DTC SNMP Monitor health checks.",
                        "example": "Example oid"
                    },
                    "comment": {
                        "type": "string",
                        "description": "The comment for a DTC SNMP Health Monitor OID object.",
                        "example": "Example comment"
                    },
                    "type": {
                        "type": "string",
                        "description": "The value of the condition type for DTC SNMP Monitor health check results.",
                        "enum": [
                            "STRING",
                            "INTEGER"
                        ],
                        "example": "Example type"
                    },
                    "condition": {
                        "type": "string",
                        "description": "The condition of the validation result for an SNMP health check. The following conditions can be applied to the health check results: 'ANY' accepts any response; 'EXACT' accepts result equal to 'first'; 'LEQ' accepts result which is less than 'first'; 'GEQ' accepts result which is greater than 'first'; 'RANGE' accepts result value of which is between 'first' and 'last'.",
                        "enum": [
                            "ANY",
                            "EXACT",
                            "LEQ",
                            "GEQ",
                            "RANGE"
                        ],
                        "example": "Example condition"
                    },
                    "first": {
                        "type": "string",
                        "description": "The condition's first term to match against the SNMP health check result.",
                        "example": "Example first"
                    },
                    "last": {
                        "type": "string",
                        "description": "The condition's second term to match against the SNMP health check result with 'RANGE' condition.",
                        "example": "Example last"
                    }
                }
            },
            "ListDtcMonitorSnmpResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __DtcMonitorSnmp__ objects.",
                        "type": "array",
                        "title": "ListDtcMonitorSnmpResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/DtcMonitorSnmp"
                        }
                    },
                    {
                        "description": "The response format to retrieve __DtcMonitorSnmp__ objects.",
                        "type": "object",
                        "title": "ListDtcMonitorSnmpResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DtcMonitorSnmp"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateDtcMonitorSnmpResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __DtcMonitorSnmp__ in object format.",
                        "type": "object",
                        "title": "CreateDtcMonitorSnmpResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcMonitorSnmp"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __DtcMonitorSnmp__.",
                        "type": "string",
                        "title": "CreateDtcMonitorSnmpResponse"
                    }
                ]
            },
            "GetDtcMonitorSnmpResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DtcMonitorSnmp"
                    },
                    {
                        "description": "The response format to retrieve __DtcMonitorSnmp__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDtcMonitorSnmpResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcMonitorSnmp"
                            }
                        }
                    }
                ]
            },
            "UpdateDtcMonitorSnmpResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __DtcMonitorSnmp__ in object format.",
                        "type": "object",
                        "title": "UpdateDtcMonitorSnmpResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcMonitorSnmp"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __DtcMonitorSnmp__ .",
                        "type": "string",
                        "title": "UpdateDtcMonitorSnmpResponse"
                    }
                ]
            },
            "DtcMonitorTcp": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for this DTC monitor; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "interval": {
                        "type": "integer",
                        "description": "The interval for TCP health check.",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "The display name for this DTC monitor.",
                        "example": "Example name"
                    },
                    "port": {
                        "type": "integer",
                        "description": "The port value for TCP requests.",
                        "format": "int64",
                        "example": 1
                    },
                    "retry_down": {
                        "type": "integer",
                        "description": "The value of how many times the server should appear as down to be treated as dead after it was alive.",
                        "format": "int64",
                        "example": 1
                    },
                    "retry_up": {
                        "type": "integer",
                        "description": "The value of how many times the server should appear as up to be treated as alive after it was dead.",
                        "format": "int64",
                        "example": 1
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "The timeout for TCP health check in seconds.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "ListDtcMonitorTcpResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __DtcMonitorTcp__ objects.",
                        "type": "array",
                        "title": "ListDtcMonitorTcpResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/DtcMonitorTcp"
                        }
                    },
                    {
                        "description": "The response format to retrieve __DtcMonitorTcp__ objects.",
                        "type": "object",
                        "title": "ListDtcMonitorTcpResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DtcMonitorTcp"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateDtcMonitorTcpResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __DtcMonitorTcp__ in object format.",
                        "type": "object",
                        "title": "CreateDtcMonitorTcpResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcMonitorTcp"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __DtcMonitorTcp__.",
                        "type": "string",
                        "title": "CreateDtcMonitorTcpResponse"
                    }
                ]
            },
            "GetDtcMonitorTcpResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DtcMonitorTcp"
                    },
                    {
                        "description": "The response format to retrieve __DtcMonitorTcp__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDtcMonitorTcpResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcMonitorTcp"
                            }
                        }
                    }
                ]
            },
            "UpdateDtcMonitorTcpResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __DtcMonitorTcp__ in object format.",
                        "type": "object",
                        "title": "UpdateDtcMonitorTcpResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcMonitorTcp"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __DtcMonitorTcp__ .",
                        "type": "string",
                        "title": "UpdateDtcMonitorTcpResponse"
                    }
                ]
            },
            "DtcRecordA": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "auto_created": {
                        "type": "string",
                        "description": "Flag that indicates whether this record was automatically created by NIOS.",
                        "readOnly": true,
                        "example": "Example auto_created"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the record; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines if the record is disabled or not. False means that the record is enabled.",
                        "example": false
                    },
                    "dtc_server": {
                        "type": "string",
                        "description": "The name of the DTC Server object with which the DTC record is associated.",
                        "example": "Example dtc_server"
                    },
                    "ipv4addr": {
                        "type": "string",
                        "description": "The IPv4 Address of the domain name.",
                        "example": "Example ipv4addr"
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "The Time to Live (TTL) value.",
                        "format": "int64",
                        "example": 1
                    },
                    "use_ttl": {
                        "type": "boolean",
                        "description": "Use flag for: ttl",
                        "example": false
                    }
                }
            },
            "ListDtcRecordAResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __DtcRecordA__ objects.",
                        "type": "array",
                        "title": "ListDtcRecordAResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/DtcRecordA"
                        }
                    },
                    {
                        "description": "The response format to retrieve __DtcRecordA__ objects.",
                        "type": "object",
                        "title": "ListDtcRecordAResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DtcRecordA"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateDtcRecordAResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __DtcRecordA__ in object format.",
                        "type": "object",
                        "title": "CreateDtcRecordAResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcRecordA"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __DtcRecordA__.",
                        "type": "string",
                        "title": "CreateDtcRecordAResponse"
                    }
                ]
            },
            "GetDtcRecordAResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DtcRecordA"
                    },
                    {
                        "description": "The response format to retrieve __DtcRecordA__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDtcRecordAResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcRecordA"
                            }
                        }
                    }
                ]
            },
            "UpdateDtcRecordAResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __DtcRecordA__ in object format.",
                        "type": "object",
                        "title": "UpdateDtcRecordAResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcRecordA"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __DtcRecordA__ .",
                        "type": "string",
                        "title": "UpdateDtcRecordAResponse"
                    }
                ]
            },
            "DtcRecordAaaa": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "auto_created": {
                        "type": "string",
                        "description": "Flag that indicates whether this record was automatically created by NIOS.",
                        "readOnly": true,
                        "example": "Example auto_created"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the record; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines if the record is disabled or not. False means that the record is enabled.",
                        "example": false
                    },
                    "dtc_server": {
                        "type": "string",
                        "description": "The name of the DTC Server object with which the DTC record is associated.",
                        "example": "Example dtc_server"
                    },
                    "ipv6addr": {
                        "type": "string",
                        "description": "The IPv6 Address of the domain name.",
                        "example": "Example ipv6addr"
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "The Time to Live (TTL) value.",
                        "format": "int64",
                        "example": 1
                    },
                    "use_ttl": {
                        "type": "boolean",
                        "description": "Use flag for: ttl",
                        "example": false
                    }
                }
            },
            "ListDtcRecordAaaaResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __DtcRecordAaaa__ objects.",
                        "type": "array",
                        "title": "ListDtcRecordAaaaResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/DtcRecordAaaa"
                        }
                    },
                    {
                        "description": "The response format to retrieve __DtcRecordAaaa__ objects.",
                        "type": "object",
                        "title": "ListDtcRecordAaaaResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DtcRecordAaaa"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateDtcRecordAaaaResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __DtcRecordAaaa__ in object format.",
                        "type": "object",
                        "title": "CreateDtcRecordAaaaResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcRecordAaaa"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __DtcRecordAaaa__.",
                        "type": "string",
                        "title": "CreateDtcRecordAaaaResponse"
                    }
                ]
            },
            "GetDtcRecordAaaaResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DtcRecordAaaa"
                    },
                    {
                        "description": "The response format to retrieve __DtcRecordAaaa__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDtcRecordAaaaResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcRecordAaaa"
                            }
                        }
                    }
                ]
            },
            "UpdateDtcRecordAaaaResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __DtcRecordAaaa__ in object format.",
                        "type": "object",
                        "title": "UpdateDtcRecordAaaaResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcRecordAaaa"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __DtcRecordAaaa__ .",
                        "type": "string",
                        "title": "UpdateDtcRecordAaaaResponse"
                    }
                ]
            },
            "DtcRecordCname": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "auto_created": {
                        "type": "string",
                        "description": "Flag that indicates whether this record was automatically created by NIOS.",
                        "readOnly": true,
                        "example": "Example auto_created"
                    },
                    "canonical": {
                        "type": "string",
                        "description": "The canonical name of the host.",
                        "example": "Example canonical"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the record; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines if the record is disabled or not. False means that the record is enabled.",
                        "example": false
                    },
                    "dns_canonical": {
                        "type": "string",
                        "description": "The canonical name as server by DNS protocol.",
                        "readOnly": true,
                        "example": "Example dns_canonical"
                    },
                    "dtc_server": {
                        "type": "string",
                        "description": "The name of the DTC Server object with which the DTC record is associated.",
                        "example": "Example dtc_server"
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "The Time to Live (TTL) value.",
                        "format": "int64",
                        "example": 1
                    },
                    "use_ttl": {
                        "type": "boolean",
                        "description": "Use flag for: ttl",
                        "example": false
                    }
                }
            },
            "ListDtcRecordCnameResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __DtcRecordCname__ objects.",
                        "type": "array",
                        "title": "ListDtcRecordCnameResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/DtcRecordCname"
                        }
                    },
                    {
                        "description": "The response format to retrieve __DtcRecordCname__ objects.",
                        "type": "object",
                        "title": "ListDtcRecordCnameResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DtcRecordCname"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateDtcRecordCnameResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __DtcRecordCname__ in object format.",
                        "type": "object",
                        "title": "CreateDtcRecordCnameResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcRecordCname"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __DtcRecordCname__.",
                        "type": "string",
                        "title": "CreateDtcRecordCnameResponse"
                    }
                ]
            },
            "GetDtcRecordCnameResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DtcRecordCname"
                    },
                    {
                        "description": "The response format to retrieve __DtcRecordCname__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDtcRecordCnameResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcRecordCname"
                            }
                        }
                    }
                ]
            },
            "UpdateDtcRecordCnameResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __DtcRecordCname__ in object format.",
                        "type": "object",
                        "title": "UpdateDtcRecordCnameResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcRecordCname"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __DtcRecordCname__ .",
                        "type": "string",
                        "title": "UpdateDtcRecordCnameResponse"
                    }
                ]
            },
            "DtcRecordNaptr": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the record; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines if the record is disabled or not. False means that the record is enabled.",
                        "example": false
                    },
                    "dtc_server": {
                        "type": "string",
                        "description": "The name of the DTC Server object with which the DTC record is associated.",
                        "example": "Example dtc_server"
                    },
                    "flags": {
                        "type": "string",
                        "description": "The flags used to control the interpretation of the fields for an NAPTR record object. Supported values for the flags field are \"U\", \"S\", \"P\" and \"A\".",
                        "example": "Example flags"
                    },
                    "order": {
                        "type": "integer",
                        "description": "The order parameter of the NAPTR records. This parameter specifies the order in which the NAPTR rules are applied when multiple rules are present. Valid values are from 0 to 65535 (inclusive), in 32-bit unsigned integer format.",
                        "format": "int64",
                        "example": 1
                    },
                    "preference": {
                        "type": "integer",
                        "description": "The preference of the NAPTR record. The preference field determines the order the NAPTR records are processed when multiple records with the same order parameter are present. Valid values are from 0 to 65535 (inclusive), in 32-bit unsigned integer format.",
                        "format": "int64",
                        "example": 1
                    },
                    "regexp": {
                        "type": "string",
                        "description": "The regular expression-based rewriting rule of the NAPTR record. This should be a POSIX compliant regular expression, including the substitution rule and flags. Refer to RFC 2915 for the field syntax details.",
                        "example": "Example regexp"
                    },
                    "replacement": {
                        "type": "string",
                        "description": "The replacement field of the NAPTR record object. For nonterminal NAPTR records, this field specifies the next domain name to look up. This value can be in unicode format.",
                        "example": "Example replacement"
                    },
                    "services": {
                        "type": "string",
                        "description": "The services field of the NAPTR record object; maximum 128 characters. The services field contains protocol and service identifiers, such as \"http+E2U\" or \"SIPS+D2T\".",
                        "example": "Example services"
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "The Time to Live (TTL) value.",
                        "format": "int64",
                        "example": 1
                    },
                    "use_ttl": {
                        "type": "boolean",
                        "description": "Use flag for: ttl",
                        "example": false
                    }
                }
            },
            "ListDtcRecordNaptrResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __DtcRecordNaptr__ objects.",
                        "type": "array",
                        "title": "ListDtcRecordNaptrResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/DtcRecordNaptr"
                        }
                    },
                    {
                        "description": "The response format to retrieve __DtcRecordNaptr__ objects.",
                        "type": "object",
                        "title": "ListDtcRecordNaptrResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DtcRecordNaptr"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateDtcRecordNaptrResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __DtcRecordNaptr__ in object format.",
                        "type": "object",
                        "title": "CreateDtcRecordNaptrResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcRecordNaptr"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __DtcRecordNaptr__.",
                        "type": "string",
                        "title": "CreateDtcRecordNaptrResponse"
                    }
                ]
            },
            "GetDtcRecordNaptrResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DtcRecordNaptr"
                    },
                    {
                        "description": "The response format to retrieve __DtcRecordNaptr__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDtcRecordNaptrResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcRecordNaptr"
                            }
                        }
                    }
                ]
            },
            "UpdateDtcRecordNaptrResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __DtcRecordNaptr__ in object format.",
                        "type": "object",
                        "title": "UpdateDtcRecordNaptrResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcRecordNaptr"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __DtcRecordNaptr__ .",
                        "type": "string",
                        "title": "UpdateDtcRecordNaptrResponse"
                    }
                ]
            },
            "DtcRecordSrv": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment for the record; maximum 256 characters.",
                        "example": "Example comment"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "Determines if the record is disabled or not. False means that the record is enabled.",
                        "example": false
                    },
                    "dtc_server": {
                        "type": "string",
                        "description": "The name of the DTC Server object with which the DTC record is associated.",
                        "example": "Example dtc_server"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name for an SRV record in unicode format.",
                        "example": "Example name"
                    },
                    "port": {
                        "type": "integer",
                        "description": "The port of the SRV record. Valid values are from 0 to 65535 (inclusive), in 32-bit unsigned integer format.",
                        "format": "int64",
                        "example": 1
                    },
                    "priority": {
                        "type": "integer",
                        "description": "The priority of the SRV record. Valid values are from 0 to 65535 (inclusive), in 32-bit unsigned integer format.",
                        "format": "int64",
                        "example": 1
                    },
                    "target": {
                        "type": "string",
                        "description": "The target of the SRV record in FQDN format. This value can be in unicode format.",
                        "example": "Example target"
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "The Time to Live (TTL) value.",
                        "format": "int64",
                        "example": 1
                    },
                    "use_ttl": {
                        "type": "boolean",
                        "description": "Use flag for: ttl",
                        "example": false
                    },
                    "weight": {
                        "type": "integer",
                        "description": "The weight of the SRV record. Valid values are from 0 to 65535 (inclusive), in 32-bit unsigned integer format.",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "ListDtcRecordSrvResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __DtcRecordSrv__ objects.",
                        "type": "array",
                        "title": "ListDtcRecordSrvResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/DtcRecordSrv"
                        }
                    },
                    {
                        "description": "The response format to retrieve __DtcRecordSrv__ objects.",
                        "type": "object",
                        "title": "ListDtcRecordSrvResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DtcRecordSrv"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateDtcRecordSrvResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __DtcRecordSrv__ in object format.",
                        "type": "object",
                        "title": "CreateDtcRecordSrvResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcRecordSrv"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __DtcRecordSrv__.",
                        "type": "string",
                        "title": "CreateDtcRecordSrvResponse"
                    }
                ]
            },
            "GetDtcRecordSrvResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DtcRecordSrv"
                    },
                    {
                        "description": "The response format to retrieve __DtcRecordSrv__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDtcRecordSrvResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcRecordSrv"
                            }
                        }
                    }
                ]
            },
            "UpdateDtcRecordSrvResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __DtcRecordSrv__ in object format.",
                        "type": "object",
                        "title": "UpdateDtcRecordSrvResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcRecordSrv"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __DtcRecordSrv__ .",
                        "type": "string",
                        "title": "UpdateDtcRecordSrvResponse"
                    }
                ]
            },
            "DtcCertificate": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "certificate": {
                        "type": "string",
                        "description": "Reference to underlying X509Certificate.",
                        "readOnly": true,
                        "example": "Example certificate"
                    },
                    "in_use": {
                        "type": "boolean",
                        "description": "Determines whether the certificate is in use or not.",
                        "readOnly": true,
                        "example": false
                    }
                }
            },
            "ListDtcCertificateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __DtcCertificate__ objects.",
                        "type": "array",
                        "title": "ListDtcCertificateResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/DtcCertificate"
                        }
                    },
                    {
                        "description": "The response format to retrieve __DtcCertificate__ objects.",
                        "type": "object",
                        "title": "ListDtcCertificateResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DtcCertificate"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateDtcCertificateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __DtcCertificate__ in object format.",
                        "type": "object",
                        "title": "CreateDtcCertificateResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcCertificate"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __DtcCertificate__.",
                        "type": "string",
                        "title": "CreateDtcCertificateResponse"
                    }
                ]
            },
            "GetDtcCertificateResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DtcCertificate"
                    },
                    {
                        "description": "The response format to retrieve __DtcCertificate__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDtcCertificateResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcCertificate"
                            }
                        }
                    }
                ]
            },
            "UpdateDtcCertificateResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __DtcCertificate__ in object format.",
                        "type": "object",
                        "title": "UpdateDtcCertificateResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcCertificate"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __DtcCertificate__ .",
                        "type": "string",
                        "title": "UpdateDtcCertificateResponse"
                    }
                ]
            },
            "DtcAllrecords": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "comment": {
                        "type": "string",
                        "description": "The record comment.",
                        "readOnly": true,
                        "example": "Example comment"
                    },
                    "disable": {
                        "type": "boolean",
                        "description": "The disable value determines if the record is disabled or not. \"False\" means the record is enabled.",
                        "readOnly": true,
                        "example": false
                    },
                    "dtc_server": {
                        "type": "string",
                        "description": "The name of the DTC Server object with which the record is associated.",
                        "readOnly": true,
                        "example": "Example dtc_server"
                    },
                    "record": {
                        "type": "string",
                        "description": "The record object, if supported by the WAPI. Otherwise, the value is \"None\".",
                        "readOnly": true,
                        "example": "Example record"
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "The TTL value of the record associated with the DTC AllRecords object.",
                        "format": "int64",
                        "example": 1
                    },
                    "type": {
                        "type": "string",
                        "description": "The record type. When searching for an unspecified record type, the search is performed for all records. On retrieval, the appliance returns \"UNSUPPORTED\" for unsupported records.",
                        "enum": [
                            "ALL",
                            "dtc:record:a",
                            "dtc:record:aaaa",
                            "dtc:record:cname",
                            "dtc:record:naptr",
                            "dtc:record:srv"
                        ],
                        "readOnly": true,
                        "example": "Example type"
                    }
                }
            },
            "ListDtcAllrecordsResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __DtcAllrecords__ objects.",
                        "type": "array",
                        "title": "ListDtcAllrecordsResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/DtcAllrecords"
                        }
                    },
                    {
                        "description": "The response format to retrieve __DtcAllrecords__ objects.",
                        "type": "object",
                        "title": "ListDtcAllrecordsResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DtcAllrecords"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateDtcAllrecordsResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __DtcAllrecords__ in object format.",
                        "type": "object",
                        "title": "CreateDtcAllrecordsResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcAllrecords"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __DtcAllrecords__.",
                        "type": "string",
                        "title": "CreateDtcAllrecordsResponse"
                    }
                ]
            },
            "GetDtcAllrecordsResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DtcAllrecords"
                    },
                    {
                        "description": "The response format to retrieve __DtcAllrecords__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDtcAllrecordsResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcAllrecords"
                            }
                        }
                    }
                ]
            },
            "UpdateDtcAllrecordsResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __DtcAllrecords__ in object format.",
                        "type": "object",
                        "title": "UpdateDtcAllrecordsResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcAllrecords"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __DtcAllrecords__ .",
                        "type": "string",
                        "title": "UpdateDtcAllrecordsResponse"
                    }
                ]
            },
            "DtcObject": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "abstract_type": {
                        "type": "string",
                        "description": "The abstract object type.",
                        "readOnly": true,
                        "example": "Example abstract_type"
                    },
                    "comment": {
                        "type": "string",
                        "description": "The comment for the DTC object; maximum 256 characters.",
                        "readOnly": true,
                        "example": "Example comment"
                    },
                    "display_type": {
                        "type": "string",
                        "description": "The display object type.",
                        "readOnly": true,
                        "example": "Example display_type"
                    },
                    "extattrs": {
                        "type": "object",
                        "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ExtAttrs"
                        }
                    },
                    "ipv4_address_list": {
                        "type": "array",
                        "description": "The list of IPv4 addresses.",
                        "enum": [
                            "string"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "ipv6_address_list": {
                        "type": "array",
                        "description": "The list of IPv6 addresses.",
                        "enum": [
                            "string"
                        ],
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The display name of the DTC object.",
                        "readOnly": true,
                        "example": "Example name"
                    },
                    "object": {
                        "type": "string",
                        "description": "The specific DTC object.",
                        "readOnly": true,
                        "example": "Example object"
                    },
                    "status": {
                        "type": "string",
                        "description": "The availability color status.",
                        "enum": [
                            "NONE",
                            "GREEN",
                            "YELLOW",
                            "RED",
                            "BLUE",
                            "GRAY"
                        ],
                        "readOnly": true,
                        "example": "Example status"
                    },
                    "status_time": {
                        "type": "integer",
                        "description": "The timestamp when status or health was last determined.",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    }
                }
            },
            "ListDtcObjectResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __DtcObject__ objects.",
                        "type": "array",
                        "title": "ListDtcObjectResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/DtcObject"
                        }
                    },
                    {
                        "description": "The response format to retrieve __DtcObject__ objects.",
                        "type": "object",
                        "title": "ListDtcObjectResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DtcObject"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateDtcObjectResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __DtcObject__ in object format.",
                        "type": "object",
                        "title": "CreateDtcObjectResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcObject"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __DtcObject__.",
                        "type": "string",
                        "title": "CreateDtcObjectResponse"
                    }
                ]
            },
            "GetDtcObjectResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DtcObject"
                    },
                    {
                        "description": "The response format to retrieve __DtcObject__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDtcObjectResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcObject"
                            }
                        }
                    }
                ]
            },
            "UpdateDtcObjectResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __DtcObject__ in object format.",
                        "type": "object",
                        "title": "UpdateDtcObjectResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcObject"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __DtcObject__ .",
                        "type": "string",
                        "title": "UpdateDtcObjectResponse"
                    }
                ]
            },
            "DtcTopologyRule": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "dest_type": {
                        "type": "string",
                        "description": "The type of the destination for this DTC Topology rule.",
                        "enum": [
                            "POOL",
                            "SERVER"
                        ],
                        "example": "Example dest_type"
                    },
                    "destination_link": {
                        "type": "string",
                        "description": "The reference to the destination DTC pool or DTC server.",
                        "example": "Example destination_link"
                    },
                    "return_type": {
                        "type": "string",
                        "description": "Type of the DNS response for rule.",
                        "enum": [
                            "REGULAR",
                            "NOERR",
                            "NXDOMAIN"
                        ],
                        "example": "Example return_type"
                    },
                    "sources": {
                        "type": "array",
                        "description": "The conditions for matching sources. Should be empty to set rule as default destination.",
                        "enum": [
                            "dtc:topology:rule:source"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/DtcTopologyRuleSources"
                        }
                    },
                    "topology": {
                        "type": "string",
                        "description": "The DTC Topology the rule belongs to.",
                        "readOnly": true,
                        "example": "Example topology"
                    },
                    "valid": {
                        "type": "boolean",
                        "description": "True if the label in the rule exists in the current Topology DB. Always true for SUBNET rules. Rules with non-existent labels may be configured but will never match.",
                        "readOnly": true,
                        "example": false
                    }
                }
            },
            "DtcTopologyRuleSources": {
                "type": "object",
                "properties": {
                    "source_type": {
                        "type": "string",
                        "description": "The source type.",
                        "enum": [
                            "SUBNET",
                            "CONTINENT",
                            "COUNTRY",
                            "SUBDIVISION",
                            "CITY",
                            "EA0",
                            "EA1",
                            "EA2",
                            "EA3"
                        ],
                        "example": "Example source_type"
                    },
                    "source_op": {
                        "type": "string",
                        "description": "The operation used to match the value.",
                        "enum": [
                            "IS",
                            "IS_NOT"
                        ],
                        "example": "Example source_op"
                    },
                    "source_value": {
                        "type": "string",
                        "description": "The source value.",
                        "example": "Example source_value"
                    }
                }
            },
            "ListDtcTopologyRuleResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __DtcTopologyRule__ objects.",
                        "type": "array",
                        "title": "ListDtcTopologyRuleResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/DtcTopologyRule"
                        }
                    },
                    {
                        "description": "The response format to retrieve __DtcTopologyRule__ objects.",
                        "type": "object",
                        "title": "ListDtcTopologyRuleResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DtcTopologyRule"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateDtcTopologyRuleResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __DtcTopologyRule__ in object format.",
                        "type": "object",
                        "title": "CreateDtcTopologyRuleResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcTopologyRule"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __DtcTopologyRule__.",
                        "type": "string",
                        "title": "CreateDtcTopologyRuleResponse"
                    }
                ]
            },
            "GetDtcTopologyRuleResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DtcTopologyRule"
                    },
                    {
                        "description": "The response format to retrieve __DtcTopologyRule__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDtcTopologyRuleResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcTopologyRule"
                            }
                        }
                    }
                ]
            },
            "UpdateDtcTopologyRuleResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __DtcTopologyRule__ in object format.",
                        "type": "object",
                        "title": "UpdateDtcTopologyRuleResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcTopologyRule"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __DtcTopologyRule__ .",
                        "type": "string",
                        "title": "UpdateDtcTopologyRuleResponse"
                    }
                ]
            },
            "DtcTopologyLabel": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "_ref": {
                        "type": "string",
                        "description": "The reference to the object."
                    },
                    "field": {
                        "type": "string",
                        "description": "The name of the field in the Topology database the label was obtained from.",
                        "enum": [
                            "SUBNET",
                            "CONTINENT",
                            "COUNTRY",
                            "SUBDIVISION",
                            "CITY",
                            "EA0",
                            "EA1",
                            "EA2",
                            "EA3"
                        ],
                        "readOnly": true,
                        "example": "Example field"
                    },
                    "label": {
                        "type": "string",
                        "description": "The DTC Topology label name.",
                        "readOnly": true,
                        "example": "Example label"
                    }
                }
            },
            "ListDtcTopologyLabelResponse": {
                "oneOf": [
                    {
                        "description": "The response format to retrieve __DtcTopologyLabel__ objects.",
                        "type": "array",
                        "title": "ListDtcTopologyLabelResponseArray",
                        "items": {
                            "$ref": "#/components/schemas/DtcTopologyLabel"
                        }
                    },
                    {
                        "description": "The response format to retrieve __DtcTopologyLabel__ objects.",
                        "type": "object",
                        "title": "ListDtcTopologyLabelResponseObject",
                        "properties": {
                            "result": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DtcTopologyLabel"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateDtcTopologyLabelResponse": {
                "oneOf": [
                    {
                        "description": "The response format to create __DtcTopologyLabel__ in object format.",
                        "type": "object",
                        "title": "CreateDtcTopologyLabelResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcTopologyLabel"
                            }
                        }
                    },
                    {
                        "description": "The response format to create __DtcTopologyLabel__.",
                        "type": "string",
                        "title": "CreateDtcTopologyLabelResponse"
                    }
                ]
            },
            "GetDtcTopologyLabelResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DtcTopologyLabel"
                    },
                    {
                        "description": "The response format to retrieve __DtcTopologyLabel__ objects.",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "GetDtcTopologyLabelResponseObjectAsResult",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcTopologyLabel"
                            }
                        }
                    }
                ]
            },
            "UpdateDtcTopologyLabelResponse": {
                "oneOf": [
                    {
                        "description": "The response format to update __DtcTopologyLabel__ in object format.",
                        "type": "object",
                        "title": "UpdateDtcTopologyLabelResponseAsObject",
                        "properties": {
                            "result": {
                                "$ref": "#/components/schemas/DtcTopologyLabel"
                            }
                        }
                    },
                    {
                        "description": "The response format to update __DtcTopologyLabel__ .",
                        "type": "string",
                        "title": "UpdateDtcTopologyLabelResponse"
                    }
                ]
            }
        }
    }
}